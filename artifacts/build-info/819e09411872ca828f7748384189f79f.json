{"id":"819e09411872ca828f7748384189f79f","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"src/dependencies/flux/CLInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\ninterface CLInterface {\n    function latestAnswer() external view returns (int256);\n\n    function latestTimestamp() external view returns (uint256);\n\n    function latestRound() external view returns (uint256);\n\n    function getAnswer(uint256 roundId) external view returns (int256);\n\n    function getTimestamp(uint256 roundId) external view returns (uint256);\n\n    event AnswerUpdated(\n        int256 indexed current,\n        uint256 indexed roundId,\n        uint256 updatedAt\n    );\n    event NewRound(\n        uint256 indexed roundId,\n        address indexed startedBy,\n        uint256 startedAt\n    );\n}\n"},"src/dependencies/flux/CLV2V3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"./CLInterface.sol\";\nimport \"./CLV3Interface.sol\";\n\n/* solhint-disable-next-line no-empty-blocks */\ninterface CLV2V3Interface is CLInterface, CLV3Interface {\n\n}\n"},"src/dependencies/flux/CLV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\ninterface CLV3Interface {\n    function decimals() external view returns (uint8);\n\n    function description() external view returns (string memory);\n\n    function version() external view returns (uint256);\n\n    // getRoundData and latestRoundData should both raise \"No data present\"\n    // if they do not have data to report, instead of returning unset values\n    // which could be misinterpreted as actual reported values.\n    function getRoundData(uint80 _roundId)\n        external\n        view\n        returns (\n            uint80 roundId,\n            int256 answer,\n            uint256 startedAt,\n            uint256 updatedAt,\n            uint80 answeredInRound\n        );\n\n    function latestRoundData()\n        external\n        view\n        returns (\n            uint80 roundId,\n            int256 answer,\n            uint256 startedAt,\n            uint256 updatedAt,\n            uint80 answeredInRound\n        );\n}\n"},"src/dependencies/prb-math/PRBMath.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\n/// @notice Emitted when the result overflows uint256.\nerror PRBMath__MulDivFixedPointOverflow(uint256 prod1);\n\n/// @notice Emitted when the result overflows uint256.\nerror PRBMath__MulDivOverflow(uint256 prod1, uint256 denominator);\n\n/// @notice Emitted when one of the inputs is type(int256).min.\nerror PRBMath__MulDivSignedInputTooSmall();\n\n/// @notice Emitted when the intermediary absolute result overflows int256.\nerror PRBMath__MulDivSignedOverflow(uint256 rAbs);\n\n/// @notice Emitted when the input is MIN_SD59x18.\nerror PRBMathSD59x18__AbsInputTooSmall();\n\n/// @notice Emitted when ceiling a number overflows SD59x18.\nerror PRBMathSD59x18__CeilOverflow(int256 x);\n\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\nerror PRBMathSD59x18__DivInputTooSmall();\n\n/// @notice Emitted when one of the intermediary unsigned results overflows SD59x18.\nerror PRBMathSD59x18__DivOverflow(uint256 rAbs);\n\n/// @notice Emitted when the input is greater than 133.084258667509499441.\nerror PRBMathSD59x18__ExpInputTooBig(int256 x);\n\n/// @notice Emitted when the input is greater than 192.\nerror PRBMathSD59x18__Exp2InputTooBig(int256 x);\n\n/// @notice Emitted when flooring a number underflows SD59x18.\nerror PRBMathSD59x18__FloorUnderflow(int256 x);\n\n/// @notice Emitted when converting a basic integer to the fixed-point format overflows SD59x18.\nerror PRBMathSD59x18__FromIntOverflow(int256 x);\n\n/// @notice Emitted when converting a basic integer to the fixed-point format underflows SD59x18.\nerror PRBMathSD59x18__FromIntUnderflow(int256 x);\n\n/// @notice Emitted when the product of the inputs is negative.\nerror PRBMathSD59x18__GmNegativeProduct(int256 x, int256 y);\n\n/// @notice Emitted when multiplying the inputs overflows SD59x18.\nerror PRBMathSD59x18__GmOverflow(int256 x, int256 y);\n\n/// @notice Emitted when the input is less than or equal to zero.\nerror PRBMathSD59x18__LogInputTooSmall(int256 x);\n\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\nerror PRBMathSD59x18__MulInputTooSmall();\n\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\nerror PRBMathSD59x18__MulOverflow(uint256 rAbs);\n\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\nerror PRBMathSD59x18__PowuOverflow(uint256 rAbs);\n\n/// @notice Emitted when the input is negative.\nerror PRBMathSD59x18__SqrtNegativeInput(int256 x);\n\n/// @notice Emitted when the calculating the square root overflows SD59x18.\nerror PRBMathSD59x18__SqrtOverflow(int256 x);\n\n/// @notice Emitted when addition overflows UD60x18.\nerror PRBMathUD60x18__AddOverflow(uint256 x, uint256 y);\n\n/// @notice Emitted when ceiling a number overflows UD60x18.\nerror PRBMathUD60x18__CeilOverflow(uint256 x);\n\n/// @notice Emitted when the input is greater than 133.084258667509499441.\nerror PRBMathUD60x18__ExpInputTooBig(uint256 x);\n\n/// @notice Emitted when the input is greater than 192.\nerror PRBMathUD60x18__Exp2InputTooBig(uint256 x);\n\n/// @notice Emitted when converting a basic integer to the fixed-point format format overflows UD60x18.\nerror PRBMathUD60x18__FromUintOverflow(uint256 x);\n\n/// @notice Emitted when multiplying the inputs overflows UD60x18.\nerror PRBMathUD60x18__GmOverflow(uint256 x, uint256 y);\n\n/// @notice Emitted when the input is less than 1.\nerror PRBMathUD60x18__LogInputTooSmall(uint256 x);\n\n/// @notice Emitted when the calculating the square root overflows UD60x18.\nerror PRBMathUD60x18__SqrtOverflow(uint256 x);\n\n/// @notice Emitted when subtraction underflows UD60x18.\nerror PRBMathUD60x18__SubUnderflow(uint256 x, uint256 y);\n\n/// @dev Common mathematical functions used in both PRBMathSD59x18 and PRBMathUD60x18. Note that this shared library\n/// does not always assume the signed 59.18-decimal fixed-point or the unsigned 60.18-decimal fixed-point\n/// representation. When it does not, it is explicitly mentioned in the NatSpec documentation.\nlibrary PRBMath {\n    /// STRUCTS ///\n\n    struct SD59x18 {\n        int256 value;\n    }\n\n    struct UD60x18 {\n        uint256 value;\n    }\n\n    /// STORAGE ///\n\n    /// @dev How many trailing decimals can be represented.\n    uint256 internal constant SCALE = 1e18;\n\n    /// @dev Largest power of two divisor of SCALE.\n    uint256 internal constant SCALE_LPOTD = 262144;\n\n    /// @dev SCALE inverted mod 2^256.\n    uint256 internal constant SCALE_INVERSE =\n        78156646155174841979727994598816262306175212592076161876661_508869554232690281;\n\n    /// FUNCTIONS ///\n\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\n    /// @dev Has to use 192.64-bit fixed-point numbers.\n    /// See https://ethereum.stackexchange.com/a/96594/24693.\n    /// @param x The exponent as an unsigned 192.64-bit fixed-point number.\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\n    function exp2(uint256 x) internal pure returns (uint256 result) {\n        unchecked {\n            // Start from 0.5 in the 192.64-bit fixed-point format.\n            result = 0x800000000000000000000000000000000000000000000000;\n\n            // Multiply the result by root(2, 2^-i) when the bit at position i is 1. None of the intermediary results overflows\n            // because the initial result is 2^191 and all magic factors are less than 2^65.\n            if (x & 0x8000000000000000 > 0) {\n                result = (result * 0x16A09E667F3BCC909) >> 64;\n            }\n            if (x & 0x4000000000000000 > 0) {\n                result = (result * 0x1306FE0A31B7152DF) >> 64;\n            }\n            if (x & 0x2000000000000000 > 0) {\n                result = (result * 0x1172B83C7D517ADCE) >> 64;\n            }\n            if (x & 0x1000000000000000 > 0) {\n                result = (result * 0x10B5586CF9890F62A) >> 64;\n            }\n            if (x & 0x800000000000000 > 0) {\n                result = (result * 0x1059B0D31585743AE) >> 64;\n            }\n            if (x & 0x400000000000000 > 0) {\n                result = (result * 0x102C9A3E778060EE7) >> 64;\n            }\n            if (x & 0x200000000000000 > 0) {\n                result = (result * 0x10163DA9FB33356D8) >> 64;\n            }\n            if (x & 0x100000000000000 > 0) {\n                result = (result * 0x100B1AFA5ABCBED61) >> 64;\n            }\n            if (x & 0x80000000000000 > 0) {\n                result = (result * 0x10058C86DA1C09EA2) >> 64;\n            }\n            if (x & 0x40000000000000 > 0) {\n                result = (result * 0x1002C605E2E8CEC50) >> 64;\n            }\n            if (x & 0x20000000000000 > 0) {\n                result = (result * 0x100162F3904051FA1) >> 64;\n            }\n            if (x & 0x10000000000000 > 0) {\n                result = (result * 0x1000B175EFFDC76BA) >> 64;\n            }\n            if (x & 0x8000000000000 > 0) {\n                result = (result * 0x100058BA01FB9F96D) >> 64;\n            }\n            if (x & 0x4000000000000 > 0) {\n                result = (result * 0x10002C5CC37DA9492) >> 64;\n            }\n            if (x & 0x2000000000000 > 0) {\n                result = (result * 0x1000162E525EE0547) >> 64;\n            }\n            if (x & 0x1000000000000 > 0) {\n                result = (result * 0x10000B17255775C04) >> 64;\n            }\n            if (x & 0x800000000000 > 0) {\n                result = (result * 0x1000058B91B5BC9AE) >> 64;\n            }\n            if (x & 0x400000000000 > 0) {\n                result = (result * 0x100002C5C89D5EC6D) >> 64;\n            }\n            if (x & 0x200000000000 > 0) {\n                result = (result * 0x10000162E43F4F831) >> 64;\n            }\n            if (x & 0x100000000000 > 0) {\n                result = (result * 0x100000B1721BCFC9A) >> 64;\n            }\n            if (x & 0x80000000000 > 0) {\n                result = (result * 0x10000058B90CF1E6E) >> 64;\n            }\n            if (x & 0x40000000000 > 0) {\n                result = (result * 0x1000002C5C863B73F) >> 64;\n            }\n            if (x & 0x20000000000 > 0) {\n                result = (result * 0x100000162E430E5A2) >> 64;\n            }\n            if (x & 0x10000000000 > 0) {\n                result = (result * 0x1000000B172183551) >> 64;\n            }\n            if (x & 0x8000000000 > 0) {\n                result = (result * 0x100000058B90C0B49) >> 64;\n            }\n            if (x & 0x4000000000 > 0) {\n                result = (result * 0x10000002C5C8601CC) >> 64;\n            }\n            if (x & 0x2000000000 > 0) {\n                result = (result * 0x1000000162E42FFF0) >> 64;\n            }\n            if (x & 0x1000000000 > 0) {\n                result = (result * 0x10000000B17217FBB) >> 64;\n            }\n            if (x & 0x800000000 > 0) {\n                result = (result * 0x1000000058B90BFCE) >> 64;\n            }\n            if (x & 0x400000000 > 0) {\n                result = (result * 0x100000002C5C85FE3) >> 64;\n            }\n            if (x & 0x200000000 > 0) {\n                result = (result * 0x10000000162E42FF1) >> 64;\n            }\n            if (x & 0x100000000 > 0) {\n                result = (result * 0x100000000B17217F8) >> 64;\n            }\n            if (x & 0x80000000 > 0) {\n                result = (result * 0x10000000058B90BFC) >> 64;\n            }\n            if (x & 0x40000000 > 0) {\n                result = (result * 0x1000000002C5C85FE) >> 64;\n            }\n            if (x & 0x20000000 > 0) {\n                result = (result * 0x100000000162E42FF) >> 64;\n            }\n            if (x & 0x10000000 > 0) {\n                result = (result * 0x1000000000B17217F) >> 64;\n            }\n            if (x & 0x8000000 > 0) {\n                result = (result * 0x100000000058B90C0) >> 64;\n            }\n            if (x & 0x4000000 > 0) {\n                result = (result * 0x10000000002C5C860) >> 64;\n            }\n            if (x & 0x2000000 > 0) {\n                result = (result * 0x1000000000162E430) >> 64;\n            }\n            if (x & 0x1000000 > 0) {\n                result = (result * 0x10000000000B17218) >> 64;\n            }\n            if (x & 0x800000 > 0) {\n                result = (result * 0x1000000000058B90C) >> 64;\n            }\n            if (x & 0x400000 > 0) {\n                result = (result * 0x100000000002C5C86) >> 64;\n            }\n            if (x & 0x200000 > 0) {\n                result = (result * 0x10000000000162E43) >> 64;\n            }\n            if (x & 0x100000 > 0) {\n                result = (result * 0x100000000000B1721) >> 64;\n            }\n            if (x & 0x80000 > 0) {\n                result = (result * 0x10000000000058B91) >> 64;\n            }\n            if (x & 0x40000 > 0) {\n                result = (result * 0x1000000000002C5C8) >> 64;\n            }\n            if (x & 0x20000 > 0) {\n                result = (result * 0x100000000000162E4) >> 64;\n            }\n            if (x & 0x10000 > 0) {\n                result = (result * 0x1000000000000B172) >> 64;\n            }\n            if (x & 0x8000 > 0) {\n                result = (result * 0x100000000000058B9) >> 64;\n            }\n            if (x & 0x4000 > 0) {\n                result = (result * 0x10000000000002C5D) >> 64;\n            }\n            if (x & 0x2000 > 0) {\n                result = (result * 0x1000000000000162E) >> 64;\n            }\n            if (x & 0x1000 > 0) {\n                result = (result * 0x10000000000000B17) >> 64;\n            }\n            if (x & 0x800 > 0) {\n                result = (result * 0x1000000000000058C) >> 64;\n            }\n            if (x & 0x400 > 0) {\n                result = (result * 0x100000000000002C6) >> 64;\n            }\n            if (x & 0x200 > 0) {\n                result = (result * 0x10000000000000163) >> 64;\n            }\n            if (x & 0x100 > 0) {\n                result = (result * 0x100000000000000B1) >> 64;\n            }\n            if (x & 0x80 > 0) {\n                result = (result * 0x10000000000000059) >> 64;\n            }\n            if (x & 0x40 > 0) {\n                result = (result * 0x1000000000000002C) >> 64;\n            }\n            if (x & 0x20 > 0) {\n                result = (result * 0x10000000000000016) >> 64;\n            }\n            if (x & 0x10 > 0) {\n                result = (result * 0x1000000000000000B) >> 64;\n            }\n            if (x & 0x8 > 0) {\n                result = (result * 0x10000000000000006) >> 64;\n            }\n            if (x & 0x4 > 0) {\n                result = (result * 0x10000000000000003) >> 64;\n            }\n            if (x & 0x2 > 0) {\n                result = (result * 0x10000000000000001) >> 64;\n            }\n            if (x & 0x1 > 0) {\n                result = (result * 0x10000000000000001) >> 64;\n            }\n\n            // We're doing two things at the same time:\n            //\n            //   1. Multiply the result by 2^n + 1, where \"2^n\" is the integer part and the one is added to account for\n            //      the fact that we initially set the result to 0.5. This is accomplished by subtracting from 191\n            //      rather than 192.\n            //   2. Convert the result to the unsigned 60.18-decimal fixed-point format.\n            //\n            // This works because 2^(191-ip) = 2^ip / 2^191, where \"ip\" is the integer part \"2^n\".\n            result *= SCALE;\n            result >>= (191 - (x >> 64));\n        }\n    }\n\n    /// @notice Finds the zero-based index of the first one in the binary representation of x.\n    /// @dev See the note on msb in the \"Find First Set\" Wikipedia article https://en.wikipedia.org/wiki/Find_first_set\n    /// @param x The uint256 number for which to find the index of the most significant bit.\n    /// @return msb The index of the most significant bit as an uint256.\n    function mostSignificantBit(uint256 x) internal pure returns (uint256 msb) {\n        if (x >= 2**128) {\n            x >>= 128;\n            msb += 128;\n        }\n        if (x >= 2**64) {\n            x >>= 64;\n            msb += 64;\n        }\n        if (x >= 2**32) {\n            x >>= 32;\n            msb += 32;\n        }\n        if (x >= 2**16) {\n            x >>= 16;\n            msb += 16;\n        }\n        if (x >= 2**8) {\n            x >>= 8;\n            msb += 8;\n        }\n        if (x >= 2**4) {\n            x >>= 4;\n            msb += 4;\n        }\n        if (x >= 2**2) {\n            x >>= 2;\n            msb += 2;\n        }\n        if (x >= 2**1) {\n            // No need to shift x any more.\n            msb += 1;\n        }\n    }\n\n    /// @notice Calculates floor(x*y÷denominator) with full precision.\n    ///\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv.\n    ///\n    /// Requirements:\n    /// - The denominator cannot be zero.\n    /// - The result must fit within uint256.\n    ///\n    /// Caveats:\n    /// - This function does not work with fixed-point numbers.\n    ///\n    /// @param x The multiplicand as an uint256.\n    /// @param y The multiplier as an uint256.\n    /// @param denominator The divisor as an uint256.\n    /// @return result The result as an uint256.\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n        // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = prod1 * 2^256 + prod0.\n        uint256 prod0; // Least significant 256 bits of the product\n        uint256 prod1; // Most significant 256 bits of the product\n        assembly {\n            let mm := mulmod(x, y, not(0))\n            prod0 := mul(x, y)\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n        }\n\n        // Handle non-overflow cases, 256 by 256 division.\n        if (prod1 == 0) {\n            unchecked {\n                result = prod0 / denominator;\n            }\n            return result;\n        }\n\n        // Make sure the result is less than 2^256. Also prevents denominator == 0.\n        if (prod1 >= denominator) {\n            revert PRBMath__MulDivOverflow(prod1, denominator);\n        }\n\n        ///////////////////////////////////////////////\n        // 512 by 256 division.\n        ///////////////////////////////////////////////\n\n        // Make division exact by subtracting the remainder from [prod1 prod0].\n        uint256 remainder;\n        assembly {\n            // Compute remainder using mulmod.\n            remainder := mulmod(x, y, denominator)\n\n            // Subtract 256 bit number from 512 bit number.\n            prod1 := sub(prod1, gt(remainder, prod0))\n            prod0 := sub(prod0, remainder)\n        }\n\n        // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n        // See https://cs.stackexchange.com/q/138556/92363.\n        unchecked {\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 lpotdod = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by lpotdod.\n                denominator := div(denominator, lpotdod)\n\n                // Divide [prod1 prod0] by lpotdod.\n                prod0 := div(prod0, lpotdod)\n\n                // Flip lpotdod such that it is 2^256 / lpotdod. If lpotdod is zero, then it becomes one.\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * lpotdod;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /// @notice Calculates floor(x*y÷1e18) with full precision.\n    ///\n    /// @dev Variant of \"mulDiv\" with constant folding, i.e. in which the denominator is always 1e18. Before returning the\n    /// final result, we add 1 if (x * y) % SCALE >= HALF_SCALE. Without this, 6.6e-19 would be truncated to 0 instead of\n    /// being rounded to 1e-18.  See \"Listing 6\" and text above it at https://accu.org/index.php/journals/1717.\n    ///\n    /// Requirements:\n    /// - The result must fit within uint256.\n    ///\n    /// Caveats:\n    /// - The body is purposely left uncommented; see the NatSpec comments in \"PRBMath.mulDiv\" to understand how this works.\n    /// - It is assumed that the result can never be type(uint256).max when x and y solve the following two equations:\n    ///     1. x * y = type(uint256).max * SCALE\n    ///     2. (x * y) % SCALE >= SCALE / 2\n    ///\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\n    function mulDivFixedPoint(uint256 x, uint256 y)\n        internal\n        pure\n        returns (uint256 result)\n    {\n        uint256 prod0;\n        uint256 prod1;\n        assembly {\n            let mm := mulmod(x, y, not(0))\n            prod0 := mul(x, y)\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n        }\n\n        if (prod1 >= SCALE) {\n            revert PRBMath__MulDivFixedPointOverflow(prod1);\n        }\n\n        uint256 remainder;\n        uint256 roundUpUnit;\n        assembly {\n            remainder := mulmod(x, y, SCALE)\n            roundUpUnit := gt(remainder, 499999999999999999)\n        }\n\n        if (prod1 == 0) {\n            unchecked {\n                result = (prod0 / SCALE) + roundUpUnit;\n                return result;\n            }\n        }\n\n        assembly {\n            result := add(\n                mul(\n                    or(\n                        div(sub(prod0, remainder), SCALE_LPOTD),\n                        mul(\n                            sub(prod1, gt(remainder, prod0)),\n                            add(div(sub(0, SCALE_LPOTD), SCALE_LPOTD), 1)\n                        )\n                    ),\n                    SCALE_INVERSE\n                ),\n                roundUpUnit\n            )\n        }\n    }\n\n    /// @notice Calculates floor(x*y÷denominator) with full precision.\n    ///\n    /// @dev An extension of \"mulDiv\" for signed numbers. Works by computing the signs and the absolute values separately.\n    ///\n    /// Requirements:\n    /// - None of the inputs can be type(int256).min.\n    /// - The result must fit within int256.\n    ///\n    /// @param x The multiplicand as an int256.\n    /// @param y The multiplier as an int256.\n    /// @param denominator The divisor as an int256.\n    /// @return result The result as an int256.\n    function mulDivSigned(\n        int256 x,\n        int256 y,\n        int256 denominator\n    ) internal pure returns (int256 result) {\n        if (\n            x == type(int256).min ||\n            y == type(int256).min ||\n            denominator == type(int256).min\n        ) {\n            revert PRBMath__MulDivSignedInputTooSmall();\n        }\n\n        // Get hold of the absolute values of x, y and the denominator.\n        uint256 ax;\n        uint256 ay;\n        uint256 ad;\n        unchecked {\n            ax = x < 0 ? uint256(-x) : uint256(x);\n            ay = y < 0 ? uint256(-y) : uint256(y);\n            ad = denominator < 0 ? uint256(-denominator) : uint256(denominator);\n        }\n\n        // Compute the absolute value of (x*y)÷denominator. The result must fit within int256.\n        uint256 rAbs = mulDiv(ax, ay, ad);\n        if (rAbs > uint256(type(int256).max)) {\n            revert PRBMath__MulDivSignedOverflow(rAbs);\n        }\n\n        // Get the signs of x, y and the denominator.\n        uint256 sx;\n        uint256 sy;\n        uint256 sd;\n        assembly {\n            sx := sgt(x, sub(0, 1))\n            sy := sgt(y, sub(0, 1))\n            sd := sgt(denominator, sub(0, 1))\n        }\n\n        // XOR over sx, sy and sd. This is checking whether there are one or three negative signs in the inputs.\n        // If yes, the result should be negative.\n        result = sx ^ sy ^ sd == 0 ? -int256(rAbs) : int256(rAbs);\n    }\n\n    /// @notice Calculates the square root of x, rounding down.\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\n    ///\n    /// Caveats:\n    /// - This function does not work with fixed-point numbers.\n    ///\n    /// @param x The uint256 number for which to calculate the square root.\n    /// @return result The result as an uint256.\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\n        if (x == 0) {\n            return 0;\n        }\n\n        // Set the initial guess to the least power of two that is greater than or equal to sqrt(x).\n        uint256 xAux = uint256(x);\n        result = 1;\n        if (xAux >= 0x100000000000000000000000000000000) {\n            xAux >>= 128;\n            result <<= 64;\n        }\n        if (xAux >= 0x10000000000000000) {\n            xAux >>= 64;\n            result <<= 32;\n        }\n        if (xAux >= 0x100000000) {\n            xAux >>= 32;\n            result <<= 16;\n        }\n        if (xAux >= 0x10000) {\n            xAux >>= 16;\n            result <<= 8;\n        }\n        if (xAux >= 0x100) {\n            xAux >>= 8;\n            result <<= 4;\n        }\n        if (xAux >= 0x10) {\n            xAux >>= 4;\n            result <<= 2;\n        }\n        if (xAux >= 0x8) {\n            result <<= 1;\n        }\n\n        // The operations can never overflow because the result is max 2^127 when it enters this block.\n        unchecked {\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1; // Seven iterations should be enough\n            uint256 roundedDownResult = x / result;\n            return result >= roundedDownResult ? roundedDownResult : result;\n        }\n    }\n}\n"},"src/dependencies/prb-math/PRBMathUD60x18.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"./PRBMath.sol\";\n\n/// @title PRBMathUD60x18\n/// @author Paul Razvan Berg\n/// @notice Smart contract library for advanced fixed-point math that works with uint256 numbers considered to have 18\n/// trailing decimals. We call this number representation unsigned 60.18-decimal fixed-point, since there can be up to 60\n/// digits in the integer part and up to 18 decimals in the fractional part. The numbers are bound by the minimum and the\n/// maximum values permitted by the Solidity type uint256.\nlibrary PRBMathUD60x18 {\n    /// @dev Half the SCALE number.\n    uint256 internal constant HALF_SCALE = 5e17;\n\n    /// @dev log2(e) as an unsigned 60.18-decimal fixed-point number.\n    uint256 internal constant LOG2_E = 1_442695040888963407;\n\n    /// @dev The maximum value an unsigned 60.18-decimal fixed-point number can have.\n    uint256 internal constant MAX_UD60x18 =\n        115792089237316195423570985008687907853269984665640564039457_584007913129639935;\n\n    /// @dev The maximum whole value an unsigned 60.18-decimal fixed-point number can have.\n    uint256 internal constant MAX_WHOLE_UD60x18 =\n        115792089237316195423570985008687907853269984665640564039457_000000000000000000;\n\n    /// @dev How many trailing decimals can be represented.\n    uint256 internal constant SCALE = 1e18;\n\n    /// @notice Calculates the arithmetic average of x and y, rounding down.\n    /// @param x The first operand as an unsigned 60.18-decimal fixed-point number.\n    /// @param y The second operand as an unsigned 60.18-decimal fixed-point number.\n    /// @return result The arithmetic average as an unsigned 60.18-decimal fixed-point number.\n    function avg(uint256 x, uint256 y) internal pure returns (uint256 result) {\n        // The operations can never overflow.\n        unchecked {\n            // The last operand checks if both x and y are odd and if that is the case, we add 1 to the result. We need\n            // to do this because if both numbers are odd, the 0.5 remainder gets truncated twice.\n            result = (x >> 1) + (y >> 1) + (x & y & 1);\n        }\n    }\n\n    /// @notice Yields the least unsigned 60.18 decimal fixed-point number greater than or equal to x.\n    ///\n    /// @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\n    /// See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\n    ///\n    /// Requirements:\n    /// - x must be less than or equal to MAX_WHOLE_UD60x18.\n    ///\n    /// @param x The unsigned 60.18-decimal fixed-point number to ceil.\n    /// @param result The least integer greater than or equal to x, as an unsigned 60.18-decimal fixed-point number.\n    function ceil(uint256 x) internal pure returns (uint256 result) {\n        if (x > MAX_WHOLE_UD60x18) {\n            revert PRBMathUD60x18__CeilOverflow(x);\n        }\n        assembly {\n            // Equivalent to \"x % SCALE\" but faster.\n            let remainder := mod(x, SCALE)\n\n            // Equivalent to \"SCALE - remainder\" but faster.\n            let delta := sub(SCALE, remainder)\n\n            // Equivalent to \"x + delta * (remainder > 0 ? 1 : 0)\" but faster.\n            result := add(x, mul(delta, gt(remainder, 0)))\n        }\n    }\n\n    /// @notice Divides two unsigned 60.18-decimal fixed-point numbers, returning a new unsigned 60.18-decimal fixed-point number.\n    ///\n    /// @dev Uses mulDiv to enable overflow-safe multiplication and division.\n    ///\n    /// Requirements:\n    /// - The denominator cannot be zero.\n    ///\n    /// @param x The numerator as an unsigned 60.18-decimal fixed-point number.\n    /// @param y The denominator as an unsigned 60.18-decimal fixed-point number.\n    /// @param result The quotient as an unsigned 60.18-decimal fixed-point number.\n    function div(uint256 x, uint256 y) internal pure returns (uint256 result) {\n        result = PRBMath.mulDiv(x, SCALE, y);\n    }\n\n    /// @notice Returns Euler's number as an unsigned 60.18-decimal fixed-point number.\n    /// @dev See https://en.wikipedia.org/wiki/E_(mathematical_constant).\n    function e() internal pure returns (uint256 result) {\n        result = 2_718281828459045235;\n    }\n\n    /// @notice Calculates the natural exponent of x.\n    ///\n    /// @dev Based on the insight that e^x = 2^(x * log2(e)).\n    ///\n    /// Requirements:\n    /// - All from \"log2\".\n    /// - x must be less than 133.084258667509499441.\n    ///\n    /// @param x The exponent as an unsigned 60.18-decimal fixed-point number.\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\n    function exp(uint256 x) internal pure returns (uint256 result) {\n        // Without this check, the value passed to \"exp2\" would be greater than 192.\n        if (x >= 133_084258667509499441) {\n            revert PRBMathUD60x18__ExpInputTooBig(x);\n        }\n\n        // Do the fixed-point multiplication inline to save gas.\n        unchecked {\n            uint256 doubleScaleProduct = x * LOG2_E;\n            result = exp2((doubleScaleProduct + HALF_SCALE) / SCALE);\n        }\n    }\n\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\n    ///\n    /// @dev See https://ethereum.stackexchange.com/q/79903/24693.\n    ///\n    /// Requirements:\n    /// - x must be 192 or less.\n    /// - The result must fit within MAX_UD60x18.\n    ///\n    /// @param x The exponent as an unsigned 60.18-decimal fixed-point number.\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\n    function exp2(uint256 x) internal pure returns (uint256 result) {\n        // 2^192 doesn't fit within the 192.64-bit format used internally in this function.\n        if (x >= 192e18) {\n            revert PRBMathUD60x18__Exp2InputTooBig(x);\n        }\n\n        unchecked {\n            // Convert x to the 192.64-bit fixed-point format.\n            uint256 x192x64 = (x << 64) / SCALE;\n\n            // Pass x to the PRBMath.exp2 function, which uses the 192.64-bit fixed-point number representation.\n            result = PRBMath.exp2(x192x64);\n        }\n    }\n\n    /// @notice Yields the greatest unsigned 60.18 decimal fixed-point number less than or equal to x.\n    /// @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\n    /// See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\n    /// @param x The unsigned 60.18-decimal fixed-point number to floor.\n    /// @param result The greatest integer less than or equal to x, as an unsigned 60.18-decimal fixed-point number.\n    function floor(uint256 x) internal pure returns (uint256 result) {\n        assembly {\n            // Equivalent to \"x % SCALE\" but faster.\n            let remainder := mod(x, SCALE)\n\n            // Equivalent to \"x - remainder * (remainder > 0 ? 1 : 0)\" but faster.\n            result := sub(x, mul(remainder, gt(remainder, 0)))\n        }\n    }\n\n    /// @notice Yields the excess beyond the floor of x.\n    /// @dev Based on the odd function definition https://en.wikipedia.org/wiki/Fractional_part.\n    /// @param x The unsigned 60.18-decimal fixed-point number to get the fractional part of.\n    /// @param result The fractional part of x as an unsigned 60.18-decimal fixed-point number.\n    function frac(uint256 x) internal pure returns (uint256 result) {\n        assembly {\n            result := mod(x, SCALE)\n        }\n    }\n\n    /// @notice Converts a number from basic integer form to unsigned 60.18-decimal fixed-point representation.\n    ///\n    /// @dev Requirements:\n    /// - x must be less than or equal to MAX_UD60x18 divided by SCALE.\n    ///\n    /// @param x The basic integer to convert.\n    /// @param result The same number in unsigned 60.18-decimal fixed-point representation.\n    function fromUint(uint256 x) internal pure returns (uint256 result) {\n        unchecked {\n            if (x > MAX_UD60x18 / SCALE) {\n                revert PRBMathUD60x18__FromUintOverflow(x);\n            }\n            result = x * SCALE;\n        }\n    }\n\n    /// @notice Calculates geometric mean of x and y, i.e. sqrt(x * y), rounding down.\n    ///\n    /// @dev Requirements:\n    /// - x * y must fit within MAX_UD60x18, lest it overflows.\n    ///\n    /// @param x The first operand as an unsigned 60.18-decimal fixed-point number.\n    /// @param y The second operand as an unsigned 60.18-decimal fixed-point number.\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\n    function gm(uint256 x, uint256 y) internal pure returns (uint256 result) {\n        if (x == 0) {\n            return 0;\n        }\n\n        unchecked {\n            // Checking for overflow this way is faster than letting Solidity do it.\n            uint256 xy = x * y;\n            if (xy / x != y) {\n                revert PRBMathUD60x18__GmOverflow(x, y);\n            }\n\n            // We don't need to multiply by the SCALE here because the x*y product had already picked up a factor of SCALE\n            // during multiplication. See the comments within the \"sqrt\" function.\n            result = PRBMath.sqrt(xy);\n        }\n    }\n\n    /// @notice Calculates 1 / x, rounding toward zero.\n    ///\n    /// @dev Requirements:\n    /// - x cannot be zero.\n    ///\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the inverse.\n    /// @return result The inverse as an unsigned 60.18-decimal fixed-point number.\n    function inv(uint256 x) internal pure returns (uint256 result) {\n        unchecked {\n            // 1e36 is SCALE * SCALE.\n            result = 1e36 / x;\n        }\n    }\n\n    /// @notice Calculates the natural logarithm of x.\n    ///\n    /// @dev Based on the insight that ln(x) = log2(x) / log2(e).\n    ///\n    /// Requirements:\n    /// - All from \"log2\".\n    ///\n    /// Caveats:\n    /// - All from \"log2\".\n    /// - This doesn't return exactly 1 for 2.718281828459045235, for that we would need more fine-grained precision.\n    ///\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the natural logarithm.\n    /// @return result The natural logarithm as an unsigned 60.18-decimal fixed-point number.\n    function ln(uint256 x) internal pure returns (uint256 result) {\n        // Do the fixed-point multiplication inline to save gas. This is overflow-safe because the maximum value that log2(x)\n        // can return is 196205294292027477728.\n        unchecked {\n            result = (log2(x) * SCALE) / LOG2_E;\n        }\n    }\n\n    /// @notice Calculates the common logarithm of x.\n    ///\n    /// @dev First checks if x is an exact power of ten and it stops if yes. If it's not, calculates the common\n    /// logarithm based on the insight that log10(x) = log2(x) / log2(10).\n    ///\n    /// Requirements:\n    /// - All from \"log2\".\n    ///\n    /// Caveats:\n    /// - All from \"log2\".\n    ///\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the common logarithm.\n    /// @return result The common logarithm as an unsigned 60.18-decimal fixed-point number.\n    function log10(uint256 x) internal pure returns (uint256 result) {\n        if (x < SCALE) {\n            revert PRBMathUD60x18__LogInputTooSmall(x);\n        }\n\n        // Note that the \"mul\" in this block is the assembly multiplication operation, not the \"mul\" function defined\n        // in this contract.\n        // prettier-ignore\n        assembly {\n            switch x\n            case 1 { result := mul(SCALE, sub(0, 18)) }\n            case 10 { result := mul(SCALE, sub(1, 18)) }\n            case 100 { result := mul(SCALE, sub(2, 18)) }\n            case 1000 { result := mul(SCALE, sub(3, 18)) }\n            case 10000 { result := mul(SCALE, sub(4, 18)) }\n            case 100000 { result := mul(SCALE, sub(5, 18)) }\n            case 1000000 { result := mul(SCALE, sub(6, 18)) }\n            case 10000000 { result := mul(SCALE, sub(7, 18)) }\n            case 100000000 { result := mul(SCALE, sub(8, 18)) }\n            case 1000000000 { result := mul(SCALE, sub(9, 18)) }\n            case 10000000000 { result := mul(SCALE, sub(10, 18)) }\n            case 100000000000 { result := mul(SCALE, sub(11, 18)) }\n            case 1000000000000 { result := mul(SCALE, sub(12, 18)) }\n            case 10000000000000 { result := mul(SCALE, sub(13, 18)) }\n            case 100000000000000 { result := mul(SCALE, sub(14, 18)) }\n            case 1000000000000000 { result := mul(SCALE, sub(15, 18)) }\n            case 10000000000000000 { result := mul(SCALE, sub(16, 18)) }\n            case 100000000000000000 { result := mul(SCALE, sub(17, 18)) }\n            case 1000000000000000000 { result := 0 }\n            case 10000000000000000000 { result := SCALE }\n            case 100000000000000000000 { result := mul(SCALE, 2) }\n            case 1000000000000000000000 { result := mul(SCALE, 3) }\n            case 10000000000000000000000 { result := mul(SCALE, 4) }\n            case 100000000000000000000000 { result := mul(SCALE, 5) }\n            case 1000000000000000000000000 { result := mul(SCALE, 6) }\n            case 10000000000000000000000000 { result := mul(SCALE, 7) }\n            case 100000000000000000000000000 { result := mul(SCALE, 8) }\n            case 1000000000000000000000000000 { result := mul(SCALE, 9) }\n            case 10000000000000000000000000000 { result := mul(SCALE, 10) }\n            case 100000000000000000000000000000 { result := mul(SCALE, 11) }\n            case 1000000000000000000000000000000 { result := mul(SCALE, 12) }\n            case 10000000000000000000000000000000 { result := mul(SCALE, 13) }\n            case 100000000000000000000000000000000 { result := mul(SCALE, 14) }\n            case 1000000000000000000000000000000000 { result := mul(SCALE, 15) }\n            case 10000000000000000000000000000000000 { result := mul(SCALE, 16) }\n            case 100000000000000000000000000000000000 { result := mul(SCALE, 17) }\n            case 1000000000000000000000000000000000000 { result := mul(SCALE, 18) }\n            case 10000000000000000000000000000000000000 { result := mul(SCALE, 19) }\n            case 100000000000000000000000000000000000000 { result := mul(SCALE, 20) }\n            case 1000000000000000000000000000000000000000 { result := mul(SCALE, 21) }\n            case 10000000000000000000000000000000000000000 { result := mul(SCALE, 22) }\n            case 100000000000000000000000000000000000000000 { result := mul(SCALE, 23) }\n            case 1000000000000000000000000000000000000000000 { result := mul(SCALE, 24) }\n            case 10000000000000000000000000000000000000000000 { result := mul(SCALE, 25) }\n            case 100000000000000000000000000000000000000000000 { result := mul(SCALE, 26) }\n            case 1000000000000000000000000000000000000000000000 { result := mul(SCALE, 27) }\n            case 10000000000000000000000000000000000000000000000 { result := mul(SCALE, 28) }\n            case 100000000000000000000000000000000000000000000000 { result := mul(SCALE, 29) }\n            case 1000000000000000000000000000000000000000000000000 { result := mul(SCALE, 30) }\n            case 10000000000000000000000000000000000000000000000000 { result := mul(SCALE, 31) }\n            case 100000000000000000000000000000000000000000000000000 { result := mul(SCALE, 32) }\n            case 1000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 33) }\n            case 10000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 34) }\n            case 100000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 35) }\n            case 1000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 36) }\n            case 10000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 37) }\n            case 100000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 38) }\n            case 1000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 39) }\n            case 10000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 40) }\n            case 100000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 41) }\n            case 1000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 42) }\n            case 10000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 43) }\n            case 100000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 44) }\n            case 1000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 45) }\n            case 10000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 46) }\n            case 100000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 47) }\n            case 1000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 48) }\n            case 10000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 49) }\n            case 100000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 50) }\n            case 1000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 51) }\n            case 10000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 52) }\n            case 100000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 53) }\n            case 1000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 54) }\n            case 10000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 55) }\n            case 100000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 56) }\n            case 1000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 57) }\n            case 10000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 58) }\n            case 100000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 59) }\n            default {\n                result := MAX_UD60x18\n            }\n        }\n\n        if (result == MAX_UD60x18) {\n            // Do the fixed-point division inline to save gas. The denominator is log2(10).\n            unchecked {\n                result = (log2(x) * SCALE) / 3_321928094887362347;\n            }\n        }\n    }\n\n    /// @notice Calculates the binary logarithm of x.\n    ///\n    /// @dev Based on the iterative approximation algorithm.\n    /// https://en.wikipedia.org/wiki/Binary_logarithm#Iterative_approximation\n    ///\n    /// Requirements:\n    /// - x must be greater than or equal to SCALE, otherwise the result would be negative.\n    ///\n    /// Caveats:\n    /// - The results are nor perfectly accurate to the last decimal, due to the lossy precision of the iterative approximation.\n    ///\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the binary logarithm.\n    /// @return result The binary logarithm as an unsigned 60.18-decimal fixed-point number.\n    function log2(uint256 x) internal pure returns (uint256 result) {\n        if (x < SCALE) {\n            revert PRBMathUD60x18__LogInputTooSmall(x);\n        }\n        unchecked {\n            // Calculate the integer part of the logarithm and add it to the result and finally calculate y = x * 2^(-n).\n            uint256 n = PRBMath.mostSignificantBit(x / SCALE);\n\n            // The integer part of the logarithm as an unsigned 60.18-decimal fixed-point number. The operation can't overflow\n            // because n is maximum 255 and SCALE is 1e18.\n            result = n * SCALE;\n\n            // This is y = x * 2^(-n).\n            uint256 y = x >> n;\n\n            // If y = 1, the fractional part is zero.\n            if (y == SCALE) {\n                return result;\n            }\n\n            // Calculate the fractional part via the iterative approximation.\n            // The \"delta >>= 1\" part is equivalent to \"delta /= 2\", but shifting bits is faster.\n            for (uint256 delta = HALF_SCALE; delta > 0; delta >>= 1) {\n                y = (y * y) / SCALE;\n\n                // Is y^2 > 2 and so in the range [2,4)?\n                if (y >= 2 * SCALE) {\n                    // Add the 2^(-m) factor to the logarithm.\n                    result += delta;\n\n                    // Corresponds to z/2 on Wikipedia.\n                    y >>= 1;\n                }\n            }\n        }\n    }\n\n    /// @notice Multiplies two unsigned 60.18-decimal fixed-point numbers together, returning a new unsigned 60.18-decimal\n    /// fixed-point number.\n    /// @dev See the documentation for the \"PRBMath.mulDivFixedPoint\" function.\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\n    /// @return result The product as an unsigned 60.18-decimal fixed-point number.\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 result) {\n        result = PRBMath.mulDivFixedPoint(x, y);\n    }\n\n    /// @notice Returns PI as an unsigned 60.18-decimal fixed-point number.\n    function pi() internal pure returns (uint256 result) {\n        result = 3_141592653589793238;\n    }\n\n    /// @notice Raises x to the power of y.\n    ///\n    /// @dev Based on the insight that x^y = 2^(log2(x) * y).\n    ///\n    /// Requirements:\n    /// - All from \"exp2\", \"log2\" and \"mul\".\n    ///\n    /// Caveats:\n    /// - All from \"exp2\", \"log2\" and \"mul\".\n    /// - Assumes 0^0 is 1.\n    ///\n    /// @param x Number to raise to given power y, as an unsigned 60.18-decimal fixed-point number.\n    /// @param y Exponent to raise x to, as an unsigned 60.18-decimal fixed-point number.\n    /// @return result x raised to power y, as an unsigned 60.18-decimal fixed-point number.\n    function pow(uint256 x, uint256 y) internal pure returns (uint256 result) {\n        if (x == 0) {\n            result = y == 0 ? SCALE : uint256(0);\n        } else {\n            result = exp2(mul(log2(x), y));\n        }\n    }\n\n    /// @notice Raises x (unsigned 60.18-decimal fixed-point number) to the power of y (basic unsigned integer) using the\n    /// famous algorithm \"exponentiation by squaring\".\n    ///\n    /// @dev See https://en.wikipedia.org/wiki/Exponentiation_by_squaring\n    ///\n    /// Requirements:\n    /// - The result must fit within MAX_UD60x18.\n    ///\n    /// Caveats:\n    /// - All from \"mul\".\n    /// - Assumes 0^0 is 1.\n    ///\n    /// @param x The base as an unsigned 60.18-decimal fixed-point number.\n    /// @param y The exponent as an uint256.\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\n    function powu(uint256 x, uint256 y) internal pure returns (uint256 result) {\n        // Calculate the first iteration of the loop in advance.\n        result = y & 1 > 0 ? x : SCALE;\n\n        // Equivalent to \"for(y /= 2; y > 0; y /= 2)\" but faster.\n        for (y >>= 1; y > 0; y >>= 1) {\n            x = PRBMath.mulDivFixedPoint(x, x);\n\n            // Equivalent to \"y % 2 == 1\" but faster.\n            if (y & 1 > 0) {\n                result = PRBMath.mulDivFixedPoint(result, x);\n            }\n        }\n    }\n\n    /// @notice Returns 1 as an unsigned 60.18-decimal fixed-point number.\n    function scale() internal pure returns (uint256 result) {\n        result = SCALE;\n    }\n\n    /// @notice Calculates the square root of x, rounding down.\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\n    ///\n    /// Requirements:\n    /// - x must be less than MAX_UD60x18 / SCALE.\n    ///\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the square root.\n    /// @return result The result as an unsigned 60.18-decimal fixed-point .\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\n        unchecked {\n            if (x > MAX_UD60x18 / SCALE) {\n                revert PRBMathUD60x18__SqrtOverflow(x);\n            }\n            // Multiply x by the SCALE to account for the factor of SCALE that is picked up when multiplying two unsigned\n            // 60.18-decimal fixed-point numbers together (in this case, those two numbers are both the square root).\n            result = PRBMath.sqrt(x * SCALE);\n        }\n    }\n\n    /// @notice Converts a unsigned 60.18-decimal fixed-point number to basic integer form, rounding down in the process.\n    /// @param x The unsigned 60.18-decimal fixed-point number to convert.\n    /// @return result The same number in basic integer form.\n    function toUint(uint256 x) internal pure returns (uint256 result) {\n        unchecked {\n            result = x / SCALE;\n        }\n    }\n}\n"},"src/dependencies/solmate/ERC20.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\nabstract contract ERC20 {\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /*//////////////////////////////////////////////////////////////\n                            METADATA STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    string public name;\n\n    string public symbol;\n\n    uint8 public immutable decimals;\n\n    /*//////////////////////////////////////////////////////////////\n                              ERC20 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 public totalSupply;\n\n    mapping(address => uint256) public balanceOf;\n\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    /*//////////////////////////////////////////////////////////////\n                            EIP-2612 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 internal immutable INITIAL_CHAIN_ID;\n\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\n\n    mapping(address => uint256) public nonces;\n\n    /*//////////////////////////////////////////////////////////////\n                               CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals\n    ) {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n\n        INITIAL_CHAIN_ID = block.chainid;\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                               ERC20 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\n        allowance[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n\n        return true;\n    }\n\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        balanceOf[msg.sender] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(msg.sender, to, amount);\n\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual returns (bool) {\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\n\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\n\n        balanceOf[from] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        return true;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                             EIP-2612 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        require(deadline >= block.timestamp, \"PERMIT_DEADLINE_EXPIRED\");\n\n        // Unchecked because the only math done is incrementing\n        // the owner's nonce which cannot realistically overflow.\n        unchecked {\n            address recoveredAddress = ecrecover(\n                keccak256(\n                    abi.encodePacked(\n                        \"\\x19\\x01\",\n                        DOMAIN_SEPARATOR(),\n                        keccak256(\n                            abi.encode(\n                                keccak256(\n                                    \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n                                ),\n                                owner,\n                                spender,\n                                value,\n                                nonces[owner]++,\n                                deadline\n                            )\n                        )\n                    )\n                ),\n                v,\n                r,\n                s\n            );\n\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \"INVALID_SIGNER\");\n\n            allowance[recoveredAddress][spender] = value;\n        }\n\n        emit Approval(owner, spender, value);\n    }\n\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\n    }\n\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                    keccak256(bytes(name)),\n                    keccak256(\"1\"),\n                    block.chainid,\n                    address(this)\n                )\n            );\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        INTERNAL MINT/BURN LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function _mint(address to, uint256 amount) internal virtual {\n        totalSupply += amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(address(0), to, amount);\n    }\n\n    function _burn(address from, uint256 amount) internal virtual {\n        balanceOf[from] -= amount;\n\n        // Cannot underflow because a user's balance\n        // will never be larger than the total supply.\n        unchecked {\n            totalSupply -= amount;\n        }\n\n        emit Transfer(from, address(0), amount);\n    }\n}\n"},"src/FluxPriceFeed.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"./dependencies/flux/CLV2V3Interface.sol\";\nimport \"./interfaces/IPriceFeed.sol\";\n\ncontract FluxPriceFeed is IPriceFeed {\n    // @dev target digits\n    uint256 public constant TARGET_DIGITS = 18;\n\n    // Map of asset price sources (asset => priceFeedSource)\n    mapping(address => CLV2V3Interface) private priceFeedSources;\n\n    struct FluxResponse {\n        uint80 roundId;\n        int256 answer;\n        uint256 timestamp;\n        bool success;\n        uint8 decimals;\n    }\n\n    struct Config {\n        address asset;\n        address source;\n    }\n\n    constructor(Config[] memory _config) {\n        uint256 numberOfSources = _config.length;\n\n        for (uint256 i = 0; i < numberOfSources; i++) {\n            address currentAsset = _config[i].asset;\n            address currentSource = _config[i].source;\n\n            require(currentAsset != address(0), \"Invalid asset\");\n            require(currentSource != address(0), \"Invalid source\");\n\n            priceFeedSources[currentAsset] = CLV2V3Interface(currentSource);\n            emit AssetPriceFeedSourceUpdated(currentAsset, currentSource);\n        }\n    }\n\n    function getAssetPrice(address _asset)\n        external\n        view\n        override\n        returns (uint256)\n    {\n        require(\n            address(priceFeedSources[_asset]) != address(0),\n            \"Asset price feed doesn't exist\"\n        );\n        FluxResponse memory fluxResponse = _getCurrentFluxResponse(_asset);\n        uint256 scaledFluxPrice = _scaleFluxPriceByDigits(\n            uint256(fluxResponse.answer),\n            fluxResponse.decimals\n        );\n        return scaledFluxPrice;\n    }\n\n    // Internal functions\n    function _scaleFluxPriceByDigits(uint256 _price, uint256 _answerDigits)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint256 price;\n        if (_answerDigits >= TARGET_DIGITS) {\n            price = _price / (10**(_answerDigits - TARGET_DIGITS));\n        } else if (_answerDigits < TARGET_DIGITS) {\n            price = _price * (10**(TARGET_DIGITS - _answerDigits));\n        }\n        return price;\n    }\n\n    function _getCurrentFluxResponse(address _asset)\n        internal\n        view\n        returns (FluxResponse memory fluxResponse)\n    {\n        CLV2V3Interface priceAggregator = priceFeedSources[_asset];\n        // First, try to get current decimal precision:\n        try priceAggregator.decimals() returns (uint8 decimals) {\n            // If call to Flux succeeds, record the current decimal precision\n            fluxResponse.decimals = decimals;\n        } catch {\n            // If call to Flux aggregator reverts, return a zero response with success = false\n            return fluxResponse;\n        }\n\n        // Secondly, try to get latest price data:\n        try priceAggregator.latestRoundData() returns (\n            uint80 roundId,\n            int256 answer,\n            uint256, /* startedAt */\n            uint256 timestamp,\n            uint80 /* answeredInRound */\n        ) {\n            // If call to Flux succeeds, return the response and success = true\n            fluxResponse.roundId = roundId;\n            fluxResponse.answer = answer;\n            fluxResponse.timestamp = timestamp;\n            fluxResponse.success = true;\n            return fluxResponse;\n        } catch {\n            // If call to Flux aggregator reverts, return a zero response with success = false\n            return fluxResponse;\n        }\n    }\n}\n"},"src/InterestSwap.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport {PRBMathUD60x18} from \"./dependencies/prb-math/PRBMathUD60x18.sol\";\nimport {IPriceFeed} from \"./interfaces/IPriceFeed.sol\";\nimport {IERC20} from \"./interfaces/IERC20.sol\";\n\nimport {PriceModel} from \"./PriceModel.sol\";\n\ncontract InterestSwap {\n    using PRBMathUD60x18 for uint256;\n\n    IPriceFeed public priceFeed;\n\n    IERC20 public liquidityToken;\n\n    struct Pool {\n        address[] acceptedTokens;\n        uint256 totalLiquidity;\n        PriceModel priceModel;\n    }\n\n    struct Route {\n        address poolOwner;\n        uint256 poolIndex;\n    }\n\n    // user => Pool\n    mapping(address => Pool[]) private pools;\n\n    // user => pool index => supported asset => bool\n    mapping(address => mapping(uint256 => mapping(address => bool)))\n        public isAssetSupported;\n\n    // @dev This could be extended to more templates and include validation\n    address[] public priceModels;\n\n    event PoolCreated(\n        address indexed owner,\n        address[] acceptedTokens,\n        address priceModel,\n        uint256 totalLiquidity\n    );\n\n    constructor(address _priceFeed, address _liquidityToken) {\n        priceFeed = IPriceFeed(_priceFeed);\n        liquidityToken = IERC20(_liquidityToken);\n    }\n\n    function createPool(\n        address[] memory _acceptedTokens,\n        uint256 _dailyFeePercentage,\n        uint256 _initialLiquidity\n    ) external returns (uint256, address) {\n        uint256 totalTokens = _acceptedTokens.length;\n        uint256 newPoolIndex = pools[msg.sender].length;\n\n        address newPriceModel = createPriceModel(_dailyFeePercentage);\n\n        pools[msg.sender].push(\n            Pool(_acceptedTokens, _initialLiquidity, PriceModel(newPriceModel))\n        );\n\n        for (uint256 i = 0; i < totalTokens; i++) {\n            isAssetSupported[msg.sender][newPoolIndex][\n                _acceptedTokens[i]\n            ] = true;\n        }\n\n        // transfer initial liquidity amount\n        liquidityToken.transferFrom(\n            msg.sender,\n            address(this),\n            _initialLiquidity\n        );\n\n        emit PoolCreated(\n            msg.sender,\n            _acceptedTokens,\n            newPriceModel,\n            _initialLiquidity\n        );\n\n        return (newPoolIndex, newPriceModel);\n    }\n\n    function quote(\n        address _asset,\n        uint256 _amount,\n        uint256 _daysTerm,\n        Route memory route\n    )\n        public\n        view\n        returns (\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        // @dev verify the route supports that asset\n        require(\n            isAssetSupported[route.poolOwner][route.poolIndex][_asset],\n            \"Unsupported asset\"\n        );\n\n        uint256 collateralPrice = priceFeed.getAssetPrice(_asset);\n        uint256 collateralValueinUSDC = collateralPrice.mul(_amount);\n\n        Pool storage poolReference = pools[route.poolOwner][route.poolIndex];\n        require(\n            collateralValueinUSDC <= poolReference.totalLiquidity,\n            \"Not enough liquidity in the pool\"\n        );\n\n        uint256 assetPercentageToCharge = poolReference.priceModel.quote(\n            _amount,\n            _daysTerm\n        );\n\n        // asset percentage to charge, amount to be received, collateralPrice\n        uint256 amounToBeSent = _amount - assetPercentageToCharge;\n        uint256 amounToBeSentInUSDC = (_amount - assetPercentageToCharge).mul(\n            collateralPrice\n        );\n\n        return (assetPercentageToCharge, amounToBeSent, amounToBeSentInUSDC);\n    }\n\n    function swap(\n        address _asset,\n        uint256 _amount,\n        uint256 _daysTerm,\n        Route memory route\n    ) external returns (uint256) {\n        (, , uint256 amounToBeSentInUSDC) = quote(\n            _asset,\n            _amount,\n            _daysTerm,\n            route\n        );\n\n        pools[route.poolOwner][route.poolIndex]\n            .totalLiquidity -= amounToBeSentInUSDC;\n\n        // transfer asset to this contract\n        IERC20(_asset).transferFrom(msg.sender, address(this), _amount);\n        liquidityToken.transfer(msg.sender, amounToBeSentInUSDC);\n\n        return amounToBeSentInUSDC;\n    }\n\n    function createPriceModel(uint256 _dailyFeePercentage)\n        internal\n        returns (address)\n    {\n        PriceModel newPriceModel = new PriceModel(_dailyFeePercentage);\n        priceModels.push(address(newPriceModel));\n        return address(newPriceModel);\n    }\n\n    function getPool(address _lp, uint256 _index)\n        external\n        view\n        returns (Pool memory)\n    {\n        return pools[_lp][_index];\n    }\n\n    function getUserTotalPools(address _lp) external view returns (uint256) {\n        return pools[_lp].length;\n    }\n}\n"},"src/InterestSwapPeriphery.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport {IERC20} from \"./interfaces/IERC20.sol\";\nimport {InterestSwap} from \"./InterestSwap.sol\";\n\ncontract InterestSwapPeriphery {\n    InterestSwap public interestSwap;\n\n    struct TokenInfo {\n        uint8 decimals;\n        string name;\n        string symbol;\n        address tokenAddress;\n    }\n\n    struct PoolInfo {\n        address priceModel;\n        TokenInfo liquidityToken;\n        TokenInfo[] acceptedTokens;\n        uint256 totalLiquidity;\n    }\n\n    constructor(address _interestSwap) {\n        interestSwap = InterestSwap(_interestSwap);\n    }\n\n    function getPools(address _lp) external view returns (PoolInfo[] memory) {\n        uint256 totalPools = interestSwap.getUserTotalPools(_lp);\n\n        PoolInfo[] memory result = new PoolInfo[](totalPools);\n\n        for (uint256 i = 0; i < totalPools; i++) {\n            result[i] = getPool(_lp, i);\n        }\n\n        return result;\n    }\n\n    function getPool(address _lp, uint256 _index)\n        public\n        view\n        returns (PoolInfo memory)\n    {\n        InterestSwap.Pool memory pool = interestSwap.getPool(_lp, _index);\n\n        return\n            PoolInfo(\n                address(pool.priceModel),\n                getTokenInfo(address(interestSwap.liquidityToken())),\n                getTokensInfo(pool.acceptedTokens),\n                pool.totalLiquidity\n            );\n    }\n\n    function getTokenInfo(address _tokenToCheck)\n        internal\n        view\n        returns (TokenInfo memory)\n    {\n        IERC20 token = IERC20(_tokenToCheck);\n        return\n            TokenInfo(\n                token.decimals(),\n                token.name(),\n                token.symbol(),\n                _tokenToCheck\n            );\n    }\n\n    function getTokensInfo(address[] memory _tokenToCheck)\n        internal\n        view\n        returns (TokenInfo[] memory)\n    {\n        uint256 totalTokens = _tokenToCheck.length;\n        TokenInfo[] memory result = new TokenInfo[](totalTokens);\n        for (uint256 i = 0; i < totalTokens; i++) {\n            result[i] = getTokenInfo(_tokenToCheck[i]);\n        }\n        return result;\n    }\n}\n"},"src/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\ninterface IERC20 {\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n}\n"},"src/interfaces/IPriceFeed.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\n/**\n * @dev Interface for protocol price feeds.\n */\ninterface IPriceFeed {\n    /*~~~ EVENT ~~~*/\n\n    /**\n     * @dev Emitted after the price source of an asset is updated.\n     *\n     * @param asset The address of the asset.\n     * @param source The price feed source of the asset.\n     */\n    event AssetPriceFeedSourceUpdated(\n        address indexed asset,\n        address indexed source\n    );\n\n    /*~~~ MAIN LOGIC FUNCTIONS ~~~*/\n\n    /**\n     * @dev Used to retrieve a given asset's price.\n     *\n     * @param _asset Address of the asset.\n     * @return uint256 Price of the asset.\n     */\n    function getAssetPrice(address _asset) external view returns (uint256);\n}\n"},"src/PriceModel.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"./dependencies/prb-math/PRBMathUD60x18.sol\";\n\n// @dev To make this contract ownable, so only the owner can update the parameters\ncontract PriceModel {\n    using PRBMathUD60x18 for uint256;\n\n    uint256 public dailyPercent;\n\n    constructor(uint256 _dailyPercent) {\n        dailyPercent = _dailyPercent;\n    }\n\n    function setDailyPercentage(uint256 _newValue) external {\n        dailyPercent = _newValue;\n    }\n\n    // @dev from the amount requested, we charge you X % (the result)\n    function quote(uint256 _amount, uint256 _numberOfDays)\n        public\n        view\n        returns (uint256)\n    {\n        // dailyPercent * _numberOfDays = total interest\n        return _amount.mul(dailyPercent).mul(_numberOfDays);\n    }\n}\n"},"src/stETH.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"./dependencies/solmate/ERC20.sol\";\n\ncontract stETH is ERC20 {\n    constructor(address[] memory _holders) ERC20(\"stETH\", \"stETH\", 18) {\n        uint256 holdersLength = _holders.length;\n\n        for (uint256 i = 0; i < holdersLength; i++) {\n            _mint(_holders[i], 100_000 * 1e18);\n        }\n    }\n}\n"},"src/stNEAR.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"./dependencies/solmate/ERC20.sol\";\n\ncontract stNEAR is ERC20 {\n    constructor(address[] memory _holders) ERC20(\"stNEAR\", \"stNEAR\", 18) {\n        uint256 holdersLength = _holders.length;\n\n        for (uint256 i = 0; i < holdersLength; i++) {\n            _mint(_holders[i], 100_000 * 1e18);\n        }\n    }\n}\n"},"src/USDC.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"./dependencies/solmate/ERC20.sol\";\n\ncontract USDC is ERC20 {\n    constructor(address[] memory _holders) ERC20(\"USDC\", \"USDC\", 18) {\n        uint256 holdersLength = _holders.length;\n\n        for (uint256 i = 0; i < holdersLength; i++) {\n            _mint(_holders[i], 100_000 * 1e18);\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"src/FluxPriceFeed.sol":{"ast":{"absolutePath":"src/FluxPriceFeed.sol","exportedSymbols":{"CLInterface":[1030],"CLV2V3Interface":[1039],"CLV3Interface":[1085],"FluxPriceFeed":[278],"IPriceFeed":[4080]},"id":279,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"31:24:0"},{"absolutePath":"src/dependencies/flux/CLV2V3Interface.sol","file":"./dependencies/flux/CLV2V3Interface.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":279,"sourceUnit":1040,"src":"57:49:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/interfaces/IPriceFeed.sol","file":"./interfaces/IPriceFeed.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":279,"sourceUnit":4081,"src":"107:37:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4,"name":"IPriceFeed","nameLocations":["172:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4080,"src":"172:10:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"172:10:0"}],"canonicalName":"FluxPriceFeed","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":278,"linearizedBaseContracts":[278,4080],"name":"FluxPriceFeed","nameLocation":"155:13:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"1be5c92f","id":8,"mutability":"constant","name":"TARGET_DIGITS","nameLocation":"239:13:0","nodeType":"VariableDeclaration","scope":278,"src":"215:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"215:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3138","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"255:2:0","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"public"},{"constant":false,"id":13,"mutability":"mutable","name":"priceFeedSources","nameLocation":"369:16:0","nodeType":"VariableDeclaration","scope":278,"src":"325:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_CLV2V3Interface_$1039_$","typeString":"mapping(address => contract CLV2V3Interface)"},"typeName":{"id":12,"keyType":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"333:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"325:35:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_CLV2V3Interface_$1039_$","typeString":"mapping(address => contract CLV2V3Interface)"},"valueType":{"id":11,"nodeType":"UserDefinedTypeName","pathNode":{"id":10,"name":"CLV2V3Interface","nameLocations":["344:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":1039,"src":"344:15:0"},"referencedDeclaration":1039,"src":"344:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_CLV2V3Interface_$1039","typeString":"contract CLV2V3Interface"}}},"visibility":"private"},{"canonicalName":"FluxPriceFeed.FluxResponse","id":24,"members":[{"constant":false,"id":15,"mutability":"mutable","name":"roundId","nameLocation":"429:7:0","nodeType":"VariableDeclaration","scope":24,"src":"422:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":14,"name":"uint80","nodeType":"ElementaryTypeName","src":"422:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":17,"mutability":"mutable","name":"answer","nameLocation":"453:6:0","nodeType":"VariableDeclaration","scope":24,"src":"446:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16,"name":"int256","nodeType":"ElementaryTypeName","src":"446:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":19,"mutability":"mutable","name":"timestamp","nameLocation":"477:9:0","nodeType":"VariableDeclaration","scope":24,"src":"469:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"469:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"success","nameLocation":"501:7:0","nodeType":"VariableDeclaration","scope":24,"src":"496:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20,"name":"bool","nodeType":"ElementaryTypeName","src":"496:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"decimals","nameLocation":"524:8:0","nodeType":"VariableDeclaration","scope":24,"src":"518:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":22,"name":"uint8","nodeType":"ElementaryTypeName","src":"518:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"FluxResponse","nameLocation":"399:12:0","nodeType":"StructDefinition","scope":278,"src":"392:147:0","visibility":"public"},{"canonicalName":"FluxPriceFeed.Config","id":29,"members":[{"constant":false,"id":26,"mutability":"mutable","name":"asset","nameLocation":"577:5:0","nodeType":"VariableDeclaration","scope":29,"src":"569:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"569:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"source","nameLocation":"600:6:0","nodeType":"VariableDeclaration","scope":29,"src":"592:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"592:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Config","nameLocation":"552:6:0","nodeType":"StructDefinition","scope":278,"src":"545:68:0","visibility":"public"},{"body":{"id":100,"nodeType":"Block","src":"656:520:0","statements":[{"assignments":[37],"declarations":[{"constant":false,"id":37,"mutability":"mutable","name":"numberOfSources","nameLocation":"674:15:0","nodeType":"VariableDeclaration","scope":100,"src":"666:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36,"name":"uint256","nodeType":"ElementaryTypeName","src":"666:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":40,"initialValue":{"expression":{"id":38,"name":"_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"692:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr","typeString":"struct FluxPriceFeed.Config memory[] memory"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"700:6:0","memberName":"length","nodeType":"MemberAccess","src":"692:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"666:40:0"},{"body":{"id":98,"nodeType":"Block","src":"763:407:0","statements":[{"assignments":[52],"declarations":[{"constant":false,"id":52,"mutability":"mutable","name":"currentAsset","nameLocation":"785:12:0","nodeType":"VariableDeclaration","scope":98,"src":"777:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":57,"initialValue":{"expression":{"baseExpression":{"id":53,"name":"_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"800:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr","typeString":"struct FluxPriceFeed.Config memory[] memory"}},"id":55,"indexExpression":{"id":54,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"808:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"800:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$29_memory_ptr","typeString":"struct FluxPriceFeed.Config memory"}},"id":56,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"811:5:0","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":26,"src":"800:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"777:39:0"},{"assignments":[59],"declarations":[{"constant":false,"id":59,"mutability":"mutable","name":"currentSource","nameLocation":"838:13:0","nodeType":"VariableDeclaration","scope":98,"src":"830:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"830:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":64,"initialValue":{"expression":{"baseExpression":{"id":60,"name":"_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"854:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr","typeString":"struct FluxPriceFeed.Config memory[] memory"}},"id":62,"indexExpression":{"id":61,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"862:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"854:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$29_memory_ptr","typeString":"struct FluxPriceFeed.Config memory"}},"id":63,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"865:6:0","memberName":"source","nodeType":"MemberAccess","referencedDeclaration":28,"src":"854:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"830:41:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":66,"name":"currentAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"894:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":69,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"918:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":68,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"910:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:0","typeDescriptions":{}}},"id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"910:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"894:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206173736574","id":72,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"922:15:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_13e63822319f457869f7e39533cb3e11d411566d67610a8db149f751583d3789","typeString":"literal_string \"Invalid asset\""},"value":"Invalid asset"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13e63822319f457869f7e39533cb3e11d411566d67610a8db149f751583d3789","typeString":"literal_string \"Invalid asset\""}],"id":65,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"886:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":74,"nodeType":"ExpressionStatement","src":"886:52:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":76,"name":"currentSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"960:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":79,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"985:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":78,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"977:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":77,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:0","typeDescriptions":{}}},"id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"977:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"960:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420736f75726365","id":82,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"989:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e","typeString":"literal_string \"Invalid source\""},"value":"Invalid source"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e","typeString":"literal_string \"Invalid source\""}],"id":75,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"952:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":84,"nodeType":"ExpressionStatement","src":"952:54:0"},{"expression":{"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":85,"name":"priceFeedSources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1021:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_CLV2V3Interface_$1039_$","typeString":"mapping(address => contract CLV2V3Interface)"}},"id":87,"indexExpression":{"id":86,"name":"currentAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"1038:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1021:30:0","typeDescriptions":{"typeIdentifier":"t_contract$_CLV2V3Interface_$1039","typeString":"contract CLV2V3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":89,"name":"currentSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"1070:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":88,"name":"CLV2V3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"1054:15:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CLV2V3Interface_$1039_$","typeString":"type(contract CLV2V3Interface)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1054:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CLV2V3Interface_$1039","typeString":"contract CLV2V3Interface"}},"src":"1021:63:0","typeDescriptions":{"typeIdentifier":"t_contract$_CLV2V3Interface_$1039","typeString":"contract CLV2V3Interface"}},"id":92,"nodeType":"ExpressionStatement","src":"1021:63:0"},{"eventCall":{"arguments":[{"id":94,"name":"currentAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"1131:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":95,"name":"currentSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"1145:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":93,"name":"AssetPriceFeedSourceUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"1103:27:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1103:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":97,"nodeType":"EmitStatement","src":"1098:61:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":45,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"737:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":46,"name":"numberOfSources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"741:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"737:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":99,"initializationExpression":{"assignments":[42],"declarations":[{"constant":false,"id":42,"mutability":"mutable","name":"i","nameLocation":"730:1:0","nodeType":"VariableDeclaration","scope":99,"src":"722:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41,"name":"uint256","nodeType":"ElementaryTypeName","src":"722:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":44,"initialValue":{"hexValue":"30","id":43,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"734:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"722:13:0"},"loopExpression":{"expression":{"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"758:3:0","subExpression":{"id":48,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"758:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":50,"nodeType":"ExpressionStatement","src":"758:3:0"},"nodeType":"ForStatement","src":"717:453:0"}]},"id":101,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"_config","nameLocation":"647:7:0","nodeType":"VariableDeclaration","scope":101,"src":"631:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr","typeString":"struct FluxPriceFeed.Config[]"},"typeName":{"baseType":{"id":31,"nodeType":"UserDefinedTypeName","pathNode":{"id":30,"name":"Config","nameLocations":["631:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":29,"src":"631:6:0"},"referencedDeclaration":29,"src":"631:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$29_storage_ptr","typeString":"struct FluxPriceFeed.Config"}},"id":32,"nodeType":"ArrayTypeName","src":"631:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Config_$29_storage_$dyn_storage_ptr","typeString":"struct FluxPriceFeed.Config[]"}},"visibility":"internal"}],"src":"630:25:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[],"src":"656:0:0"},"scope":278,"src":"619:557:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4079],"body":{"id":145,"nodeType":"Block","src":"1298:395:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":112,"name":"priceFeedSources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1337:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_CLV2V3Interface_$1039_$","typeString":"mapping(address => contract CLV2V3Interface)"}},"id":114,"indexExpression":{"id":113,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"1354:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1337:24:0","typeDescriptions":{"typeIdentifier":"t_contract$_CLV2V3Interface_$1039","typeString":"contract CLV2V3Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CLV2V3Interface_$1039","typeString":"contract CLV2V3Interface"}],"id":111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1329:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"1329:7:0","typeDescriptions":{}}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1329:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1374:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1366:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"1366:7:0","typeDescriptions":{}}},"id":119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1329:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4173736574207072696365206665656420646f65736e2774206578697374","id":121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1390:32:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_04ba6bb27d4b8053dc24d79d9498076a9429b4914a7c0a3ca835e10744357e33","typeString":"literal_string \"Asset price feed doesn't exist\""},"value":"Asset price feed doesn't exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04ba6bb27d4b8053dc24d79d9498076a9429b4914a7c0a3ca835e10744357e33","typeString":"literal_string \"Asset price feed doesn't exist\""}],"id":109,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1308:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:124:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"ExpressionStatement","src":"1308:124:0"},{"assignments":[126],"declarations":[{"constant":false,"id":126,"mutability":"mutable","name":"fluxResponse","nameLocation":"1462:12:0","nodeType":"VariableDeclaration","scope":145,"src":"1442:32:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FluxResponse_$24_memory_ptr","typeString":"struct FluxPriceFeed.FluxResponse"},"typeName":{"id":125,"nodeType":"UserDefinedTypeName","pathNode":{"id":124,"name":"FluxResponse","nameLocations":["1442:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":24,"src":"1442:12:0"},"referencedDeclaration":24,"src":"1442:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_FluxResponse_$24_storage_ptr","typeString":"struct FluxPriceFeed.FluxResponse"}},"visibility":"internal"}],"id":130,"initialValue":{"arguments":[{"id":128,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"1501:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":127,"name":"_getCurrentFluxResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"1477:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_FluxResponse_$24_memory_ptr_$","typeString":"function (address) view returns (struct FluxPriceFeed.FluxResponse memory)"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1477:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FluxResponse_$24_memory_ptr","typeString":"struct FluxPriceFeed.FluxResponse memory"}},"nodeType":"VariableDeclarationStatement","src":"1442:66:0"},{"assignments":[132],"declarations":[{"constant":false,"id":132,"mutability":"mutable","name":"scaledFluxPrice","nameLocation":"1526:15:0","nodeType":"VariableDeclaration","scope":145,"src":"1518:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1518:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":142,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":136,"name":"fluxResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"1589:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_FluxResponse_$24_memory_ptr","typeString":"struct FluxPriceFeed.FluxResponse memory"}},"id":137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1602:6:0","memberName":"answer","nodeType":"MemberAccess","referencedDeclaration":17,"src":"1589:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1581:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":134,"name":"uint256","nodeType":"ElementaryTypeName","src":"1581:7:0","typeDescriptions":{}}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":139,"name":"fluxResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"1623:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_FluxResponse_$24_memory_ptr","typeString":"struct FluxPriceFeed.FluxResponse memory"}},"id":140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1636:8:0","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":23,"src":"1623:21:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":133,"name":"_scaleFluxPriceByDigits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"1544:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1544:110:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1518:136:0"},{"expression":{"id":143,"name":"scaledFluxPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"1671:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":108,"id":144,"nodeType":"Return","src":"1664:22:0"}]},"functionSelector":"b3596f07","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetPrice","nameLocation":"1191:13:0","nodeType":"FunctionDefinition","overrides":{"id":105,"nodeType":"OverrideSpecifier","overrides":[],"src":"1259:8:0"},"parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103,"mutability":"mutable","name":"_asset","nameLocation":"1213:6:0","nodeType":"VariableDeclaration","scope":146,"src":"1205:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"1205:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1204:16:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"1285:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1285:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1284:9:0"},"scope":278,"src":"1182:511:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":194,"nodeType":"Block","src":"1857:296:0","statements":[{"assignments":[156],"declarations":[{"constant":false,"id":156,"mutability":"mutable","name":"price","nameLocation":"1875:5:0","nodeType":"VariableDeclaration","scope":194,"src":"1867:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1867:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":157,"nodeType":"VariableDeclarationStatement","src":"1867:13:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":158,"name":"_answerDigits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"1894:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":159,"name":"TARGET_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1911:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1894:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"_answerDigits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"2015:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":175,"name":"TARGET_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2031:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2015:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":190,"nodeType":"IfStatement","src":"2011:114:0","trueBody":{"id":189,"nodeType":"Block","src":"2046:79:0","statements":[{"expression":{"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":177,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"2060:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":178,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"2068:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2078:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":180,"name":"TARGET_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2083:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":181,"name":"_answerDigits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"2099:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2083:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":183,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2082:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2077:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2068:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2060:54:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":188,"nodeType":"ExpressionStatement","src":"2060:54:0"}]}},"id":191,"nodeType":"IfStatement","src":"1890:235:0","trueBody":{"id":173,"nodeType":"Block","src":"1926:79:0","statements":[{"expression":{"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":161,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"1940:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":162,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1948:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1958:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":164,"name":"_answerDigits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"1963:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":165,"name":"TARGET_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1979:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1963:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1962:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1958:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1957:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1948:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1940:54:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":172,"nodeType":"ExpressionStatement","src":"1940:54:0"}]}},{"expression":{"id":192,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"2141:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":154,"id":193,"nodeType":"Return","src":"2134:12:0"}]},"id":195,"implemented":true,"kind":"function","modifiers":[],"name":"_scaleFluxPriceByDigits","nameLocation":"1734:23:0","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"_price","nameLocation":"1766:6:0","nodeType":"VariableDeclaration","scope":195,"src":"1758:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"1758:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"_answerDigits","nameLocation":"1782:13:0","nodeType":"VariableDeclaration","scope":195,"src":"1774:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"1774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1757:39:0"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":195,"src":"1844:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"1844:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1843:9:0"},"scope":278,"src":"1725:428:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":276,"nodeType":"Block","src":"2293:1205:0","statements":[{"assignments":[205],"declarations":[{"constant":false,"id":205,"mutability":"mutable","name":"priceAggregator","nameLocation":"2319:15:0","nodeType":"VariableDeclaration","scope":276,"src":"2303:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CLV2V3Interface_$1039","typeString":"contract CLV2V3Interface"},"typeName":{"id":204,"nodeType":"UserDefinedTypeName","pathNode":{"id":203,"name":"CLV2V3Interface","nameLocations":["2303:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":1039,"src":"2303:15:0"},"referencedDeclaration":1039,"src":"2303:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_CLV2V3Interface_$1039","typeString":"contract CLV2V3Interface"}},"visibility":"internal"}],"id":209,"initialValue":{"baseExpression":{"id":206,"name":"priceFeedSources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2337:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_CLV2V3Interface_$1039_$","typeString":"mapping(address => contract CLV2V3Interface)"}},"id":208,"indexExpression":{"id":207,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"2354:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2337:24:0","typeDescriptions":{"typeIdentifier":"t_contract$_CLV2V3Interface_$1039","typeString":"contract CLV2V3Interface"}},"nodeType":"VariableDeclarationStatement","src":"2303:58:0"},{"clauses":[{"block":{"id":222,"nodeType":"Block","src":"2483:135:0","statements":[{"expression":{"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":216,"name":"fluxResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"2575:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_FluxResponse_$24_memory_ptr","typeString":"struct FluxPriceFeed.FluxResponse memory"}},"id":218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2588:8:0","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":23,"src":"2575:21:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":219,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"2599:8:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2575:32:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":221,"nodeType":"ExpressionStatement","src":"2575:32:0"}]},"errorName":"","id":223,"nodeType":"TryCatchClause","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"decimals","nameLocation":"2473:8:0","nodeType":"VariableDeclaration","scope":223,"src":"2467:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":213,"name":"uint8","nodeType":"ElementaryTypeName","src":"2467:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2466:16:0"},"src":"2458:160:0"},{"block":{"id":226,"nodeType":"Block","src":"2625:139:0","statements":[{"expression":{"id":224,"name":"fluxResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"2741:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_FluxResponse_$24_memory_ptr","typeString":"struct FluxPriceFeed.FluxResponse memory"}},"functionReturnParameters":202,"id":225,"nodeType":"Return","src":"2734:19:0"}]},"errorName":"","id":227,"nodeType":"TryCatchClause","src":"2619:145:0"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":210,"name":"priceAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"2431:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_CLV2V3Interface_$1039","typeString":"contract CLV2V3Interface"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2447:8:0","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1046,"src":"2431:24:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2431:26:0","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":228,"nodeType":"TryStatement","src":"2427:337:0"},{"clauses":[{"block":{"id":269,"nodeType":"Block","src":"3047:299:0","statements":[{"expression":{"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":243,"name":"fluxResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"3141:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_FluxResponse_$24_memory_ptr","typeString":"struct FluxPriceFeed.FluxResponse memory"}},"id":245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3154:7:0","memberName":"roundId","nodeType":"MemberAccess","referencedDeclaration":15,"src":"3141:20:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":246,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"3164:7:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"3141:30:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"id":248,"nodeType":"ExpressionStatement","src":"3141:30:0"},{"expression":{"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":249,"name":"fluxResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"3185:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_FluxResponse_$24_memory_ptr","typeString":"struct FluxPriceFeed.FluxResponse memory"}},"id":251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3198:6:0","memberName":"answer","nodeType":"MemberAccess","referencedDeclaration":17,"src":"3185:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":252,"name":"answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"3207:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"3185:28:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":254,"nodeType":"ExpressionStatement","src":"3185:28:0"},{"expression":{"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":255,"name":"fluxResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"3227:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_FluxResponse_$24_memory_ptr","typeString":"struct FluxPriceFeed.FluxResponse memory"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3240:9:0","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":19,"src":"3227:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":258,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"3252:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3227:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":260,"nodeType":"ExpressionStatement","src":"3227:34:0"},{"expression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":261,"name":"fluxResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"3275:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_FluxResponse_$24_memory_ptr","typeString":"struct FluxPriceFeed.FluxResponse memory"}},"id":263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3288:7:0","memberName":"success","nodeType":"MemberAccess","referencedDeclaration":21,"src":"3275:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3298:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3275:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":266,"nodeType":"ExpressionStatement","src":"3275:27:0"},{"expression":{"id":267,"name":"fluxResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"3323:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_FluxResponse_$24_memory_ptr","typeString":"struct FluxPriceFeed.FluxResponse memory"}},"functionReturnParameters":202,"id":268,"nodeType":"Return","src":"3316:19:0"}]},"errorName":"","id":270,"nodeType":"TryCatchClause","parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"roundId","nameLocation":"2892:7:0","nodeType":"VariableDeclaration","scope":270,"src":"2885:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":232,"name":"uint80","nodeType":"ElementaryTypeName","src":"2885:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":235,"mutability":"mutable","name":"answer","nameLocation":"2920:6:0","nodeType":"VariableDeclaration","scope":270,"src":"2913:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":234,"name":"int256","nodeType":"ElementaryTypeName","src":"2913:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":270,"src":"2940:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2940:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"timestamp","nameLocation":"2985:9:0","nodeType":"VariableDeclaration","scope":270,"src":"2977:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":238,"name":"uint256","nodeType":"ElementaryTypeName","src":"2977:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":270,"src":"3008:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":240,"name":"uint80","nodeType":"ElementaryTypeName","src":"3008:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"2871:175:0"},"src":"2863:483:0"},{"block":{"id":273,"nodeType":"Block","src":"3353:139:0","statements":[{"expression":{"id":271,"name":"fluxResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"3469:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_FluxResponse_$24_memory_ptr","typeString":"struct FluxPriceFeed.FluxResponse memory"}},"functionReturnParameters":202,"id":272,"nodeType":"Return","src":"3462:19:0"}]},"errorName":"","id":274,"nodeType":"TryCatchClause","src":"3347:145:0"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":229,"name":"priceAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"2829:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_CLV2V3Interface_$1039","typeString":"contract CLV2V3Interface"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2845:15:0","memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":1084,"src":"2829:31:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2829:33:0","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"id":275,"nodeType":"TryStatement","src":"2825:667:0"}]},"id":277,"implemented":true,"kind":"function","modifiers":[],"name":"_getCurrentFluxResponse","nameLocation":"2168:23:0","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"_asset","nameLocation":"2200:6:0","nodeType":"VariableDeclaration","scope":277,"src":"2192:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"2192:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2191:16:0"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"fluxResponse","nameLocation":"2275:12:0","nodeType":"VariableDeclaration","scope":277,"src":"2255:32:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FluxResponse_$24_memory_ptr","typeString":"struct FluxPriceFeed.FluxResponse"},"typeName":{"id":200,"nodeType":"UserDefinedTypeName","pathNode":{"id":199,"name":"FluxResponse","nameLocations":["2255:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":24,"src":"2255:12:0"},"referencedDeclaration":24,"src":"2255:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_FluxResponse_$24_storage_ptr","typeString":"struct FluxPriceFeed.FluxResponse"}},"visibility":"internal"}],"src":"2254:34:0"},"scope":278,"src":"2159:1339:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":279,"src":"146:3354:0","usedErrors":[]}],"src":"31:3470:0"},"id":0},"src/InterestSwap.sol":{"ast":{"absolutePath":"src/InterestSwap.sol","exportedSymbols":{"IERC20":[4061],"IPriceFeed":[4080],"InterestSwap":[671],"PRBMathUD60x18":[3589],"PriceModel":[938]},"id":672,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":280,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:1"},{"absolutePath":"src/dependencies/prb-math/PRBMathUD60x18.sol","file":"./dependencies/prb-math/PRBMathUD60x18.sol","id":282,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":672,"sourceUnit":3590,"src":"58:74:1","symbolAliases":[{"foreign":{"id":281,"name":"PRBMathUD60x18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"66:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/interfaces/IPriceFeed.sol","file":"./interfaces/IPriceFeed.sol","id":284,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":672,"sourceUnit":4081,"src":"133:55:1","symbolAliases":[{"foreign":{"id":283,"name":"IPriceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"141:10:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/interfaces/IERC20.sol","file":"./interfaces/IERC20.sol","id":286,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":672,"sourceUnit":4062,"src":"189:47:1","symbolAliases":[{"foreign":{"id":285,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"197:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/PriceModel.sol","file":"./PriceModel.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":672,"sourceUnit":939,"src":"238:44:1","symbolAliases":[{"foreign":{"id":287,"name":"PriceModel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"246:10:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"InterestSwap","contractDependencies":[938],"contractKind":"contract","fullyImplemented":true,"id":671,"linearizedBaseContracts":[671],"name":"InterestSwap","nameLocation":"293:12:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":291,"libraryName":{"id":289,"name":"PRBMathUD60x18","nameLocations":["318:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":3589,"src":"318:14:1"},"nodeType":"UsingForDirective","src":"312:33:1","typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"337:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"741bef1a","id":294,"mutability":"mutable","name":"priceFeed","nameLocation":"369:9:1","nodeType":"VariableDeclaration","scope":671,"src":"351:27:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeed_$4080","typeString":"contract IPriceFeed"},"typeName":{"id":293,"nodeType":"UserDefinedTypeName","pathNode":{"id":292,"name":"IPriceFeed","nameLocations":["351:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":4080,"src":"351:10:1"},"referencedDeclaration":4080,"src":"351:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeed_$4080","typeString":"contract IPriceFeed"}},"visibility":"public"},{"constant":false,"functionSelector":"43cd8f7e","id":297,"mutability":"mutable","name":"liquidityToken","nameLocation":"399:14:1","nodeType":"VariableDeclaration","scope":671,"src":"385:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$4061","typeString":"contract IERC20"},"typeName":{"id":296,"nodeType":"UserDefinedTypeName","pathNode":{"id":295,"name":"IERC20","nameLocations":["385:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":4061,"src":"385:6:1"},"referencedDeclaration":4061,"src":"385:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$4061","typeString":"contract IERC20"}},"visibility":"public"},{"canonicalName":"InterestSwap.Pool","id":306,"members":[{"constant":false,"id":300,"mutability":"mutable","name":"acceptedTokens","nameLocation":"452:14:1","nodeType":"VariableDeclaration","scope":306,"src":"442:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"442:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":299,"nodeType":"ArrayTypeName","src":"442:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"totalLiquidity","nameLocation":"484:14:1","nodeType":"VariableDeclaration","scope":306,"src":"476:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"476:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":305,"mutability":"mutable","name":"priceModel","nameLocation":"519:10:1","nodeType":"VariableDeclaration","scope":306,"src":"508:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PriceModel_$938","typeString":"contract PriceModel"},"typeName":{"id":304,"nodeType":"UserDefinedTypeName","pathNode":{"id":303,"name":"PriceModel","nameLocations":["508:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":938,"src":"508:10:1"},"referencedDeclaration":938,"src":"508:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_PriceModel_$938","typeString":"contract PriceModel"}},"visibility":"internal"}],"name":"Pool","nameLocation":"427:4:1","nodeType":"StructDefinition","scope":671,"src":"420:116:1","visibility":"public"},{"canonicalName":"InterestSwap.Route","id":311,"members":[{"constant":false,"id":308,"mutability":"mutable","name":"poolOwner","nameLocation":"573:9:1","nodeType":"VariableDeclaration","scope":311,"src":"565:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"565:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":310,"mutability":"mutable","name":"poolIndex","nameLocation":"600:9:1","nodeType":"VariableDeclaration","scope":311,"src":"592:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Route","nameLocation":"549:5:1","nodeType":"StructDefinition","scope":671,"src":"542:74:1","visibility":"public"},{"constant":false,"id":317,"mutability":"mutable","name":"pools","nameLocation":"677:5:1","nodeType":"VariableDeclaration","scope":671,"src":"642:40:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Pool_$306_storage_$dyn_storage_$","typeString":"mapping(address => struct InterestSwap.Pool[])"},"typeName":{"id":316,"keyType":{"id":312,"name":"address","nodeType":"ElementaryTypeName","src":"650:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"642:26:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Pool_$306_storage_$dyn_storage_$","typeString":"mapping(address => struct InterestSwap.Pool[])"},"valueType":{"baseType":{"id":314,"nodeType":"UserDefinedTypeName","pathNode":{"id":313,"name":"Pool","nameLocations":["661:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"661:4:1"},"referencedDeclaration":306,"src":"661:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_storage_ptr","typeString":"struct InterestSwap.Pool"}},"id":315,"nodeType":"ArrayTypeName","src":"661:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$306_storage_$dyn_storage_ptr","typeString":"struct InterestSwap.Pool[]"}}},"visibility":"private"},{"constant":false,"functionSelector":"5b5a6300","id":325,"mutability":"mutable","name":"isAssetSupported","nameLocation":"822:16:1","nodeType":"VariableDeclaration","scope":671,"src":"742:96:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(address => bool)))"},"typeName":{"id":324,"keyType":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"750:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"742:64:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(address => bool)))"},"valueType":{"id":323,"keyType":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"761:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueType":{"id":322,"keyType":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"780:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":321,"name":"bool","nodeType":"ElementaryTypeName","src":"799:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}}},"visibility":"public"},{"constant":false,"functionSelector":"574b529b","id":328,"mutability":"mutable","name":"priceModels","nameLocation":"938:11:1","nodeType":"VariableDeclaration","scope":671,"src":"921:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":327,"nodeType":"ArrayTypeName","src":"921:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"91a1cd49a83a1d900c66ff806810753859aaceaf484951d6d544ded1b1d0ff68","id":339,"name":"PoolCreated","nameLocation":"962:11:1","nodeType":"EventDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"999:5:1","nodeType":"VariableDeclaration","scope":339,"src":"983:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"983:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":false,"mutability":"mutable","name":"acceptedTokens","nameLocation":"1024:14:1","nodeType":"VariableDeclaration","scope":339,"src":"1014:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1014:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":332,"nodeType":"ArrayTypeName","src":"1014:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":335,"indexed":false,"mutability":"mutable","name":"priceModel","nameLocation":"1056:10:1","nodeType":"VariableDeclaration","scope":339,"src":"1048:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":337,"indexed":false,"mutability":"mutable","name":"totalLiquidity","nameLocation":"1084:14:1","nodeType":"VariableDeclaration","scope":339,"src":"1076:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"1076:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:131:1"},"src":"956:149:1"},{"body":{"id":358,"nodeType":"Block","src":"1168:101:1","statements":[{"expression":{"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":346,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"1178:9:1","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeed_$4080","typeString":"contract IPriceFeed"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":348,"name":"_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"1201:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":347,"name":"IPriceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"1190:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPriceFeed_$4080_$","typeString":"type(contract IPriceFeed)"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1190:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeed_$4080","typeString":"contract IPriceFeed"}},"src":"1178:34:1","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeed_$4080","typeString":"contract IPriceFeed"}},"id":351,"nodeType":"ExpressionStatement","src":"1178:34:1"},{"expression":{"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":352,"name":"liquidityToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1222:14:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$4061","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":354,"name":"_liquidityToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"1246:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":353,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"1239:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$4061_$","typeString":"type(contract IERC20)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1239:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$4061","typeString":"contract IERC20"}},"src":"1222:40:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$4061","typeString":"contract IERC20"}},"id":357,"nodeType":"ExpressionStatement","src":"1222:40:1"}]},"id":359,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"_priceFeed","nameLocation":"1131:10:1","nodeType":"VariableDeclaration","scope":359,"src":"1123:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1123:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"_liquidityToken","nameLocation":"1151:15:1","nodeType":"VariableDeclaration","scope":359,"src":"1143:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1122:45:1"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[],"src":"1168:0:1"},"scope":671,"src":"1111:158:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":455,"nodeType":"Block","src":"1451:860:1","statements":[{"assignments":[374],"declarations":[{"constant":false,"id":374,"mutability":"mutable","name":"totalTokens","nameLocation":"1469:11:1","nodeType":"VariableDeclaration","scope":455,"src":"1461:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":373,"name":"uint256","nodeType":"ElementaryTypeName","src":"1461:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":377,"initialValue":{"expression":{"id":375,"name":"_acceptedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"1483:15:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1499:6:1","memberName":"length","nodeType":"MemberAccess","src":"1483:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1461:44:1"},{"assignments":[379],"declarations":[{"constant":false,"id":379,"mutability":"mutable","name":"newPoolIndex","nameLocation":"1523:12:1","nodeType":"VariableDeclaration","scope":455,"src":"1515:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1515:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":385,"initialValue":{"expression":{"baseExpression":{"id":380,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1538:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Pool_$306_storage_$dyn_storage_$","typeString":"mapping(address => struct InterestSwap.Pool storage ref[] storage ref)"}},"id":383,"indexExpression":{"expression":{"id":381,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1544:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1548:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1544:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1538:17:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$306_storage_$dyn_storage","typeString":"struct InterestSwap.Pool storage ref[] storage ref"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1556:6:1","memberName":"length","nodeType":"MemberAccess","src":"1538:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1515:47:1"},{"assignments":[387],"declarations":[{"constant":false,"id":387,"mutability":"mutable","name":"newPriceModel","nameLocation":"1581:13:1","nodeType":"VariableDeclaration","scope":455,"src":"1573:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"1573:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":391,"initialValue":{"arguments":[{"id":389,"name":"_dailyFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"1614:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":388,"name":"createPriceModel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"1597:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) returns (address)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1573:61:1"},{"expression":{"arguments":[{"arguments":[{"id":398,"name":"_acceptedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"1686:15:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":399,"name":"_initialLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"1703:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":401,"name":"newPriceModel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"1733:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":400,"name":"PriceModel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"1722:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceModel_$938_$","typeString":"type(contract PriceModel)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1722:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceModel_$938","typeString":"contract PriceModel"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_PriceModel_$938","typeString":"contract PriceModel"}],"id":397,"name":"Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"1681:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Pool_$306_storage_ptr_$","typeString":"type(struct InterestSwap.Pool storage pointer)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1681:67:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_memory_ptr","typeString":"struct InterestSwap.Pool memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$306_memory_ptr","typeString":"struct InterestSwap.Pool memory"}],"expression":{"baseExpression":{"id":392,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1645:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Pool_$306_storage_$dyn_storage_$","typeString":"mapping(address => struct InterestSwap.Pool storage ref[] storage ref)"}},"id":395,"indexExpression":{"expression":{"id":393,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1651:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1655:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1651:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1645:17:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$306_storage_$dyn_storage","typeString":"struct InterestSwap.Pool storage ref[] storage ref"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1663:4:1","memberName":"push","nodeType":"MemberAccess","src":"1645:22:1","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Pool_$306_storage_$dyn_storage_ptr_$_t_struct$_Pool_$306_storage_$returns$__$bound_to$_t_array$_t_struct$_Pool_$306_storage_$dyn_storage_ptr_$","typeString":"function (struct InterestSwap.Pool storage ref[] storage pointer,struct InterestSwap.Pool storage ref)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1645:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"1645:113:1"},{"body":{"id":429,"nodeType":"Block","src":"1811:124:1","statements":[{"expression":{"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":416,"name":"isAssetSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"1825:16:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(address => bool)))"}},"id":423,"indexExpression":{"expression":{"id":417,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1842:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1846:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1842:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1825:28:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":424,"indexExpression":{"id":419,"name":"newPoolIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"1854:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1825:42:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":425,"indexExpression":{"baseExpression":{"id":420,"name":"_acceptedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"1885:15:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":422,"indexExpression":{"id":421,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1901:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1885:18:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1825:92:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1920:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1825:99:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":428,"nodeType":"ExpressionStatement","src":"1825:99:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":410,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1789:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":411,"name":"totalTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"1793:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1789:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":430,"initializationExpression":{"assignments":[407],"declarations":[{"constant":false,"id":407,"mutability":"mutable","name":"i","nameLocation":"1782:1:1","nodeType":"VariableDeclaration","scope":430,"src":"1774:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1774:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":409,"initialValue":{"hexValue":"30","id":408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1786:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1774:13:1"},"loopExpression":{"expression":{"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1806:3:1","subExpression":{"id":413,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1806:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":415,"nodeType":"ExpressionStatement","src":"1806:3:1"},"nodeType":"ForStatement","src":"1769:166:1"},{"expression":{"arguments":[{"expression":{"id":434,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2031:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2035:6:1","memberName":"sender","nodeType":"MemberAccess","src":"2031:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":438,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2063:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_InterestSwap_$671","typeString":"contract InterestSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InterestSwap_$671","typeString":"contract InterestSwap"}],"id":437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2055:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"2055:7:1","typeDescriptions":{}}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2055:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":440,"name":"_initialLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"2082:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":431,"name":"liquidityToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1990:14:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$4061","typeString":"contract IERC20"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2005:12:1","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":4060,"src":"1990:27:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1990:119:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":442,"nodeType":"ExpressionStatement","src":"1990:119:1"},{"eventCall":{"arguments":[{"expression":{"id":444,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2150:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2154:6:1","memberName":"sender","nodeType":"MemberAccess","src":"2150:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":446,"name":"_acceptedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"2174:15:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":447,"name":"newPriceModel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"2203:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":448,"name":"_initialLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"2230:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":443,"name":"PoolCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"2125:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address[] memory,address,uint256)"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:132:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"EmitStatement","src":"2120:137:1"},{"expression":{"components":[{"id":451,"name":"newPoolIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2276:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":452,"name":"newPriceModel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"2290:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2275:29:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$","typeString":"tuple(uint256,address)"}},"functionReturnParameters":372,"id":454,"nodeType":"Return","src":"2268:36:1"}]},"functionSelector":"0a90d6ad","id":456,"implemented":true,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"1284:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"mutability":"mutable","name":"_acceptedTokens","nameLocation":"1321:15:1","nodeType":"VariableDeclaration","scope":456,"src":"1304:32:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"1304:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":361,"nodeType":"ArrayTypeName","src":"1304:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"_dailyFeePercentage","nameLocation":"1354:19:1","nodeType":"VariableDeclaration","scope":456,"src":"1346:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"1346:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"_initialLiquidity","nameLocation":"1391:17:1","nodeType":"VariableDeclaration","scope":456,"src":"1383:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1383:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1294:120:1"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":456,"src":"1433:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":368,"name":"uint256","nodeType":"ElementaryTypeName","src":"1433:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":456,"src":"1442:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"1442:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1432:18:1"},"scope":671,"src":"1275:1036:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":550,"nodeType":"Block","src":"2564:1023:1","statements":[{"expression":{"arguments":[{"baseExpression":{"baseExpression":{"baseExpression":{"id":475,"name":"isAssetSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"2648:16:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(address => bool)))"}},"id":478,"indexExpression":{"expression":{"id":476,"name":"route","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"2665:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Route_$311_memory_ptr","typeString":"struct InterestSwap.Route memory"}},"id":477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2671:9:1","memberName":"poolOwner","nodeType":"MemberAccess","referencedDeclaration":308,"src":"2665:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2648:33:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":481,"indexExpression":{"expression":{"id":479,"name":"route","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"2682:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Route_$311_memory_ptr","typeString":"struct InterestSwap.Route memory"}},"id":480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2688:9:1","memberName":"poolIndex","nodeType":"MemberAccess","referencedDeclaration":310,"src":"2682:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2648:50:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":483,"indexExpression":{"id":482,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"2699:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2648:58:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e737570706f72746564206173736574","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2720:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_44600962ecc58e3d7357a43883400403f194479f65246dca589e6d1b485101fb","typeString":"literal_string \"Unsupported asset\""},"value":"Unsupported asset"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_44600962ecc58e3d7357a43883400403f194479f65246dca589e6d1b485101fb","typeString":"literal_string \"Unsupported asset\""}],"id":474,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2627:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2627:122:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":486,"nodeType":"ExpressionStatement","src":"2627:122:1"},{"assignments":[488],"declarations":[{"constant":false,"id":488,"mutability":"mutable","name":"collateralPrice","nameLocation":"2768:15:1","nodeType":"VariableDeclaration","scope":550,"src":"2760:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"2760:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":493,"initialValue":{"arguments":[{"id":491,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"2810:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":489,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2786:9:1","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeed_$4080","typeString":"contract IPriceFeed"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2796:13:1","memberName":"getAssetPrice","nodeType":"MemberAccess","referencedDeclaration":4079,"src":"2786:23:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2786:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2760:57:1"},{"assignments":[495],"declarations":[{"constant":false,"id":495,"mutability":"mutable","name":"collateralValueinUSDC","nameLocation":"2835:21:1","nodeType":"VariableDeclaration","scope":550,"src":"2827:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":494,"name":"uint256","nodeType":"ElementaryTypeName","src":"2827:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":500,"initialValue":{"arguments":[{"id":498,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"2879:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":496,"name":"collateralPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"2859:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2875:3:1","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3422,"src":"2859:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2859:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2827:60:1"},{"assignments":[503],"declarations":[{"constant":false,"id":503,"mutability":"mutable","name":"poolReference","nameLocation":"2911:13:1","nodeType":"VariableDeclaration","scope":550,"src":"2898:26:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_storage_ptr","typeString":"struct InterestSwap.Pool"},"typeName":{"id":502,"nodeType":"UserDefinedTypeName","pathNode":{"id":501,"name":"Pool","nameLocations":["2898:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"2898:4:1"},"referencedDeclaration":306,"src":"2898:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_storage_ptr","typeString":"struct InterestSwap.Pool"}},"visibility":"internal"}],"id":511,"initialValue":{"baseExpression":{"baseExpression":{"id":504,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2927:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Pool_$306_storage_$dyn_storage_$","typeString":"mapping(address => struct InterestSwap.Pool storage ref[] storage ref)"}},"id":507,"indexExpression":{"expression":{"id":505,"name":"route","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"2933:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Route_$311_memory_ptr","typeString":"struct InterestSwap.Route memory"}},"id":506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2939:9:1","memberName":"poolOwner","nodeType":"MemberAccess","referencedDeclaration":308,"src":"2933:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2927:22:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$306_storage_$dyn_storage","typeString":"struct InterestSwap.Pool storage ref[] storage ref"}},"id":510,"indexExpression":{"expression":{"id":508,"name":"route","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"2950:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Route_$311_memory_ptr","typeString":"struct InterestSwap.Route memory"}},"id":509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2956:9:1","memberName":"poolIndex","nodeType":"MemberAccess","referencedDeclaration":310,"src":"2950:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2927:39:1","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_storage","typeString":"struct InterestSwap.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2898:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":513,"name":"collateralValueinUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"2997:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":514,"name":"poolReference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3022:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_storage_ptr","typeString":"struct InterestSwap.Pool storage pointer"}},"id":515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3036:14:1","memberName":"totalLiquidity","nodeType":"MemberAccess","referencedDeclaration":302,"src":"3022:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2997:53:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f756768206c697175696469747920696e2074686520706f6f6c","id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3064:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c725d7d0f4865d029c8848def0aef589f9ba45f338bc9706865a5c8377e5e52","typeString":"literal_string \"Not enough liquidity in the pool\""},"value":"Not enough liquidity in the pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5c725d7d0f4865d029c8848def0aef589f9ba45f338bc9706865a5c8377e5e52","typeString":"literal_string \"Not enough liquidity in the pool\""}],"id":512,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2976:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2976:132:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"ExpressionStatement","src":"2976:132:1"},{"assignments":[521],"declarations":[{"constant":false,"id":521,"mutability":"mutable","name":"assetPercentageToCharge","nameLocation":"3127:23:1","nodeType":"VariableDeclaration","scope":550,"src":"3119:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"3119:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":528,"initialValue":{"arguments":[{"id":525,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"3197:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":526,"name":"_daysTerm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"3218:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":522,"name":"poolReference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3153:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_storage_ptr","typeString":"struct InterestSwap.Pool storage pointer"}},"id":523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3167:10:1","memberName":"priceModel","nodeType":"MemberAccess","referencedDeclaration":305,"src":"3153:24:1","typeDescriptions":{"typeIdentifier":"t_contract$_PriceModel_$938","typeString":"contract PriceModel"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3178:5:1","memberName":"quote","nodeType":"MemberAccess","referencedDeclaration":937,"src":"3153:30:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view external returns (uint256)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3153:84:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3119:118:1"},{"assignments":[530],"declarations":[{"constant":false,"id":530,"mutability":"mutable","name":"amounToBeSent","nameLocation":"3334:13:1","nodeType":"VariableDeclaration","scope":550,"src":"3326:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":534,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":531,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"3350:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":532,"name":"assetPercentageToCharge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"3360:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3350:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3326:57:1"},{"assignments":[536],"declarations":[{"constant":false,"id":536,"mutability":"mutable","name":"amounToBeSentInUSDC","nameLocation":"3401:19:1","nodeType":"VariableDeclaration","scope":550,"src":"3393:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"3393:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":544,"initialValue":{"arguments":[{"id":542,"name":"collateralPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"3476:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":537,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"3424:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":538,"name":"assetPercentageToCharge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"3434:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3424:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3423:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3459:3:1","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3422,"src":"3423:39:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3423:78:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3393:108:1"},{"expression":{"components":[{"id":545,"name":"assetPercentageToCharge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"3520:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":546,"name":"amounToBeSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3545:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":547,"name":"amounToBeSentInUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"3560:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3519:61:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"functionReturnParameters":473,"id":549,"nodeType":"Return","src":"3512:68:1"}]},"functionSelector":"6c61b615","id":551,"implemented":true,"kind":"function","modifiers":[],"name":"quote","nameLocation":"2326:5:1","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"_asset","nameLocation":"2349:6:1","nodeType":"VariableDeclaration","scope":551,"src":"2341:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":457,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":460,"mutability":"mutable","name":"_amount","nameLocation":"2373:7:1","nodeType":"VariableDeclaration","scope":551,"src":"2365:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":459,"name":"uint256","nodeType":"ElementaryTypeName","src":"2365:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"_daysTerm","nameLocation":"2398:9:1","nodeType":"VariableDeclaration","scope":551,"src":"2390:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"2390:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"route","nameLocation":"2430:5:1","nodeType":"VariableDeclaration","scope":551,"src":"2417:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Route_$311_memory_ptr","typeString":"struct InterestSwap.Route"},"typeName":{"id":464,"nodeType":"UserDefinedTypeName","pathNode":{"id":463,"name":"Route","nameLocations":["2417:5:1"],"nodeType":"IdentifierPath","referencedDeclaration":311,"src":"2417:5:1"},"referencedDeclaration":311,"src":"2417:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Route_$311_storage_ptr","typeString":"struct InterestSwap.Route"}},"visibility":"internal"}],"src":"2331:110:1"},"returnParameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":551,"src":"2500:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":551,"src":"2521:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":469,"name":"uint256","nodeType":"ElementaryTypeName","src":"2521:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":551,"src":"2542:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":471,"name":"uint256","nodeType":"ElementaryTypeName","src":"2542:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2486:73:1"},"scope":671,"src":"2317:1270:1","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":608,"nodeType":"Block","src":"3744:472:1","statements":[{"assignments":[null,null,566],"declarations":[null,null,{"constant":false,"id":566,"mutability":"mutable","name":"amounToBeSentInUSDC","nameLocation":"3767:19:1","nodeType":"VariableDeclaration","scope":608,"src":"3759:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint256","nodeType":"ElementaryTypeName","src":"3759:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":573,"initialValue":{"arguments":[{"id":568,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"3809:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":569,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"3829:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":570,"name":"_daysTerm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"3850:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":571,"name":"route","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"3873:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Route_$311_memory_ptr","typeString":"struct InterestSwap.Route memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Route_$311_memory_ptr","typeString":"struct InterestSwap.Route memory"}],"id":567,"name":"quote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"3790:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_struct$_Route_$311_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (address,uint256,uint256,struct InterestSwap.Route memory) view returns (uint256,uint256,uint256)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3790:98:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3754:134:1"},{"expression":{"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":574,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"3899:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Pool_$306_storage_$dyn_storage_$","typeString":"mapping(address => struct InterestSwap.Pool storage ref[] storage ref)"}},"id":579,"indexExpression":{"expression":{"id":575,"name":"route","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"3905:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Route_$311_memory_ptr","typeString":"struct InterestSwap.Route memory"}},"id":576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3911:9:1","memberName":"poolOwner","nodeType":"MemberAccess","referencedDeclaration":308,"src":"3905:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3899:22:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$306_storage_$dyn_storage","typeString":"struct InterestSwap.Pool storage ref[] storage ref"}},"id":580,"indexExpression":{"expression":{"id":577,"name":"route","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"3922:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Route_$311_memory_ptr","typeString":"struct InterestSwap.Route memory"}},"id":578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3928:9:1","memberName":"poolIndex","nodeType":"MemberAccess","referencedDeclaration":310,"src":"3922:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3899:39:1","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_storage","typeString":"struct InterestSwap.Pool storage ref"}},"id":581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3952:14:1","memberName":"totalLiquidity","nodeType":"MemberAccess","referencedDeclaration":302,"src":"3899:67:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":582,"name":"amounToBeSentInUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"3970:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3899:90:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":584,"nodeType":"ExpressionStatement","src":"3899:90:1"},{"expression":{"arguments":[{"expression":{"id":589,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4071:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4075:6:1","memberName":"sender","nodeType":"MemberAccess","src":"4071:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":593,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4091:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_InterestSwap_$671","typeString":"contract InterestSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InterestSwap_$671","typeString":"contract InterestSwap"}],"id":592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4083:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"4083:7:1","typeDescriptions":{}}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4083:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"4098:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":586,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"4050:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":585,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"4043:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$4061_$","typeString":"type(contract IERC20)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$4061","typeString":"contract IERC20"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4058:12:1","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":4060,"src":"4043:27:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":597,"nodeType":"ExpressionStatement","src":"4043:63:1"},{"expression":{"arguments":[{"expression":{"id":601,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4140:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4144:6:1","memberName":"sender","nodeType":"MemberAccess","src":"4140:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":603,"name":"amounToBeSentInUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"4152:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":598,"name":"liquidityToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"4116:14:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$4061","typeString":"contract IERC20"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4131:8:1","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":4049,"src":"4116:23:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4116:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":605,"nodeType":"ExpressionStatement","src":"4116:56:1"},{"expression":{"id":606,"name":"amounToBeSentInUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"4190:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":564,"id":607,"nodeType":"Return","src":"4183:26:1"}]},"functionSelector":"0658c489","id":609,"implemented":true,"kind":"function","modifiers":[],"name":"swap","nameLocation":"3602:4:1","nodeType":"FunctionDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"_asset","nameLocation":"3624:6:1","nodeType":"VariableDeclaration","scope":609,"src":"3616:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"3616:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":555,"mutability":"mutable","name":"_amount","nameLocation":"3648:7:1","nodeType":"VariableDeclaration","scope":609,"src":"3640:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":557,"mutability":"mutable","name":"_daysTerm","nameLocation":"3673:9:1","nodeType":"VariableDeclaration","scope":609,"src":"3665:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":556,"name":"uint256","nodeType":"ElementaryTypeName","src":"3665:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"route","nameLocation":"3705:5:1","nodeType":"VariableDeclaration","scope":609,"src":"3692:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Route_$311_memory_ptr","typeString":"struct InterestSwap.Route"},"typeName":{"id":559,"nodeType":"UserDefinedTypeName","pathNode":{"id":558,"name":"Route","nameLocations":["3692:5:1"],"nodeType":"IdentifierPath","referencedDeclaration":311,"src":"3692:5:1"},"referencedDeclaration":311,"src":"3692:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Route_$311_storage_ptr","typeString":"struct InterestSwap.Route"}},"visibility":"internal"}],"src":"3606:110:1"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":609,"src":"3735:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":562,"name":"uint256","nodeType":"ElementaryTypeName","src":"3735:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3734:9:1"},"scope":671,"src":"3593:623:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":639,"nodeType":"Block","src":"4324:168:1","statements":[{"assignments":[618],"declarations":[{"constant":false,"id":618,"mutability":"mutable","name":"newPriceModel","nameLocation":"4345:13:1","nodeType":"VariableDeclaration","scope":639,"src":"4334:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PriceModel_$938","typeString":"contract PriceModel"},"typeName":{"id":617,"nodeType":"UserDefinedTypeName","pathNode":{"id":616,"name":"PriceModel","nameLocations":["4334:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":938,"src":"4334:10:1"},"referencedDeclaration":938,"src":"4334:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_PriceModel_$938","typeString":"contract PriceModel"}},"visibility":"internal"}],"id":624,"initialValue":{"arguments":[{"id":622,"name":"_dailyFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"4376:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"4361:14:1","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_PriceModel_$938_$","typeString":"function (uint256) returns (contract PriceModel)"},"typeName":{"id":620,"nodeType":"UserDefinedTypeName","pathNode":{"id":619,"name":"PriceModel","nameLocations":["4365:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":938,"src":"4365:10:1"},"referencedDeclaration":938,"src":"4365:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_PriceModel_$938","typeString":"contract PriceModel"}}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4361:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceModel_$938","typeString":"contract PriceModel"}},"nodeType":"VariableDeclarationStatement","src":"4334:62:1"},{"expression":{"arguments":[{"arguments":[{"id":630,"name":"newPriceModel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"4431:13:1","typeDescriptions":{"typeIdentifier":"t_contract$_PriceModel_$938","typeString":"contract PriceModel"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PriceModel_$938","typeString":"contract PriceModel"}],"id":629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4423:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"4423:7:1","typeDescriptions":{}}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4423:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":625,"name":"priceModels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"4406:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4418:4:1","memberName":"push","nodeType":"MemberAccess","src":"4406:16:1","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4406:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":633,"nodeType":"ExpressionStatement","src":"4406:40:1"},{"expression":{"arguments":[{"id":636,"name":"newPriceModel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"4471:13:1","typeDescriptions":{"typeIdentifier":"t_contract$_PriceModel_$938","typeString":"contract PriceModel"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PriceModel_$938","typeString":"contract PriceModel"}],"id":635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4463:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"4463:7:1","typeDescriptions":{}}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4463:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":615,"id":638,"nodeType":"Return","src":"4456:29:1"}]},"id":640,"implemented":true,"kind":"function","modifiers":[],"name":"createPriceModel","nameLocation":"4231:16:1","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"_dailyFeePercentage","nameLocation":"4256:19:1","nodeType":"VariableDeclaration","scope":640,"src":"4248:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"4248:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4247:29:1"},"returnParameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":640,"src":"4311:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"4311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4310:9:1"},"scope":671,"src":"4222:270:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":656,"nodeType":"Block","src":"4608:42:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":650,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"4625:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Pool_$306_storage_$dyn_storage_$","typeString":"mapping(address => struct InterestSwap.Pool storage ref[] storage ref)"}},"id":652,"indexExpression":{"id":651,"name":"_lp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"4631:3:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4625:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$306_storage_$dyn_storage","typeString":"struct InterestSwap.Pool storage ref[] storage ref"}},"id":654,"indexExpression":{"id":653,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4636:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4625:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_storage","typeString":"struct InterestSwap.Pool storage ref"}},"functionReturnParameters":649,"id":655,"nodeType":"Return","src":"4618:25:1"}]},"functionSelector":"5b5b9ea2","id":657,"implemented":true,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"4507:7:1","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"_lp","nameLocation":"4523:3:1","nodeType":"VariableDeclaration","scope":657,"src":"4515:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"4515:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"_index","nameLocation":"4536:6:1","nodeType":"VariableDeclaration","scope":657,"src":"4528:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"4528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4514:29:1"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":657,"src":"4591:11:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_memory_ptr","typeString":"struct InterestSwap.Pool"},"typeName":{"id":647,"nodeType":"UserDefinedTypeName","pathNode":{"id":646,"name":"Pool","nameLocations":["4591:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"4591:4:1"},"referencedDeclaration":306,"src":"4591:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_storage_ptr","typeString":"struct InterestSwap.Pool"}},"visibility":"internal"}],"src":"4590:13:1"},"scope":671,"src":"4498:152:1","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":669,"nodeType":"Block","src":"4728:41:1","statements":[{"expression":{"expression":{"baseExpression":{"id":664,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"4745:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Pool_$306_storage_$dyn_storage_$","typeString":"mapping(address => struct InterestSwap.Pool storage ref[] storage ref)"}},"id":666,"indexExpression":{"id":665,"name":"_lp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"4751:3:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4745:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$306_storage_$dyn_storage","typeString":"struct InterestSwap.Pool storage ref[] storage ref"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4756:6:1","memberName":"length","nodeType":"MemberAccess","src":"4745:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":663,"id":668,"nodeType":"Return","src":"4738:24:1"}]},"functionSelector":"387dd500","id":670,"implemented":true,"kind":"function","modifiers":[],"name":"getUserTotalPools","nameLocation":"4665:17:1","nodeType":"FunctionDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"_lp","nameLocation":"4691:3:1","nodeType":"VariableDeclaration","scope":670,"src":"4683:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"4683:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4682:13:1"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":670,"src":"4719:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"4719:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4718:9:1"},"scope":671,"src":"4656:113:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":672,"src":"284:4487:1","usedErrors":[1092]}],"src":"32:4740:1"},"id":1},"src/InterestSwapPeriphery.sol":{"ast":{"absolutePath":"src/InterestSwapPeriphery.sol","exportedSymbols":{"IERC20":[4061],"InterestSwap":[671],"InterestSwapPeriphery":[891]},"id":892,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":673,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:2"},{"absolutePath":"src/interfaces/IERC20.sol","file":"./interfaces/IERC20.sol","id":675,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":892,"sourceUnit":4062,"src":"58:47:2","symbolAliases":[{"foreign":{"id":674,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"66:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/InterestSwap.sol","file":"./InterestSwap.sol","id":677,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":892,"sourceUnit":672,"src":"106:48:2","symbolAliases":[{"foreign":{"id":676,"name":"InterestSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"114:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"InterestSwapPeriphery","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":891,"linearizedBaseContracts":[891],"name":"InterestSwapPeriphery","nameLocation":"165:21:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"5ff9d06f","id":680,"mutability":"mutable","name":"interestSwap","nameLocation":"213:12:2","nodeType":"VariableDeclaration","scope":891,"src":"193:32:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_InterestSwap_$671","typeString":"contract InterestSwap"},"typeName":{"id":679,"nodeType":"UserDefinedTypeName","pathNode":{"id":678,"name":"InterestSwap","nameLocations":["193:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"193:12:2"},"referencedDeclaration":671,"src":"193:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_InterestSwap_$671","typeString":"contract InterestSwap"}},"visibility":"public"},{"canonicalName":"InterestSwapPeriphery.TokenInfo","id":689,"members":[{"constant":false,"id":682,"mutability":"mutable","name":"decimals","nameLocation":"265:8:2","nodeType":"VariableDeclaration","scope":689,"src":"259:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":681,"name":"uint8","nodeType":"ElementaryTypeName","src":"259:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"name","nameLocation":"290:4:2","nodeType":"VariableDeclaration","scope":689,"src":"283:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":683,"name":"string","nodeType":"ElementaryTypeName","src":"283:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":686,"mutability":"mutable","name":"symbol","nameLocation":"311:6:2","nodeType":"VariableDeclaration","scope":689,"src":"304:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":685,"name":"string","nodeType":"ElementaryTypeName","src":"304:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":688,"mutability":"mutable","name":"tokenAddress","nameLocation":"335:12:2","nodeType":"VariableDeclaration","scope":689,"src":"327:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":687,"name":"address","nodeType":"ElementaryTypeName","src":"327:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"TokenInfo","nameLocation":"239:9:2","nodeType":"StructDefinition","scope":891,"src":"232:122:2","visibility":"public"},{"canonicalName":"InterestSwapPeriphery.PoolInfo","id":701,"members":[{"constant":false,"id":691,"mutability":"mutable","name":"priceModel","nameLocation":"394:10:2","nodeType":"VariableDeclaration","scope":701,"src":"386:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"386:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"liquidityToken","nameLocation":"424:14:2","nodeType":"VariableDeclaration","scope":701,"src":"414:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$689_storage_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo"},"typeName":{"id":693,"nodeType":"UserDefinedTypeName","pathNode":{"id":692,"name":"TokenInfo","nameLocations":["414:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"414:9:2"},"referencedDeclaration":689,"src":"414:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$689_storage_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo"}},"visibility":"internal"},{"constant":false,"id":698,"mutability":"mutable","name":"acceptedTokens","nameLocation":"460:14:2","nodeType":"VariableDeclaration","scope":701,"src":"448:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$689_storage_$dyn_storage_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo[]"},"typeName":{"baseType":{"id":696,"nodeType":"UserDefinedTypeName","pathNode":{"id":695,"name":"TokenInfo","nameLocations":["448:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"448:9:2"},"referencedDeclaration":689,"src":"448:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$689_storage_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo"}},"id":697,"nodeType":"ArrayTypeName","src":"448:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$689_storage_$dyn_storage_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo[]"}},"visibility":"internal"},{"constant":false,"id":700,"mutability":"mutable","name":"totalLiquidity","nameLocation":"492:14:2","nodeType":"VariableDeclaration","scope":701,"src":"484:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolInfo","nameLocation":"367:8:2","nodeType":"StructDefinition","scope":891,"src":"360:153:2","visibility":"public"},{"body":{"id":712,"nodeType":"Block","src":"554:59:2","statements":[{"expression":{"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":706,"name":"interestSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"564:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_InterestSwap_$671","typeString":"contract InterestSwap"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":708,"name":"_interestSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"592:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":707,"name":"InterestSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"579:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_InterestSwap_$671_$","typeString":"type(contract InterestSwap)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"579:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_InterestSwap_$671","typeString":"contract InterestSwap"}},"src":"564:42:2","typeDescriptions":{"typeIdentifier":"t_contract$_InterestSwap_$671","typeString":"contract InterestSwap"}},"id":711,"nodeType":"ExpressionStatement","src":"564:42:2"}]},"id":713,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"_interestSwap","nameLocation":"539:13:2","nodeType":"VariableDeclaration","scope":713,"src":"531:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"531:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"530:23:2"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[],"src":"554:0:2"},"scope":891,"src":"519:94:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":764,"nodeType":"Block","src":"692:264:2","statements":[{"assignments":[723],"declarations":[{"constant":false,"id":723,"mutability":"mutable","name":"totalPools","nameLocation":"710:10:2","nodeType":"VariableDeclaration","scope":764,"src":"702:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"702:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":728,"initialValue":{"arguments":[{"id":726,"name":"_lp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"754:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":724,"name":"interestSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"723:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_InterestSwap_$671","typeString":"contract InterestSwap"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"736:17:2","memberName":"getUserTotalPools","nodeType":"MemberAccess","referencedDeclaration":670,"src":"723:30:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"723:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"702:56:2"},{"assignments":[733],"declarations":[{"constant":false,"id":733,"mutability":"mutable","name":"result","nameLocation":"787:6:2","nodeType":"VariableDeclaration","scope":764,"src":"769:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo[]"},"typeName":{"baseType":{"id":731,"nodeType":"UserDefinedTypeName","pathNode":{"id":730,"name":"PoolInfo","nameLocations":["769:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"769:8:2"},"referencedDeclaration":701,"src":"769:8:2","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$701_storage_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo"}},"id":732,"nodeType":"ArrayTypeName","src":"769:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$701_storage_$dyn_storage_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo[]"}},"visibility":"internal"}],"id":740,"initialValue":{"arguments":[{"id":738,"name":"totalPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"811:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"796:14:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct InterestSwapPeriphery.PoolInfo memory[] memory)"},"typeName":{"baseType":{"id":735,"nodeType":"UserDefinedTypeName","pathNode":{"id":734,"name":"PoolInfo","nameLocations":["800:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"800:8:2"},"referencedDeclaration":701,"src":"800:8:2","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$701_storage_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo"}},"id":736,"nodeType":"ArrayTypeName","src":"800:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$701_storage_$dyn_storage_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo[]"}}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"796:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"769:53:2"},{"body":{"id":760,"nodeType":"Block","src":"874:52:2","statements":[{"expression":{"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":751,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"888:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo memory[] memory"}},"id":753,"indexExpression":{"id":752,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"895:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"888:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$701_memory_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":755,"name":"_lp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"908:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":756,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"913:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":754,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"900:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_struct$_PoolInfo_$701_memory_ptr_$","typeString":"function (address,uint256) view returns (struct InterestSwapPeriphery.PoolInfo memory)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"900:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$701_memory_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo memory"}},"src":"888:27:2","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$701_memory_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo memory"}},"id":759,"nodeType":"ExpressionStatement","src":"888:27:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":745,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"853:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":746,"name":"totalPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"857:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"853:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":761,"initializationExpression":{"assignments":[742],"declarations":[{"constant":false,"id":742,"mutability":"mutable","name":"i","nameLocation":"846:1:2","nodeType":"VariableDeclaration","scope":761,"src":"838:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint256","nodeType":"ElementaryTypeName","src":"838:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":744,"initialValue":{"hexValue":"30","id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"850:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"838:13:2"},"loopExpression":{"expression":{"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"869:3:2","subExpression":{"id":748,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"869:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":750,"nodeType":"ExpressionStatement","src":"869:3:2"},"nodeType":"ForStatement","src":"833:93:2"},{"expression":{"id":762,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"943:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo memory[] memory"}},"functionReturnParameters":721,"id":763,"nodeType":"Return","src":"936:13:2"}]},"functionSelector":"5c39f467","id":765,"implemented":true,"kind":"function","modifiers":[],"name":"getPools","nameLocation":"628:8:2","nodeType":"FunctionDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"_lp","nameLocation":"645:3:2","nodeType":"VariableDeclaration","scope":765,"src":"637:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"636:13:2"},"returnParameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":765,"src":"673:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo[]"},"typeName":{"baseType":{"id":718,"nodeType":"UserDefinedTypeName","pathNode":{"id":717,"name":"PoolInfo","nameLocations":["673:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"673:8:2"},"referencedDeclaration":701,"src":"673:8:2","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$701_storage_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo"}},"id":719,"nodeType":"ArrayTypeName","src":"673:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$701_storage_$dyn_storage_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo[]"}},"visibility":"internal"}],"src":"672:19:2"},"scope":891,"src":"619:337:2","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":808,"nodeType":"Block","src":"1074:335:2","statements":[{"assignments":[779],"declarations":[{"constant":false,"id":779,"mutability":"mutable","name":"pool","nameLocation":"1109:4:2","nodeType":"VariableDeclaration","scope":808,"src":"1084:29:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_memory_ptr","typeString":"struct InterestSwap.Pool"},"typeName":{"id":778,"nodeType":"UserDefinedTypeName","pathNode":{"id":777,"name":"InterestSwap.Pool","nameLocations":["1084:12:2","1097:4:2"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"1084:17:2"},"referencedDeclaration":306,"src":"1084:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_storage_ptr","typeString":"struct InterestSwap.Pool"}},"visibility":"internal"}],"id":785,"initialValue":{"arguments":[{"id":782,"name":"_lp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"1137:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":783,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"1142:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":780,"name":"interestSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"1116:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_InterestSwap_$671","typeString":"contract InterestSwap"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1129:7:2","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":657,"src":"1116:20:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_struct$_Pool_$306_memory_ptr_$","typeString":"function (address,uint256) view external returns (struct InterestSwap.Pool memory)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1116:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_memory_ptr","typeString":"struct InterestSwap.Pool memory"}},"nodeType":"VariableDeclarationStatement","src":"1084:65:2"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":789,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"1213:4:2","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_memory_ptr","typeString":"struct InterestSwap.Pool memory"}},"id":790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1218:10:2","memberName":"priceModel","nodeType":"MemberAccess","referencedDeclaration":305,"src":"1213:15:2","typeDescriptions":{"typeIdentifier":"t_contract$_PriceModel_$938","typeString":"contract PriceModel"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PriceModel_$938","typeString":"contract PriceModel"}],"id":788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1205:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"1205:7:2","typeDescriptions":{}}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1205:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":795,"name":"interestSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"1268:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_InterestSwap_$671","typeString":"contract InterestSwap"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1281:14:2","memberName":"liquidityToken","nodeType":"MemberAccess","referencedDeclaration":297,"src":"1268:27:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IERC20_$4061_$","typeString":"function () view external returns (contract IERC20)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1268:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$4061","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$4061","typeString":"contract IERC20"}],"id":794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1260:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:2","typeDescriptions":{}}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1260:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":792,"name":"getTokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"1247:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_TokenInfo_$689_memory_ptr_$","typeString":"function (address) view returns (struct InterestSwapPeriphery.TokenInfo memory)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1247:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$689_memory_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo memory"}},{"arguments":[{"expression":{"id":801,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"1331:4:2","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_memory_ptr","typeString":"struct InterestSwap.Pool memory"}},"id":802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1336:14:2","memberName":"acceptedTokens","nodeType":"MemberAccess","referencedDeclaration":300,"src":"1331:19:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":800,"name":"getTokensInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"1317:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr_$","typeString":"function (address[] memory) view returns (struct InterestSwapPeriphery.TokenInfo memory[] memory)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1317:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo memory[] memory"}},{"expression":{"id":804,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"1369:4:2","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$306_memory_ptr","typeString":"struct InterestSwap.Pool memory"}},"id":805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1374:14:2","memberName":"totalLiquidity","nodeType":"MemberAccess","referencedDeclaration":302,"src":"1369:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_TokenInfo_$689_memory_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo memory"},{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo memory[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":786,"name":"PoolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"1179:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PoolInfo_$701_storage_ptr_$","typeString":"type(struct InterestSwapPeriphery.PoolInfo storage pointer)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1179:223:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$701_memory_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo memory"}},"functionReturnParameters":774,"id":807,"nodeType":"Return","src":"1160:242:2"}]},"functionSelector":"5b5b9ea2","id":809,"implemented":true,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"971:7:2","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"_lp","nameLocation":"987:3:2","nodeType":"VariableDeclaration","scope":809,"src":"979:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"_index","nameLocation":"1000:6:2","nodeType":"VariableDeclaration","scope":809,"src":"992:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"992:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"978:29:2"},"returnParameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":809,"src":"1053:15:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$701_memory_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo"},"typeName":{"id":772,"nodeType":"UserDefinedTypeName","pathNode":{"id":771,"name":"PoolInfo","nameLocations":["1053:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"1053:8:2"},"referencedDeclaration":701,"src":"1053:8:2","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$701_storage_ptr","typeString":"struct InterestSwapPeriphery.PoolInfo"}},"visibility":"internal"}],"src":"1052:17:2"},"scope":891,"src":"962:447:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":837,"nodeType":"Block","src":"1529:232:2","statements":[{"assignments":[819],"declarations":[{"constant":false,"id":819,"mutability":"mutable","name":"token","nameLocation":"1546:5:2","nodeType":"VariableDeclaration","scope":837,"src":"1539:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$4061","typeString":"contract IERC20"},"typeName":{"id":818,"nodeType":"UserDefinedTypeName","pathNode":{"id":817,"name":"IERC20","nameLocations":["1539:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":4061,"src":"1539:6:2"},"referencedDeclaration":4061,"src":"1539:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$4061","typeString":"contract IERC20"}},"visibility":"internal"}],"id":823,"initialValue":{"arguments":[{"id":821,"name":"_tokenToCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"1561:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":820,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"1554:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$4061_$","typeString":"type(contract IERC20)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1554:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$4061","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"1539:36:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":825,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"1631:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$4061","typeString":"contract IERC20"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1637:8:2","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":4010,"src":"1631:14:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1631:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":828,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"1665:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$4061","typeString":"contract IERC20"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1671:4:2","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":4000,"src":"1665:10:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view external returns (string memory)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1665:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":831,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"1695:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$4061","typeString":"contract IERC20"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1701:6:2","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":4005,"src":"1695:12:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view external returns (string memory)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1695:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":834,"name":"_tokenToCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"1727:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":824,"name":"TokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"1604:9:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TokenInfo_$689_storage_ptr_$","typeString":"type(struct InterestSwapPeriphery.TokenInfo storage pointer)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1604:150:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$689_memory_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo memory"}},"functionReturnParameters":816,"id":836,"nodeType":"Return","src":"1585:169:2"}]},"id":838,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenInfo","nameLocation":"1424:12:2","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"_tokenToCheck","nameLocation":"1445:13:2","nodeType":"VariableDeclaration","scope":838,"src":"1437:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"1437:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1436:23:2"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":838,"src":"1507:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$689_memory_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo"},"typeName":{"id":814,"nodeType":"UserDefinedTypeName","pathNode":{"id":813,"name":"TokenInfo","nameLocations":["1507:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"1507:9:2"},"referencedDeclaration":689,"src":"1507:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$689_storage_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo"}},"visibility":"internal"}],"src":"1506:18:2"},"scope":891,"src":"1415:346:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":889,"nodeType":"Block","src":"1893:266:2","statements":[{"assignments":[849],"declarations":[{"constant":false,"id":849,"mutability":"mutable","name":"totalTokens","nameLocation":"1911:11:2","nodeType":"VariableDeclaration","scope":889,"src":"1903:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"1903:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":852,"initialValue":{"expression":{"id":850,"name":"_tokenToCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"1925:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1939:6:2","memberName":"length","nodeType":"MemberAccess","src":"1925:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1903:42:2"},{"assignments":[857],"declarations":[{"constant":false,"id":857,"mutability":"mutable","name":"result","nameLocation":"1974:6:2","nodeType":"VariableDeclaration","scope":889,"src":"1955:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo[]"},"typeName":{"baseType":{"id":855,"nodeType":"UserDefinedTypeName","pathNode":{"id":854,"name":"TokenInfo","nameLocations":["1955:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"1955:9:2"},"referencedDeclaration":689,"src":"1955:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$689_storage_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo"}},"id":856,"nodeType":"ArrayTypeName","src":"1955:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$689_storage_$dyn_storage_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo[]"}},"visibility":"internal"}],"id":864,"initialValue":{"arguments":[{"id":862,"name":"totalTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"1999:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1983:15:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct InterestSwapPeriphery.TokenInfo memory[] memory)"},"typeName":{"baseType":{"id":859,"nodeType":"UserDefinedTypeName","pathNode":{"id":858,"name":"TokenInfo","nameLocations":["1987:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"1987:9:2"},"referencedDeclaration":689,"src":"1987:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$689_storage_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo"}},"id":860,"nodeType":"ArrayTypeName","src":"1987:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$689_storage_$dyn_storage_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo[]"}}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1983:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1955:56:2"},{"body":{"id":885,"nodeType":"Block","src":"2063:67:2","statements":[{"expression":{"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":875,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"2077:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo memory[] memory"}},"id":877,"indexExpression":{"id":876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2084:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2077:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$689_memory_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":879,"name":"_tokenToCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"2102:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":881,"indexExpression":{"id":880,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2116:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2102:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":878,"name":"getTokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"2089:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_TokenInfo_$689_memory_ptr_$","typeString":"function (address) view returns (struct InterestSwapPeriphery.TokenInfo memory)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2089:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$689_memory_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo memory"}},"src":"2077:42:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$689_memory_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo memory"}},"id":884,"nodeType":"ExpressionStatement","src":"2077:42:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":869,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2041:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":870,"name":"totalTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"2045:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2041:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":886,"initializationExpression":{"assignments":[866],"declarations":[{"constant":false,"id":866,"mutability":"mutable","name":"i","nameLocation":"2034:1:2","nodeType":"VariableDeclaration","scope":886,"src":"2026:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":868,"initialValue":{"hexValue":"30","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2038:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2026:13:2"},"loopExpression":{"expression":{"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2058:3:2","subExpression":{"id":872,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2058:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":874,"nodeType":"ExpressionStatement","src":"2058:3:2"},"nodeType":"ForStatement","src":"2021:109:2"},{"expression":{"id":887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"2146:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo memory[] memory"}},"functionReturnParameters":847,"id":888,"nodeType":"Return","src":"2139:13:2"}]},"id":890,"implemented":true,"kind":"function","modifiers":[],"name":"getTokensInfo","nameLocation":"1776:13:2","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"_tokenToCheck","nameLocation":"1807:13:2","nodeType":"VariableDeclaration","scope":890,"src":"1790:30:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"1790:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":840,"nodeType":"ArrayTypeName","src":"1790:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1789:32:2"},"returnParameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"1869:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo[]"},"typeName":{"baseType":{"id":844,"nodeType":"UserDefinedTypeName","pathNode":{"id":843,"name":"TokenInfo","nameLocations":["1869:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"1869:9:2"},"referencedDeclaration":689,"src":"1869:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$689_storage_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo"}},"id":845,"nodeType":"ArrayTypeName","src":"1869:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$689_storage_$dyn_storage_ptr","typeString":"struct InterestSwapPeriphery.TokenInfo[]"}},"visibility":"internal"}],"src":"1868:20:2"},"scope":891,"src":"1767:392:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":892,"src":"156:2005:2","usedErrors":[]}],"src":"32:2130:2"},"id":2},"src/PriceModel.sol":{"ast":{"absolutePath":"src/PriceModel.sol","exportedSymbols":{"PRBMath":[2979],"PRBMathSD59x18__AbsInputTooSmall":[1110],"PRBMathSD59x18__CeilOverflow":[1115],"PRBMathSD59x18__DivInputTooSmall":[1118],"PRBMathSD59x18__DivOverflow":[1123],"PRBMathSD59x18__Exp2InputTooBig":[1133],"PRBMathSD59x18__ExpInputTooBig":[1128],"PRBMathSD59x18__FloorUnderflow":[1138],"PRBMathSD59x18__FromIntOverflow":[1143],"PRBMathSD59x18__FromIntUnderflow":[1148],"PRBMathSD59x18__GmNegativeProduct":[1155],"PRBMathSD59x18__GmOverflow":[1162],"PRBMathSD59x18__LogInputTooSmall":[1167],"PRBMathSD59x18__MulInputTooSmall":[1170],"PRBMathSD59x18__MulOverflow":[1175],"PRBMathSD59x18__PowuOverflow":[1180],"PRBMathSD59x18__SqrtNegativeInput":[1185],"PRBMathSD59x18__SqrtOverflow":[1190],"PRBMathUD60x18":[3589],"PRBMathUD60x18__AddOverflow":[1197],"PRBMathUD60x18__CeilOverflow":[1202],"PRBMathUD60x18__Exp2InputTooBig":[1212],"PRBMathUD60x18__ExpInputTooBig":[1207],"PRBMathUD60x18__FromUintOverflow":[1217],"PRBMathUD60x18__GmOverflow":[1224],"PRBMathUD60x18__LogInputTooSmall":[1229],"PRBMathUD60x18__SqrtOverflow":[1234],"PRBMathUD60x18__SubUnderflow":[1241],"PRBMath__MulDivFixedPointOverflow":[1092],"PRBMath__MulDivOverflow":[1099],"PRBMath__MulDivSignedInputTooSmall":[1102],"PRBMath__MulDivSignedOverflow":[1107],"PriceModel":[938]},"id":939,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":893,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"src/dependencies/prb-math/PRBMathUD60x18.sol","file":"./dependencies/prb-math/PRBMathUD60x18.sol","id":894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":939,"sourceUnit":3590,"src":"58:52:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"PriceModel","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":938,"linearizedBaseContracts":[938],"name":"PriceModel","nameLocation":"204:10:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":897,"libraryName":{"id":895,"name":"PRBMathUD60x18","nameLocations":["227:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":3589,"src":"227:14:3"},"nodeType":"UsingForDirective","src":"221:33:3","typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"246:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"29fe6199","id":899,"mutability":"mutable","name":"dailyPercent","nameLocation":"275:12:3","nodeType":"VariableDeclaration","scope":938,"src":"260:27:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"260:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":908,"nodeType":"Block","src":"329:45:3","statements":[{"expression":{"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":904,"name":"dailyPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"339:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":905,"name":"_dailyPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"354:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"339:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":907,"nodeType":"ExpressionStatement","src":"339:28:3"}]},"id":909,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":901,"mutability":"mutable","name":"_dailyPercent","nameLocation":"314:13:3","nodeType":"VariableDeclaration","scope":909,"src":"306:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":900,"name":"uint256","nodeType":"ElementaryTypeName","src":"306:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"305:23:3"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[],"src":"329:0:3"},"scope":938,"src":"294:80:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":918,"nodeType":"Block","src":"436:41:3","statements":[{"expression":{"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":914,"name":"dailyPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"446:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":915,"name":"_newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"461:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"446:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":917,"nodeType":"ExpressionStatement","src":"446:24:3"}]},"functionSelector":"6683d37d","id":919,"implemented":true,"kind":"function","modifiers":[],"name":"setDailyPercentage","nameLocation":"389:18:3","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"_newValue","nameLocation":"416:9:3","nodeType":"VariableDeclaration","scope":919,"src":"408:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"408:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"407:19:3"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[],"src":"436:0:3"},"scope":938,"src":"380:97:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":936,"nodeType":"Block","src":"666:125:3","statements":[{"expression":{"arguments":[{"id":933,"name":"_numberOfDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"770:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":930,"name":"dailyPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"752:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":928,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"740:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"748:3:3","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3422,"src":"740:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"740:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"766:3:3","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3422,"src":"740:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"740:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":927,"id":935,"nodeType":"Return","src":"733:51:3"}]},"functionSelector":"315f1a41","id":937,"implemented":true,"kind":"function","modifiers":[],"name":"quote","nameLocation":"562:5:3","nodeType":"FunctionDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"_amount","nameLocation":"576:7:3","nodeType":"VariableDeclaration","scope":937,"src":"568:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"568:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":923,"mutability":"mutable","name":"_numberOfDays","nameLocation":"593:13:3","nodeType":"VariableDeclaration","scope":937,"src":"585:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"567:40:3"},"returnParameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":937,"src":"653:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":925,"name":"uint256","nodeType":"ElementaryTypeName","src":"653:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"652:9:3"},"scope":938,"src":"553:238:3","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":939,"src":"195:598:3","usedErrors":[1092]}],"src":"32:762:3"},"id":3},"src/USDC.sol":{"ast":{"absolutePath":"src/USDC.sol","exportedSymbols":{"ERC20":[3977],"USDC":[982]},"id":983,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":940,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:4"},{"absolutePath":"src/dependencies/solmate/ERC20.sol","file":"./dependencies/solmate/ERC20.sol","id":941,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":983,"sourceUnit":3978,"src":"58:42:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":942,"name":"ERC20","nameLocations":["119:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":3977,"src":"119:5:4"},"id":943,"nodeType":"InheritanceSpecifier","src":"119:5:4"}],"canonicalName":"USDC","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":982,"linearizedBaseContracts":[982,3977],"name":"USDC","nameLocation":"111:4:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":980,"nodeType":"Block","src":"196:169:4","statements":[{"assignments":[955],"declarations":[{"constant":false,"id":955,"mutability":"mutable","name":"holdersLength","nameLocation":"214:13:4","nodeType":"VariableDeclaration","scope":980,"src":"206:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"206:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":958,"initialValue":{"expression":{"id":956,"name":"_holders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"230:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"239:6:4","memberName":"length","nodeType":"MemberAccess","src":"230:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"206:39:4"},{"body":{"id":978,"nodeType":"Block","src":"300:59:4","statements":[{"expression":{"arguments":[{"baseExpression":{"id":970,"name":"_holders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"320:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":972,"indexExpression":{"id":971,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"329:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"320:11:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000_by_1","typeString":"int_const 100000000000000000000000"},"id":975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130305f303030","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"333:7:4","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:4:4","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"333:14:4","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000_by_1","typeString":"int_const 100000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_100000000000000000000000_by_1","typeString":"int_const 100000000000000000000000"}],"id":969,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"314:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"314:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":977,"nodeType":"ExpressionStatement","src":"314:34:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":963,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"276:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":964,"name":"holdersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"280:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"276:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":979,"initializationExpression":{"assignments":[960],"declarations":[{"constant":false,"id":960,"mutability":"mutable","name":"i","nameLocation":"269:1:4","nodeType":"VariableDeclaration","scope":979,"src":"261:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"261:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":962,"initialValue":{"hexValue":"30","id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"273:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"261:13:4"},"loopExpression":{"expression":{"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"295:3:4","subExpression":{"id":966,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"295:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":968,"nodeType":"ExpressionStatement","src":"295:3:4"},"nodeType":"ForStatement","src":"256:103:4"}]},"id":981,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"55534443","id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"176:6:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa","typeString":"literal_string \"USDC\""},"value":"USDC"},{"hexValue":"55534443","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"184:6:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa","typeString":"literal_string \"USDC\""},"value":"USDC"},{"hexValue":"3138","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"192:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"}],"id":952,"kind":"baseConstructorSpecifier","modifierName":{"id":948,"name":"ERC20","nameLocations":["170:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":3977,"src":"170:5:4"},"nodeType":"ModifierInvocation","src":"170:25:4"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"_holders","nameLocation":"160:8:4","nodeType":"VariableDeclaration","scope":981,"src":"143:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"143:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":945,"nodeType":"ArrayTypeName","src":"143:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"142:27:4"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[],"src":"196:0:4"},"scope":982,"src":"131:234:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":983,"src":"102:265:4","usedErrors":[]}],"src":"32:336:4"},"id":4},"src/dependencies/flux/CLInterface.sol":{"ast":{"absolutePath":"src/dependencies/flux/CLInterface.sol","exportedSymbols":{"CLInterface":[1030]},"id":1031,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":984,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"CLInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1030,"linearizedBaseContracts":[1030],"name":"CLInterface","nameLocation":"68:11:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"50d25bcd","id":989,"implemented":false,"kind":"function","modifiers":[],"name":"latestAnswer","nameLocation":"95:12:5","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[],"src":"107:2:5"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":989,"src":"133:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":986,"name":"int256","nodeType":"ElementaryTypeName","src":"133:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"132:8:5"},"scope":1030,"src":"86:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8205bf6a","id":994,"implemented":false,"kind":"function","modifiers":[],"name":"latestTimestamp","nameLocation":"156:15:5","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[],"src":"171:2:5"},"returnParameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":994,"src":"197:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"197:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"196:9:5"},"scope":1030,"src":"147:59:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"668a0f02","id":999,"implemented":false,"kind":"function","modifiers":[],"name":"latestRound","nameLocation":"221:11:5","nodeType":"FunctionDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[],"src":"232:2:5"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":999,"src":"258:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"258:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"257:9:5"},"scope":1030,"src":"212:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b5ab58dc","id":1006,"implemented":false,"kind":"function","modifiers":[],"name":"getAnswer","nameLocation":"282:9:5","nodeType":"FunctionDefinition","parameters":{"id":1002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1001,"mutability":"mutable","name":"roundId","nameLocation":"300:7:5","nodeType":"VariableDeclaration","scope":1006,"src":"292:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"292:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"291:17:5"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1006,"src":"332:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1003,"name":"int256","nodeType":"ElementaryTypeName","src":"332:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"331:8:5"},"scope":1030,"src":"273:67:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b633620c","id":1013,"implemented":false,"kind":"function","modifiers":[],"name":"getTimestamp","nameLocation":"355:12:5","nodeType":"FunctionDefinition","parameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"roundId","nameLocation":"376:7:5","nodeType":"VariableDeclaration","scope":1013,"src":"368:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"368:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"367:17:5"},"returnParameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1013,"src":"408:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"408:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"407:9:5"},"scope":1030,"src":"346:71:5","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f","id":1021,"name":"AnswerUpdated","nameLocation":"429:13:5","nodeType":"EventDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"indexed":true,"mutability":"mutable","name":"current","nameLocation":"467:7:5","nodeType":"VariableDeclaration","scope":1021,"src":"452:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1014,"name":"int256","nodeType":"ElementaryTypeName","src":"452:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1017,"indexed":true,"mutability":"mutable","name":"roundId","nameLocation":"500:7:5","nodeType":"VariableDeclaration","scope":1021,"src":"484:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1019,"indexed":false,"mutability":"mutable","name":"updatedAt","nameLocation":"525:9:5","nodeType":"VariableDeclaration","scope":1021,"src":"517:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"517:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"442:98:5"},"src":"423:118:5"},{"anonymous":false,"eventSelector":"0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac60271","id":1029,"name":"NewRound","nameLocation":"552:8:5","nodeType":"EventDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"indexed":true,"mutability":"mutable","name":"roundId","nameLocation":"586:7:5","nodeType":"VariableDeclaration","scope":1029,"src":"570:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"570:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1025,"indexed":true,"mutability":"mutable","name":"startedBy","nameLocation":"619:9:5","nodeType":"VariableDeclaration","scope":1029,"src":"603:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1027,"indexed":false,"mutability":"mutable","name":"startedAt","nameLocation":"646:9:5","nodeType":"VariableDeclaration","scope":1029,"src":"638:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"638:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"560:101:5"},"src":"546:116:5"}],"scope":1031,"src":"58:606:5","usedErrors":[]}],"src":"32:633:5"},"id":5},"src/dependencies/flux/CLV2V3Interface.sol":{"ast":{"absolutePath":"src/dependencies/flux/CLV2V3Interface.sol","exportedSymbols":{"CLInterface":[1030],"CLV2V3Interface":[1039],"CLV3Interface":[1085]},"id":1040,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1032,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:6"},{"absolutePath":"src/dependencies/flux/CLInterface.sol","file":"./CLInterface.sol","id":1033,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1040,"sourceUnit":1031,"src":"58:27:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/dependencies/flux/CLV3Interface.sol","file":"./CLV3Interface.sol","id":1034,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1040,"sourceUnit":1086,"src":"86:29:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1035,"name":"CLInterface","nameLocations":["194:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1030,"src":"194:11:6"},"id":1036,"nodeType":"InheritanceSpecifier","src":"194:11:6"},{"baseName":{"id":1037,"name":"CLV3Interface","nameLocations":["207:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1085,"src":"207:13:6"},"id":1038,"nodeType":"InheritanceSpecifier","src":"207:13:6"}],"canonicalName":"CLV2V3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1039,"linearizedBaseContracts":[1039,1085,1030],"name":"CLV2V3Interface","nameLocation":"175:15:6","nodeType":"ContractDefinition","nodes":[],"scope":1040,"src":"165:60:6","usedErrors":[]}],"src":"32:194:6"},"id":6},"src/dependencies/flux/CLV3Interface.sol":{"ast":{"absolutePath":"src/dependencies/flux/CLV3Interface.sol","exportedSymbols":{"CLV3Interface":[1085]},"id":1086,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1041,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"CLV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1085,"linearizedBaseContracts":[1085],"name":"CLV3Interface","nameLocation":"68:13:7","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":1046,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"97:8:7","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[],"src":"105:2:7"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1046,"src":"131:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1043,"name":"uint8","nodeType":"ElementaryTypeName","src":"131:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"130:7:7"},"scope":1085,"src":"88:50:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":1051,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"153:11:7","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[],"src":"164:2:7"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1051,"src":"190:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1048,"name":"string","nodeType":"ElementaryTypeName","src":"190:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"189:15:7"},"scope":1085,"src":"144:61:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":1056,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"220:7:7","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[],"src":"227:2:7"},"returnParameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1056,"src":"253:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"253:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"252:9:7"},"scope":1085,"src":"211:51:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":1071,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"494:12:7","nodeType":"FunctionDefinition","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"_roundId","nameLocation":"514:8:7","nodeType":"VariableDeclaration","scope":1071,"src":"507:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1057,"name":"uint80","nodeType":"ElementaryTypeName","src":"507:6:7","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"506:17:7"},"returnParameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"roundId","nameLocation":"591:7:7","nodeType":"VariableDeclaration","scope":1071,"src":"584:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1060,"name":"uint80","nodeType":"ElementaryTypeName","src":"584:6:7","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"answer","nameLocation":"619:6:7","nodeType":"VariableDeclaration","scope":1071,"src":"612:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1062,"name":"int256","nodeType":"ElementaryTypeName","src":"612:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"startedAt","nameLocation":"647:9:7","nodeType":"VariableDeclaration","scope":1071,"src":"639:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1064,"name":"uint256","nodeType":"ElementaryTypeName","src":"639:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"updatedAt","nameLocation":"678:9:7","nodeType":"VariableDeclaration","scope":1071,"src":"670:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"answeredInRound","nameLocation":"708:15:7","nodeType":"VariableDeclaration","scope":1071,"src":"701:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1068,"name":"uint80","nodeType":"ElementaryTypeName","src":"701:6:7","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"570:163:7"},"scope":1085,"src":"485:249:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":1084,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"749:15:7","nodeType":"FunctionDefinition","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[],"src":"764:2:7"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"roundId","nameLocation":"834:7:7","nodeType":"VariableDeclaration","scope":1084,"src":"827:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1073,"name":"uint80","nodeType":"ElementaryTypeName","src":"827:6:7","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"answer","nameLocation":"862:6:7","nodeType":"VariableDeclaration","scope":1084,"src":"855:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1075,"name":"int256","nodeType":"ElementaryTypeName","src":"855:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"startedAt","nameLocation":"890:9:7","nodeType":"VariableDeclaration","scope":1084,"src":"882:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"882:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"updatedAt","nameLocation":"921:9:7","nodeType":"VariableDeclaration","scope":1084,"src":"913:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"913:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"answeredInRound","nameLocation":"951:15:7","nodeType":"VariableDeclaration","scope":1084,"src":"944:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1081,"name":"uint80","nodeType":"ElementaryTypeName","src":"944:6:7","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"813:163:7"},"scope":1085,"src":"740:237:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1086,"src":"58:921:7","usedErrors":[]}],"src":"32:948:7"},"id":7},"src/dependencies/prb-math/PRBMath.sol":{"ast":{"absolutePath":"src/dependencies/prb-math/PRBMath.sol","exportedSymbols":{"PRBMath":[2979],"PRBMathSD59x18__AbsInputTooSmall":[1110],"PRBMathSD59x18__CeilOverflow":[1115],"PRBMathSD59x18__DivInputTooSmall":[1118],"PRBMathSD59x18__DivOverflow":[1123],"PRBMathSD59x18__Exp2InputTooBig":[1133],"PRBMathSD59x18__ExpInputTooBig":[1128],"PRBMathSD59x18__FloorUnderflow":[1138],"PRBMathSD59x18__FromIntOverflow":[1143],"PRBMathSD59x18__FromIntUnderflow":[1148],"PRBMathSD59x18__GmNegativeProduct":[1155],"PRBMathSD59x18__GmOverflow":[1162],"PRBMathSD59x18__LogInputTooSmall":[1167],"PRBMathSD59x18__MulInputTooSmall":[1170],"PRBMathSD59x18__MulOverflow":[1175],"PRBMathSD59x18__PowuOverflow":[1180],"PRBMathSD59x18__SqrtNegativeInput":[1185],"PRBMathSD59x18__SqrtOverflow":[1190],"PRBMathUD60x18__AddOverflow":[1197],"PRBMathUD60x18__CeilOverflow":[1202],"PRBMathUD60x18__Exp2InputTooBig":[1212],"PRBMathUD60x18__ExpInputTooBig":[1207],"PRBMathUD60x18__FromUintOverflow":[1217],"PRBMathUD60x18__GmOverflow":[1224],"PRBMathUD60x18__LogInputTooSmall":[1229],"PRBMathUD60x18__SqrtOverflow":[1234],"PRBMathUD60x18__SubUnderflow":[1241],"PRBMath__MulDivFixedPointOverflow":[1092],"PRBMath__MulDivOverflow":[1099],"PRBMath__MulDivSignedInputTooSmall":[1102],"PRBMath__MulDivSignedOverflow":[1107]},"id":2980,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1087,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:8"},{"documentation":{"id":1088,"nodeType":"StructuredDocumentation","src":"58:55:8","text":"@notice Emitted when the result overflows uint256."},"errorSelector":"d31b3402","id":1092,"name":"PRBMath__MulDivFixedPointOverflow","nameLocation":"119:33:8","nodeType":"ErrorDefinition","parameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"prod1","nameLocation":"161:5:8","nodeType":"VariableDeclaration","scope":1092,"src":"153:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"153:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"152:15:8"},"src":"113:55:8"},{"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"170:55:8","text":"@notice Emitted when the result overflows uint256."},"errorSelector":"773cc18c","id":1099,"name":"PRBMath__MulDivOverflow","nameLocation":"231:23:8","nodeType":"ErrorDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"prod1","nameLocation":"263:5:8","nodeType":"VariableDeclaration","scope":1099,"src":"255:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"255:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"denominator","nameLocation":"278:11:8","nodeType":"VariableDeclaration","scope":1099,"src":"270:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"270:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"254:36:8"},"src":"225:66:8"},{"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"293:64:8","text":"@notice Emitted when one of the inputs is type(int256).min."},"errorSelector":"72161e22","id":1102,"name":"PRBMath__MulDivSignedInputTooSmall","nameLocation":"363:34:8","nodeType":"ErrorDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[],"src":"397:2:8"},"src":"357:43:8"},{"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"402:76:8","text":"@notice Emitted when the intermediary absolute result overflows int256."},"errorSelector":"41abb3fd","id":1107,"name":"PRBMath__MulDivSignedOverflow","nameLocation":"484:29:8","nodeType":"ErrorDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"rAbs","nameLocation":"522:4:8","nodeType":"VariableDeclaration","scope":1107,"src":"514:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"514:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"513:14:8"},"src":"478:50:8"},{"documentation":{"id":1108,"nodeType":"StructuredDocumentation","src":"530:51:8","text":"@notice Emitted when the input is MIN_SD59x18."},"errorSelector":"741d0b8c","id":1110,"name":"PRBMathSD59x18__AbsInputTooSmall","nameLocation":"587:32:8","nodeType":"ErrorDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[],"src":"619:2:8"},"src":"581:41:8"},{"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"624:61:8","text":"@notice Emitted when ceiling a number overflows SD59x18."},"errorSelector":"a733450a","id":1115,"name":"PRBMathSD59x18__CeilOverflow","nameLocation":"691:28:8","nodeType":"ErrorDefinition","parameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"x","nameLocation":"727:1:8","nodeType":"VariableDeclaration","scope":1115,"src":"720:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1112,"name":"int256","nodeType":"ElementaryTypeName","src":"720:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"719:10:8"},"src":"685:45:8"},{"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"732:59:8","text":"@notice Emitted when one of the inputs is MIN_SD59x18."},"errorSelector":"b3c754a3","id":1118,"name":"PRBMathSD59x18__DivInputTooSmall","nameLocation":"797:32:8","nodeType":"ErrorDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[],"src":"829:2:8"},"src":"791:41:8"},{"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"834:85:8","text":"@notice Emitted when one of the intermediary unsigned results overflows SD59x18."},"errorSelector":"7cb4bef5","id":1123,"name":"PRBMathSD59x18__DivOverflow","nameLocation":"925:27:8","nodeType":"ErrorDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"rAbs","nameLocation":"961:4:8","nodeType":"VariableDeclaration","scope":1123,"src":"953:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:14:8"},"src":"919:48:8"},{"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"969:75:8","text":"@notice Emitted when the input is greater than 133.084258667509499441."},"errorSelector":"99bb7541","id":1128,"name":"PRBMathSD59x18__ExpInputTooBig","nameLocation":"1050:30:8","nodeType":"ErrorDefinition","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"x","nameLocation":"1088:1:8","nodeType":"VariableDeclaration","scope":1128,"src":"1081:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1125,"name":"int256","nodeType":"ElementaryTypeName","src":"1081:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1080:10:8"},"src":"1044:47:8"},{"documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"1093:56:8","text":"@notice Emitted when the input is greater than 192."},"errorSelector":"e69458f9","id":1133,"name":"PRBMathSD59x18__Exp2InputTooBig","nameLocation":"1155:31:8","nodeType":"ErrorDefinition","parameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"x","nameLocation":"1194:1:8","nodeType":"VariableDeclaration","scope":1133,"src":"1187:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1130,"name":"int256","nodeType":"ElementaryTypeName","src":"1187:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1186:10:8"},"src":"1149:48:8"},{"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"1199:63:8","text":"@notice Emitted when flooring a number underflows SD59x18."},"errorSelector":"7c00653f","id":1138,"name":"PRBMathSD59x18__FloorUnderflow","nameLocation":"1268:30:8","nodeType":"ErrorDefinition","parameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"x","nameLocation":"1306:1:8","nodeType":"VariableDeclaration","scope":1138,"src":"1299:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1135,"name":"int256","nodeType":"ElementaryTypeName","src":"1299:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1298:10:8"},"src":"1262:47:8"},{"documentation":{"id":1139,"nodeType":"StructuredDocumentation","src":"1311:97:8","text":"@notice Emitted when converting a basic integer to the fixed-point format overflows SD59x18."},"errorSelector":"71f72a31","id":1143,"name":"PRBMathSD59x18__FromIntOverflow","nameLocation":"1414:31:8","nodeType":"ErrorDefinition","parameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"x","nameLocation":"1453:1:8","nodeType":"VariableDeclaration","scope":1143,"src":"1446:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1140,"name":"int256","nodeType":"ElementaryTypeName","src":"1446:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1445:10:8"},"src":"1408:48:8"},{"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"1458:98:8","text":"@notice Emitted when converting a basic integer to the fixed-point format underflows SD59x18."},"errorSelector":"e608e18b","id":1148,"name":"PRBMathSD59x18__FromIntUnderflow","nameLocation":"1562:32:8","nodeType":"ErrorDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"x","nameLocation":"1602:1:8","nodeType":"VariableDeclaration","scope":1148,"src":"1595:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1145,"name":"int256","nodeType":"ElementaryTypeName","src":"1595:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1594:10:8"},"src":"1556:49:8"},{"documentation":{"id":1149,"nodeType":"StructuredDocumentation","src":"1607:64:8","text":"@notice Emitted when the product of the inputs is negative."},"errorSelector":"fe31079a","id":1155,"name":"PRBMathSD59x18__GmNegativeProduct","nameLocation":"1677:33:8","nodeType":"ErrorDefinition","parameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"x","nameLocation":"1718:1:8","nodeType":"VariableDeclaration","scope":1155,"src":"1711:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1150,"name":"int256","nodeType":"ElementaryTypeName","src":"1711:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"y","nameLocation":"1728:1:8","nodeType":"VariableDeclaration","scope":1155,"src":"1721:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1152,"name":"int256","nodeType":"ElementaryTypeName","src":"1721:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1710:20:8"},"src":"1671:60:8"},{"documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"1733:67:8","text":"@notice Emitted when multiplying the inputs overflows SD59x18."},"errorSelector":"0fb9098e","id":1162,"name":"PRBMathSD59x18__GmOverflow","nameLocation":"1806:26:8","nodeType":"ErrorDefinition","parameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"x","nameLocation":"1840:1:8","nodeType":"VariableDeclaration","scope":1162,"src":"1833:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1157,"name":"int256","nodeType":"ElementaryTypeName","src":"1833:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1160,"mutability":"mutable","name":"y","nameLocation":"1850:1:8","nodeType":"VariableDeclaration","scope":1162,"src":"1843:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1159,"name":"int256","nodeType":"ElementaryTypeName","src":"1843:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1832:20:8"},"src":"1800:53:8"},{"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"1855:66:8","text":"@notice Emitted when the input is less than or equal to zero."},"errorSelector":"613f4fba","id":1167,"name":"PRBMathSD59x18__LogInputTooSmall","nameLocation":"1927:32:8","nodeType":"ErrorDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"x","nameLocation":"1967:1:8","nodeType":"VariableDeclaration","scope":1167,"src":"1960:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1164,"name":"int256","nodeType":"ElementaryTypeName","src":"1960:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1959:10:8"},"src":"1921:49:8"},{"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"1972:59:8","text":"@notice Emitted when one of the inputs is MIN_SD59x18."},"errorSelector":"3406846c","id":1170,"name":"PRBMathSD59x18__MulInputTooSmall","nameLocation":"2037:32:8","nodeType":"ErrorDefinition","parameters":{"id":1169,"nodeType":"ParameterList","parameters":[],"src":"2069:2:8"},"src":"2031:41:8"},{"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"2074:77:8","text":"@notice Emitted when the intermediary absolute result overflows SD59x18."},"errorSelector":"bf79e8d9","id":1175,"name":"PRBMathSD59x18__MulOverflow","nameLocation":"2157:27:8","nodeType":"ErrorDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"rAbs","nameLocation":"2193:4:8","nodeType":"VariableDeclaration","scope":1175,"src":"2185:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:14:8"},"src":"2151:48:8"},{"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"2201:77:8","text":"@notice Emitted when the intermediary absolute result overflows SD59x18."},"errorSelector":"ffb15bcd","id":1180,"name":"PRBMathSD59x18__PowuOverflow","nameLocation":"2284:28:8","nodeType":"ErrorDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"rAbs","nameLocation":"2321:4:8","nodeType":"VariableDeclaration","scope":1180,"src":"2313:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"2313:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2312:14:8"},"src":"2278:49:8"},{"documentation":{"id":1181,"nodeType":"StructuredDocumentation","src":"2329:48:8","text":"@notice Emitted when the input is negative."},"errorSelector":"c11907fe","id":1185,"name":"PRBMathSD59x18__SqrtNegativeInput","nameLocation":"2383:33:8","nodeType":"ErrorDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"x","nameLocation":"2424:1:8","nodeType":"VariableDeclaration","scope":1185,"src":"2417:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1182,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2416:10:8"},"src":"2377:50:8"},{"documentation":{"id":1186,"nodeType":"StructuredDocumentation","src":"2429:76:8","text":"@notice Emitted when the calculating the square root overflows SD59x18."},"errorSelector":"2c482c39","id":1190,"name":"PRBMathSD59x18__SqrtOverflow","nameLocation":"2511:28:8","nodeType":"ErrorDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"x","nameLocation":"2547:1:8","nodeType":"VariableDeclaration","scope":1190,"src":"2540:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1187,"name":"int256","nodeType":"ElementaryTypeName","src":"2540:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2539:10:8"},"src":"2505:45:8"},{"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"2552:53:8","text":"@notice Emitted when addition overflows UD60x18."},"errorSelector":"0aa6aef7","id":1197,"name":"PRBMathUD60x18__AddOverflow","nameLocation":"2611:27:8","nodeType":"ErrorDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"x","nameLocation":"2647:1:8","nodeType":"VariableDeclaration","scope":1197,"src":"2639:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"2639:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"y","nameLocation":"2658:1:8","nodeType":"VariableDeclaration","scope":1197,"src":"2650:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2650:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2638:22:8"},"src":"2605:56:8"},{"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"2663:61:8","text":"@notice Emitted when ceiling a number overflows UD60x18."},"errorSelector":"7675d888","id":1202,"name":"PRBMathUD60x18__CeilOverflow","nameLocation":"2730:28:8","nodeType":"ErrorDefinition","parameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"x","nameLocation":"2767:1:8","nodeType":"VariableDeclaration","scope":1202,"src":"2759:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"2759:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2758:11:8"},"src":"2724:46:8"},{"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"2772:75:8","text":"@notice Emitted when the input is greater than 133.084258667509499441."},"errorSelector":"315da068","id":1207,"name":"PRBMathUD60x18__ExpInputTooBig","nameLocation":"2853:30:8","nodeType":"ErrorDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"x","nameLocation":"2892:1:8","nodeType":"VariableDeclaration","scope":1207,"src":"2884:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"2884:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2883:11:8"},"src":"2847:48:8"},{"documentation":{"id":1208,"nodeType":"StructuredDocumentation","src":"2897:56:8","text":"@notice Emitted when the input is greater than 192."},"errorSelector":"4a4f26f1","id":1212,"name":"PRBMathUD60x18__Exp2InputTooBig","nameLocation":"2959:31:8","nodeType":"ErrorDefinition","parameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"x","nameLocation":"2999:1:8","nodeType":"VariableDeclaration","scope":1212,"src":"2991:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2990:11:8"},"src":"2953:49:8"},{"documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"3004:104:8","text":"@notice Emitted when converting a basic integer to the fixed-point format format overflows UD60x18."},"errorSelector":"3492ffd9","id":1217,"name":"PRBMathUD60x18__FromUintOverflow","nameLocation":"3114:32:8","nodeType":"ErrorDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"x","nameLocation":"3155:1:8","nodeType":"VariableDeclaration","scope":1217,"src":"3147:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"3147:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3146:11:8"},"src":"3108:50:8"},{"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"3160:67:8","text":"@notice Emitted when multiplying the inputs overflows UD60x18."},"errorSelector":"00c3efdf","id":1224,"name":"PRBMathUD60x18__GmOverflow","nameLocation":"3233:26:8","nodeType":"ErrorDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"x","nameLocation":"3268:1:8","nodeType":"VariableDeclaration","scope":1224,"src":"3260:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"3260:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"y","nameLocation":"3279:1:8","nodeType":"VariableDeclaration","scope":1224,"src":"3271:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"3271:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3259:22:8"},"src":"3227:55:8"},{"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"3284:51:8","text":"@notice Emitted when the input is less than 1."},"errorSelector":"d88504dc","id":1229,"name":"PRBMathUD60x18__LogInputTooSmall","nameLocation":"3341:32:8","nodeType":"ErrorDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"x","nameLocation":"3382:1:8","nodeType":"VariableDeclaration","scope":1229,"src":"3374:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"3374:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3373:11:8"},"src":"3335:50:8"},{"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"3387:76:8","text":"@notice Emitted when the calculating the square root overflows UD60x18."},"errorSelector":"6155b67d","id":1234,"name":"PRBMathUD60x18__SqrtOverflow","nameLocation":"3469:28:8","nodeType":"ErrorDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"x","nameLocation":"3506:1:8","nodeType":"VariableDeclaration","scope":1234,"src":"3498:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"3498:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3497:11:8"},"src":"3463:46:8"},{"documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"3511:57:8","text":"@notice Emitted when subtraction underflows UD60x18."},"errorSelector":"41d96f39","id":1241,"name":"PRBMathUD60x18__SubUnderflow","nameLocation":"3574:28:8","nodeType":"ErrorDefinition","parameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"x","nameLocation":"3611:1:8","nodeType":"VariableDeclaration","scope":1241,"src":"3603:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"3603:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"y","nameLocation":"3622:1:8","nodeType":"VariableDeclaration","scope":1241,"src":"3614:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"3614:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3602:22:8"},"src":"3568:57:8"},{"abstract":false,"baseContracts":[],"canonicalName":"PRBMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"3627:318:8","text":"@dev Common mathematical functions used in both PRBMathSD59x18 and PRBMathUD60x18. Note that this shared library\n does not always assume the signed 59.18-decimal fixed-point or the unsigned 60.18-decimal fixed-point\n representation. When it does not, it is explicitly mentioned in the NatSpec documentation."},"fullyImplemented":true,"id":2979,"linearizedBaseContracts":[2979],"name":"PRBMath","nameLocation":"3953:7:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PRBMath.SD59x18","id":1245,"members":[{"constant":false,"id":1244,"mutability":"mutable","name":"value","nameLocation":"4020:5:8","nodeType":"VariableDeclaration","scope":1245,"src":"4013:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1243,"name":"int256","nodeType":"ElementaryTypeName","src":"4013:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"SD59x18","nameLocation":"3995:7:8","nodeType":"StructDefinition","scope":2979,"src":"3988:44:8","visibility":"public"},{"canonicalName":"PRBMath.UD60x18","id":1248,"members":[{"constant":false,"id":1247,"mutability":"mutable","name":"value","nameLocation":"4071:5:8","nodeType":"VariableDeclaration","scope":1248,"src":"4063:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4063:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UD60x18","nameLocation":"4045:7:8","nodeType":"StructDefinition","scope":2979,"src":"4038:45:8","visibility":"public"},{"constant":true,"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"4110:55:8","text":"@dev How many trailing decimals can be represented."},"id":1252,"mutability":"constant","name":"SCALE","nameLocation":"4196:5:8","nodeType":"VariableDeclaration","scope":2979,"src":"4170:38:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"4170:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4204:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"constant":true,"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"4215:47:8","text":"@dev Largest power of two divisor of SCALE."},"id":1256,"mutability":"constant","name":"SCALE_LPOTD","nameLocation":"4293:11:8","nodeType":"VariableDeclaration","scope":2979,"src":"4267:46:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"4267:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323632313434","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4307:6:8","typeDescriptions":{"typeIdentifier":"t_rational_262144_by_1","typeString":"int_const 262144"},"value":"262144"},"visibility":"internal"},{"constant":true,"documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"4320:34:8","text":"@dev SCALE inverted mod 2^256."},"id":1260,"mutability":"constant","name":"SCALE_INVERSE","nameLocation":"4385:13:8","nodeType":"VariableDeclaration","scope":2979,"src":"4359:128:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4359:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37383135363634363135353137343834313937393732373939343539383831363236323330363137353231323539323037363136313837363636315f353038383639353534323332363930323831","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4409:78:8","typeDescriptions":{"typeIdentifier":"t_rational_78156646155174841979727994598816262306175212592076161876661508869554232690281_by_1","typeString":"int_const 7815...(69 digits omitted)...0281"},"value":"78156646155174841979727994598816262306175212592076161876661_508869554232690281"},"visibility":"internal"},{"body":{"id":2311,"nodeType":"Block","src":"4944:8410:8","statements":[{"id":2310,"nodeType":"UncheckedBlock","src":"4954:8394:8","statements":[{"expression":{"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"5046:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3078383030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5055:50:8","typeDescriptions":{"typeIdentifier":"t_rational_3138550867693340381917894711603833208051177722232017256448_by_1","typeString":"int_const 3138...(50 digits omitted)...6448"},"value":"0x800000000000000000000000000000000000000000000000"},"src":"5046:59:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1271,"nodeType":"ExpressionStatement","src":"5046:59:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1272,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"5345:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030303030303030303030303030","id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5349:18:8","typeDescriptions":{"typeIdentifier":"t_rational_9223372036854775808_by_1","typeString":"int_const 9223372036854775808"},"value":"0x8000000000000000"},"src":"5345:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5370:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5345:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1287,"nodeType":"IfStatement","src":"5341:110:8","trueBody":{"id":1286,"nodeType":"Block","src":"5373:78:8","statements":[{"expression":{"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"5391:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1278,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"5401:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783136413039453636374633424343393039","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5410:19:8","typeDescriptions":{"typeIdentifier":"t_rational_26087635650665564425_by_1","typeString":"int_const 26087635650665564425"},"value":"0x16A09E667F3BCC909"},"src":"5401:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5400:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5434:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5400:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5391:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1285,"nodeType":"ExpressionStatement","src":"5391:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1288,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"5468:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030303030303030303030303030","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5472:18:8","typeDescriptions":{"typeIdentifier":"t_rational_4611686018427387904_by_1","typeString":"int_const 4611686018427387904"},"value":"0x4000000000000000"},"src":"5468:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5493:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5468:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1303,"nodeType":"IfStatement","src":"5464:110:8","trueBody":{"id":1302,"nodeType":"Block","src":"5496:78:8","statements":[{"expression":{"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"5514:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"5524:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783133303646453041333142373135324446","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5533:19:8","typeDescriptions":{"typeIdentifier":"t_rational_21936999301089678047_by_1","typeString":"int_const 21936999301089678047"},"value":"0x1306FE0A31B7152DF"},"src":"5524:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1297,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5523:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5557:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5523:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5514:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1301,"nodeType":"ExpressionStatement","src":"5514:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1304,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"5591:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030303030303030303030303030","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5595:18:8","typeDescriptions":{"typeIdentifier":"t_rational_2305843009213693952_by_1","typeString":"int_const 2305843009213693952"},"value":"0x2000000000000000"},"src":"5591:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5616:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5591:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1319,"nodeType":"IfStatement","src":"5587:110:8","trueBody":{"id":1318,"nodeType":"Block","src":"5619:78:8","statements":[{"expression":{"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1309,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"5637:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1310,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"5647:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783131373242383343374435313741444345","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5656:19:8","typeDescriptions":{"typeIdentifier":"t_rational_20116317054877281742_by_1","typeString":"int_const 20116317054877281742"},"value":"0x1172B83C7D517ADCE"},"src":"5647:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5646:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5680:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5646:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5637:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1317,"nodeType":"ExpressionStatement","src":"5637:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1320,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"5714:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030303030303030303030303030","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5718:18:8","typeDescriptions":{"typeIdentifier":"t_rational_1152921504606846976_by_1","typeString":"int_const 1152921504606846976"},"value":"0x1000000000000000"},"src":"5714:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5739:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5714:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1335,"nodeType":"IfStatement","src":"5710:110:8","trueBody":{"id":1334,"nodeType":"Block","src":"5742:78:8","statements":[{"expression":{"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1325,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"5760:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1326,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"5770:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130423535383643463938393046363241","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5779:19:8","typeDescriptions":{"typeIdentifier":"t_rational_19263451207323153962_by_1","typeString":"int_const 19263451207323153962"},"value":"0x10B5586CF9890F62A"},"src":"5770:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5769:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5803:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5769:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5760:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1333,"nodeType":"ExpressionStatement","src":"5760:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"5837:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030303030303030303030303030","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5841:17:8","typeDescriptions":{"typeIdentifier":"t_rational_576460752303423488_by_1","typeString":"int_const 576460752303423488"},"value":"0x800000000000000"},"src":"5837:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5861:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5837:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1351,"nodeType":"IfStatement","src":"5833:109:8","trueBody":{"id":1350,"nodeType":"Block","src":"5864:78:8","statements":[{"expression":{"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1341,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"5882:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1342,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"5892:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130353942304433313538353734334145","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5901:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18850675170876015534_by_1","typeString":"int_const 18850675170876015534"},"value":"0x1059B0D31585743AE"},"src":"5892:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5891:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5925:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5891:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5882:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1349,"nodeType":"ExpressionStatement","src":"5882:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1352,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"5959:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030303030303030303030303030","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5963:17:8","typeDescriptions":{"typeIdentifier":"t_rational_288230376151711744_by_1","typeString":"int_const 288230376151711744"},"value":"0x400000000000000"},"src":"5959:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5983:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5959:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1367,"nodeType":"IfStatement","src":"5955:109:8","trueBody":{"id":1366,"nodeType":"Block","src":"5986:78:8","statements":[{"expression":{"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1357,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6004:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1358,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6014:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130324339413345373738303630454537","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6023:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18647615946650685159_by_1","typeString":"int_const 18647615946650685159"},"value":"0x102C9A3E778060EE7"},"src":"6014:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6013:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6047:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6013:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6004:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1365,"nodeType":"ExpressionStatement","src":"6004:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1368,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"6081:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030303030303030303030303030","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6085:17:8","typeDescriptions":{"typeIdentifier":"t_rational_144115188075855872_by_1","typeString":"int_const 144115188075855872"},"value":"0x200000000000000"},"src":"6081:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6105:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6081:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1383,"nodeType":"IfStatement","src":"6077:109:8","trueBody":{"id":1382,"nodeType":"Block","src":"6108:78:8","statements":[{"expression":{"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1373,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6126:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1374,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6136:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130313633444139464233333335364438","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6145:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18546908069882975960_by_1","typeString":"int_const 18546908069882975960"},"value":"0x10163DA9FB33356D8"},"src":"6136:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6135:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6169:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6135:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1381,"nodeType":"ExpressionStatement","src":"6126:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1384,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"6203:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030303030303030303030303030","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6207:17:8","typeDescriptions":{"typeIdentifier":"t_rational_72057594037927936_by_1","typeString":"int_const 72057594037927936"},"value":"0x100000000000000"},"src":"6203:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6227:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6203:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1399,"nodeType":"IfStatement","src":"6199:109:8","trueBody":{"id":1398,"nodeType":"Block","src":"6230:78:8","statements":[{"expression":{"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1389,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6248:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6258:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130304231414641354142434245443631","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6267:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18496758270674070881_by_1","typeString":"int_const 18496758270674070881"},"value":"0x100B1AFA5ABCBED61"},"src":"6258:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6257:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6291:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6257:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6248:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1397,"nodeType":"ExpressionStatement","src":"6248:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1400,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"6325:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830303030303030303030303030","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6329:16:8","typeDescriptions":{"typeIdentifier":"t_rational_36028797018963968_by_1","typeString":"int_const 36028797018963968"},"value":"0x80000000000000"},"src":"6325:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6348:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6325:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1415,"nodeType":"IfStatement","src":"6321:108:8","trueBody":{"id":1414,"nodeType":"Block","src":"6351:78:8","statements":[{"expression":{"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6369:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1406,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6379:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303538433836444131433039454132","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6388:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18471734244850835106_by_1","typeString":"int_const 18471734244850835106"},"value":"0x10058C86DA1C09EA2"},"src":"6379:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6378:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6412:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6378:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6369:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1413,"nodeType":"ExpressionStatement","src":"6369:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1416,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"6446:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430303030303030303030303030","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6450:16:8","typeDescriptions":{"typeIdentifier":"t_rational_18014398509481984_by_1","typeString":"int_const 18014398509481984"},"value":"0x40000000000000"},"src":"6446:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6469:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6446:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1431,"nodeType":"IfStatement","src":"6442:108:8","trueBody":{"id":1430,"nodeType":"Block","src":"6472:78:8","statements":[{"expression":{"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1421,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6490:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1422,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6500:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303243363035453245384345433530","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6509:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18459234930309000272_by_1","typeString":"int_const 18459234930309000272"},"value":"0x1002C605E2E8CEC50"},"src":"6500:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1425,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6499:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6533:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6499:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6490:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1429,"nodeType":"ExpressionStatement","src":"6490:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1432,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"6567:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230303030303030303030303030","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6571:16:8","typeDescriptions":{"typeIdentifier":"t_rational_9007199254740992_by_1","typeString":"int_const 9007199254740992"},"value":"0x20000000000000"},"src":"6567:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6567:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1447,"nodeType":"IfStatement","src":"6563:108:8","trueBody":{"id":1446,"nodeType":"Block","src":"6593:78:8","statements":[{"expression":{"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1437,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6611:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1438,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6621:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303136324633393034303531464131","id":1439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18452988445124272033_by_1","typeString":"int_const 18452988445124272033"},"value":"0x100162F3904051FA1"},"src":"6621:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1441,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6620:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6654:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6620:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6611:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1445,"nodeType":"ExpressionStatement","src":"6611:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1448,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"6688:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130303030303030303030303030","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6692:16:8","typeDescriptions":{"typeIdentifier":"t_rational_4503599627370496_by_1","typeString":"int_const 4503599627370496"},"value":"0x10000000000000"},"src":"6688:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6711:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6688:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1463,"nodeType":"IfStatement","src":"6684:108:8","trueBody":{"id":1462,"nodeType":"Block","src":"6714:78:8","statements":[{"expression":{"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1453,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6732:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1454,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6742:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303042313735454646444337364241","id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6751:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18449865995240371898_by_1","typeString":"int_const 18449865995240371898"},"value":"0x1000B175EFFDC76BA"},"src":"6742:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1457,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6741:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6775:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6741:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6732:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1461,"nodeType":"ExpressionStatement","src":"6732:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1464,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"6809:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030303030303030303030","id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:15:8","typeDescriptions":{"typeIdentifier":"t_rational_2251799813685248_by_1","typeString":"int_const 2251799813685248"},"value":"0x8000000000000"},"src":"6809:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6831:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6809:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1479,"nodeType":"IfStatement","src":"6805:107:8","trueBody":{"id":1478,"nodeType":"Block","src":"6834:78:8","statements":[{"expression":{"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6852:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6862:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303035384241303146423946393644","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6871:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18448304968436414829_by_1","typeString":"int_const 18448304968436414829"},"value":"0x100058BA01FB9F96D"},"src":"6862:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1473,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6861:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6895:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6861:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1477,"nodeType":"ExpressionStatement","src":"6852:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1480,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"6929:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030303030303030303030","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6933:15:8","typeDescriptions":{"typeIdentifier":"t_rational_1125899906842624_by_1","typeString":"int_const 1125899906842624"},"value":"0x4000000000000"},"src":"6929:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6951:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6929:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1495,"nodeType":"IfStatement","src":"6925:107:8","trueBody":{"id":1494,"nodeType":"Block","src":"6954:78:8","statements":[{"expression":{"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1485,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6972:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1486,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6982:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303032433543433337444139343932","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6991:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18447524504564044946_by_1","typeString":"int_const 18447524504564044946"},"value":"0x10002C5CC37DA9492"},"src":"6982:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1489,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6981:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7015:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6981:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6972:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1493,"nodeType":"ExpressionStatement","src":"6972:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1496,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"7049:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030303030303030303030","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7053:15:8","typeDescriptions":{"typeIdentifier":"t_rational_562949953421312_by_1","typeString":"int_const 562949953421312"},"value":"0x2000000000000"},"src":"7049:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7071:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7049:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1511,"nodeType":"IfStatement","src":"7045:107:8","trueBody":{"id":1510,"nodeType":"Block","src":"7074:78:8","statements":[{"expression":{"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7092:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7102:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303031363245353235454530353437","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18447134285009651015_by_1","typeString":"int_const 18447134285009651015"},"value":"0x1000162E525EE0547"},"src":"7102:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7101:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7135:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7101:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7092:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1509,"nodeType":"ExpressionStatement","src":"7092:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1512,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"7169:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030303030303030303030","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7173:15:8","typeDescriptions":{"typeIdentifier":"t_rational_281474976710656_by_1","typeString":"int_const 281474976710656"},"value":"0x1000000000000"},"src":"7169:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7191:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7169:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1527,"nodeType":"IfStatement","src":"7165:107:8","trueBody":{"id":1526,"nodeType":"Block","src":"7194:78:8","statements":[{"expression":{"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1517,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7212:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1518,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7222:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030423137323535373735433034","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7231:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446939178327825412_by_1","typeString":"int_const 18446939178327825412"},"value":"0x10000B17255775C04"},"src":"7222:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1521,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7221:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7255:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7221:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7212:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1525,"nodeType":"ExpressionStatement","src":"7212:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1528,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"7289:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030303030303030303030","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7293:14:8","typeDescriptions":{"typeIdentifier":"t_rational_140737488355328_by_1","typeString":"int_const 140737488355328"},"value":"0x800000000000"},"src":"7289:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7310:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7289:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1543,"nodeType":"IfStatement","src":"7285:106:8","trueBody":{"id":1542,"nodeType":"Block","src":"7313:78:8","statements":[{"expression":{"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1533,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7331:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7341:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030353842393142354243394145","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7350:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446841625760745902_by_1","typeString":"int_const 18446841625760745902"},"value":"0x1000058B91B5BC9AE"},"src":"7341:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7340:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7374:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7340:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7331:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1541,"nodeType":"ExpressionStatement","src":"7331:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1544,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"7408:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030303030303030303030","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7412:14:8","typeDescriptions":{"typeIdentifier":"t_rational_70368744177664_by_1","typeString":"int_const 70368744177664"},"value":"0x400000000000"},"src":"7408:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7429:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7408:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1559,"nodeType":"IfStatement","src":"7404:106:8","trueBody":{"id":1558,"nodeType":"Block","src":"7432:78:8","statements":[{"expression":{"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1549,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7450:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1550,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7460:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030324335433839443545433644","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7469:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446792849670663277_by_1","typeString":"int_const 18446792849670663277"},"value":"0x100002C5C89D5EC6D"},"src":"7460:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1553,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7459:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7493:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7459:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7450:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1557,"nodeType":"ExpressionStatement","src":"7450:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1560,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"7527:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030303030303030303030","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7531:14:8","typeDescriptions":{"typeIdentifier":"t_rational_35184372088832_by_1","typeString":"int_const 35184372088832"},"value":"0x200000000000"},"src":"7527:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7548:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7527:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1575,"nodeType":"IfStatement","src":"7523:106:8","trueBody":{"id":1574,"nodeType":"Block","src":"7551:78:8","statements":[{"expression":{"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7569:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7579:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030313632453433463446383331","id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7588:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446768461673986097_by_1","typeString":"int_const 18446768461673986097"},"value":"0x10000162E43F4F831"},"src":"7579:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1569,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7578:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7612:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7578:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7569:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1573,"nodeType":"ExpressionStatement","src":"7569:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1576,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"7646:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030303030303030303030","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7650:14:8","typeDescriptions":{"typeIdentifier":"t_rational_17592186044416_by_1","typeString":"int_const 17592186044416"},"value":"0x100000000000"},"src":"7646:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7667:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7646:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1591,"nodeType":"IfStatement","src":"7642:106:8","trueBody":{"id":1590,"nodeType":"Block","src":"7670:78:8","statements":[{"expression":{"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7688:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1582,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7698:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030304231373231424346433941","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7707:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446756267687738522_by_1","typeString":"int_const 18446756267687738522"},"value":"0x100000B1721BCFC9A"},"src":"7698:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1585,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7697:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7731:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7697:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7688:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1589,"nodeType":"ExpressionStatement","src":"7688:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1592,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"7765:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830303030303030303030","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7769:13:8","typeDescriptions":{"typeIdentifier":"t_rational_8796093022208_by_1","typeString":"int_const 8796093022208"},"value":"0x80000000000"},"src":"7765:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7785:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7765:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1607,"nodeType":"IfStatement","src":"7761:105:8","trueBody":{"id":1606,"nodeType":"Block","src":"7788:78:8","statements":[{"expression":{"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1597,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7806:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1598,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7816:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303538423930434631453645","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7825:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446750170697637486_by_1","typeString":"int_const 18446750170697637486"},"value":"0x10000058B90CF1E6E"},"src":"7816:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7815:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7849:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7815:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7806:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1605,"nodeType":"ExpressionStatement","src":"7806:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1608,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"7883:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430303030303030303030","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7887:13:8","typeDescriptions":{"typeIdentifier":"t_rational_4398046511104_by_1","typeString":"int_const 4398046511104"},"value":"0x40000000000"},"src":"7883:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7883:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1623,"nodeType":"IfStatement","src":"7879:105:8","trueBody":{"id":1622,"nodeType":"Block","src":"7906:78:8","statements":[{"expression":{"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7924:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1614,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7934:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303243354338363342373346","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7943:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446747122203342655_by_1","typeString":"int_const 18446747122203342655"},"value":"0x1000002C5C863B73F"},"src":"7934:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7933:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7967:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7933:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7924:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1621,"nodeType":"ExpressionStatement","src":"7924:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1624,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"8001:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230303030303030303030","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8005:13:8","typeDescriptions":{"typeIdentifier":"t_rational_2199023255552_by_1","typeString":"int_const 2199023255552"},"value":"0x20000000000"},"src":"8001:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8021:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8001:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1639,"nodeType":"IfStatement","src":"7997:105:8","trueBody":{"id":1638,"nodeType":"Block","src":"8024:78:8","statements":[{"expression":{"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1629,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8042:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8052:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303136324534333045354132","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446745597956384162_by_1","typeString":"int_const 18446745597956384162"},"value":"0x100000162E430E5A2"},"src":"8052:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1633,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8051:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8085:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8051:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8042:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1637,"nodeType":"ExpressionStatement","src":"8042:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"8119:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130303030303030303030","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8123:13:8","typeDescriptions":{"typeIdentifier":"t_rational_1099511627776_by_1","typeString":"int_const 1099511627776"},"value":"0x10000000000"},"src":"8119:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8139:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8119:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1655,"nodeType":"IfStatement","src":"8115:105:8","trueBody":{"id":1654,"nodeType":"Block","src":"8142:78:8","statements":[{"expression":{"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8160:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8170:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303042313732313833353531","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8179:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744835832952145_by_1","typeString":"int_const 18446744835832952145"},"value":"0x1000000B172183551"},"src":"8170:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1649,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8169:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8203:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8169:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8160:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1653,"nodeType":"ExpressionStatement","src":"8160:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1656,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"8237:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030303030303030","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8241:12:8","typeDescriptions":{"typeIdentifier":"t_rational_549755813888_by_1","typeString":"int_const 549755813888"},"value":"0x8000000000"},"src":"8237:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8256:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8237:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1671,"nodeType":"IfStatement","src":"8233:104:8","trueBody":{"id":1670,"nodeType":"Block","src":"8259:78:8","statements":[{"expression":{"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8277:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8287:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303035384239304330423439","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8296:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744454771247945_by_1","typeString":"int_const 18446744454771247945"},"value":"0x100000058B90C0B49"},"src":"8287:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8286:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8320:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8286:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8277:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1669,"nodeType":"ExpressionStatement","src":"8277:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1672,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"8354:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030303030303030","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8358:12:8","typeDescriptions":{"typeIdentifier":"t_rational_274877906944_by_1","typeString":"int_const 274877906944"},"value":"0x4000000000"},"src":"8354:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8373:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8354:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1687,"nodeType":"IfStatement","src":"8350:104:8","trueBody":{"id":1686,"nodeType":"Block","src":"8376:78:8","statements":[{"expression":{"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8394:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8404:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303032433543383630314343","id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8413:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744264240398796_by_1","typeString":"int_const 18446744264240398796"},"value":"0x10000002C5C8601CC"},"src":"8404:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8403:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8437:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8403:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8394:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1685,"nodeType":"ExpressionStatement","src":"8394:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"8471:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030303030303030","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8475:12:8","typeDescriptions":{"typeIdentifier":"t_rational_137438953472_by_1","typeString":"int_const 137438953472"},"value":"0x2000000000"},"src":"8471:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8471:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1703,"nodeType":"IfStatement","src":"8467:104:8","trueBody":{"id":1702,"nodeType":"Block","src":"8493:78:8","statements":[{"expression":{"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1693,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8511:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1694,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8521:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303031363245343246464630","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8530:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744168974974960_by_1","typeString":"int_const 18446744168974974960"},"value":"0x1000000162E42FFF0"},"src":"8521:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8520:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8554:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8520:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8511:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1701,"nodeType":"ExpressionStatement","src":"8511:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1704,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"8588:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030303030303030","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8592:12:8","typeDescriptions":{"typeIdentifier":"t_rational_68719476736_by_1","typeString":"int_const 68719476736"},"value":"0x1000000000"},"src":"8588:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8607:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8588:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1719,"nodeType":"IfStatement","src":"8584:104:8","trueBody":{"id":1718,"nodeType":"Block","src":"8610:78:8","statements":[{"expression":{"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8628:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1710,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8638:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030423137323137464242","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8647:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744121342263227_by_1","typeString":"int_const 18446744121342263227"},"value":"0x10000000B17217FBB"},"src":"8638:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8637:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8671:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8637:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8628:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1717,"nodeType":"ExpressionStatement","src":"8628:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1720,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"8705:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030303030303030","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8709:11:8","typeDescriptions":{"typeIdentifier":"t_rational_34359738368_by_1","typeString":"int_const 34359738368"},"value":"0x800000000"},"src":"8705:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8723:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8705:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1735,"nodeType":"IfStatement","src":"8701:103:8","trueBody":{"id":1734,"nodeType":"Block","src":"8726:78:8","statements":[{"expression":{"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1725,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8744:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1726,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8754:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030353842393042464345","id":1727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8763:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744097525907406_by_1","typeString":"int_const 18446744097525907406"},"value":"0x1000000058B90BFCE"},"src":"8754:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1729,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8753:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8787:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8753:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8744:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1733,"nodeType":"ExpressionStatement","src":"8744:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1736,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"8821:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030303030303030","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8825:11:8","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"value":"0x400000000"},"src":"8821:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8839:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8821:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1751,"nodeType":"IfStatement","src":"8817:103:8","trueBody":{"id":1750,"nodeType":"Block","src":"8842:78:8","statements":[{"expression":{"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1741,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8860:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1742,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8870:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030324335433835464533","id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8879:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744085617729507_by_1","typeString":"int_const 18446744085617729507"},"value":"0x100000002C5C85FE3"},"src":"8870:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8869:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8903:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8869:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8860:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1749,"nodeType":"ExpressionStatement","src":"8860:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1752,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"8937:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030303030303030","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8941:11:8","typeDescriptions":{"typeIdentifier":"t_rational_8589934592_by_1","typeString":"int_const 8589934592"},"value":"0x200000000"},"src":"8937:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8955:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8937:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1767,"nodeType":"IfStatement","src":"8933:103:8","trueBody":{"id":1766,"nodeType":"Block","src":"8958:78:8","statements":[{"expression":{"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8976:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8986:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030313632453432464631","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744079663640561_by_1","typeString":"int_const 18446744079663640561"},"value":"0x10000000162E42FF1"},"src":"8986:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1761,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8985:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9019:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8985:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8976:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1765,"nodeType":"ExpressionStatement","src":"8976:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1768,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9053:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030303030303030","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9057:11:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"value":"0x100000000"},"src":"9053:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9071:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9053:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1783,"nodeType":"IfStatement","src":"9049:103:8","trueBody":{"id":1782,"nodeType":"Block","src":"9074:78:8","statements":[{"expression":{"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1773,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9092:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1774,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9102:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030304231373231374638","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9111:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744076686596088_by_1","typeString":"int_const 18446744076686596088"},"value":"0x100000000B17217F8"},"src":"9102:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9101:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9101:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9092:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1781,"nodeType":"ExpressionStatement","src":"9092:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1784,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9169:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830303030303030","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:10:8","typeDescriptions":{"typeIdentifier":"t_rational_2147483648_by_1","typeString":"int_const 2147483648"},"value":"0x80000000"},"src":"9169:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9186:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9169:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1799,"nodeType":"IfStatement","src":"9165:102:8","trueBody":{"id":1798,"nodeType":"Block","src":"9189:78:8","statements":[{"expression":{"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1789,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9207:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9217:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303538423930424643","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9226:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744075198073852_by_1","typeString":"int_const 18446744075198073852"},"value":"0x10000000058B90BFC"},"src":"9217:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1793,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9216:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9250:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9216:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9207:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1797,"nodeType":"ExpressionStatement","src":"9207:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1800,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9284:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430303030303030","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9288:10:8","typeDescriptions":{"typeIdentifier":"t_rational_1073741824_by_1","typeString":"int_const 1073741824"},"value":"0x40000000"},"src":"9284:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9301:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9284:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1815,"nodeType":"IfStatement","src":"9280:102:8","trueBody":{"id":1814,"nodeType":"Block","src":"9304:78:8","statements":[{"expression":{"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9322:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1806,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9332:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303243354338354645","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9341:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744074453812734_by_1","typeString":"int_const 18446744074453812734"},"value":"0x1000000002C5C85FE"},"src":"9332:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9331:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9365:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9331:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9322:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1813,"nodeType":"ExpressionStatement","src":"9322:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1816,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9399:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230303030303030","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9403:10:8","typeDescriptions":{"typeIdentifier":"t_rational_536870912_by_1","typeString":"int_const 536870912"},"value":"0x20000000"},"src":"9399:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9416:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9399:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1831,"nodeType":"IfStatement","src":"9395:102:8","trueBody":{"id":1830,"nodeType":"Block","src":"9419:78:8","statements":[{"expression":{"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9437:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9447:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303136324534324646","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9456:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744074081682175_by_1","typeString":"int_const 18446744074081682175"},"value":"0x100000000162E42FF"},"src":"9447:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9446:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9480:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9446:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9437:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1829,"nodeType":"ExpressionStatement","src":"9437:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1832,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9514:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130303030303030","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9518:10:8","typeDescriptions":{"typeIdentifier":"t_rational_268435456_by_1","typeString":"int_const 268435456"},"value":"0x10000000"},"src":"9514:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9531:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9514:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1847,"nodeType":"IfStatement","src":"9510:102:8","trueBody":{"id":1846,"nodeType":"Block","src":"9534:78:8","statements":[{"expression":{"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1837,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9552:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1838,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9562:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303042313732313746","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9571:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073895616895_by_1","typeString":"int_const 18446744073895616895"},"value":"0x1000000000B17217F"},"src":"9562:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9561:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9595:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9561:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9552:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1845,"nodeType":"ExpressionStatement","src":"9552:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1848,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9629:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030303030","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9633:9:8","typeDescriptions":{"typeIdentifier":"t_rational_134217728_by_1","typeString":"int_const 134217728"},"value":"0x8000000"},"src":"9629:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9645:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9629:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1863,"nodeType":"IfStatement","src":"9625:101:8","trueBody":{"id":1862,"nodeType":"Block","src":"9648:78:8","statements":[{"expression":{"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1853,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9666:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1854,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9676:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303035384239304330","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9685:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073802584256_by_1","typeString":"int_const 18446744073802584256"},"value":"0x100000000058B90C0"},"src":"9676:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9675:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9709:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9675:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9666:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1861,"nodeType":"ExpressionStatement","src":"9666:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1864,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9743:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030303030","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9747:9:8","typeDescriptions":{"typeIdentifier":"t_rational_67108864_by_1","typeString":"int_const 67108864"},"value":"0x4000000"},"src":"9743:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9759:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9743:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1879,"nodeType":"IfStatement","src":"9739:101:8","trueBody":{"id":1878,"nodeType":"Block","src":"9762:78:8","statements":[{"expression":{"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1869,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9780:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1870,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9790:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303032433543383630","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9799:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073756067936_by_1","typeString":"int_const 18446744073756067936"},"value":"0x10000000002C5C860"},"src":"9790:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9789:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9823:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9789:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9780:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1877,"nodeType":"ExpressionStatement","src":"9780:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1880,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9857:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030303030","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9861:9:8","typeDescriptions":{"typeIdentifier":"t_rational_33554432_by_1","typeString":"int_const 33554432"},"value":"0x2000000"},"src":"9857:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9857:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1895,"nodeType":"IfStatement","src":"9853:101:8","trueBody":{"id":1894,"nodeType":"Block","src":"9876:78:8","statements":[{"expression":{"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1885,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9894:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1886,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9904:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303031363245343330","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9913:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073732809776_by_1","typeString":"int_const 18446744073732809776"},"value":"0x1000000000162E430"},"src":"9904:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9903:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9937:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9903:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9894:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1893,"nodeType":"ExpressionStatement","src":"9894:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1896,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9971:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030303030","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9975:9:8","typeDescriptions":{"typeIdentifier":"t_rational_16777216_by_1","typeString":"int_const 16777216"},"value":"0x1000000"},"src":"9971:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9987:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9971:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1911,"nodeType":"IfStatement","src":"9967:101:8","trueBody":{"id":1910,"nodeType":"Block","src":"9990:78:8","statements":[{"expression":{"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1901,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10008:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1902,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10018:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030423137323138","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10027:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073721180696_by_1","typeString":"int_const 18446744073721180696"},"value":"0x10000000000B17218"},"src":"10018:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10017:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10051:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10017:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10008:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1909,"nodeType":"ExpressionStatement","src":"10008:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1912,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"10085:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030303030","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10089:8:8","typeDescriptions":{"typeIdentifier":"t_rational_8388608_by_1","typeString":"int_const 8388608"},"value":"0x800000"},"src":"10085:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10100:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10085:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1927,"nodeType":"IfStatement","src":"10081:100:8","trueBody":{"id":1926,"nodeType":"Block","src":"10103:78:8","statements":[{"expression":{"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1917,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10121:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10131:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030353842393043","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10140:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073715366156_by_1","typeString":"int_const 18446744073715366156"},"value":"0x1000000000058B90C"},"src":"10131:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10130:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10164:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10130:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10121:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1925,"nodeType":"ExpressionStatement","src":"10121:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1928,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"10198:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030303030","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10202:8:8","typeDescriptions":{"typeIdentifier":"t_rational_4194304_by_1","typeString":"int_const 4194304"},"value":"0x400000"},"src":"10198:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10213:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10198:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1943,"nodeType":"IfStatement","src":"10194:100:8","trueBody":{"id":1942,"nodeType":"Block","src":"10216:78:8","statements":[{"expression":{"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1933,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10234:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1934,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10244:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030324335433836","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10253:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073712458886_by_1","typeString":"int_const 18446744073712458886"},"value":"0x100000000002C5C86"},"src":"10244:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10243:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10277:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10243:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10234:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1941,"nodeType":"ExpressionStatement","src":"10234:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1944,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"10311:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030303030","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:8:8","typeDescriptions":{"typeIdentifier":"t_rational_2097152_by_1","typeString":"int_const 2097152"},"value":"0x200000"},"src":"10311:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10326:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10311:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1959,"nodeType":"IfStatement","src":"10307:100:8","trueBody":{"id":1958,"nodeType":"Block","src":"10329:78:8","statements":[{"expression":{"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10347:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1950,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10357:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030313632453433","id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073711005251_by_1","typeString":"int_const 18446744073711005251"},"value":"0x10000000000162E43"},"src":"10357:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1953,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10356:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10390:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10356:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10347:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1957,"nodeType":"ExpressionStatement","src":"10347:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1960,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"10424:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030303030","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10428:8:8","typeDescriptions":{"typeIdentifier":"t_rational_1048576_by_1","typeString":"int_const 1048576"},"value":"0x100000"},"src":"10424:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10439:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10424:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1975,"nodeType":"IfStatement","src":"10420:100:8","trueBody":{"id":1974,"nodeType":"Block","src":"10442:78:8","statements":[{"expression":{"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1965,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10460:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1966,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10470:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030304231373231","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10479:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073710278433_by_1","typeString":"int_const 18446744073710278433"},"value":"0x100000000000B1721"},"src":"10470:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1969,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10469:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10503:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10469:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10460:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1973,"nodeType":"ExpressionStatement","src":"10460:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1976,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"10537:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830303030","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10541:7:8","typeDescriptions":{"typeIdentifier":"t_rational_524288_by_1","typeString":"int_const 524288"},"value":"0x80000"},"src":"10537:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10537:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1991,"nodeType":"IfStatement","src":"10533:99:8","trueBody":{"id":1990,"nodeType":"Block","src":"10554:78:8","statements":[{"expression":{"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1981,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10572:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1982,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10582:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303538423931","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10591:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709915025_by_1","typeString":"int_const 18446744073709915025"},"value":"0x10000000000058B91"},"src":"10582:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10581:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10615:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10581:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10572:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1989,"nodeType":"ExpressionStatement","src":"10572:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1992,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"10649:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430303030","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10653:7:8","typeDescriptions":{"typeIdentifier":"t_rational_262144_by_1","typeString":"int_const 262144"},"value":"0x40000"},"src":"10649:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10663:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10649:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2007,"nodeType":"IfStatement","src":"10645:99:8","trueBody":{"id":2006,"nodeType":"Block","src":"10666:78:8","statements":[{"expression":{"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1997,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10684:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1998,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10694:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303243354338","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10703:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709733320_by_1","typeString":"int_const 18446744073709733320"},"value":"0x1000000000002C5C8"},"src":"10694:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10693:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10727:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10693:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10684:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2005,"nodeType":"ExpressionStatement","src":"10684:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2008,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"10761:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230303030","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10765:7:8","typeDescriptions":{"typeIdentifier":"t_rational_131072_by_1","typeString":"int_const 131072"},"value":"0x20000"},"src":"10761:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10775:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10761:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2023,"nodeType":"IfStatement","src":"10757:99:8","trueBody":{"id":2022,"nodeType":"Block","src":"10778:78:8","statements":[{"expression":{"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10796:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2014,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10806:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303136324534","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10815:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709642468_by_1","typeString":"int_const 18446744073709642468"},"value":"0x100000000000162E4"},"src":"10806:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10805:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10839:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10805:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10796:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2021,"nodeType":"ExpressionStatement","src":"10796:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2024,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"10873:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130303030","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10877:7:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"value":"0x10000"},"src":"10873:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10887:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10873:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2039,"nodeType":"IfStatement","src":"10869:99:8","trueBody":{"id":2038,"nodeType":"Block","src":"10890:78:8","statements":[{"expression":{"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2029,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10908:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2030,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10918:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303042313732","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10927:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709597042_by_1","typeString":"int_const 18446744073709597042"},"value":"0x1000000000000B172"},"src":"10918:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10917:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10951:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10917:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10908:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2037,"nodeType":"ExpressionStatement","src":"10908:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2040,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"10985:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030","id":2041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10989:6:8","typeDescriptions":{"typeIdentifier":"t_rational_32768_by_1","typeString":"int_const 32768"},"value":"0x8000"},"src":"10985:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10998:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10985:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2055,"nodeType":"IfStatement","src":"10981:98:8","trueBody":{"id":2054,"nodeType":"Block","src":"11001:78:8","statements":[{"expression":{"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2045,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11019:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2046,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11029:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303035384239","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11038:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709574329_by_1","typeString":"int_const 18446744073709574329"},"value":"0x100000000000058B9"},"src":"11029:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11028:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11062:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11028:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11019:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2053,"nodeType":"ExpressionStatement","src":"11019:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2056,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"11096:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11100:6:8","typeDescriptions":{"typeIdentifier":"t_rational_16384_by_1","typeString":"int_const 16384"},"value":"0x4000"},"src":"11096:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11109:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11096:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2071,"nodeType":"IfStatement","src":"11092:98:8","trueBody":{"id":2070,"nodeType":"Block","src":"11112:78:8","statements":[{"expression":{"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2061,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11130:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2062,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11140:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303032433544","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11149:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709562973_by_1","typeString":"int_const 18446744073709562973"},"value":"0x10000000000002C5D"},"src":"11140:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11139:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11173:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11139:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11130:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2069,"nodeType":"ExpressionStatement","src":"11130:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2072,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"11207:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11211:6:8","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"value":"0x2000"},"src":"11207:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11220:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11207:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2087,"nodeType":"IfStatement","src":"11203:98:8","trueBody":{"id":2086,"nodeType":"Block","src":"11223:78:8","statements":[{"expression":{"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11241:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2078,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11251:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303031363245","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11260:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709557294_by_1","typeString":"int_const 18446744073709557294"},"value":"0x1000000000000162E"},"src":"11251:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11250:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11284:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11250:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11241:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2085,"nodeType":"ExpressionStatement","src":"11241:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2088,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"11318:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11322:6:8","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"value":"0x1000"},"src":"11318:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11331:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11318:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2103,"nodeType":"IfStatement","src":"11314:98:8","trueBody":{"id":2102,"nodeType":"Block","src":"11334:78:8","statements":[{"expression":{"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2093,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11352:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11362:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030423137","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11371:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709554455_by_1","typeString":"int_const 18446744073709554455"},"value":"0x10000000000000B17"},"src":"11362:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2097,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11361:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11395:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11361:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11352:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2101,"nodeType":"ExpressionStatement","src":"11352:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2104,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"11429:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11433:5:8","typeDescriptions":{"typeIdentifier":"t_rational_2048_by_1","typeString":"int_const 2048"},"value":"0x800"},"src":"11429:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11441:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11429:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2119,"nodeType":"IfStatement","src":"11425:97:8","trueBody":{"id":2118,"nodeType":"Block","src":"11444:78:8","statements":[{"expression":{"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2109,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11462:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2110,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11472:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030353843","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11481:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709553036_by_1","typeString":"int_const 18446744073709553036"},"value":"0x1000000000000058C"},"src":"11472:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11471:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11505:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11471:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11462:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2117,"nodeType":"ExpressionStatement","src":"11462:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2120,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"11539:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11543:5:8","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"value":"0x400"},"src":"11539:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11551:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11539:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2135,"nodeType":"IfStatement","src":"11535:97:8","trueBody":{"id":2134,"nodeType":"Block","src":"11554:78:8","statements":[{"expression":{"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2125,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11572:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2126,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11582:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030324336","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11591:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709552326_by_1","typeString":"int_const 18446744073709552326"},"value":"0x100000000000002C6"},"src":"11582:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11581:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11615:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11581:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11572:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2133,"nodeType":"ExpressionStatement","src":"11572:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2136,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"11649:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11653:5:8","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"value":"0x200"},"src":"11649:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11661:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11649:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2151,"nodeType":"IfStatement","src":"11645:97:8","trueBody":{"id":2150,"nodeType":"Block","src":"11664:78:8","statements":[{"expression":{"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11682:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11692:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030313633","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11701:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551971_by_1","typeString":"int_const 18446744073709551971"},"value":"0x10000000000000163"},"src":"11692:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2145,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11691:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11725:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11691:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11682:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2149,"nodeType":"ExpressionStatement","src":"11682:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2152,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"11759:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030","id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11763:5:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"0x100"},"src":"11759:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11771:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11759:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2167,"nodeType":"IfStatement","src":"11755:97:8","trueBody":{"id":2166,"nodeType":"Block","src":"11774:78:8","statements":[{"expression":{"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11792:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2158,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11802:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030304231","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11811:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551793_by_1","typeString":"int_const 18446744073709551793"},"value":"0x100000000000000B1"},"src":"11802:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11801:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11835:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11801:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11792:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2165,"nodeType":"ExpressionStatement","src":"11792:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2168,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"11869:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11873:4:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"src":"11869:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11880:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11869:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2183,"nodeType":"IfStatement","src":"11865:96:8","trueBody":{"id":2182,"nodeType":"Block","src":"11883:78:8","statements":[{"expression":{"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2173,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11901:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11911:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030303539","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11920:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551705_by_1","typeString":"int_const 18446744073709551705"},"value":"0x10000000000000059"},"src":"11911:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11910:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11944:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11910:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11901:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2181,"nodeType":"ExpressionStatement","src":"11901:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2184,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"11978:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11982:4:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"11978:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11989:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11978:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2199,"nodeType":"IfStatement","src":"11974:96:8","trueBody":{"id":2198,"nodeType":"Block","src":"11992:78:8","statements":[{"expression":{"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2189,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"12010:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2190,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"12020:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030303243","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12029:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551660_by_1","typeString":"int_const 18446744073709551660"},"value":"0x1000000000000002C"},"src":"12020:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12019:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12053:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12019:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12010:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2197,"nodeType":"ExpressionStatement","src":"12010:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2200,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"12087:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:4:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"12087:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12098:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12087:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2215,"nodeType":"IfStatement","src":"12083:96:8","trueBody":{"id":2214,"nodeType":"Block","src":"12101:78:8","statements":[{"expression":{"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2205,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"12119:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"12129:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030303136","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12138:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551638_by_1","typeString":"int_const 18446744073709551638"},"value":"0x10000000000000016"},"src":"12129:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12128:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12162:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12128:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12119:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2213,"nodeType":"ExpressionStatement","src":"12119:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2216,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"12196:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12200:4:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"0x10"},"src":"12196:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12207:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12196:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2231,"nodeType":"IfStatement","src":"12192:96:8","trueBody":{"id":2230,"nodeType":"Block","src":"12210:78:8","statements":[{"expression":{"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2221,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"12228:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2222,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"12238:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030303042","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12247:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551627_by_1","typeString":"int_const 18446744073709551627"},"value":"0x1000000000000000B"},"src":"12238:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12237:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12271:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12237:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12228:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2229,"nodeType":"ExpressionStatement","src":"12228:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2232,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"12305:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12309:3:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x8"},"src":"12305:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12315:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12305:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2247,"nodeType":"IfStatement","src":"12301:95:8","trueBody":{"id":2246,"nodeType":"Block","src":"12318:78:8","statements":[{"expression":{"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"12336:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2238,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"12346:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030303036","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12355:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551622_by_1","typeString":"int_const 18446744073709551622"},"value":"0x10000000000000006"},"src":"12346:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2241,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12345:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12379:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12345:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12336:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2245,"nodeType":"ExpressionStatement","src":"12336:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2248,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"12413:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12417:3:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x4"},"src":"12413:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12423:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12413:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2263,"nodeType":"IfStatement","src":"12409:95:8","trueBody":{"id":2262,"nodeType":"Block","src":"12426:78:8","statements":[{"expression":{"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2253,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"12444:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"12454:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030303033","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12463:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551619_by_1","typeString":"int_const 18446744073709551619"},"value":"0x10000000000000003"},"src":"12454:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12453:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12487:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12453:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12444:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2261,"nodeType":"ExpressionStatement","src":"12444:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2264,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"12521:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12525:3:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"0x2"},"src":"12521:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12531:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12521:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2279,"nodeType":"IfStatement","src":"12517:95:8","trueBody":{"id":2278,"nodeType":"Block","src":"12534:78:8","statements":[{"expression":{"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2269,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"12552:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2270,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"12562:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030303031","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551617_by_1","typeString":"int_const 18446744073709551617"},"value":"0x10000000000000001"},"src":"12562:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12561:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12595:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12561:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12552:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2277,"nodeType":"ExpressionStatement","src":"12552:45:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2280,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"12629:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12633:3:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x1"},"src":"12629:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12639:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12629:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2295,"nodeType":"IfStatement","src":"12625:95:8","trueBody":{"id":2294,"nodeType":"Block","src":"12642:78:8","statements":[{"expression":{"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"12660:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2286,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"12670:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030303031","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12679:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551617_by_1","typeString":"int_const 18446744073709551617"},"value":"0x10000000000000001"},"src":"12670:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12669:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12703:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12669:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12660:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2293,"nodeType":"ExpressionStatement","src":"12660:45:8"}]}},{"expression":{"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2296,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"13280:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"id":2297,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"13290:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13280:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2299,"nodeType":"ExpressionStatement","src":"13280:15:8"},{"expression":{"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2300,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"13309:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313931","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13321:3:8","typeDescriptions":{"typeIdentifier":"t_rational_191_by_1","typeString":"int_const 191"},"value":"191"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2302,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"13328:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13333:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"13328:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13327:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13321:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2307,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13320:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13309:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2309,"nodeType":"ExpressionStatement","src":"13309:28:8"}]}]},"documentation":{"id":1261,"nodeType":"StructuredDocumentation","src":"4517:358:8","text":"@notice Calculates the binary exponent of x using the binary fraction method.\n @dev Has to use 192.64-bit fixed-point numbers.\n See https://ethereum.stackexchange.com/a/96594/24693.\n @param x The exponent as an unsigned 192.64-bit fixed-point number.\n @return result The result as an unsigned 60.18-decimal fixed-point number."},"id":2312,"implemented":true,"kind":"function","modifiers":[],"name":"exp2","nameLocation":"4889:4:8","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"x","nameLocation":"4902:1:8","nodeType":"VariableDeclaration","scope":2312,"src":"4894:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"4894:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4893:11:8"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"result","nameLocation":"4936:6:8","nodeType":"VariableDeclaration","scope":2312,"src":"4928:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"4928:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4927:16:8"},"scope":2979,"src":"4880:8474:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2436,"nodeType":"Block","src":"13816:669:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2320,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"13830:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13835:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"313238","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13838:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13835:6:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"13830:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2334,"nodeType":"IfStatement","src":"13826:75:8","trueBody":{"id":2333,"nodeType":"Block","src":"13843:58:8","statements":[{"expression":{"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2325,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"13857:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13863:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13857:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2328,"nodeType":"ExpressionStatement","src":"13857:9:8"},{"expression":{"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2329,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"13880:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13887:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13880:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2332,"nodeType":"ExpressionStatement","src":"13880:10:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2335,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"13914:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13919:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13922:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"13919:5:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"13914:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2349,"nodeType":"IfStatement","src":"13910:72:8","trueBody":{"id":2348,"nodeType":"Block","src":"13926:56:8","statements":[{"expression":{"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2340,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"13940:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13946:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"13940:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2343,"nodeType":"ExpressionStatement","src":"13940:8:8"},{"expression":{"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2344,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"13962:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13969:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"13962:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2347,"nodeType":"ExpressionStatement","src":"13962:9:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2350,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"13995:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14000:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14003:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14000:5:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"13995:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2364,"nodeType":"IfStatement","src":"13991:72:8","trueBody":{"id":2363,"nodeType":"Block","src":"14007:56:8","statements":[{"expression":{"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2355,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14021:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14027:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14021:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2358,"nodeType":"ExpressionStatement","src":"14021:8:8"},{"expression":{"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2359,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"14043:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14050:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14043:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2362,"nodeType":"ExpressionStatement","src":"14043:9:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2365,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14076:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14081:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14084:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14081:5:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"14076:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2379,"nodeType":"IfStatement","src":"14072:72:8","trueBody":{"id":2378,"nodeType":"Block","src":"14088:56:8","statements":[{"expression":{"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2370,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14102:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14108:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14102:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2373,"nodeType":"ExpressionStatement","src":"14102:8:8"},{"expression":{"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2374,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"14124:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14131:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14124:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2377,"nodeType":"ExpressionStatement","src":"14124:9:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2380,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14157:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14162:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14165:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14162:4:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"14157:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2394,"nodeType":"IfStatement","src":"14153:69:8","trueBody":{"id":2393,"nodeType":"Block","src":"14168:54:8","statements":[{"expression":{"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2385,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14182:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14188:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14182:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2388,"nodeType":"ExpressionStatement","src":"14182:7:8"},{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2389,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"14203:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14210:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14203:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2392,"nodeType":"ExpressionStatement","src":"14203:8:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2395,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14235:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":2398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14240:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14243:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14240:4:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"14235:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2409,"nodeType":"IfStatement","src":"14231:69:8","trueBody":{"id":2408,"nodeType":"Block","src":"14246:54:8","statements":[{"expression":{"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2400,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14260:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14266:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14260:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2403,"nodeType":"ExpressionStatement","src":"14260:7:8"},{"expression":{"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2404,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"14281:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14288:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14281:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2407,"nodeType":"ExpressionStatement","src":"14281:8:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14313:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14318:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14321:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14318:4:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"14313:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2424,"nodeType":"IfStatement","src":"14309:69:8","trueBody":{"id":2423,"nodeType":"Block","src":"14324:54:8","statements":[{"expression":{"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2415,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14338:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14344:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14338:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2418,"nodeType":"ExpressionStatement","src":"14338:7:8"},{"expression":{"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2419,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"14359:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14366:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14359:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2422,"nodeType":"ExpressionStatement","src":"14359:8:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14391:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"id":2428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14396:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14399:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14396:4:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}},"src":"14391:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2435,"nodeType":"IfStatement","src":"14387:92:8","trueBody":{"id":2434,"nodeType":"Block","src":"14402:77:8","statements":[{"expression":{"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2430,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"14460:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14467:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14460:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2433,"nodeType":"ExpressionStatement","src":"14460:8:8"}]}}]},"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"13360:376:8","text":"@notice Finds the zero-based index of the first one in the binary representation of x.\n @dev See the note on msb in the \"Find First Set\" Wikipedia article https://en.wikipedia.org/wiki/Find_first_set\n @param x The uint256 number for which to find the index of the most significant bit.\n @return msb The index of the most significant bit as an uint256."},"id":2437,"implemented":true,"kind":"function","modifiers":[],"name":"mostSignificantBit","nameLocation":"13750:18:8","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"x","nameLocation":"13777:1:8","nodeType":"VariableDeclaration","scope":2437,"src":"13769:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"13769:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13768:11:8"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"msb","nameLocation":"13811:3:8","nodeType":"VariableDeclaration","scope":2437,"src":"13803:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13802:13:8"},"scope":2979,"src":"13741:744:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2567,"nodeType":"Block","src":"15201:3855:8","statements":[{"assignments":[2450],"declarations":[{"constant":false,"id":2450,"mutability":"mutable","name":"prod0","nameLocation":"15504:5:8","nodeType":"VariableDeclaration","scope":2567,"src":"15496:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2449,"name":"uint256","nodeType":"ElementaryTypeName","src":"15496:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2451,"nodeType":"VariableDeclarationStatement","src":"15496:13:8"},{"assignments":[2453],"declarations":[{"constant":false,"id":2453,"mutability":"mutable","name":"prod1","nameLocation":"15572:5:8","nodeType":"VariableDeclaration","scope":2567,"src":"15564:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"15564:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2454,"nodeType":"VariableDeclarationStatement","src":"15564:13:8"},{"AST":{"nodeType":"YulBlock","src":"15640:141:8","statements":[{"nodeType":"YulVariableDeclaration","src":"15654:30:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15671:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"15674:1:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15681:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15677:3:8"},"nodeType":"YulFunctionCall","src":"15677:6:8"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"15664:6:8"},"nodeType":"YulFunctionCall","src":"15664:20:8"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"15658:2:8","type":""}]},{"nodeType":"YulAssignment","src":"15697:18:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15710:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"15713:1:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15706:3:8"},"nodeType":"YulFunctionCall","src":"15706:9:8"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"15697:5:8"}]},{"nodeType":"YulAssignment","src":"15728:43:8","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"15745:2:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"15749:5:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15741:3:8"},"nodeType":"YulFunctionCall","src":"15741:14:8"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"15760:2:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"15764:5:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15757:2:8"},"nodeType":"YulFunctionCall","src":"15757:13:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15737:3:8"},"nodeType":"YulFunctionCall","src":"15737:34:8"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"15728:5:8"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2450,"isOffset":false,"isSlot":false,"src":"15697:5:8","valueSize":1},{"declaration":2450,"isOffset":false,"isSlot":false,"src":"15749:5:8","valueSize":1},{"declaration":2450,"isOffset":false,"isSlot":false,"src":"15764:5:8","valueSize":1},{"declaration":2453,"isOffset":false,"isSlot":false,"src":"15728:5:8","valueSize":1},{"declaration":2440,"isOffset":false,"isSlot":false,"src":"15671:1:8","valueSize":1},{"declaration":2440,"isOffset":false,"isSlot":false,"src":"15710:1:8","valueSize":1},{"declaration":2442,"isOffset":false,"isSlot":false,"src":"15674:1:8","valueSize":1},{"declaration":2442,"isOffset":false,"isSlot":false,"src":"15713:1:8","valueSize":1}],"id":2455,"nodeType":"InlineAssembly","src":"15631:150:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2456,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"15854:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15863:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15854:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2469,"nodeType":"IfStatement","src":"15850:138:8","trueBody":{"id":2468,"nodeType":"Block","src":"15866:122:8","statements":[{"id":2465,"nodeType":"UncheckedBlock","src":"15880:71:8","statements":[{"expression":{"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"15908:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2460,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"15917:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2461,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"15925:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15917:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15908:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2464,"nodeType":"ExpressionStatement","src":"15908:28:8"}]},{"expression":{"id":2466,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"15971:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2448,"id":2467,"nodeType":"Return","src":"15964:13:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2470,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"16086:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2471,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"16095:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16086:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2479,"nodeType":"IfStatement","src":"16082:101:8","trueBody":{"id":2478,"nodeType":"Block","src":"16108:75:8","statements":[{"errorCall":{"arguments":[{"id":2474,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"16153:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2475,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"16160:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2473,"name":"PRBMath__MulDivOverflow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"16129:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16129:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2477,"nodeType":"RevertStatement","src":"16122:50:8"}]}},{"assignments":[2481],"declarations":[{"constant":false,"id":2481,"mutability":"mutable","name":"remainder","nameLocation":"16426:9:8","nodeType":"VariableDeclaration","scope":2567,"src":"16418:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"16418:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2482,"nodeType":"VariableDeclarationStatement","src":"16418:17:8"},{"AST":{"nodeType":"YulBlock","src":"16454:267:8","statements":[{"nodeType":"YulAssignment","src":"16515:38:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16535:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"16538:1:8"},{"name":"denominator","nodeType":"YulIdentifier","src":"16541:11:8"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"16528:6:8"},"nodeType":"YulFunctionCall","src":"16528:25:8"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"16515:9:8"}]},{"nodeType":"YulAssignment","src":"16627:41:8","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"16640:5:8"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"16650:9:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"16661:5:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16647:2:8"},"nodeType":"YulFunctionCall","src":"16647:20:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16636:3:8"},"nodeType":"YulFunctionCall","src":"16636:32:8"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"16627:5:8"}]},{"nodeType":"YulAssignment","src":"16681:30:8","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"16694:5:8"},{"name":"remainder","nodeType":"YulIdentifier","src":"16701:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16690:3:8"},"nodeType":"YulFunctionCall","src":"16690:21:8"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"16681:5:8"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2444,"isOffset":false,"isSlot":false,"src":"16541:11:8","valueSize":1},{"declaration":2450,"isOffset":false,"isSlot":false,"src":"16661:5:8","valueSize":1},{"declaration":2450,"isOffset":false,"isSlot":false,"src":"16681:5:8","valueSize":1},{"declaration":2450,"isOffset":false,"isSlot":false,"src":"16694:5:8","valueSize":1},{"declaration":2453,"isOffset":false,"isSlot":false,"src":"16627:5:8","valueSize":1},{"declaration":2453,"isOffset":false,"isSlot":false,"src":"16640:5:8","valueSize":1},{"declaration":2481,"isOffset":false,"isSlot":false,"src":"16515:9:8","valueSize":1},{"declaration":2481,"isOffset":false,"isSlot":false,"src":"16650:9:8","valueSize":1},{"declaration":2481,"isOffset":false,"isSlot":false,"src":"16701:9:8","valueSize":1},{"declaration":2440,"isOffset":false,"isSlot":false,"src":"16535:1:8","valueSize":1},{"declaration":2442,"isOffset":false,"isSlot":false,"src":"16538:1:8","valueSize":1}],"id":2483,"nodeType":"InlineAssembly","src":"16445:276:8"},{"id":2566,"nodeType":"UncheckedBlock","src":"16912:2138:8","statements":[{"assignments":[2485],"declarations":[{"constant":false,"id":2485,"mutability":"mutable","name":"lpotdod","nameLocation":"17047:7:8","nodeType":"VariableDeclaration","scope":2566,"src":"17039:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2484,"name":"uint256","nodeType":"ElementaryTypeName","src":"17039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2493,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2486,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"17057:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"17072:12:8","subExpression":{"id":2487,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"17073:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17087:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17072:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2491,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17071:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17057:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17039:50:8"},{"AST":{"nodeType":"YulBlock","src":"17112:392:8","statements":[{"nodeType":"YulAssignment","src":"17180:40:8","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"17199:11:8"},{"name":"lpotdod","nodeType":"YulIdentifier","src":"17212:7:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17195:3:8"},"nodeType":"YulFunctionCall","src":"17195:25:8"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"17180:11:8"}]},{"nodeType":"YulAssignment","src":"17290:28:8","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"17303:5:8"},{"name":"lpotdod","nodeType":"YulIdentifier","src":"17310:7:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17299:3:8"},"nodeType":"YulFunctionCall","src":"17299:19:8"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"17290:5:8"}]},{"nodeType":"YulAssignment","src":"17442:48:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17465:1:8","type":"","value":"0"},{"name":"lpotdod","nodeType":"YulIdentifier","src":"17468:7:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17461:3:8"},"nodeType":"YulFunctionCall","src":"17461:15:8"},{"name":"lpotdod","nodeType":"YulIdentifier","src":"17478:7:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17457:3:8"},"nodeType":"YulFunctionCall","src":"17457:29:8"},{"kind":"number","nodeType":"YulLiteral","src":"17488:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17453:3:8"},"nodeType":"YulFunctionCall","src":"17453:37:8"},"variableNames":[{"name":"lpotdod","nodeType":"YulIdentifier","src":"17442:7:8"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2444,"isOffset":false,"isSlot":false,"src":"17180:11:8","valueSize":1},{"declaration":2444,"isOffset":false,"isSlot":false,"src":"17199:11:8","valueSize":1},{"declaration":2485,"isOffset":false,"isSlot":false,"src":"17212:7:8","valueSize":1},{"declaration":2485,"isOffset":false,"isSlot":false,"src":"17310:7:8","valueSize":1},{"declaration":2485,"isOffset":false,"isSlot":false,"src":"17442:7:8","valueSize":1},{"declaration":2485,"isOffset":false,"isSlot":false,"src":"17468:7:8","valueSize":1},{"declaration":2485,"isOffset":false,"isSlot":false,"src":"17478:7:8","valueSize":1},{"declaration":2450,"isOffset":false,"isSlot":false,"src":"17290:5:8","valueSize":1},{"declaration":2450,"isOffset":false,"isSlot":false,"src":"17303:5:8","valueSize":1}],"id":2494,"nodeType":"InlineAssembly","src":"17103:401:8"},{"expression":{"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2495,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"17570:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2496,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"17579:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2497,"name":"lpotdod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"17587:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17579:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17570:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2500,"nodeType":"ExpressionStatement","src":"17570:24:8"},{"assignments":[2502],"declarations":[{"constant":false,"id":2502,"mutability":"mutable","name":"inverse","nameLocation":"17920:7:8","nodeType":"VariableDeclaration","scope":2566,"src":"17912:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"17912:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2509,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17931:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2504,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"17935:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17931:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17930:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17950:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"17930:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17912:39:8"},{"expression":{"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2510,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"18168:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2512,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"18183:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2513,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"18197:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18183:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18179:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18168:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2517,"nodeType":"ExpressionStatement","src":"18168:36:8"},{"expression":{"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2518,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"18237:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18248:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2520,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"18252:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2521,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"18266:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18252:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18248:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18237:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2525,"nodeType":"ExpressionStatement","src":"18237:36:8"},{"expression":{"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2526,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"18307:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18318:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"18322:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2529,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"18336:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18322:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18318:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18307:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2533,"nodeType":"ExpressionStatement","src":"18307:36:8"},{"expression":{"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2534,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"18377:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18388:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2536,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"18392:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2537,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"18406:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18392:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18388:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18377:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2541,"nodeType":"ExpressionStatement","src":"18377:36:8"},{"expression":{"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2542,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"18447:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18458:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"18462:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2545,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"18476:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18462:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18458:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18447:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2549,"nodeType":"ExpressionStatement","src":"18447:36:8"},{"expression":{"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2550,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"18518:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18529:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2552,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"18533:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2553,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"18547:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18533:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18529:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18518:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2557,"nodeType":"ExpressionStatement","src":"18518:36:8"},{"expression":{"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2558,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"18988:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2559,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"18997:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2560,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"19005:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18997:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18988:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2563,"nodeType":"ExpressionStatement","src":"18988:24:8"},{"expression":{"id":2564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"19033:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2448,"id":2565,"nodeType":"Return","src":"19026:13:8"}]}]},"documentation":{"id":2438,"nodeType":"StructuredDocumentation","src":"14491:577:8","text":"@notice Calculates floor(x*y÷denominator) with full precision.\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv.\n Requirements:\n - The denominator cannot be zero.\n - The result must fit within uint256.\n Caveats:\n - This function does not work with fixed-point numbers.\n @param x The multiplicand as an uint256.\n @param y The multiplier as an uint256.\n @param denominator The divisor as an uint256.\n @return result The result as an uint256."},"id":2568,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"15082:6:8","nodeType":"FunctionDefinition","parameters":{"id":2445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"x","nameLocation":"15106:1:8","nodeType":"VariableDeclaration","scope":2568,"src":"15098:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2439,"name":"uint256","nodeType":"ElementaryTypeName","src":"15098:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2442,"mutability":"mutable","name":"y","nameLocation":"15125:1:8","nodeType":"VariableDeclaration","scope":2568,"src":"15117:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2441,"name":"uint256","nodeType":"ElementaryTypeName","src":"15117:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2444,"mutability":"mutable","name":"denominator","nameLocation":"15144:11:8","nodeType":"VariableDeclaration","scope":2568,"src":"15136:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2443,"name":"uint256","nodeType":"ElementaryTypeName","src":"15136:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15088:73:8"},"returnParameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2447,"mutability":"mutable","name":"result","nameLocation":"15193:6:8","nodeType":"VariableDeclaration","scope":2568,"src":"15185:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"15185:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15184:16:8"},"scope":2979,"src":"15073:3983:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2619,"nodeType":"Block","src":"20300:1144:8","statements":[{"assignments":[2579],"declarations":[{"constant":false,"id":2579,"mutability":"mutable","name":"prod0","nameLocation":"20318:5:8","nodeType":"VariableDeclaration","scope":2619,"src":"20310:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"20310:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2580,"nodeType":"VariableDeclarationStatement","src":"20310:13:8"},{"assignments":[2582],"declarations":[{"constant":false,"id":2582,"mutability":"mutable","name":"prod1","nameLocation":"20341:5:8","nodeType":"VariableDeclaration","scope":2619,"src":"20333:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"20333:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2583,"nodeType":"VariableDeclarationStatement","src":"20333:13:8"},{"AST":{"nodeType":"YulBlock","src":"20365:141:8","statements":[{"nodeType":"YulVariableDeclaration","src":"20379:30:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20396:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"20399:1:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20406:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20402:3:8"},"nodeType":"YulFunctionCall","src":"20402:6:8"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"20389:6:8"},"nodeType":"YulFunctionCall","src":"20389:20:8"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"20383:2:8","type":""}]},{"nodeType":"YulAssignment","src":"20422:18:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20435:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"20438:1:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20431:3:8"},"nodeType":"YulFunctionCall","src":"20431:9:8"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"20422:5:8"}]},{"nodeType":"YulAssignment","src":"20453:43:8","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"20470:2:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"20474:5:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20466:3:8"},"nodeType":"YulFunctionCall","src":"20466:14:8"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"20485:2:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"20489:5:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20482:2:8"},"nodeType":"YulFunctionCall","src":"20482:13:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20462:3:8"},"nodeType":"YulFunctionCall","src":"20462:34:8"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"20453:5:8"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2579,"isOffset":false,"isSlot":false,"src":"20422:5:8","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"20474:5:8","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"20489:5:8","valueSize":1},{"declaration":2582,"isOffset":false,"isSlot":false,"src":"20453:5:8","valueSize":1},{"declaration":2571,"isOffset":false,"isSlot":false,"src":"20396:1:8","valueSize":1},{"declaration":2571,"isOffset":false,"isSlot":false,"src":"20435:1:8","valueSize":1},{"declaration":2573,"isOffset":false,"isSlot":false,"src":"20399:1:8","valueSize":1},{"declaration":2573,"isOffset":false,"isSlot":false,"src":"20438:1:8","valueSize":1}],"id":2584,"nodeType":"InlineAssembly","src":"20356:150:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2585,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"20520:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2586,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"20529:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20520:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2593,"nodeType":"IfStatement","src":"20516:92:8","trueBody":{"id":2592,"nodeType":"Block","src":"20536:72:8","statements":[{"errorCall":{"arguments":[{"id":2589,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"20591:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2588,"name":"PRBMath__MulDivFixedPointOverflow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"20557:33:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20557:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2591,"nodeType":"RevertStatement","src":"20550:47:8"}]}},{"assignments":[2595],"declarations":[{"constant":false,"id":2595,"mutability":"mutable","name":"remainder","nameLocation":"20626:9:8","nodeType":"VariableDeclaration","scope":2619,"src":"20618:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"20618:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2596,"nodeType":"VariableDeclarationStatement","src":"20618:17:8"},{"assignments":[2598],"declarations":[{"constant":false,"id":2598,"mutability":"mutable","name":"roundUpUnit","nameLocation":"20653:11:8","nodeType":"VariableDeclaration","scope":2619,"src":"20645:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"20645:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2599,"nodeType":"VariableDeclarationStatement","src":"20645:19:8"},{"AST":{"nodeType":"YulBlock","src":"20683:117:8","statements":[{"nodeType":"YulAssignment","src":"20697:32:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20717:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"20720:1:8"},{"name":"SCALE","nodeType":"YulIdentifier","src":"20723:5:8"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"20710:6:8"},"nodeType":"YulFunctionCall","src":"20710:19:8"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"20697:9:8"}]},{"nodeType":"YulAssignment","src":"20742:48:8","value":{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"20760:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"20771:18:8","type":"","value":"499999999999999999"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20757:2:8"},"nodeType":"YulFunctionCall","src":"20757:33:8"},"variableNames":[{"name":"roundUpUnit","nodeType":"YulIdentifier","src":"20742:11:8"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1252,"isOffset":false,"isSlot":false,"src":"20723:5:8","valueSize":1},{"declaration":2595,"isOffset":false,"isSlot":false,"src":"20697:9:8","valueSize":1},{"declaration":2595,"isOffset":false,"isSlot":false,"src":"20760:9:8","valueSize":1},{"declaration":2598,"isOffset":false,"isSlot":false,"src":"20742:11:8","valueSize":1},{"declaration":2571,"isOffset":false,"isSlot":false,"src":"20717:1:8","valueSize":1},{"declaration":2573,"isOffset":false,"isSlot":false,"src":"20720:1:8","valueSize":1}],"id":2600,"nodeType":"InlineAssembly","src":"20674:126:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2601,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"20814:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20823:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20814:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2617,"nodeType":"IfStatement","src":"20810:152:8","trueBody":{"id":2616,"nodeType":"Block","src":"20826:136:8","statements":[{"id":2615,"nodeType":"UncheckedBlock","src":"20840:112:8","statements":[{"expression":{"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2604,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"20868:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2605,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"20878:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2606,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"20886:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20878:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20877:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2609,"name":"roundUpUnit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"20895:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20877:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20868:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2612,"nodeType":"ExpressionStatement","src":"20868:38:8"},{"expression":{"id":2613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"20931:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2577,"id":2614,"nodeType":"Return","src":"20924:13:8"}]}]}},{"AST":{"nodeType":"YulBlock","src":"20981:457:8","statements":[{"nodeType":"YulAssignment","src":"20995:433:8","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"21087:5:8"},{"name":"remainder","nodeType":"YulIdentifier","src":"21094:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21083:3:8"},"nodeType":"YulFunctionCall","src":"21083:21:8"},{"name":"SCALE_LPOTD","nodeType":"YulIdentifier","src":"21106:11:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21079:3:8"},"nodeType":"YulFunctionCall","src":"21079:39:8"},{"arguments":[{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"21181:5:8"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"21191:9:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"21202:5:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21188:2:8"},"nodeType":"YulFunctionCall","src":"21188:20:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21177:3:8"},"nodeType":"YulFunctionCall","src":"21177:32:8"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21251:1:8","type":"","value":"0"},{"name":"SCALE_LPOTD","nodeType":"YulIdentifier","src":"21254:11:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21247:3:8"},"nodeType":"YulFunctionCall","src":"21247:19:8"},{"name":"SCALE_LPOTD","nodeType":"YulIdentifier","src":"21268:11:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21243:3:8"},"nodeType":"YulFunctionCall","src":"21243:37:8"},{"kind":"number","nodeType":"YulLiteral","src":"21282:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21239:3:8"},"nodeType":"YulFunctionCall","src":"21239:45:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21144:3:8"},"nodeType":"YulFunctionCall","src":"21144:166:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"21051:2:8"},"nodeType":"YulFunctionCall","src":"21051:281:8"},{"name":"SCALE_INVERSE","nodeType":"YulIdentifier","src":"21354:13:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21026:3:8"},"nodeType":"YulFunctionCall","src":"21026:359:8"},{"name":"roundUpUnit","nodeType":"YulIdentifier","src":"21403:11:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21005:3:8"},"nodeType":"YulFunctionCall","src":"21005:423:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"20995:6:8"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1260,"isOffset":false,"isSlot":false,"src":"21354:13:8","valueSize":1},{"declaration":1256,"isOffset":false,"isSlot":false,"src":"21106:11:8","valueSize":1},{"declaration":1256,"isOffset":false,"isSlot":false,"src":"21254:11:8","valueSize":1},{"declaration":1256,"isOffset":false,"isSlot":false,"src":"21268:11:8","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"21087:5:8","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"21202:5:8","valueSize":1},{"declaration":2582,"isOffset":false,"isSlot":false,"src":"21181:5:8","valueSize":1},{"declaration":2595,"isOffset":false,"isSlot":false,"src":"21094:9:8","valueSize":1},{"declaration":2595,"isOffset":false,"isSlot":false,"src":"21191:9:8","valueSize":1},{"declaration":2576,"isOffset":false,"isSlot":false,"src":"20995:6:8","valueSize":1},{"declaration":2598,"isOffset":false,"isSlot":false,"src":"21403:11:8","valueSize":1}],"id":2618,"nodeType":"InlineAssembly","src":"20972:466:8"}]},"documentation":{"id":2569,"nodeType":"StructuredDocumentation","src":"19062:1118:8","text":"@notice Calculates floor(x*y÷1e18) with full precision.\n @dev Variant of \"mulDiv\" with constant folding, i.e. in which the denominator is always 1e18. Before returning the\n final result, we add 1 if (x * y) % SCALE >= HALF_SCALE. Without this, 6.6e-19 would be truncated to 0 instead of\n being rounded to 1e-18.  See \"Listing 6\" and text above it at https://accu.org/index.php/journals/1717.\n Requirements:\n - The result must fit within uint256.\n Caveats:\n - The body is purposely left uncommented; see the NatSpec comments in \"PRBMath.mulDiv\" to understand how this works.\n - It is assumed that the result can never be type(uint256).max when x and y solve the following two equations:\n     1. x * y = type(uint256).max * SCALE\n     2. (x * y) % SCALE >= SCALE / 2\n @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\n @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\n @return result The result as an unsigned 60.18-decimal fixed-point number."},"id":2620,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivFixedPoint","nameLocation":"20194:16:8","nodeType":"FunctionDefinition","parameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"x","nameLocation":"20219:1:8","nodeType":"VariableDeclaration","scope":2620,"src":"20211:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"20211:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2573,"mutability":"mutable","name":"y","nameLocation":"20230:1:8","nodeType":"VariableDeclaration","scope":2620,"src":"20222:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"20222:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20210:22:8"},"returnParameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"result","nameLocation":"20288:6:8","nodeType":"VariableDeclaration","scope":2620,"src":"20280:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"20280:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20279:16:8"},"scope":2979,"src":"20185:1259:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2772,"nodeType":"Block","src":"22115:1310:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2632,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"22142:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22152:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2634,"name":"int256","nodeType":"ElementaryTypeName","src":"22152:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2633,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22147:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22147:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22160:3:8","memberName":"min","nodeType":"MemberAccess","src":"22147:16:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22142:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2639,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"22179:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22189:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2641,"name":"int256","nodeType":"ElementaryTypeName","src":"22189:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2640,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22184:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22184:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22197:3:8","memberName":"min","nodeType":"MemberAccess","src":"22184:16:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22179:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22142:58:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2647,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"22216:11:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22236:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2649,"name":"int256","nodeType":"ElementaryTypeName","src":"22236:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2648,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22231:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22231:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22244:3:8","memberName":"min","nodeType":"MemberAccess","src":"22231:16:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22216:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22142:105:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2659,"nodeType":"IfStatement","src":"22125:201:8","trueBody":{"id":2658,"nodeType":"Block","src":"22258:68:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2655,"name":"PRBMath__MulDivSignedInputTooSmall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"22279:34:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22279:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2657,"nodeType":"RevertStatement","src":"22272:43:8"}]}},{"assignments":[2661],"declarations":[{"constant":false,"id":2661,"mutability":"mutable","name":"ax","nameLocation":"22416:2:8","nodeType":"VariableDeclaration","scope":2772,"src":"22408:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"22408:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2662,"nodeType":"VariableDeclarationStatement","src":"22408:10:8"},{"assignments":[2664],"declarations":[{"constant":false,"id":2664,"mutability":"mutable","name":"ay","nameLocation":"22436:2:8","nodeType":"VariableDeclaration","scope":2772,"src":"22428:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"22428:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2665,"nodeType":"VariableDeclarationStatement","src":"22428:10:8"},{"assignments":[2667],"declarations":[{"constant":false,"id":2667,"mutability":"mutable","name":"ad","nameLocation":"22456:2:8","nodeType":"VariableDeclaration","scope":2772,"src":"22448:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"22448:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2668,"nodeType":"VariableDeclarationStatement","src":"22448:10:8"},{"id":2717,"nodeType":"UncheckedBlock","src":"22468:204:8","statements":[{"expression":{"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2669,"name":"ax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"22492:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2670,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"22497:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22501:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22497:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2680,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"22527:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22519:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2678,"name":"uint256","nodeType":"ElementaryTypeName","src":"22519:7:8","typeDescriptions":{}}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22519:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"22497:32:8","trueExpression":{"arguments":[{"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"22513:2:8","subExpression":{"id":2675,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"22514:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22505:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2673,"name":"uint256","nodeType":"ElementaryTypeName","src":"22505:7:8","typeDescriptions":{}}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22505:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22492:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2684,"nodeType":"ExpressionStatement","src":"22492:37:8"},{"expression":{"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2685,"name":"ay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"22543:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2686,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"22548:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22552:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22548:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2696,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"22578:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22570:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"22570:7:8","typeDescriptions":{}}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22570:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"22548:32:8","trueExpression":{"arguments":[{"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"22564:2:8","subExpression":{"id":2691,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"22565:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22556:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2689,"name":"uint256","nodeType":"ElementaryTypeName","src":"22556:7:8","typeDescriptions":{}}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22556:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22543:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2700,"nodeType":"ExpressionStatement","src":"22543:37:8"},{"expression":{"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2701,"name":"ad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"22594:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2702,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"22599:11:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22613:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22599:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2712,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"22649:11:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22641:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"22641:7:8","typeDescriptions":{}}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22641:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"22599:62:8","trueExpression":{"arguments":[{"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"22625:12:8","subExpression":{"id":2707,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"22626:11:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22617:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2705,"name":"uint256","nodeType":"ElementaryTypeName","src":"22617:7:8","typeDescriptions":{}}},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22617:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22594:67:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2716,"nodeType":"ExpressionStatement","src":"22594:67:8"}]},{"assignments":[2719],"declarations":[{"constant":false,"id":2719,"mutability":"mutable","name":"rAbs","nameLocation":"22786:4:8","nodeType":"VariableDeclaration","scope":2772,"src":"22778:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"22778:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2725,"initialValue":{"arguments":[{"id":2721,"name":"ax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"22800:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2722,"name":"ay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"22804:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2723,"name":"ad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"22808:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2720,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"22793:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22793:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22778:33:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2726,"name":"rAbs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"22825:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":2731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22845:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2730,"name":"int256","nodeType":"ElementaryTypeName","src":"22845:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2729,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22840:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22840:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22853:3:8","memberName":"max","nodeType":"MemberAccess","src":"22840:16:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22832:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2727,"name":"uint256","nodeType":"ElementaryTypeName","src":"22832:7:8","typeDescriptions":{}}},"id":2734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22832:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22825:32:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2741,"nodeType":"IfStatement","src":"22821:105:8","trueBody":{"id":2740,"nodeType":"Block","src":"22859:67:8","statements":[{"errorCall":{"arguments":[{"id":2737,"name":"rAbs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"22910:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2736,"name":"PRBMath__MulDivSignedOverflow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"22880:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22880:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2739,"nodeType":"RevertStatement","src":"22873:42:8"}]}},{"assignments":[2743],"declarations":[{"constant":false,"id":2743,"mutability":"mutable","name":"sx","nameLocation":"22998:2:8","nodeType":"VariableDeclaration","scope":2772,"src":"22990:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"22990:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2744,"nodeType":"VariableDeclarationStatement","src":"22990:10:8"},{"assignments":[2746],"declarations":[{"constant":false,"id":2746,"mutability":"mutable","name":"sy","nameLocation":"23018:2:8","nodeType":"VariableDeclaration","scope":2772,"src":"23010:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"23010:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2747,"nodeType":"VariableDeclarationStatement","src":"23010:10:8"},{"assignments":[2749],"declarations":[{"constant":false,"id":2749,"mutability":"mutable","name":"sd","nameLocation":"23038:2:8","nodeType":"VariableDeclaration","scope":2772,"src":"23030:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"23030:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2750,"nodeType":"VariableDeclarationStatement","src":"23030:10:8"},{"AST":{"nodeType":"YulBlock","src":"23059:129:8","statements":[{"nodeType":"YulAssignment","src":"23073:23:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23083:1:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23090:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23093:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23086:3:8"},"nodeType":"YulFunctionCall","src":"23086:9:8"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"23079:3:8"},"nodeType":"YulFunctionCall","src":"23079:17:8"},"variableNames":[{"name":"sx","nodeType":"YulIdentifier","src":"23073:2:8"}]},{"nodeType":"YulAssignment","src":"23109:23:8","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23119:1:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23126:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23129:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23122:3:8"},"nodeType":"YulFunctionCall","src":"23122:9:8"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"23115:3:8"},"nodeType":"YulFunctionCall","src":"23115:17:8"},"variableNames":[{"name":"sy","nodeType":"YulIdentifier","src":"23109:2:8"}]},{"nodeType":"YulAssignment","src":"23145:33:8","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"23155:11:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23172:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23175:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23168:3:8"},"nodeType":"YulFunctionCall","src":"23168:9:8"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"23151:3:8"},"nodeType":"YulFunctionCall","src":"23151:27:8"},"variableNames":[{"name":"sd","nodeType":"YulIdentifier","src":"23145:2:8"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2627,"isOffset":false,"isSlot":false,"src":"23155:11:8","valueSize":1},{"declaration":2749,"isOffset":false,"isSlot":false,"src":"23145:2:8","valueSize":1},{"declaration":2743,"isOffset":false,"isSlot":false,"src":"23073:2:8","valueSize":1},{"declaration":2746,"isOffset":false,"isSlot":false,"src":"23109:2:8","valueSize":1},{"declaration":2623,"isOffset":false,"isSlot":false,"src":"23083:1:8","valueSize":1},{"declaration":2625,"isOffset":false,"isSlot":false,"src":"23119:1:8","valueSize":1}],"id":2751,"nodeType":"InlineAssembly","src":"23050:138:8"},{"expression":{"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2752,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"23361:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2753,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"23370:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2754,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"23375:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23370:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2756,"name":"sd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"23380:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23370:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23386:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23370:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2767,"name":"rAbs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"23413:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23406:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2765,"name":"int256","nodeType":"ElementaryTypeName","src":"23406:6:8","typeDescriptions":{}}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23406:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23370:48:8","trueExpression":{"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"23390:13:8","subExpression":{"arguments":[{"id":2762,"name":"rAbs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"23398:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23391:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2760,"name":"int256","nodeType":"ElementaryTypeName","src":"23391:6:8","typeDescriptions":{}}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23391:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23361:57:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2771,"nodeType":"ExpressionStatement","src":"23361:57:8"}]},"documentation":{"id":2621,"nodeType":"StructuredDocumentation","src":"21450:530:8","text":"@notice Calculates floor(x*y÷denominator) with full precision.\n @dev An extension of \"mulDiv\" for signed numbers. Works by computing the signs and the absolute values separately.\n Requirements:\n - None of the inputs can be type(int256).min.\n - The result must fit within int256.\n @param x The multiplicand as an int256.\n @param y The multiplier as an int256.\n @param denominator The divisor as an int256.\n @return result The result as an int256."},"id":2773,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivSigned","nameLocation":"21994:12:8","nodeType":"FunctionDefinition","parameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"x","nameLocation":"22023:1:8","nodeType":"VariableDeclaration","scope":2773,"src":"22016:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2622,"name":"int256","nodeType":"ElementaryTypeName","src":"22016:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"y","nameLocation":"22041:1:8","nodeType":"VariableDeclaration","scope":2773,"src":"22034:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2624,"name":"int256","nodeType":"ElementaryTypeName","src":"22034:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"denominator","nameLocation":"22059:11:8","nodeType":"VariableDeclaration","scope":2773,"src":"22052:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2626,"name":"int256","nodeType":"ElementaryTypeName","src":"22052:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22006:70:8"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"result","nameLocation":"22107:6:8","nodeType":"VariableDeclaration","scope":2773,"src":"22100:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2629,"name":"int256","nodeType":"ElementaryTypeName","src":"22100:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22099:15:8"},"scope":2979,"src":"21985:1440:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2977,"nodeType":"Block","src":"23904:1518:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2781,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"23918:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23923:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23918:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2787,"nodeType":"IfStatement","src":"23914:45:8","trueBody":{"id":2786,"nodeType":"Block","src":"23926:33:8","statements":[{"expression":{"hexValue":"30","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23947:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2780,"id":2785,"nodeType":"Return","src":"23940:8:8"}]}},{"assignments":[2789],"declarations":[{"constant":false,"id":2789,"mutability":"mutable","name":"xAux","nameLocation":"24078:4:8","nodeType":"VariableDeclaration","scope":2977,"src":"24070:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"24070:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2794,"initialValue":{"arguments":[{"id":2792,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"24093:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24085:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2790,"name":"uint256","nodeType":"ElementaryTypeName","src":"24085:7:8","typeDescriptions":{}}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24085:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24070:25:8"},{"expression":{"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"24105:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24114:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24105:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2798,"nodeType":"ExpressionStatement","src":"24105:10:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2799,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"24129:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030303030303030303030303030303030303030303030303030303030303030","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24137:35:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"value":"0x100000000000000000000000000000000"},"src":"24129:43:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2811,"nodeType":"IfStatement","src":"24125:113:8","trueBody":{"id":2810,"nodeType":"Block","src":"24174:64:8","statements":[{"expression":{"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2802,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"24188:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24197:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"24188:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2805,"nodeType":"ExpressionStatement","src":"24188:12:8"},{"expression":{"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2806,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"24214:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24225:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24214:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2809,"nodeType":"ExpressionStatement","src":"24214:13:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2812,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"24251:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130303030303030303030303030303030","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24259:19:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"value":"0x10000000000000000"},"src":"24251:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2824,"nodeType":"IfStatement","src":"24247:96:8","trueBody":{"id":2823,"nodeType":"Block","src":"24280:63:8","statements":[{"expression":{"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2815,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"24294:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24303:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24294:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2818,"nodeType":"ExpressionStatement","src":"24294:11:8"},{"expression":{"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2819,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"24319:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24330:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24319:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2822,"nodeType":"ExpressionStatement","src":"24319:13:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2825,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"24356:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030303030303030","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24364:11:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"value":"0x100000000"},"src":"24356:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2837,"nodeType":"IfStatement","src":"24352:88:8","trueBody":{"id":2836,"nodeType":"Block","src":"24377:63:8","statements":[{"expression":{"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2828,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"24391:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24400:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24391:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2831,"nodeType":"ExpressionStatement","src":"24391:11:8"},{"expression":{"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"24416:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24427:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24416:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2835,"nodeType":"ExpressionStatement","src":"24416:13:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2838,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"24453:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130303030","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24461:7:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"value":"0x10000"},"src":"24453:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2850,"nodeType":"IfStatement","src":"24449:83:8","trueBody":{"id":2849,"nodeType":"Block","src":"24470:62:8","statements":[{"expression":{"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2841,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"24484:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24493:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24484:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2844,"nodeType":"ExpressionStatement","src":"24484:11:8"},{"expression":{"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2845,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"24509:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24520:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24509:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2848,"nodeType":"ExpressionStatement","src":"24509:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2851,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"24545:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24553:5:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"0x100"},"src":"24545:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2863,"nodeType":"IfStatement","src":"24541:80:8","trueBody":{"id":2862,"nodeType":"Block","src":"24560:61:8","statements":[{"expression":{"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2854,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"24574:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24583:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24574:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2857,"nodeType":"ExpressionStatement","src":"24574:10:8"},{"expression":{"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2858,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"24598:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24609:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24598:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2861,"nodeType":"ExpressionStatement","src":"24598:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2864,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"24634:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24642:4:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"0x10"},"src":"24634:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2876,"nodeType":"IfStatement","src":"24630:79:8","trueBody":{"id":2875,"nodeType":"Block","src":"24648:61:8","statements":[{"expression":{"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2867,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"24662:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24671:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24662:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2870,"nodeType":"ExpressionStatement","src":"24662:10:8"},{"expression":{"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2871,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"24686:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24697:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24686:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2874,"nodeType":"ExpressionStatement","src":"24686:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2877,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"24722:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"307838","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24730:3:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x8"},"src":"24722:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2885,"nodeType":"IfStatement","src":"24718:54:8","trueBody":{"id":2884,"nodeType":"Block","src":"24735:37:8","statements":[{"expression":{"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2880,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"24749:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24760:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24749:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2883,"nodeType":"ExpressionStatement","src":"24749:12:8"}]}},{"id":2976,"nodeType":"UncheckedBlock","src":"24886:530:8","statements":[{"expression":{"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2886,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"24910:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"24920:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2888,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"24929:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2889,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"24933:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24929:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24920:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24919:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24944:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24919:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24910:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2896,"nodeType":"ExpressionStatement","src":"24910:35:8"},{"expression":{"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2897,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"24959:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"24969:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2899,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"24978:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2900,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"24982:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24978:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24969:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24968:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24993:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24968:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24959:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2907,"nodeType":"ExpressionStatement","src":"24959:35:8"},{"expression":{"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2908,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25008:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25018:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2910,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"25027:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2911,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25031:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25027:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25018:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25017:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25042:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25017:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25008:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2918,"nodeType":"ExpressionStatement","src":"25008:35:8"},{"expression":{"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2919,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25057:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25067:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"25076:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2922,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25080:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25076:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25067:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2925,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25066:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25091:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25066:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25057:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2929,"nodeType":"ExpressionStatement","src":"25057:35:8"},{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2930,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25106:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2931,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25116:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2932,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"25125:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2933,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25129:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25125:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25116:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2936,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25115:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25140:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25115:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25106:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2940,"nodeType":"ExpressionStatement","src":"25106:35:8"},{"expression":{"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2941,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25155:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2942,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25165:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2943,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"25174:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2944,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25178:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25174:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25165:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25164:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25189:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25164:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25155:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2951,"nodeType":"ExpressionStatement","src":"25155:35:8"},{"expression":{"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2952,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25204:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2953,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25214:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2954,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"25223:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2955,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25227:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25223:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25214:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2958,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25213:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25238:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25213:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25204:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2962,"nodeType":"ExpressionStatement","src":"25204:35:8"},{"assignments":[2964],"declarations":[{"constant":false,"id":2964,"mutability":"mutable","name":"roundedDownResult","nameLocation":"25298:17:8","nodeType":"VariableDeclaration","scope":2976,"src":"25290:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint256","nodeType":"ElementaryTypeName","src":"25290:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2968,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2965,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"25318:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2966,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25322:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25318:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25290:38:8"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2969,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25349:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2970,"name":"roundedDownResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"25359:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25349:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"25399:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"25349:56:8","trueExpression":{"id":2972,"name":"roundedDownResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"25379:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2780,"id":2975,"nodeType":"Return","src":"25342:63:8"}]}]},"documentation":{"id":2774,"nodeType":"StructuredDocumentation","src":"23431:404:8","text":"@notice Calculates the square root of x, rounding down.\n @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\n Caveats:\n - This function does not work with fixed-point numbers.\n @param x The uint256 number for which to calculate the square root.\n @return result The result as an uint256."},"id":2978,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23849:4:8","nodeType":"FunctionDefinition","parameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"x","nameLocation":"23862:1:8","nodeType":"VariableDeclaration","scope":2978,"src":"23854:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2775,"name":"uint256","nodeType":"ElementaryTypeName","src":"23854:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23853:11:8"},"returnParameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"result","nameLocation":"23896:6:8","nodeType":"VariableDeclaration","scope":2978,"src":"23888:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2778,"name":"uint256","nodeType":"ElementaryTypeName","src":"23888:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23887:16:8"},"scope":2979,"src":"23840:1582:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2980,"src":"3945:21479:8","usedErrors":[]}],"src":"32:25393:8"},"id":8},"src/dependencies/prb-math/PRBMathUD60x18.sol":{"ast":{"absolutePath":"src/dependencies/prb-math/PRBMathUD60x18.sol","exportedSymbols":{"PRBMath":[2979],"PRBMathSD59x18__AbsInputTooSmall":[1110],"PRBMathSD59x18__CeilOverflow":[1115],"PRBMathSD59x18__DivInputTooSmall":[1118],"PRBMathSD59x18__DivOverflow":[1123],"PRBMathSD59x18__Exp2InputTooBig":[1133],"PRBMathSD59x18__ExpInputTooBig":[1128],"PRBMathSD59x18__FloorUnderflow":[1138],"PRBMathSD59x18__FromIntOverflow":[1143],"PRBMathSD59x18__FromIntUnderflow":[1148],"PRBMathSD59x18__GmNegativeProduct":[1155],"PRBMathSD59x18__GmOverflow":[1162],"PRBMathSD59x18__LogInputTooSmall":[1167],"PRBMathSD59x18__MulInputTooSmall":[1170],"PRBMathSD59x18__MulOverflow":[1175],"PRBMathSD59x18__PowuOverflow":[1180],"PRBMathSD59x18__SqrtNegativeInput":[1185],"PRBMathSD59x18__SqrtOverflow":[1190],"PRBMathUD60x18":[3589],"PRBMathUD60x18__AddOverflow":[1197],"PRBMathUD60x18__CeilOverflow":[1202],"PRBMathUD60x18__Exp2InputTooBig":[1212],"PRBMathUD60x18__ExpInputTooBig":[1207],"PRBMathUD60x18__FromUintOverflow":[1217],"PRBMathUD60x18__GmOverflow":[1224],"PRBMathUD60x18__LogInputTooSmall":[1229],"PRBMathUD60x18__SqrtOverflow":[1234],"PRBMathUD60x18__SubUnderflow":[1241],"PRBMath__MulDivFixedPointOverflow":[1092],"PRBMath__MulDivOverflow":[1099],"PRBMath__MulDivSignedInputTooSmall":[1102],"PRBMath__MulDivSignedOverflow":[1107]},"id":3590,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2981,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:9"},{"absolutePath":"src/dependencies/prb-math/PRBMath.sol","file":"./PRBMath.sol","id":2982,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3590,"sourceUnit":2980,"src":"58:23:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"PRBMathUD60x18","contractDependencies":[],"contractKind":"library","documentation":{"id":2983,"nodeType":"StructuredDocumentation","src":"83:477:9","text":"@title PRBMathUD60x18\n @author Paul Razvan Berg\n @notice Smart contract library for advanced fixed-point math that works with uint256 numbers considered to have 18\n trailing decimals. We call this number representation unsigned 60.18-decimal fixed-point, since there can be up to 60\n digits in the integer part and up to 18 decimals in the fractional part. The numbers are bound by the minimum and the\n maximum values permitted by the Solidity type uint256."},"fullyImplemented":true,"id":3589,"linearizedBaseContracts":[3589],"name":"PRBMathUD60x18","nameLocation":"568:14:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2984,"nodeType":"StructuredDocumentation","src":"589:31:9","text":"@dev Half the SCALE number."},"id":2987,"mutability":"constant","name":"HALF_SCALE","nameLocation":"651:10:9","nodeType":"VariableDeclaration","scope":3589,"src":"625:43:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2985,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35653137","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"664:4:9","typeDescriptions":{"typeIdentifier":"t_rational_500000000000000000_by_1","typeString":"int_const 500000000000000000"},"value":"5e17"},"visibility":"internal"},{"constant":true,"documentation":{"id":2988,"nodeType":"StructuredDocumentation","src":"675:65:9","text":"@dev log2(e) as an unsigned 60.18-decimal fixed-point number."},"id":2991,"mutability":"constant","name":"LOG2_E","nameLocation":"771:6:9","nodeType":"VariableDeclaration","scope":3589,"src":"745:55:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2989,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"315f343432363935303430383838393633343037","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"780:20:9","typeDescriptions":{"typeIdentifier":"t_rational_1442695040888963407_by_1","typeString":"int_const 1442695040888963407"},"value":"1_442695040888963407"},"visibility":"internal"},{"constant":true,"documentation":{"id":2992,"nodeType":"StructuredDocumentation","src":"807:81:9","text":"@dev The maximum value an unsigned 60.18-decimal fixed-point number can have."},"id":2995,"mutability":"constant","name":"MAX_UD60x18","nameLocation":"919:11:9","nodeType":"VariableDeclaration","scope":3589,"src":"893:127:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2993,"name":"uint256","nodeType":"ElementaryTypeName","src":"893:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3131353739323038393233373331363139353432333537303938353030383638373930373835333236393938343636353634303536343033393435375f353834303037393133313239363339393335","id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"941:79:9","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"},"value":"115792089237316195423570985008687907853269984665640564039457_584007913129639935"},"visibility":"internal"},{"constant":true,"documentation":{"id":2996,"nodeType":"StructuredDocumentation","src":"1027:87:9","text":"@dev The maximum whole value an unsigned 60.18-decimal fixed-point number can have."},"id":2999,"mutability":"constant","name":"MAX_WHOLE_UD60x18","nameLocation":"1145:17:9","nodeType":"VariableDeclaration","scope":3589,"src":"1119:133:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"1119:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3131353739323038393233373331363139353432333537303938353030383638373930373835333236393938343636353634303536343033393435375f303030303030303030303030303030303030","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1173:79:9","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457000000000000000000_by_1","typeString":"int_const 1157...(70 digits omitted)...0000"},"value":"115792089237316195423570985008687907853269984665640564039457_000000000000000000"},"visibility":"internal"},{"constant":true,"documentation":{"id":3000,"nodeType":"StructuredDocumentation","src":"1259:55:9","text":"@dev How many trailing decimals can be represented."},"id":3003,"mutability":"constant","name":"SCALE","nameLocation":"1345:5:9","nodeType":"VariableDeclaration","scope":3589,"src":"1319:38:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1353:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"body":{"id":3033,"nodeType":"Block","src":"1779:358:9","statements":[{"id":3032,"nodeType":"UncheckedBlock","src":"1835:296:9","statements":[{"expression":{"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"2078:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3014,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"2088:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2093:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2088:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2087:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3018,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"2099:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2104:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2099:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2098:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2087:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3023,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"2110:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3024,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"2114:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2110:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"31","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2110:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3028,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2109:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2087:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:42:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3031,"nodeType":"ExpressionStatement","src":"2078:42:9"}]}]},"documentation":{"id":3004,"nodeType":"StructuredDocumentation","src":"1364:336:9","text":"@notice Calculates the arithmetic average of x and y, rounding down.\n @param x The first operand as an unsigned 60.18-decimal fixed-point number.\n @param y The second operand as an unsigned 60.18-decimal fixed-point number.\n @return result The arithmetic average as an unsigned 60.18-decimal fixed-point number."},"id":3034,"implemented":true,"kind":"function","modifiers":[],"name":"avg","nameLocation":"1714:3:9","nodeType":"FunctionDefinition","parameters":{"id":3009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3006,"mutability":"mutable","name":"x","nameLocation":"1726:1:9","nodeType":"VariableDeclaration","scope":3034,"src":"1718:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3005,"name":"uint256","nodeType":"ElementaryTypeName","src":"1718:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3008,"mutability":"mutable","name":"y","nameLocation":"1737:1:9","nodeType":"VariableDeclaration","scope":3034,"src":"1729:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1717:22:9"},"returnParameters":{"id":3012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"result","nameLocation":"1771:6:9","nodeType":"VariableDeclaration","scope":3034,"src":"1763:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1762:16:9"},"scope":3589,"src":"1705:432:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3052,"nodeType":"Block","src":"2805:479:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3042,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"2819:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3043,"name":"MAX_WHOLE_UD60x18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"2823:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2819:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3050,"nodeType":"IfStatement","src":"2815:90:9","trueBody":{"id":3049,"nodeType":"Block","src":"2842:63:9","statements":[{"errorCall":{"arguments":[{"id":3046,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"2892:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3045,"name":"PRBMathUD60x18__CeilOverflow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"2863:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2863:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3048,"nodeType":"RevertStatement","src":"2856:38:9"}]}},{"AST":{"nodeType":"YulBlock","src":"2923:355:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2990:30:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3011:1:9"},{"name":"SCALE","nodeType":"YulIdentifier","src":"3014:5:9"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3007:3:9"},"nodeType":"YulFunctionCall","src":"3007:13:9"},"variables":[{"name":"remainder","nodeType":"YulTypedName","src":"2994:9:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3095:34:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"3112:5:9"},{"name":"remainder","nodeType":"YulIdentifier","src":"3119:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3108:3:9"},"nodeType":"YulFunctionCall","src":"3108:21:9"},"variables":[{"name":"delta","nodeType":"YulTypedName","src":"3099:5:9","type":""}]},{"nodeType":"YulAssignment","src":"3222:46:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3236:1:9"},{"arguments":[{"name":"delta","nodeType":"YulIdentifier","src":"3243:5:9"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3253:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"3264:1:9","type":"","value":"0"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3250:2:9"},"nodeType":"YulFunctionCall","src":"3250:16:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3239:3:9"},"nodeType":"YulFunctionCall","src":"3239:28:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3232:3:9"},"nodeType":"YulFunctionCall","src":"3232:36:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3222:6:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3003,"isOffset":false,"isSlot":false,"src":"3014:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"3112:5:9","valueSize":1},{"declaration":3040,"isOffset":false,"isSlot":false,"src":"3222:6:9","valueSize":1},{"declaration":3037,"isOffset":false,"isSlot":false,"src":"3011:1:9","valueSize":1},{"declaration":3037,"isOffset":false,"isSlot":false,"src":"3236:1:9","valueSize":1}],"id":3051,"nodeType":"InlineAssembly","src":"2914:364:9"}]},"documentation":{"id":3035,"nodeType":"StructuredDocumentation","src":"2143:593:9","text":"@notice Yields the least unsigned 60.18 decimal fixed-point number greater than or equal to x.\n @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\n See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\n Requirements:\n - x must be less than or equal to MAX_WHOLE_UD60x18.\n @param x The unsigned 60.18-decimal fixed-point number to ceil.\n @param result The least integer greater than or equal to x, as an unsigned 60.18-decimal fixed-point number."},"id":3053,"implemented":true,"kind":"function","modifiers":[],"name":"ceil","nameLocation":"2750:4:9","nodeType":"FunctionDefinition","parameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"x","nameLocation":"2763:1:9","nodeType":"VariableDeclaration","scope":3053,"src":"2755:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2755:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2754:11:9"},"returnParameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"result","nameLocation":"2797:6:9","nodeType":"VariableDeclaration","scope":3053,"src":"2789:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"2789:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2788:16:9"},"scope":3589,"src":"2741:543:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3072,"nodeType":"Block","src":"3907:53:9","statements":[{"expression":{"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3063,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"3917:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3066,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"3941:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3067,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"3944:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3068,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"3951:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3064,"name":"PRBMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"3926:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PRBMath_$2979_$","typeString":"type(library PRBMath)"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3934:6:9","memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"3926:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3926:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3917:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3071,"nodeType":"ExpressionStatement","src":"3917:36:9"}]},"documentation":{"id":3054,"nodeType":"StructuredDocumentation","src":"3290:538:9","text":"@notice Divides two unsigned 60.18-decimal fixed-point numbers, returning a new unsigned 60.18-decimal fixed-point number.\n @dev Uses mulDiv to enable overflow-safe multiplication and division.\n Requirements:\n - The denominator cannot be zero.\n @param x The numerator as an unsigned 60.18-decimal fixed-point number.\n @param y The denominator as an unsigned 60.18-decimal fixed-point number.\n @param result The quotient as an unsigned 60.18-decimal fixed-point number."},"id":3073,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3842:3:9","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3056,"mutability":"mutable","name":"x","nameLocation":"3854:1:9","nodeType":"VariableDeclaration","scope":3073,"src":"3846:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3055,"name":"uint256","nodeType":"ElementaryTypeName","src":"3846:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3058,"mutability":"mutable","name":"y","nameLocation":"3865:1:9","nodeType":"VariableDeclaration","scope":3073,"src":"3857:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"3857:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3845:22:9"},"returnParameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"result","nameLocation":"3899:6:9","nodeType":"VariableDeclaration","scope":3073,"src":"3891:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"3891:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3890:16:9"},"scope":3589,"src":"3833:127:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3083,"nodeType":"Block","src":"4180:46:9","statements":[{"expression":{"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3079,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"4190:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"325f373138323831383238343539303435323335","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4199:20:9","typeDescriptions":{"typeIdentifier":"t_rational_2718281828459045235_by_1","typeString":"int_const 2718281828459045235"},"value":"2_718281828459045235"},"src":"4190:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3082,"nodeType":"ExpressionStatement","src":"4190:29:9"}]},"documentation":{"id":3074,"nodeType":"StructuredDocumentation","src":"3966:157:9","text":"@notice Returns Euler's number as an unsigned 60.18-decimal fixed-point number.\n @dev See https://en.wikipedia.org/wiki/E_(mathematical_constant)."},"id":3084,"implemented":true,"kind":"function","modifiers":[],"name":"e","nameLocation":"4137:1:9","nodeType":"FunctionDefinition","parameters":{"id":3075,"nodeType":"ParameterList","parameters":[],"src":"4138:2:9"},"returnParameters":{"id":3078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3077,"mutability":"mutable","name":"result","nameLocation":"4172:6:9","nodeType":"VariableDeclaration","scope":3084,"src":"4164:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"4164:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:16:9"},"scope":3589,"src":"4128:98:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3119,"nodeType":"Block","src":"4700:418:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3092,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"4799:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3133335f303834323538363637353039343939343431","id":3093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4804:22:9","typeDescriptions":{"typeIdentifier":"t_rational_133084258667509499441_by_1","typeString":"int_const 133084258667509499441"},"value":"133_084258667509499441"},"src":"4799:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3100,"nodeType":"IfStatement","src":"4795:98:9","trueBody":{"id":3099,"nodeType":"Block","src":"4828:65:9","statements":[{"errorCall":{"arguments":[{"id":3096,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"4880:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3095,"name":"PRBMathUD60x18__ExpInputTooBig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"4849:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4849:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3098,"nodeType":"RevertStatement","src":"4842:40:9"}]}},{"id":3118,"nodeType":"UncheckedBlock","src":"4968:144:9","statements":[{"assignments":[3102],"declarations":[{"constant":false,"id":3102,"mutability":"mutable","name":"doubleScaleProduct","nameLocation":"5000:18:9","nodeType":"VariableDeclaration","scope":3118,"src":"4992:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"4992:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3106,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3103,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"5021:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3104,"name":"LOG2_E","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"5025:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5021:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4992:39:9"},{"expression":{"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3107,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"5045:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3109,"name":"doubleScaleProduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"5060:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3110,"name":"HALF_SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"5081:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5060:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5059:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3113,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"5095:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5059:41:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3108,"name":"exp2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"5054:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5054:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5045:56:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3117,"nodeType":"ExpressionStatement","src":"5045:56:9"}]}]},"documentation":{"id":3085,"nodeType":"StructuredDocumentation","src":"4232:400:9","text":"@notice Calculates the natural exponent of x.\n @dev Based on the insight that e^x = 2^(x * log2(e)).\n Requirements:\n - All from \"log2\".\n - x must be less than 133.084258667509499441.\n @param x The exponent as an unsigned 60.18-decimal fixed-point number.\n @return result The result as an unsigned 60.18-decimal fixed-point number."},"id":3120,"implemented":true,"kind":"function","modifiers":[],"name":"exp","nameLocation":"4646:3:9","nodeType":"FunctionDefinition","parameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"x","nameLocation":"4658:1:9","nodeType":"VariableDeclaration","scope":3120,"src":"4650:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"4650:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4649:11:9"},"returnParameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3090,"mutability":"mutable","name":"result","nameLocation":"4692:6:9","nodeType":"VariableDeclaration","scope":3120,"src":"4684:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3089,"name":"uint256","nodeType":"ElementaryTypeName","src":"4684:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4683:16:9"},"scope":3589,"src":"4637:481:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3154,"nodeType":"Block","src":"5632:492:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3128,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"5738:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313932653138","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5743:6:9","typeDescriptions":{"typeIdentifier":"t_rational_192000000000000000000_by_1","typeString":"int_const 192000000000000000000"},"value":"192e18"},"src":"5738:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3136,"nodeType":"IfStatement","src":"5734:83:9","trueBody":{"id":3135,"nodeType":"Block","src":"5751:66:9","statements":[{"errorCall":{"arguments":[{"id":3132,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"5804:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3131,"name":"PRBMathUD60x18__Exp2InputTooBig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"5772:31:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5772:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3134,"nodeType":"RevertStatement","src":"5765:41:9"}]}},{"id":3153,"nodeType":"UncheckedBlock","src":"5827:291:9","statements":[{"assignments":[3138],"declarations":[{"constant":false,"id":3138,"mutability":"mutable","name":"x192x64","nameLocation":"5922:7:9","nodeType":"VariableDeclaration","scope":3153,"src":"5914:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"5914:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3145,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3139,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"5933:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5938:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5933:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3142,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5932:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3143,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"5944:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5932:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5914:35:9"},{"expression":{"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3146,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"6077:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3149,"name":"x192x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"6099:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3147,"name":"PRBMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"6086:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PRBMath_$2979_$","typeString":"type(library PRBMath)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6094:4:9","memberName":"exp2","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"6086:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6077:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3152,"nodeType":"ExpressionStatement","src":"6077:30:9"}]}]},"documentation":{"id":3121,"nodeType":"StructuredDocumentation","src":"5124:439:9","text":"@notice Calculates the binary exponent of x using the binary fraction method.\n @dev See https://ethereum.stackexchange.com/q/79903/24693.\n Requirements:\n - x must be 192 or less.\n - The result must fit within MAX_UD60x18.\n @param x The exponent as an unsigned 60.18-decimal fixed-point number.\n @return result The result as an unsigned 60.18-decimal fixed-point number."},"id":3155,"implemented":true,"kind":"function","modifiers":[],"name":"exp2","nameLocation":"5577:4:9","nodeType":"FunctionDefinition","parameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"x","nameLocation":"5590:1:9","nodeType":"VariableDeclaration","scope":3155,"src":"5582:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3122,"name":"uint256","nodeType":"ElementaryTypeName","src":"5582:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5581:11:9"},"returnParameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"result","nameLocation":"5624:6:9","nodeType":"VariableDeclaration","scope":3155,"src":"5616:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"5616:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5615:16:9"},"scope":3589,"src":"5568:556:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3164,"nodeType":"Block","src":"6687:279:9","statements":[{"AST":{"nodeType":"YulBlock","src":"6706:254:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6773:30:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6794:1:9"},{"name":"SCALE","nodeType":"YulIdentifier","src":"6797:5:9"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"6790:3:9"},"nodeType":"YulFunctionCall","src":"6790:13:9"},"variables":[{"name":"remainder","nodeType":"YulTypedName","src":"6777:9:9","type":""}]},{"nodeType":"YulAssignment","src":"6900:50:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6914:1:9"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6921:9:9"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6935:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6946:1:9","type":"","value":"0"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6932:2:9"},"nodeType":"YulFunctionCall","src":"6932:16:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6917:3:9"},"nodeType":"YulFunctionCall","src":"6917:32:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6910:3:9"},"nodeType":"YulFunctionCall","src":"6910:40:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6900:6:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3003,"isOffset":false,"isSlot":false,"src":"6797:5:9","valueSize":1},{"declaration":3161,"isOffset":false,"isSlot":false,"src":"6900:6:9","valueSize":1},{"declaration":3158,"isOffset":false,"isSlot":false,"src":"6794:1:9","valueSize":1},{"declaration":3158,"isOffset":false,"isSlot":false,"src":"6914:1:9","valueSize":1}],"id":3163,"nodeType":"InlineAssembly","src":"6697:263:9"}]},"documentation":{"id":3156,"nodeType":"StructuredDocumentation","src":"6130:487:9","text":"@notice Yields the greatest unsigned 60.18 decimal fixed-point number less than or equal to x.\n @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\n See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\n @param x The unsigned 60.18-decimal fixed-point number to floor.\n @param result The greatest integer less than or equal to x, as an unsigned 60.18-decimal fixed-point number."},"id":3165,"implemented":true,"kind":"function","modifiers":[],"name":"floor","nameLocation":"6631:5:9","nodeType":"FunctionDefinition","parameters":{"id":3159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"mutability":"mutable","name":"x","nameLocation":"6645:1:9","nodeType":"VariableDeclaration","scope":3165,"src":"6637:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3157,"name":"uint256","nodeType":"ElementaryTypeName","src":"6637:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6636:11:9"},"returnParameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"result","nameLocation":"6679:6:9","nodeType":"VariableDeclaration","scope":3165,"src":"6671:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3160,"name":"uint256","nodeType":"ElementaryTypeName","src":"6671:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6670:16:9"},"scope":3589,"src":"6622:344:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3174,"nodeType":"Block","src":"7380:72:9","statements":[{"AST":{"nodeType":"YulBlock","src":"7399:47:9","statements":[{"nodeType":"YulAssignment","src":"7413:23:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7427:1:9"},{"name":"SCALE","nodeType":"YulIdentifier","src":"7430:5:9"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"7423:3:9"},"nodeType":"YulFunctionCall","src":"7423:13:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7413:6:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3003,"isOffset":false,"isSlot":false,"src":"7430:5:9","valueSize":1},{"declaration":3171,"isOffset":false,"isSlot":false,"src":"7413:6:9","valueSize":1},{"declaration":3168,"isOffset":false,"isSlot":false,"src":"7427:1:9","valueSize":1}],"id":3173,"nodeType":"InlineAssembly","src":"7390:56:9"}]},"documentation":{"id":3166,"nodeType":"StructuredDocumentation","src":"6972:339:9","text":"@notice Yields the excess beyond the floor of x.\n @dev Based on the odd function definition https://en.wikipedia.org/wiki/Fractional_part.\n @param x The unsigned 60.18-decimal fixed-point number to get the fractional part of.\n @param result The fractional part of x as an unsigned 60.18-decimal fixed-point number."},"id":3175,"implemented":true,"kind":"function","modifiers":[],"name":"frac","nameLocation":"7325:4:9","nodeType":"FunctionDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"x","nameLocation":"7338:1:9","nodeType":"VariableDeclaration","scope":3175,"src":"7330:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"7330:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7329:11:9"},"returnParameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"result","nameLocation":"7372:6:9","nodeType":"VariableDeclaration","scope":3175,"src":"7364:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"7364:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7363:16:9"},"scope":3589,"src":"7316:136:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3201,"nodeType":"Block","src":"7892:186:9","statements":[{"id":3200,"nodeType":"UncheckedBlock","src":"7902:170:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3183,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"7930:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":3184,"name":"MAX_UD60x18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"7934:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3185,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"7948:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7934:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7930:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3193,"nodeType":"IfStatement","src":"7926:104:9","trueBody":{"id":3192,"nodeType":"Block","src":"7955:75:9","statements":[{"errorCall":{"arguments":[{"id":3189,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"8013:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3188,"name":"PRBMathUD60x18__FromUintOverflow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"7980:32:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7980:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3191,"nodeType":"RevertStatement","src":"7973:42:9"}]}},{"expression":{"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3194,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"8043:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3195,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"8052:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3196,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"8056:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8052:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8043:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3199,"nodeType":"ExpressionStatement","src":"8043:18:9"}]}]},"documentation":{"id":3176,"nodeType":"StructuredDocumentation","src":"7458:361:9","text":"@notice Converts a number from basic integer form to unsigned 60.18-decimal fixed-point representation.\n @dev Requirements:\n - x must be less than or equal to MAX_UD60x18 divided by SCALE.\n @param x The basic integer to convert.\n @param result The same number in unsigned 60.18-decimal fixed-point representation."},"id":3202,"implemented":true,"kind":"function","modifiers":[],"name":"fromUint","nameLocation":"7833:8:9","nodeType":"FunctionDefinition","parameters":{"id":3179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"mutability":"mutable","name":"x","nameLocation":"7850:1:9","nodeType":"VariableDeclaration","scope":3202,"src":"7842:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3177,"name":"uint256","nodeType":"ElementaryTypeName","src":"7842:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7841:11:9"},"returnParameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"result","nameLocation":"7884:6:9","nodeType":"VariableDeclaration","scope":3202,"src":"7876:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3180,"name":"uint256","nodeType":"ElementaryTypeName","src":"7876:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7875:16:9"},"scope":3589,"src":"7824:254:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3245,"nodeType":"Block","src":"8603:557:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3212,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"8617:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8617:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3218,"nodeType":"IfStatement","src":"8613:45:9","trueBody":{"id":3217,"nodeType":"Block","src":"8625:33:9","statements":[{"expression":{"hexValue":"30","id":3215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8646:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3211,"id":3216,"nodeType":"Return","src":"8639:8:9"}]}},{"id":3244,"nodeType":"UncheckedBlock","src":"8668:486:9","statements":[{"assignments":[3220],"declarations":[{"constant":false,"id":3220,"mutability":"mutable","name":"xy","nameLocation":"8785:2:9","nodeType":"VariableDeclaration","scope":3244,"src":"8777:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3219,"name":"uint256","nodeType":"ElementaryTypeName","src":"8777:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3224,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3221,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"8790:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3222,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"8794:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8790:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8777:18:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3225,"name":"xy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"8813:2:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3226,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"8818:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8813:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3228,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"8823:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8813:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3236,"nodeType":"IfStatement","src":"8809:89:9","trueBody":{"id":3235,"nodeType":"Block","src":"8826:72:9","statements":[{"errorCall":{"arguments":[{"id":3231,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"8878:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3232,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"8881:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3230,"name":"PRBMathUD60x18__GmOverflow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8851:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8851:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3234,"nodeType":"RevertStatement","src":"8844:39:9"}]}},{"expression":{"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"9118:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3240,"name":"xy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"9140:2:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3238,"name":"PRBMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"9127:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PRBMath_$2979_$","typeString":"type(library PRBMath)"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9135:4:9","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":2978,"src":"9127:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9127:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9118:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3243,"nodeType":"ExpressionStatement","src":"9118:25:9"}]}]},"documentation":{"id":3203,"nodeType":"StructuredDocumentation","src":"8084:441:9","text":"@notice Calculates geometric mean of x and y, i.e. sqrt(x * y), rounding down.\n @dev Requirements:\n - x * y must fit within MAX_UD60x18, lest it overflows.\n @param x The first operand as an unsigned 60.18-decimal fixed-point number.\n @param y The second operand as an unsigned 60.18-decimal fixed-point number.\n @return result The result as an unsigned 60.18-decimal fixed-point number."},"id":3246,"implemented":true,"kind":"function","modifiers":[],"name":"gm","nameLocation":"8539:2:9","nodeType":"FunctionDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"x","nameLocation":"8550:1:9","nodeType":"VariableDeclaration","scope":3246,"src":"8542:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3204,"name":"uint256","nodeType":"ElementaryTypeName","src":"8542:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3207,"mutability":"mutable","name":"y","nameLocation":"8561:1:9","nodeType":"VariableDeclaration","scope":3246,"src":"8553:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"8553:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8541:22:9"},"returnParameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"result","nameLocation":"8595:6:9","nodeType":"VariableDeclaration","scope":3246,"src":"8587:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3209,"name":"uint256","nodeType":"ElementaryTypeName","src":"8587:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8586:16:9"},"scope":3589,"src":"8530:630:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3261,"nodeType":"Block","src":"9539:106:9","statements":[{"id":3260,"nodeType":"UncheckedBlock","src":"9549:90:9","statements":[{"expression":{"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"9611:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31653336","id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9620:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3256,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"9627:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9620:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9611:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3259,"nodeType":"ExpressionStatement","src":"9611:17:9"}]}]},"documentation":{"id":3247,"nodeType":"StructuredDocumentation","src":"9166:305:9","text":"@notice Calculates 1 / x, rounding toward zero.\n @dev Requirements:\n - x cannot be zero.\n @param x The unsigned 60.18-decimal fixed-point number for which to calculate the inverse.\n @return result The inverse as an unsigned 60.18-decimal fixed-point number."},"id":3262,"implemented":true,"kind":"function","modifiers":[],"name":"inv","nameLocation":"9485:3:9","nodeType":"FunctionDefinition","parameters":{"id":3250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3249,"mutability":"mutable","name":"x","nameLocation":"9497:1:9","nodeType":"VariableDeclaration","scope":3262,"src":"9489:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3248,"name":"uint256","nodeType":"ElementaryTypeName","src":"9489:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9488:11:9"},"returnParameters":{"id":3253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3252,"mutability":"mutable","name":"result","nameLocation":"9531:6:9","nodeType":"VariableDeclaration","scope":3262,"src":"9523:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3251,"name":"uint256","nodeType":"ElementaryTypeName","src":"9523:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9522:16:9"},"scope":3589,"src":"9476:169:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3282,"nodeType":"Block","src":"10280:260:9","statements":[{"id":3281,"nodeType":"UncheckedBlock","src":"10464:70:9","statements":[{"expression":{"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3270,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"10488:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3272,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"10503:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3271,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"10498:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10498:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3274,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"10508:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10498:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10497:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3277,"name":"LOG2_E","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"10517:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10497:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10488:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3280,"nodeType":"ExpressionStatement","src":"10488:35:9"}]}]},"documentation":{"id":3263,"nodeType":"StructuredDocumentation","src":"9651:562:9","text":"@notice Calculates the natural logarithm of x.\n @dev Based on the insight that ln(x) = log2(x) / log2(e).\n Requirements:\n - All from \"log2\".\n Caveats:\n - All from \"log2\".\n - This doesn't return exactly 1 for 2.718281828459045235, for that we would need more fine-grained precision.\n @param x The unsigned 60.18-decimal fixed-point number for which to calculate the natural logarithm.\n @return result The natural logarithm as an unsigned 60.18-decimal fixed-point number."},"id":3283,"implemented":true,"kind":"function","modifiers":[],"name":"ln","nameLocation":"10227:2:9","nodeType":"FunctionDefinition","parameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"x","nameLocation":"10238:1:9","nodeType":"VariableDeclaration","scope":3283,"src":"10230:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"10230:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10229:11:9"},"returnParameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"result","nameLocation":"10272:6:9","nodeType":"VariableDeclaration","scope":3283,"src":"10264:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3267,"name":"uint256","nodeType":"ElementaryTypeName","src":"10264:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10263:16:9"},"scope":3589,"src":"10218:322:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3318,"nodeType":"Block","src":"11178:7511:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3291,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"11192:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3292,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"11196:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11192:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3299,"nodeType":"IfStatement","src":"11188:82:9","trueBody":{"id":3298,"nodeType":"Block","src":"11203:67:9","statements":[{"errorCall":{"arguments":[{"id":3295,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"11257:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3294,"name":"PRBMathUD60x18__LogInputTooSmall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"11224:32:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11224:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3297,"nodeType":"RevertStatement","src":"11217:42:9"}]}},{"AST":{"nodeType":"YulBlock","src":"11463:6975:9","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"11505:36:9","statements":[{"nodeType":"YulAssignment","src":"11507:32:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"11521:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11532:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11535:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11528:3:9"},"nodeType":"YulFunctionCall","src":"11528:10:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11517:3:9"},"nodeType":"YulFunctionCall","src":"11517:22:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11507:6:9"}]}]},"nodeType":"YulCase","src":"11498:43:9","value":{"kind":"number","nodeType":"YulLiteral","src":"11503:1:9","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"11562:36:9","statements":[{"nodeType":"YulAssignment","src":"11564:32:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"11578:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11589:1:9","type":"","value":"1"},{"kind":"number","nodeType":"YulLiteral","src":"11592:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11585:3:9"},"nodeType":"YulFunctionCall","src":"11585:10:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11574:3:9"},"nodeType":"YulFunctionCall","src":"11574:22:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11564:6:9"}]}]},"nodeType":"YulCase","src":"11554:44:9","value":{"kind":"number","nodeType":"YulLiteral","src":"11559:2:9","type":"","value":"10"}},{"body":{"nodeType":"YulBlock","src":"11620:36:9","statements":[{"nodeType":"YulAssignment","src":"11622:32:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"11636:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11647:1:9","type":"","value":"2"},{"kind":"number","nodeType":"YulLiteral","src":"11650:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11643:3:9"},"nodeType":"YulFunctionCall","src":"11643:10:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11632:3:9"},"nodeType":"YulFunctionCall","src":"11632:22:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11622:6:9"}]}]},"nodeType":"YulCase","src":"11611:45:9","value":{"kind":"number","nodeType":"YulLiteral","src":"11616:3:9","type":"","value":"100"}},{"body":{"nodeType":"YulBlock","src":"11679:36:9","statements":[{"nodeType":"YulAssignment","src":"11681:32:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"11695:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11706:1:9","type":"","value":"3"},{"kind":"number","nodeType":"YulLiteral","src":"11709:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11702:3:9"},"nodeType":"YulFunctionCall","src":"11702:10:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11691:3:9"},"nodeType":"YulFunctionCall","src":"11691:22:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11681:6:9"}]}]},"nodeType":"YulCase","src":"11669:46:9","value":{"kind":"number","nodeType":"YulLiteral","src":"11674:4:9","type":"","value":"1000"}},{"body":{"nodeType":"YulBlock","src":"11739:36:9","statements":[{"nodeType":"YulAssignment","src":"11741:32:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"11755:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11766:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11769:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11762:3:9"},"nodeType":"YulFunctionCall","src":"11762:10:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11751:3:9"},"nodeType":"YulFunctionCall","src":"11751:22:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11741:6:9"}]}]},"nodeType":"YulCase","src":"11728:47:9","value":{"kind":"number","nodeType":"YulLiteral","src":"11733:5:9","type":"","value":"10000"}},{"body":{"nodeType":"YulBlock","src":"11800:36:9","statements":[{"nodeType":"YulAssignment","src":"11802:32:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"11816:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11827:1:9","type":"","value":"5"},{"kind":"number","nodeType":"YulLiteral","src":"11830:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11823:3:9"},"nodeType":"YulFunctionCall","src":"11823:10:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11812:3:9"},"nodeType":"YulFunctionCall","src":"11812:22:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11802:6:9"}]}]},"nodeType":"YulCase","src":"11788:48:9","value":{"kind":"number","nodeType":"YulLiteral","src":"11793:6:9","type":"","value":"100000"}},{"body":{"nodeType":"YulBlock","src":"11862:36:9","statements":[{"nodeType":"YulAssignment","src":"11864:32:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"11878:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11889:1:9","type":"","value":"6"},{"kind":"number","nodeType":"YulLiteral","src":"11892:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11885:3:9"},"nodeType":"YulFunctionCall","src":"11885:10:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11874:3:9"},"nodeType":"YulFunctionCall","src":"11874:22:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11864:6:9"}]}]},"nodeType":"YulCase","src":"11849:49:9","value":{"kind":"number","nodeType":"YulLiteral","src":"11854:7:9","type":"","value":"1000000"}},{"body":{"nodeType":"YulBlock","src":"11925:36:9","statements":[{"nodeType":"YulAssignment","src":"11927:32:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"11941:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11952:1:9","type":"","value":"7"},{"kind":"number","nodeType":"YulLiteral","src":"11955:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11948:3:9"},"nodeType":"YulFunctionCall","src":"11948:10:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11937:3:9"},"nodeType":"YulFunctionCall","src":"11937:22:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11927:6:9"}]}]},"nodeType":"YulCase","src":"11911:50:9","value":{"kind":"number","nodeType":"YulLiteral","src":"11916:8:9","type":"","value":"10000000"}},{"body":{"nodeType":"YulBlock","src":"11989:36:9","statements":[{"nodeType":"YulAssignment","src":"11991:32:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12005:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12016:1:9","type":"","value":"8"},{"kind":"number","nodeType":"YulLiteral","src":"12019:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12012:3:9"},"nodeType":"YulFunctionCall","src":"12012:10:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12001:3:9"},"nodeType":"YulFunctionCall","src":"12001:22:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11991:6:9"}]}]},"nodeType":"YulCase","src":"11974:51:9","value":{"kind":"number","nodeType":"YulLiteral","src":"11979:9:9","type":"","value":"100000000"}},{"body":{"nodeType":"YulBlock","src":"12054:36:9","statements":[{"nodeType":"YulAssignment","src":"12056:32:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12070:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12081:1:9","type":"","value":"9"},{"kind":"number","nodeType":"YulLiteral","src":"12084:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12077:3:9"},"nodeType":"YulFunctionCall","src":"12077:10:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12066:3:9"},"nodeType":"YulFunctionCall","src":"12066:22:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12056:6:9"}]}]},"nodeType":"YulCase","src":"12038:52:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12043:10:9","type":"","value":"1000000000"}},{"body":{"nodeType":"YulBlock","src":"12120:37:9","statements":[{"nodeType":"YulAssignment","src":"12122:33:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12136:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12147:2:9","type":"","value":"10"},{"kind":"number","nodeType":"YulLiteral","src":"12151:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12143:3:9"},"nodeType":"YulFunctionCall","src":"12143:11:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12132:3:9"},"nodeType":"YulFunctionCall","src":"12132:23:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12122:6:9"}]}]},"nodeType":"YulCase","src":"12103:54:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12108:11:9","type":"","value":"10000000000"}},{"body":{"nodeType":"YulBlock","src":"12188:37:9","statements":[{"nodeType":"YulAssignment","src":"12190:33:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12204:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12215:2:9","type":"","value":"11"},{"kind":"number","nodeType":"YulLiteral","src":"12219:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12211:3:9"},"nodeType":"YulFunctionCall","src":"12211:11:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12200:3:9"},"nodeType":"YulFunctionCall","src":"12200:23:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12190:6:9"}]}]},"nodeType":"YulCase","src":"12170:55:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12175:12:9","type":"","value":"100000000000"}},{"body":{"nodeType":"YulBlock","src":"12257:37:9","statements":[{"nodeType":"YulAssignment","src":"12259:33:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12273:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12284:2:9","type":"","value":"12"},{"kind":"number","nodeType":"YulLiteral","src":"12288:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12280:3:9"},"nodeType":"YulFunctionCall","src":"12280:11:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12269:3:9"},"nodeType":"YulFunctionCall","src":"12269:23:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12259:6:9"}]}]},"nodeType":"YulCase","src":"12238:56:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12243:13:9","type":"","value":"1000000000000"}},{"body":{"nodeType":"YulBlock","src":"12327:37:9","statements":[{"nodeType":"YulAssignment","src":"12329:33:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12343:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12354:2:9","type":"","value":"13"},{"kind":"number","nodeType":"YulLiteral","src":"12358:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12350:3:9"},"nodeType":"YulFunctionCall","src":"12350:11:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12339:3:9"},"nodeType":"YulFunctionCall","src":"12339:23:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12329:6:9"}]}]},"nodeType":"YulCase","src":"12307:57:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12312:14:9","type":"","value":"10000000000000"}},{"body":{"nodeType":"YulBlock","src":"12398:37:9","statements":[{"nodeType":"YulAssignment","src":"12400:33:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12414:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12425:2:9","type":"","value":"14"},{"kind":"number","nodeType":"YulLiteral","src":"12429:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12421:3:9"},"nodeType":"YulFunctionCall","src":"12421:11:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12410:3:9"},"nodeType":"YulFunctionCall","src":"12410:23:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12400:6:9"}]}]},"nodeType":"YulCase","src":"12377:58:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12382:15:9","type":"","value":"100000000000000"}},{"body":{"nodeType":"YulBlock","src":"12470:37:9","statements":[{"nodeType":"YulAssignment","src":"12472:33:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12486:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12497:2:9","type":"","value":"15"},{"kind":"number","nodeType":"YulLiteral","src":"12501:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12493:3:9"},"nodeType":"YulFunctionCall","src":"12493:11:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12482:3:9"},"nodeType":"YulFunctionCall","src":"12482:23:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12472:6:9"}]}]},"nodeType":"YulCase","src":"12448:59:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12453:16:9","type":"","value":"1000000000000000"}},{"body":{"nodeType":"YulBlock","src":"12543:37:9","statements":[{"nodeType":"YulAssignment","src":"12545:33:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12559:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12570:2:9","type":"","value":"16"},{"kind":"number","nodeType":"YulLiteral","src":"12574:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12566:3:9"},"nodeType":"YulFunctionCall","src":"12566:11:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12555:3:9"},"nodeType":"YulFunctionCall","src":"12555:23:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12545:6:9"}]}]},"nodeType":"YulCase","src":"12520:60:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12525:17:9","type":"","value":"10000000000000000"}},{"body":{"nodeType":"YulBlock","src":"12617:37:9","statements":[{"nodeType":"YulAssignment","src":"12619:33:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12633:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12644:2:9","type":"","value":"17"},{"kind":"number","nodeType":"YulLiteral","src":"12648:2:9","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12640:3:9"},"nodeType":"YulFunctionCall","src":"12640:11:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12629:3:9"},"nodeType":"YulFunctionCall","src":"12629:23:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12619:6:9"}]}]},"nodeType":"YulCase","src":"12593:61:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12598:18:9","type":"","value":"100000000000000000"}},{"body":{"nodeType":"YulBlock","src":"12692:15:9","statements":[{"nodeType":"YulAssignment","src":"12694:11:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12704:1:9","type":"","value":"0"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12694:6:9"}]}]},"nodeType":"YulCase","src":"12667:40:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12672:19:9","type":"","value":"1000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"12746:19:9","statements":[{"nodeType":"YulAssignment","src":"12748:15:9","value":{"name":"SCALE","nodeType":"YulIdentifier","src":"12758:5:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12748:6:9"}]}]},"nodeType":"YulCase","src":"12720:45:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12725:20:9","type":"","value":"10000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"12805:27:9","statements":[{"nodeType":"YulAssignment","src":"12807:23:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12821:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"12828:1:9","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12817:3:9"},"nodeType":"YulFunctionCall","src":"12817:13:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12807:6:9"}]}]},"nodeType":"YulCase","src":"12778:54:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12783:21:9","type":"","value":"100000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"12873:27:9","statements":[{"nodeType":"YulAssignment","src":"12875:23:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12889:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"12896:1:9","type":"","value":"3"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12885:3:9"},"nodeType":"YulFunctionCall","src":"12885:13:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12875:6:9"}]}]},"nodeType":"YulCase","src":"12845:55:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12850:22:9","type":"","value":"1000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"12942:27:9","statements":[{"nodeType":"YulAssignment","src":"12944:23:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12958:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"12965:1:9","type":"","value":"4"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12954:3:9"},"nodeType":"YulFunctionCall","src":"12954:13:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12944:6:9"}]}]},"nodeType":"YulCase","src":"12913:56:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12918:23:9","type":"","value":"10000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13012:27:9","statements":[{"nodeType":"YulAssignment","src":"13014:23:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13028:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13035:1:9","type":"","value":"5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13024:3:9"},"nodeType":"YulFunctionCall","src":"13024:13:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13014:6:9"}]}]},"nodeType":"YulCase","src":"12982:57:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12987:24:9","type":"","value":"100000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13083:27:9","statements":[{"nodeType":"YulAssignment","src":"13085:23:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13099:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13106:1:9","type":"","value":"6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13095:3:9"},"nodeType":"YulFunctionCall","src":"13095:13:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13085:6:9"}]}]},"nodeType":"YulCase","src":"13052:58:9","value":{"kind":"number","nodeType":"YulLiteral","src":"13057:25:9","type":"","value":"1000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13155:27:9","statements":[{"nodeType":"YulAssignment","src":"13157:23:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13171:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13178:1:9","type":"","value":"7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13167:3:9"},"nodeType":"YulFunctionCall","src":"13167:13:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13157:6:9"}]}]},"nodeType":"YulCase","src":"13123:59:9","value":{"kind":"number","nodeType":"YulLiteral","src":"13128:26:9","type":"","value":"10000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13228:27:9","statements":[{"nodeType":"YulAssignment","src":"13230:23:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13244:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13251:1:9","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13240:3:9"},"nodeType":"YulFunctionCall","src":"13240:13:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13230:6:9"}]}]},"nodeType":"YulCase","src":"13195:60:9","value":{"kind":"number","nodeType":"YulLiteral","src":"13200:27:9","type":"","value":"100000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13302:27:9","statements":[{"nodeType":"YulAssignment","src":"13304:23:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13318:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13325:1:9","type":"","value":"9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13314:3:9"},"nodeType":"YulFunctionCall","src":"13314:13:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13304:6:9"}]}]},"nodeType":"YulCase","src":"13268:61:9","value":{"kind":"number","nodeType":"YulLiteral","src":"13273:28:9","type":"","value":"1000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13377:28:9","statements":[{"nodeType":"YulAssignment","src":"13379:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13393:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13400:2:9","type":"","value":"10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13389:3:9"},"nodeType":"YulFunctionCall","src":"13389:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13379:6:9"}]}]},"nodeType":"YulCase","src":"13342:63:9","value":{"kind":"number","nodeType":"YulLiteral","src":"13347:29:9","type":"","value":"10000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13454:28:9","statements":[{"nodeType":"YulAssignment","src":"13456:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13470:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13477:2:9","type":"","value":"11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13466:3:9"},"nodeType":"YulFunctionCall","src":"13466:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13456:6:9"}]}]},"nodeType":"YulCase","src":"13418:64:9","value":{"kind":"number","nodeType":"YulLiteral","src":"13423:30:9","type":"","value":"100000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13532:28:9","statements":[{"nodeType":"YulAssignment","src":"13534:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13548:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13555:2:9","type":"","value":"12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13544:3:9"},"nodeType":"YulFunctionCall","src":"13544:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13534:6:9"}]}]},"nodeType":"YulCase","src":"13495:65:9","value":{"kind":"number","nodeType":"YulLiteral","src":"13500:31:9","type":"","value":"1000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13611:28:9","statements":[{"nodeType":"YulAssignment","src":"13613:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13627:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13634:2:9","type":"","value":"13"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13623:3:9"},"nodeType":"YulFunctionCall","src":"13623:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13613:6:9"}]}]},"nodeType":"YulCase","src":"13573:66:9","value":{"kind":"number","nodeType":"YulLiteral","src":"13578:32:9","type":"","value":"10000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13691:28:9","statements":[{"nodeType":"YulAssignment","src":"13693:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13707:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13714:2:9","type":"","value":"14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13703:3:9"},"nodeType":"YulFunctionCall","src":"13703:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13693:6:9"}]}]},"nodeType":"YulCase","src":"13652:67:9","value":{"kind":"number","nodeType":"YulLiteral","src":"13657:33:9","type":"","value":"100000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13772:28:9","statements":[{"nodeType":"YulAssignment","src":"13774:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13788:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13795:2:9","type":"","value":"15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13784:3:9"},"nodeType":"YulFunctionCall","src":"13784:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13774:6:9"}]}]},"nodeType":"YulCase","src":"13732:68:9","value":{"kind":"number","nodeType":"YulLiteral","src":"13737:34:9","type":"","value":"1000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13854:28:9","statements":[{"nodeType":"YulAssignment","src":"13856:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13870:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13877:2:9","type":"","value":"16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13866:3:9"},"nodeType":"YulFunctionCall","src":"13866:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13856:6:9"}]}]},"nodeType":"YulCase","src":"13813:69:9","value":{"kind":"number","nodeType":"YulLiteral","src":"13818:35:9","type":"","value":"10000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13937:28:9","statements":[{"nodeType":"YulAssignment","src":"13939:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13953:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13960:2:9","type":"","value":"17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13949:3:9"},"nodeType":"YulFunctionCall","src":"13949:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13939:6:9"}]}]},"nodeType":"YulCase","src":"13895:70:9","value":{"kind":"number","nodeType":"YulLiteral","src":"13900:36:9","type":"","value":"100000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14021:28:9","statements":[{"nodeType":"YulAssignment","src":"14023:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14037:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"14044:2:9","type":"","value":"18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14033:3:9"},"nodeType":"YulFunctionCall","src":"14033:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14023:6:9"}]}]},"nodeType":"YulCase","src":"13978:71:9","value":{"kind":"number","nodeType":"YulLiteral","src":"13983:37:9","type":"","value":"1000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14106:28:9","statements":[{"nodeType":"YulAssignment","src":"14108:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14122:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"14129:2:9","type":"","value":"19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14118:3:9"},"nodeType":"YulFunctionCall","src":"14118:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14108:6:9"}]}]},"nodeType":"YulCase","src":"14062:72:9","value":{"kind":"number","nodeType":"YulLiteral","src":"14067:38:9","type":"","value":"10000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14192:28:9","statements":[{"nodeType":"YulAssignment","src":"14194:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14208:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"14215:2:9","type":"","value":"20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14204:3:9"},"nodeType":"YulFunctionCall","src":"14204:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14194:6:9"}]}]},"nodeType":"YulCase","src":"14147:73:9","value":{"kind":"number","nodeType":"YulLiteral","src":"14152:39:9","type":"","value":"100000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14279:28:9","statements":[{"nodeType":"YulAssignment","src":"14281:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14295:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"14302:2:9","type":"","value":"21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14291:3:9"},"nodeType":"YulFunctionCall","src":"14291:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14281:6:9"}]}]},"nodeType":"YulCase","src":"14233:74:9","value":{"kind":"number","nodeType":"YulLiteral","src":"14238:40:9","type":"","value":"1000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14367:28:9","statements":[{"nodeType":"YulAssignment","src":"14369:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14383:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"14390:2:9","type":"","value":"22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14379:3:9"},"nodeType":"YulFunctionCall","src":"14379:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14369:6:9"}]}]},"nodeType":"YulCase","src":"14320:75:9","value":{"kind":"number","nodeType":"YulLiteral","src":"14325:41:9","type":"","value":"10000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14456:28:9","statements":[{"nodeType":"YulAssignment","src":"14458:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14472:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"14479:2:9","type":"","value":"23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14468:3:9"},"nodeType":"YulFunctionCall","src":"14468:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14458:6:9"}]}]},"nodeType":"YulCase","src":"14408:76:9","value":{"kind":"number","nodeType":"YulLiteral","src":"14413:42:9","type":"","value":"100000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14546:28:9","statements":[{"nodeType":"YulAssignment","src":"14548:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14562:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"14569:2:9","type":"","value":"24"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14558:3:9"},"nodeType":"YulFunctionCall","src":"14558:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14548:6:9"}]}]},"nodeType":"YulCase","src":"14497:77:9","value":{"kind":"number","nodeType":"YulLiteral","src":"14502:43:9","type":"","value":"1000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14637:28:9","statements":[{"nodeType":"YulAssignment","src":"14639:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14653:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"14660:2:9","type":"","value":"25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14649:3:9"},"nodeType":"YulFunctionCall","src":"14649:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14639:6:9"}]}]},"nodeType":"YulCase","src":"14587:78:9","value":{"kind":"number","nodeType":"YulLiteral","src":"14592:44:9","type":"","value":"10000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14729:28:9","statements":[{"nodeType":"YulAssignment","src":"14731:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14745:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"14752:2:9","type":"","value":"26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14741:3:9"},"nodeType":"YulFunctionCall","src":"14741:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14731:6:9"}]}]},"nodeType":"YulCase","src":"14678:79:9","value":{"kind":"number","nodeType":"YulLiteral","src":"14683:45:9","type":"","value":"100000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14822:28:9","statements":[{"nodeType":"YulAssignment","src":"14824:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14838:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"14845:2:9","type":"","value":"27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14834:3:9"},"nodeType":"YulFunctionCall","src":"14834:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14824:6:9"}]}]},"nodeType":"YulCase","src":"14770:80:9","value":{"kind":"number","nodeType":"YulLiteral","src":"14775:46:9","type":"","value":"1000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14916:28:9","statements":[{"nodeType":"YulAssignment","src":"14918:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14932:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"14939:2:9","type":"","value":"28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14928:3:9"},"nodeType":"YulFunctionCall","src":"14928:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14918:6:9"}]}]},"nodeType":"YulCase","src":"14863:81:9","value":{"kind":"number","nodeType":"YulLiteral","src":"14868:47:9","type":"","value":"10000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15011:28:9","statements":[{"nodeType":"YulAssignment","src":"15013:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15027:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"15034:2:9","type":"","value":"29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15023:3:9"},"nodeType":"YulFunctionCall","src":"15023:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15013:6:9"}]}]},"nodeType":"YulCase","src":"14957:82:9","value":{"kind":"number","nodeType":"YulLiteral","src":"14962:48:9","type":"","value":"100000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15107:28:9","statements":[{"nodeType":"YulAssignment","src":"15109:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15123:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"15130:2:9","type":"","value":"30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15119:3:9"},"nodeType":"YulFunctionCall","src":"15119:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15109:6:9"}]}]},"nodeType":"YulCase","src":"15052:83:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15057:49:9","type":"","value":"1000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15204:28:9","statements":[{"nodeType":"YulAssignment","src":"15206:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15220:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"15227:2:9","type":"","value":"31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15216:3:9"},"nodeType":"YulFunctionCall","src":"15216:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15206:6:9"}]}]},"nodeType":"YulCase","src":"15148:84:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15153:50:9","type":"","value":"10000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15302:28:9","statements":[{"nodeType":"YulAssignment","src":"15304:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15318:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"15325:2:9","type":"","value":"32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15314:3:9"},"nodeType":"YulFunctionCall","src":"15314:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15304:6:9"}]}]},"nodeType":"YulCase","src":"15245:85:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15250:51:9","type":"","value":"100000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15401:28:9","statements":[{"nodeType":"YulAssignment","src":"15403:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15417:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"15424:2:9","type":"","value":"33"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15413:3:9"},"nodeType":"YulFunctionCall","src":"15413:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15403:6:9"}]}]},"nodeType":"YulCase","src":"15343:86:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15348:52:9","type":"","value":"1000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15501:28:9","statements":[{"nodeType":"YulAssignment","src":"15503:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15517:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"15524:2:9","type":"","value":"34"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15513:3:9"},"nodeType":"YulFunctionCall","src":"15513:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15503:6:9"}]}]},"nodeType":"YulCase","src":"15442:87:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15447:53:9","type":"","value":"10000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15602:28:9","statements":[{"nodeType":"YulAssignment","src":"15604:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15618:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"15625:2:9","type":"","value":"35"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15614:3:9"},"nodeType":"YulFunctionCall","src":"15614:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15604:6:9"}]}]},"nodeType":"YulCase","src":"15542:88:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15547:54:9","type":"","value":"100000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15704:28:9","statements":[{"nodeType":"YulAssignment","src":"15706:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15720:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"15727:2:9","type":"","value":"36"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15716:3:9"},"nodeType":"YulFunctionCall","src":"15716:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15706:6:9"}]}]},"nodeType":"YulCase","src":"15643:89:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15648:55:9","type":"","value":"1000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15807:28:9","statements":[{"nodeType":"YulAssignment","src":"15809:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15823:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"15830:2:9","type":"","value":"37"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15819:3:9"},"nodeType":"YulFunctionCall","src":"15819:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15809:6:9"}]}]},"nodeType":"YulCase","src":"15745:90:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15750:56:9","type":"","value":"10000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15911:28:9","statements":[{"nodeType":"YulAssignment","src":"15913:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15927:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"15934:2:9","type":"","value":"38"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15923:3:9"},"nodeType":"YulFunctionCall","src":"15923:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15913:6:9"}]}]},"nodeType":"YulCase","src":"15848:91:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15853:57:9","type":"","value":"100000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16016:28:9","statements":[{"nodeType":"YulAssignment","src":"16018:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16032:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"16039:2:9","type":"","value":"39"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16028:3:9"},"nodeType":"YulFunctionCall","src":"16028:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16018:6:9"}]}]},"nodeType":"YulCase","src":"15952:92:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15957:58:9","type":"","value":"1000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16122:28:9","statements":[{"nodeType":"YulAssignment","src":"16124:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16138:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"16145:2:9","type":"","value":"40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16134:3:9"},"nodeType":"YulFunctionCall","src":"16134:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16124:6:9"}]}]},"nodeType":"YulCase","src":"16057:93:9","value":{"kind":"number","nodeType":"YulLiteral","src":"16062:59:9","type":"","value":"10000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16229:28:9","statements":[{"nodeType":"YulAssignment","src":"16231:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16245:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"16252:2:9","type":"","value":"41"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16241:3:9"},"nodeType":"YulFunctionCall","src":"16241:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16231:6:9"}]}]},"nodeType":"YulCase","src":"16163:94:9","value":{"kind":"number","nodeType":"YulLiteral","src":"16168:60:9","type":"","value":"100000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16337:28:9","statements":[{"nodeType":"YulAssignment","src":"16339:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16353:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"16360:2:9","type":"","value":"42"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16349:3:9"},"nodeType":"YulFunctionCall","src":"16349:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16339:6:9"}]}]},"nodeType":"YulCase","src":"16270:95:9","value":{"kind":"number","nodeType":"YulLiteral","src":"16275:61:9","type":"","value":"1000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16446:28:9","statements":[{"nodeType":"YulAssignment","src":"16448:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16462:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"16469:2:9","type":"","value":"43"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16458:3:9"},"nodeType":"YulFunctionCall","src":"16458:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16448:6:9"}]}]},"nodeType":"YulCase","src":"16378:96:9","value":{"kind":"number","nodeType":"YulLiteral","src":"16383:62:9","type":"","value":"10000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16556:28:9","statements":[{"nodeType":"YulAssignment","src":"16558:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16572:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"16579:2:9","type":"","value":"44"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16568:3:9"},"nodeType":"YulFunctionCall","src":"16568:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16558:6:9"}]}]},"nodeType":"YulCase","src":"16487:97:9","value":{"kind":"number","nodeType":"YulLiteral","src":"16492:63:9","type":"","value":"100000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16667:28:9","statements":[{"nodeType":"YulAssignment","src":"16669:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16683:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"16690:2:9","type":"","value":"45"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16679:3:9"},"nodeType":"YulFunctionCall","src":"16679:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16669:6:9"}]}]},"nodeType":"YulCase","src":"16597:98:9","value":{"kind":"number","nodeType":"YulLiteral","src":"16602:64:9","type":"","value":"1000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16779:28:9","statements":[{"nodeType":"YulAssignment","src":"16781:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16795:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"16802:2:9","type":"","value":"46"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16791:3:9"},"nodeType":"YulFunctionCall","src":"16791:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16781:6:9"}]}]},"nodeType":"YulCase","src":"16708:99:9","value":{"kind":"number","nodeType":"YulLiteral","src":"16713:65:9","type":"","value":"10000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16892:28:9","statements":[{"nodeType":"YulAssignment","src":"16894:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16908:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"16915:2:9","type":"","value":"47"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16904:3:9"},"nodeType":"YulFunctionCall","src":"16904:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16894:6:9"}]}]},"nodeType":"YulCase","src":"16820:100:9","value":{"kind":"number","nodeType":"YulLiteral","src":"16825:66:9","type":"","value":"100000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17006:28:9","statements":[{"nodeType":"YulAssignment","src":"17008:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17022:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"17029:2:9","type":"","value":"48"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17018:3:9"},"nodeType":"YulFunctionCall","src":"17018:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17008:6:9"}]}]},"nodeType":"YulCase","src":"16933:101:9","value":{"kind":"number","nodeType":"YulLiteral","src":"16938:67:9","type":"","value":"1000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17121:28:9","statements":[{"nodeType":"YulAssignment","src":"17123:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17137:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"17144:2:9","type":"","value":"49"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17133:3:9"},"nodeType":"YulFunctionCall","src":"17133:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17123:6:9"}]}]},"nodeType":"YulCase","src":"17047:102:9","value":{"kind":"number","nodeType":"YulLiteral","src":"17052:68:9","type":"","value":"10000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17237:28:9","statements":[{"nodeType":"YulAssignment","src":"17239:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17253:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"17260:2:9","type":"","value":"50"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17249:3:9"},"nodeType":"YulFunctionCall","src":"17249:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17239:6:9"}]}]},"nodeType":"YulCase","src":"17162:103:9","value":{"kind":"number","nodeType":"YulLiteral","src":"17167:69:9","type":"","value":"100000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17354:28:9","statements":[{"nodeType":"YulAssignment","src":"17356:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17370:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"17377:2:9","type":"","value":"51"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17366:3:9"},"nodeType":"YulFunctionCall","src":"17366:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17356:6:9"}]}]},"nodeType":"YulCase","src":"17278:104:9","value":{"kind":"number","nodeType":"YulLiteral","src":"17283:70:9","type":"","value":"1000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17472:28:9","statements":[{"nodeType":"YulAssignment","src":"17474:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17488:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"17495:2:9","type":"","value":"52"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17484:3:9"},"nodeType":"YulFunctionCall","src":"17484:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17474:6:9"}]}]},"nodeType":"YulCase","src":"17395:105:9","value":{"kind":"number","nodeType":"YulLiteral","src":"17400:71:9","type":"","value":"10000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17591:28:9","statements":[{"nodeType":"YulAssignment","src":"17593:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17607:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"17614:2:9","type":"","value":"53"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17603:3:9"},"nodeType":"YulFunctionCall","src":"17603:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17593:6:9"}]}]},"nodeType":"YulCase","src":"17513:106:9","value":{"kind":"number","nodeType":"YulLiteral","src":"17518:72:9","type":"","value":"100000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17711:28:9","statements":[{"nodeType":"YulAssignment","src":"17713:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17727:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"17734:2:9","type":"","value":"54"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17723:3:9"},"nodeType":"YulFunctionCall","src":"17723:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17713:6:9"}]}]},"nodeType":"YulCase","src":"17632:107:9","value":{"kind":"number","nodeType":"YulLiteral","src":"17637:73:9","type":"","value":"1000000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17832:28:9","statements":[{"nodeType":"YulAssignment","src":"17834:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17848:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"17855:2:9","type":"","value":"55"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17844:3:9"},"nodeType":"YulFunctionCall","src":"17844:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17834:6:9"}]}]},"nodeType":"YulCase","src":"17752:108:9","value":{"kind":"number","nodeType":"YulLiteral","src":"17757:74:9","type":"","value":"10000000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17954:28:9","statements":[{"nodeType":"YulAssignment","src":"17956:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17970:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"17977:2:9","type":"","value":"56"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17966:3:9"},"nodeType":"YulFunctionCall","src":"17966:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17956:6:9"}]}]},"nodeType":"YulCase","src":"17873:109:9","value":{"kind":"number","nodeType":"YulLiteral","src":"17878:75:9","type":"","value":"100000000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"18077:28:9","statements":[{"nodeType":"YulAssignment","src":"18079:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"18093:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"18100:2:9","type":"","value":"57"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18089:3:9"},"nodeType":"YulFunctionCall","src":"18089:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18079:6:9"}]}]},"nodeType":"YulCase","src":"17995:110:9","value":{"kind":"number","nodeType":"YulLiteral","src":"18000:76:9","type":"","value":"1000000000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"18201:28:9","statements":[{"nodeType":"YulAssignment","src":"18203:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"18217:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"18224:2:9","type":"","value":"58"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18213:3:9"},"nodeType":"YulFunctionCall","src":"18213:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18203:6:9"}]}]},"nodeType":"YulCase","src":"18118:111:9","value":{"kind":"number","nodeType":"YulLiteral","src":"18123:77:9","type":"","value":"10000000000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"18326:28:9","statements":[{"nodeType":"YulAssignment","src":"18328:24:9","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"18342:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"18349:2:9","type":"","value":"59"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18338:3:9"},"nodeType":"YulFunctionCall","src":"18338:14:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18328:6:9"}]}]},"nodeType":"YulCase","src":"18242:112:9","value":{"kind":"number","nodeType":"YulLiteral","src":"18247:78:9","type":"","value":"100000000000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"18375:53:9","statements":[{"nodeType":"YulAssignment","src":"18393:21:9","value":{"name":"MAX_UD60x18","nodeType":"YulIdentifier","src":"18403:11:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18393:6:9"}]}]},"nodeType":"YulCase","src":"18367:61:9","value":"default"}],"expression":{"name":"x","nodeType":"YulIdentifier","src":"11484:1:9"},"nodeType":"YulSwitch","src":"11477:6951:9"}]},"evmVersion":"london","externalReferences":[{"declaration":2995,"isOffset":false,"isSlot":false,"src":"18403:11:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"11521:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"11578:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"11636:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"11695:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"11755:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"11816:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"11878:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"11941:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"12005:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"12070:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"12136:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"12204:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"12273:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"12343:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"12414:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"12486:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"12559:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"12633:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"12758:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"12821:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"12889:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"12958:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"13028:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"13099:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"13171:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"13244:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"13318:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"13393:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"13470:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"13548:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"13627:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"13707:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"13788:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"13870:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"13953:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"14037:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"14122:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"14208:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"14295:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"14383:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"14472:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"14562:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"14653:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"14745:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"14838:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"14932:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"15027:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"15123:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"15220:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"15318:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"15417:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"15517:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"15618:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"15720:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"15823:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"15927:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"16032:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"16138:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"16245:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"16353:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"16462:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"16572:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"16683:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"16795:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"16908:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"17022:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"17137:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"17253:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"17370:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"17488:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"17607:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"17727:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"17848:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"17970:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"18093:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"18217:5:9","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"18342:5:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"11507:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"11564:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"11622:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"11681:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"11741:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"11802:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"11864:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"11927:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"11991:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"12056:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"12122:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"12190:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"12259:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"12329:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"12400:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"12472:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"12545:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"12619:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"12694:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"12748:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"12807:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"12875:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"12944:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"13014:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"13085:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"13157:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"13230:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"13304:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"13379:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"13456:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"13534:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"13613:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"13693:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"13774:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"13856:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"13939:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"14023:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"14108:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"14194:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"14281:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"14369:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"14458:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"14548:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"14639:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"14731:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"14824:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"14918:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"15013:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"15109:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"15206:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"15304:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"15403:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"15503:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"15604:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"15706:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"15809:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"15913:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"16018:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"16124:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"16231:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"16339:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"16448:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"16558:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"16669:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"16781:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"16894:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"17008:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"17123:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"17239:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"17356:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"17474:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"17593:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"17713:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"17834:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"17956:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"18079:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"18203:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"18328:6:9","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"18393:6:9","valueSize":1},{"declaration":3286,"isOffset":false,"isSlot":false,"src":"11484:1:9","valueSize":1}],"id":3300,"nodeType":"InlineAssembly","src":"11454:6984:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"18452:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3302,"name":"MAX_UD60x18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"18462:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18452:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3317,"nodeType":"IfStatement","src":"18448:235:9","trueBody":{"id":3316,"nodeType":"Block","src":"18475:208:9","statements":[{"id":3315,"nodeType":"UncheckedBlock","src":"18581:92:9","statements":[{"expression":{"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"18609:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3306,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"18624:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3305,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"18619:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18619:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3308,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"18629:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18619:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18618:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"335f333231393238303934383837333632333437","id":3311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18638:20:9","typeDescriptions":{"typeIdentifier":"t_rational_3321928094887362347_by_1","typeString":"int_const 3321928094887362347"},"value":"3_321928094887362347"},"src":"18618:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18609:49:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3314,"nodeType":"ExpressionStatement","src":"18609:49:9"}]}]}}]},"documentation":{"id":3284,"nodeType":"StructuredDocumentation","src":"10546:562:9","text":"@notice Calculates the common logarithm of x.\n @dev First checks if x is an exact power of ten and it stops if yes. If it's not, calculates the common\n logarithm based on the insight that log10(x) = log2(x) / log2(10).\n Requirements:\n - All from \"log2\".\n Caveats:\n - All from \"log2\".\n @param x The unsigned 60.18-decimal fixed-point number for which to calculate the common logarithm.\n @return result The common logarithm as an unsigned 60.18-decimal fixed-point number."},"id":3319,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11122:5:9","nodeType":"FunctionDefinition","parameters":{"id":3287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3286,"mutability":"mutable","name":"x","nameLocation":"11136:1:9","nodeType":"VariableDeclaration","scope":3319,"src":"11128:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"11128:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11127:11:9"},"returnParameters":{"id":3290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3289,"mutability":"mutable","name":"result","nameLocation":"11170:6:9","nodeType":"VariableDeclaration","scope":3319,"src":"11162:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"11162:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11161:16:9"},"scope":3589,"src":"11113:7576:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3402,"nodeType":"Block","src":"19446:1333:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3327,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"19460:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3328,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"19464:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19460:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3335,"nodeType":"IfStatement","src":"19456:82:9","trueBody":{"id":3334,"nodeType":"Block","src":"19471:67:9","statements":[{"errorCall":{"arguments":[{"id":3331,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"19525:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3330,"name":"PRBMathUD60x18__LogInputTooSmall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"19492:32:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19492:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3333,"nodeType":"RevertStatement","src":"19485:42:9"}]}},{"id":3401,"nodeType":"UncheckedBlock","src":"19547:1226:9","statements":[{"assignments":[3337],"declarations":[{"constant":false,"id":3337,"mutability":"mutable","name":"n","nameLocation":"19701:1:9","nodeType":"VariableDeclaration","scope":3401,"src":"19693:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3336,"name":"uint256","nodeType":"ElementaryTypeName","src":"19693:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3344,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3340,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"19732:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3341,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"19736:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19732:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3338,"name":"PRBMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"19705:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PRBMath_$2979_$","typeString":"type(library PRBMath)"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19713:18:9","memberName":"mostSignificantBit","nodeType":"MemberAccess","referencedDeclaration":2437,"src":"19705:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19705:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19693:49:9"},{"expression":{"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3345,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"19943:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3346,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"19952:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3347,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"19956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19952:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19943:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3350,"nodeType":"ExpressionStatement","src":"19943:18:9"},{"assignments":[3352],"declarations":[{"constant":false,"id":3352,"mutability":"mutable","name":"y","nameLocation":"20023:1:9","nodeType":"VariableDeclaration","scope":3401,"src":"20015:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"20015:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3356,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3353,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"20027:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3354,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"20032:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20027:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20015:18:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3357,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"20106:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3358,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"20111:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20106:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3363,"nodeType":"IfStatement","src":"20102:62:9","trueBody":{"id":3362,"nodeType":"Block","src":"20118:46:9","statements":[{"expression":{"id":3360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"20143:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3326,"id":3361,"nodeType":"Return","src":"20136:13:9"}]}},{"body":{"id":3399,"nodeType":"Block","src":"20411:352:9","statements":[{"expression":{"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3375,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"20429:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3376,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"20434:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3377,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"20438:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20434:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20433:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3380,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"20443:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20433:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20429:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3383,"nodeType":"ExpressionStatement","src":"20429:19:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3384,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"20528:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20533:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3386,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"20537:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20533:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20528:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3398,"nodeType":"IfStatement","src":"20524:225:9","trueBody":{"id":3397,"nodeType":"Block","src":"20544:205:9","statements":[{"expression":{"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3389,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"20629:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3390,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"20639:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20629:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3392,"nodeType":"ExpressionStatement","src":"20629:15:9"},{"expression":{"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3393,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"20723:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"31","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20729:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20723:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3396,"nodeType":"ExpressionStatement","src":"20723:7:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3368,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"20387:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20395:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20387:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3400,"initializationExpression":{"assignments":[3365],"declarations":[{"constant":false,"id":3365,"mutability":"mutable","name":"delta","nameLocation":"20367:5:9","nodeType":"VariableDeclaration","scope":3400,"src":"20359:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"20359:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3367,"initialValue":{"id":3366,"name":"HALF_SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"20375:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20359:26:9"},"loopExpression":{"expression":{"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3371,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"20398:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"31","id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20408:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20398:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3374,"nodeType":"ExpressionStatement","src":"20398:11:9"},"nodeType":"ForStatement","src":"20354:409:9"}]}]},"documentation":{"id":3320,"nodeType":"StructuredDocumentation","src":"18695:682:9","text":"@notice Calculates the binary logarithm of x.\n @dev Based on the iterative approximation algorithm.\n https://en.wikipedia.org/wiki/Binary_logarithm#Iterative_approximation\n Requirements:\n - x must be greater than or equal to SCALE, otherwise the result would be negative.\n Caveats:\n - The results are nor perfectly accurate to the last decimal, due to the lossy precision of the iterative approximation.\n @param x The unsigned 60.18-decimal fixed-point number for which to calculate the binary logarithm.\n @return result The binary logarithm as an unsigned 60.18-decimal fixed-point number."},"id":3403,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"19391:4:9","nodeType":"FunctionDefinition","parameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3322,"mutability":"mutable","name":"x","nameLocation":"19404:1:9","nodeType":"VariableDeclaration","scope":3403,"src":"19396:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3321,"name":"uint256","nodeType":"ElementaryTypeName","src":"19396:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19395:11:9"},"returnParameters":{"id":3326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3325,"mutability":"mutable","name":"result","nameLocation":"19438:6:9","nodeType":"VariableDeclaration","scope":3403,"src":"19430:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"19430:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19429:16:9"},"scope":3589,"src":"19382:1397:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3421,"nodeType":"Block","src":"21338:56:9","statements":[{"expression":{"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3413,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"21348:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3416,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"21382:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3417,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"21385:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3414,"name":"PRBMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"21357:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PRBMath_$2979_$","typeString":"type(library PRBMath)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21365:16:9","memberName":"mulDivFixedPoint","nodeType":"MemberAccess","referencedDeclaration":2620,"src":"21357:24:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21357:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21348:39:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3420,"nodeType":"ExpressionStatement","src":"21348:39:9"}]},"documentation":{"id":3404,"nodeType":"StructuredDocumentation","src":"20785:474:9","text":"@notice Multiplies two unsigned 60.18-decimal fixed-point numbers together, returning a new unsigned 60.18-decimal\n fixed-point number.\n @dev See the documentation for the \"PRBMath.mulDivFixedPoint\" function.\n @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\n @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\n @return result The product as an unsigned 60.18-decimal fixed-point number."},"id":3422,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"21273:3:9","nodeType":"FunctionDefinition","parameters":{"id":3409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3406,"mutability":"mutable","name":"x","nameLocation":"21285:1:9","nodeType":"VariableDeclaration","scope":3422,"src":"21277:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3405,"name":"uint256","nodeType":"ElementaryTypeName","src":"21277:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3408,"mutability":"mutable","name":"y","nameLocation":"21296:1:9","nodeType":"VariableDeclaration","scope":3422,"src":"21288:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3407,"name":"uint256","nodeType":"ElementaryTypeName","src":"21288:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21276:22:9"},"returnParameters":{"id":3412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3411,"mutability":"mutable","name":"result","nameLocation":"21330:6:9","nodeType":"VariableDeclaration","scope":3422,"src":"21322:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"21322:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21321:16:9"},"scope":3589,"src":"21264:130:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3432,"nodeType":"Block","src":"21529:46:9","statements":[{"expression":{"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"21539:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"335f313431353932363533353839373933323338","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21548:20:9","typeDescriptions":{"typeIdentifier":"t_rational_3141592653589793238_by_1","typeString":"int_const 3141592653589793238"},"value":"3_141592653589793238"},"src":"21539:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3431,"nodeType":"ExpressionStatement","src":"21539:29:9"}]},"documentation":{"id":3423,"nodeType":"StructuredDocumentation","src":"21400:71:9","text":"@notice Returns PI as an unsigned 60.18-decimal fixed-point number."},"id":3433,"implemented":true,"kind":"function","modifiers":[],"name":"pi","nameLocation":"21485:2:9","nodeType":"FunctionDefinition","parameters":{"id":3424,"nodeType":"ParameterList","parameters":[],"src":"21487:2:9"},"returnParameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"result","nameLocation":"21521:6:9","nodeType":"VariableDeclaration","scope":3433,"src":"21513:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"21513:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21512:16:9"},"scope":3589,"src":"21476:99:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3472,"nodeType":"Block","src":"22233:150:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3443,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"22247:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22252:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22247:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3470,"nodeType":"Block","src":"22322:55:9","statements":[{"expression":{"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"22336:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":3463,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"22359:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3462,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"22354:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22354:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3465,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"22363:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3461,"name":"mul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"22350:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22350:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3460,"name":"exp2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"22345:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22345:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22336:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3469,"nodeType":"ExpressionStatement","src":"22336:30:9"}]},"id":3471,"nodeType":"IfStatement","src":"22243:134:9","trueBody":{"id":3458,"nodeType":"Block","src":"22255:61:9","statements":[{"expression":{"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3446,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"22269:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3447,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"22278:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22283:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22278:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"hexValue":"30","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22303:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22295:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"22295:7:9","typeDescriptions":{}}},"id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22295:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"22278:27:9","trueExpression":{"id":3450,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"22287:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22269:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3457,"nodeType":"ExpressionStatement","src":"22269:36:9"}]}}]},"documentation":{"id":3434,"nodeType":"StructuredDocumentation","src":"21581:573:9","text":"@notice Raises x to the power of y.\n @dev Based on the insight that x^y = 2^(log2(x) * y).\n Requirements:\n - All from \"exp2\", \"log2\" and \"mul\".\n Caveats:\n - All from \"exp2\", \"log2\" and \"mul\".\n - Assumes 0^0 is 1.\n @param x Number to raise to given power y, as an unsigned 60.18-decimal fixed-point number.\n @param y Exponent to raise x to, as an unsigned 60.18-decimal fixed-point number.\n @return result x raised to power y, as an unsigned 60.18-decimal fixed-point number."},"id":3473,"implemented":true,"kind":"function","modifiers":[],"name":"pow","nameLocation":"22168:3:9","nodeType":"FunctionDefinition","parameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3436,"mutability":"mutable","name":"x","nameLocation":"22180:1:9","nodeType":"VariableDeclaration","scope":3473,"src":"22172:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"22172:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3438,"mutability":"mutable","name":"y","nameLocation":"22191:1:9","nodeType":"VariableDeclaration","scope":3473,"src":"22183:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"22183:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22171:22:9"},"returnParameters":{"id":3442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3441,"mutability":"mutable","name":"result","nameLocation":"22225:6:9","nodeType":"VariableDeclaration","scope":3473,"src":"22217:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3440,"name":"uint256","nodeType":"ElementaryTypeName","src":"22217:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22216:16:9"},"scope":3589,"src":"22159:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3530,"nodeType":"Block","src":"23093:437:9","statements":[{"expression":{"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"23168:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3484,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"23177:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"31","id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23181:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23177:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23185:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23177:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3490,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"23193:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23177:21:9","trueExpression":{"id":3489,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"23189:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23168:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3493,"nodeType":"ExpressionStatement","src":"23168:30:9"},{"body":{"id":3528,"nodeType":"Block","src":"23305:219:9","statements":[{"expression":{"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3505,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"23319:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3508,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"23348:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3509,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"23351:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3506,"name":"PRBMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"23323:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PRBMath_$2979_$","typeString":"type(library PRBMath)"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23331:16:9","memberName":"mulDivFixedPoint","nodeType":"MemberAccess","referencedDeclaration":2620,"src":"23323:24:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23319:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3512,"nodeType":"ExpressionStatement","src":"23319:34:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3513,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"23426:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"31","id":3514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23430:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23426:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23434:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23426:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3527,"nodeType":"IfStatement","src":"23422:92:9","trueBody":{"id":3526,"nodeType":"Block","src":"23437:77:9","statements":[{"expression":{"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3518,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"23455:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"23489:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3522,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"23497:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3519,"name":"PRBMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"23464:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PRBMath_$2979_$","typeString":"type(library PRBMath)"}},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23472:16:9","memberName":"mulDivFixedPoint","nodeType":"MemberAccess","referencedDeclaration":2620,"src":"23464:24:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23464:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23455:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3525,"nodeType":"ExpressionStatement","src":"23455:44:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3498,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"23289:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23293:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23289:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3529,"initializationExpression":{"expression":{"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3494,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"23280:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"31","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23286:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23280:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3497,"nodeType":"ExpressionStatement","src":"23280:7:9"},"loopExpression":{"expression":{"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3501,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"23296:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"31","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23302:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23296:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3504,"nodeType":"ExpressionStatement","src":"23296:7:9"},"nodeType":"ForStatement","src":"23275:249:9"}]},"documentation":{"id":3474,"nodeType":"StructuredDocumentation","src":"22389:624:9","text":"@notice Raises x (unsigned 60.18-decimal fixed-point number) to the power of y (basic unsigned integer) using the\n famous algorithm \"exponentiation by squaring\".\n @dev See https://en.wikipedia.org/wiki/Exponentiation_by_squaring\n Requirements:\n - The result must fit within MAX_UD60x18.\n Caveats:\n - All from \"mul\".\n - Assumes 0^0 is 1.\n @param x The base as an unsigned 60.18-decimal fixed-point number.\n @param y The exponent as an uint256.\n @return result The result as an unsigned 60.18-decimal fixed-point number."},"id":3531,"implemented":true,"kind":"function","modifiers":[],"name":"powu","nameLocation":"23027:4:9","nodeType":"FunctionDefinition","parameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"x","nameLocation":"23040:1:9","nodeType":"VariableDeclaration","scope":3531,"src":"23032:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"23032:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"y","nameLocation":"23051:1:9","nodeType":"VariableDeclaration","scope":3531,"src":"23043:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"23043:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23031:22:9"},"returnParameters":{"id":3482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3481,"mutability":"mutable","name":"result","nameLocation":"23085:6:9","nodeType":"VariableDeclaration","scope":3531,"src":"23077:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3480,"name":"uint256","nodeType":"ElementaryTypeName","src":"23077:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23076:16:9"},"scope":3589,"src":"23018:512:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3541,"nodeType":"Block","src":"23667:31:9","statements":[{"expression":{"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"23677:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3538,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"23686:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23677:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3540,"nodeType":"ExpressionStatement","src":"23677:14:9"}]},"documentation":{"id":3532,"nodeType":"StructuredDocumentation","src":"23536:70:9","text":"@notice Returns 1 as an unsigned 60.18-decimal fixed-point number."},"id":3542,"implemented":true,"kind":"function","modifiers":[],"name":"scale","nameLocation":"23620:5:9","nodeType":"FunctionDefinition","parameters":{"id":3533,"nodeType":"ParameterList","parameters":[],"src":"23625:2:9"},"returnParameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3535,"mutability":"mutable","name":"result","nameLocation":"23659:6:9","nodeType":"VariableDeclaration","scope":3542,"src":"23651:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3534,"name":"uint256","nodeType":"ElementaryTypeName","src":"23651:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23650:16:9"},"scope":3589,"src":"23611:87:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3571,"nodeType":"Block","src":"24224:436:9","statements":[{"id":3570,"nodeType":"UncheckedBlock","src":"24234:420:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3550,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"24262:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":3551,"name":"MAX_UD60x18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"24266:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3552,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"24280:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24266:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24262:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3560,"nodeType":"IfStatement","src":"24258:100:9","trueBody":{"id":3559,"nodeType":"Block","src":"24287:71:9","statements":[{"errorCall":{"arguments":[{"id":3556,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"24341:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3555,"name":"PRBMathUD60x18__SqrtOverflow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"24312:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24312:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3558,"nodeType":"RevertStatement","src":"24305:38:9"}]}},{"expression":{"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3561,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"24611:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3564,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"24633:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3565,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"24637:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24633:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3562,"name":"PRBMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"24620:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PRBMath_$2979_$","typeString":"type(library PRBMath)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24628:4:9","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":2978,"src":"24620:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24620:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24611:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3569,"nodeType":"ExpressionStatement","src":"24611:32:9"}]}]},"documentation":{"id":3543,"nodeType":"StructuredDocumentation","src":"23704:451:9","text":"@notice Calculates the square root of x, rounding down.\n @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\n Requirements:\n - x must be less than MAX_UD60x18 / SCALE.\n @param x The unsigned 60.18-decimal fixed-point number for which to calculate the square root.\n @return result The result as an unsigned 60.18-decimal fixed-point ."},"id":3572,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"24169:4:9","nodeType":"FunctionDefinition","parameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"x","nameLocation":"24182:1:9","nodeType":"VariableDeclaration","scope":3572,"src":"24174:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint256","nodeType":"ElementaryTypeName","src":"24174:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24173:11:9"},"returnParameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"result","nameLocation":"24216:6:9","nodeType":"VariableDeclaration","scope":3572,"src":"24208:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"24208:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24207:16:9"},"scope":3589,"src":"24160:500:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3587,"nodeType":"Block","src":"24991:69:9","statements":[{"id":3586,"nodeType":"UncheckedBlock","src":"25001:53:9","statements":[{"expression":{"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"25025:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3581,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"25034:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3582,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"25038:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25034:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25025:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3585,"nodeType":"ExpressionStatement","src":"25025:18:9"}]}]},"documentation":{"id":3573,"nodeType":"StructuredDocumentation","src":"24666:254:9","text":"@notice Converts a unsigned 60.18-decimal fixed-point number to basic integer form, rounding down in the process.\n @param x The unsigned 60.18-decimal fixed-point number to convert.\n @return result The same number in basic integer form."},"id":3588,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"24934:6:9","nodeType":"FunctionDefinition","parameters":{"id":3576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"x","nameLocation":"24949:1:9","nodeType":"VariableDeclaration","scope":3588,"src":"24941:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3574,"name":"uint256","nodeType":"ElementaryTypeName","src":"24941:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24940:11:9"},"returnParameters":{"id":3579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3578,"mutability":"mutable","name":"result","nameLocation":"24983:6:9","nodeType":"VariableDeclaration","scope":3588,"src":"24975:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"24975:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24974:16:9"},"scope":3589,"src":"24925:135:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3590,"src":"560:24502:9","usedErrors":[]}],"src":"32:25031:9"},"id":9},"src/dependencies/solmate/ERC20.sol":{"ast":{"absolutePath":"src/dependencies/solmate/ERC20.sol","exportedSymbols":{"ERC20":[3977]},"id":3978,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3591,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"42:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":3592,"nodeType":"StructuredDocumentation","src":"68:406:10","text":"@notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it."},"fullyImplemented":true,"id":3977,"linearizedBaseContracts":[3977],"name":"ERC20","nameLocation":"492:5:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3600,"name":"Transfer","nameLocation":"689:8:10","nodeType":"EventDefinition","parameters":{"id":3599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3594,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"714:4:10","nodeType":"VariableDeclaration","scope":3600,"src":"698:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3593,"name":"address","nodeType":"ElementaryTypeName","src":"698:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3596,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"736:2:10","nodeType":"VariableDeclaration","scope":3600,"src":"720:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3595,"name":"address","nodeType":"ElementaryTypeName","src":"720:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3598,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"748:6:10","nodeType":"VariableDeclaration","scope":3600,"src":"740:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3597,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"697:58:10"},"src":"683:73:10"},{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3608,"name":"Approval","nameLocation":"768:8:10","nodeType":"EventDefinition","parameters":{"id":3607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"793:5:10","nodeType":"VariableDeclaration","scope":3608,"src":"777:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3601,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3604,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"816:7:10","nodeType":"VariableDeclaration","scope":3608,"src":"800:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3603,"name":"address","nodeType":"ElementaryTypeName","src":"800:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3606,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"833:6:10","nodeType":"VariableDeclaration","scope":3608,"src":"825:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3605,"name":"uint256","nodeType":"ElementaryTypeName","src":"825:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"776:64:10"},"src":"762:79:10"},{"constant":false,"functionSelector":"06fdde03","id":3610,"mutability":"mutable","name":"name","nameLocation":"1045:4:10","nodeType":"VariableDeclaration","scope":3977,"src":"1031:18:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3609,"name":"string","nodeType":"ElementaryTypeName","src":"1031:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":3612,"mutability":"mutable","name":"symbol","nameLocation":"1070:6:10","nodeType":"VariableDeclaration","scope":3977,"src":"1056:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3611,"name":"string","nodeType":"ElementaryTypeName","src":"1056:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"313ce567","id":3614,"mutability":"immutable","name":"decimals","nameLocation":"1106:8:10","nodeType":"VariableDeclaration","scope":3977,"src":"1083:31:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3613,"name":"uint8","nodeType":"ElementaryTypeName","src":"1083:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"18160ddd","id":3616,"mutability":"mutable","name":"totalSupply","nameLocation":"1319:11:10","nodeType":"VariableDeclaration","scope":3977,"src":"1304:26:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"1304:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"70a08231","id":3620,"mutability":"mutable","name":"balanceOf","nameLocation":"1372:9:10","nodeType":"VariableDeclaration","scope":3977,"src":"1337:44:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3619,"keyType":{"id":3617,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1337:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3618,"name":"uint256","nodeType":"ElementaryTypeName","src":"1356:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"dd62ed3e","id":3626,"mutability":"mutable","name":"allowance","nameLocation":"1443:9:10","nodeType":"VariableDeclaration","scope":3977,"src":"1388:64:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":3625,"keyType":{"id":3621,"name":"address","nodeType":"ElementaryTypeName","src":"1396:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1388:47:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":3624,"keyType":{"id":3622,"name":"address","nodeType":"ElementaryTypeName","src":"1415:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1407:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"1426:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"id":3628,"mutability":"immutable","name":"INITIAL_CHAIN_ID","nameLocation":"1670:16:10","nodeType":"VariableDeclaration","scope":3977,"src":"1643:43:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"immutable","name":"INITIAL_DOMAIN_SEPARATOR","nameLocation":"1720:24:10","nodeType":"VariableDeclaration","scope":3977,"src":"1693:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1693:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"functionSelector":"7ecebe00","id":3634,"mutability":"mutable","name":"nonces","nameLocation":"1786:6:10","nodeType":"VariableDeclaration","scope":3977,"src":"1751:41:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3633,"keyType":{"id":3631,"name":"address","nodeType":"ElementaryTypeName","src":"1759:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1751:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"1770:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":3665,"nodeType":"Block","src":"2084:189:10","statements":[{"expression":{"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3643,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"2094:4:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3644,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"2101:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2094:12:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3646,"nodeType":"ExpressionStatement","src":"2094:12:10"},{"expression":{"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3647,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"2116:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3648,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"2125:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2116:16:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3650,"nodeType":"ExpressionStatement","src":"2116:16:10"},{"expression":{"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3651,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"2142:8:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3652,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"2153:9:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2142:20:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3654,"nodeType":"ExpressionStatement","src":"2142:20:10"},{"expression":{"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3655,"name":"INITIAL_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"2173:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3656,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2192:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2198:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"2192:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3659,"nodeType":"ExpressionStatement","src":"2173:32:10"},{"expression":{"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3660,"name":"INITIAL_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"2215:24:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3661,"name":"computeDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"2242:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2242:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2215:51:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3664,"nodeType":"ExpressionStatement","src":"2215:51:10"}]},"id":3666,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3636,"mutability":"mutable","name":"_name","nameLocation":"2016:5:10","nodeType":"VariableDeclaration","scope":3666,"src":"2002:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3635,"name":"string","nodeType":"ElementaryTypeName","src":"2002:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3638,"mutability":"mutable","name":"_symbol","nameLocation":"2045:7:10","nodeType":"VariableDeclaration","scope":3666,"src":"2031:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3637,"name":"string","nodeType":"ElementaryTypeName","src":"2031:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"_decimals","nameLocation":"2068:9:10","nodeType":"VariableDeclaration","scope":3666,"src":"2062:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3639,"name":"uint8","nodeType":"ElementaryTypeName","src":"2062:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1992:91:10"},"returnParameters":{"id":3642,"nodeType":"ParameterList","parameters":[],"src":"2084:0:10"},"scope":3977,"src":"1981:292:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3693,"nodeType":"Block","src":"2541:131:10","statements":[{"expression":{"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3675,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"2551:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3679,"indexExpression":{"expression":{"id":3676,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2561:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2565:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2561:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2551:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3680,"indexExpression":{"id":3678,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"2573:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2551:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3681,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"2584:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:39:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3683,"nodeType":"ExpressionStatement","src":"2551:39:10"},{"eventCall":{"arguments":[{"expression":{"id":3685,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2615:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2619:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2615:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3687,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"2627:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3688,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"2636:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3684,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"2606:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3690,"nodeType":"EmitStatement","src":"2601:42:10"},{"expression":{"hexValue":"74727565","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2661:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3674,"id":3692,"nodeType":"Return","src":"2654:11:10"}]},"functionSelector":"095ea7b3","id":3694,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2470:7:10","nodeType":"FunctionDefinition","parameters":{"id":3671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"spender","nameLocation":"2486:7:10","nodeType":"VariableDeclaration","scope":3694,"src":"2478:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3667,"name":"address","nodeType":"ElementaryTypeName","src":"2478:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3670,"mutability":"mutable","name":"amount","nameLocation":"2503:6:10","nodeType":"VariableDeclaration","scope":3694,"src":"2495:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"2495:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2477:33:10"},"returnParameters":{"id":3674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3694,"src":"2535:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3672,"name":"bool","nodeType":"ElementaryTypeName","src":"2535:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2534:6:10"},"scope":3977,"src":"2461:211:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3726,"nodeType":"Block","src":"2754:297:10","statements":[{"expression":{"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3703,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"2764:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3706,"indexExpression":{"expression":{"id":3704,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2774:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2778:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2774:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2764:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3707,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"2789:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2764:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3709,"nodeType":"ExpressionStatement","src":"2764:31:10"},{"id":3716,"nodeType":"UncheckedBlock","src":"2917:58:10","statements":[{"expression":{"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3710,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"2941:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3712,"indexExpression":{"id":3711,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"2951:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2941:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3713,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"2958:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2941:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3715,"nodeType":"ExpressionStatement","src":"2941:23:10"}]},{"eventCall":{"arguments":[{"expression":{"id":3718,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2999:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2999:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3720,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"3011:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3721,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"3015:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3717,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"2990:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2990:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3723,"nodeType":"EmitStatement","src":"2985:37:10"},{"expression":{"hexValue":"74727565","id":3724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3040:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3702,"id":3725,"nodeType":"Return","src":"3033:11:10"}]},"functionSelector":"a9059cbb","id":3727,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"2687:8:10","nodeType":"FunctionDefinition","parameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3696,"mutability":"mutable","name":"to","nameLocation":"2704:2:10","nodeType":"VariableDeclaration","scope":3727,"src":"2696:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3695,"name":"address","nodeType":"ElementaryTypeName","src":"2696:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3698,"mutability":"mutable","name":"amount","nameLocation":"2716:6:10","nodeType":"VariableDeclaration","scope":3727,"src":"2708:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"2708:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2695:28:10"},"returnParameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3727,"src":"2748:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3700,"name":"bool","nodeType":"ElementaryTypeName","src":"2748:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2747:6:10"},"scope":3977,"src":"2678:373:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3787,"nodeType":"Block","src":"3181:468:10","statements":[{"assignments":[3739],"declarations":[{"constant":false,"id":3739,"mutability":"mutable","name":"allowed","nameLocation":"3199:7:10","nodeType":"VariableDeclaration","scope":3787,"src":"3191:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3738,"name":"uint256","nodeType":"ElementaryTypeName","src":"3191:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3746,"initialValue":{"baseExpression":{"baseExpression":{"id":3740,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"3209:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3742,"indexExpression":{"id":3741,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"3219:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3209:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3745,"indexExpression":{"expression":{"id":3743,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3225:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3229:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3225:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3209:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3191:45:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3747,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"3287:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":3750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3303:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3749,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3748,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3298:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3298:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3312:3:10","memberName":"max","nodeType":"MemberAccess","src":"3298:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3287:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3765,"nodeType":"IfStatement","src":"3283:80:10","trueBody":{"expression":{"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3754,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"3317:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3758,"indexExpression":{"id":3755,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"3327:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3317:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3759,"indexExpression":{"expression":{"id":3756,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3333:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3337:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3333:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3317:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3760,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"3347:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3761,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"3357:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3347:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3317:46:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3764,"nodeType":"ExpressionStatement","src":"3317:46:10"}},{"expression":{"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3766,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"3374:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3768,"indexExpression":{"id":3767,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"3384:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3374:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3769,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"3393:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3374:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3771,"nodeType":"ExpressionStatement","src":"3374:25:10"},{"id":3778,"nodeType":"UncheckedBlock","src":"3521:58:10","statements":[{"expression":{"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3772,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"3545:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3774,"indexExpression":{"id":3773,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"3555:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3545:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3775,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"3562:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3545:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3777,"nodeType":"ExpressionStatement","src":"3545:23:10"}]},{"eventCall":{"arguments":[{"id":3780,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"3603:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3781,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"3609:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3782,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"3613:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3779,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"3594:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3784,"nodeType":"EmitStatement","src":"3589:31:10"},{"expression":{"hexValue":"74727565","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3638:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3737,"id":3786,"nodeType":"Return","src":"3631:11:10"}]},"functionSelector":"23b872dd","id":3788,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3066:12:10","nodeType":"FunctionDefinition","parameters":{"id":3734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"from","nameLocation":"3096:4:10","nodeType":"VariableDeclaration","scope":3788,"src":"3088:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3728,"name":"address","nodeType":"ElementaryTypeName","src":"3088:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3731,"mutability":"mutable","name":"to","nameLocation":"3118:2:10","nodeType":"VariableDeclaration","scope":3788,"src":"3110:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3730,"name":"address","nodeType":"ElementaryTypeName","src":"3110:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3733,"mutability":"mutable","name":"amount","nameLocation":"3138:6:10","nodeType":"VariableDeclaration","scope":3788,"src":"3130:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"3130:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3078:72:10"},"returnParameters":{"id":3737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3788,"src":"3175:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3735,"name":"bool","nodeType":"ElementaryTypeName","src":"3175:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3174:6:10"},"scope":3977,"src":"3057:592:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3874,"nodeType":"Block","src":"4027:1294:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3806,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"4045:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3807,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4057:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4063:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"4057:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4045:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5045524d49545f444541444c494e455f45585049524544","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4074:25:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e","typeString":"literal_string \"PERMIT_DEADLINE_EXPIRED\""},"value":"PERMIT_DEADLINE_EXPIRED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e","typeString":"literal_string \"PERMIT_DEADLINE_EXPIRED\""}],"id":3805,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4037:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3812,"nodeType":"ExpressionStatement","src":"4037:63:10"},{"id":3867,"nodeType":"UncheckedBlock","src":"4241:1027:10","statements":[{"assignments":[3814],"declarations":[{"constant":false,"id":3814,"mutability":"mutable","name":"recoveredAddress","nameLocation":"4273:16:10","nodeType":"VariableDeclaration","scope":3867,"src":"4265:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3813,"name":"address","nodeType":"ElementaryTypeName","src":"4265:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3844,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"1901","id":3819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4392:10:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"arguments":[],"expression":{"argumentTypes":[],"id":3820,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"4428:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4428:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":3826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4602:84:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":3825,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4555:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4555:165:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3828,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"4754:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3829,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"4793:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"4834:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4873:15:10","subExpression":{"baseExpression":{"id":3831,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"4873:6:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3833,"indexExpression":{"id":3832,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"4880:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4873:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3835,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"4922:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3823,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4511:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4515:6:10","memberName":"encode","nodeType":"MemberAccess","src":"4511:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4511:449:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3822,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4472:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4472:514:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3817,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4350:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4354:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"4350:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4350:658:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3816,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4319:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:707:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3840,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"5044:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3841,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"5063:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3842,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"5082:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3815,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"4292:9:10","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:805:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4265:832:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3846,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"5120:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5148:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5140:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3847,"name":"address","nodeType":"ElementaryTypeName","src":"5140:7:10","typeDescriptions":{}}},"id":3850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5120:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3852,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"5154:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3853,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"5174:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5154:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5120:59:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f5349474e4552","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5181:16:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c","typeString":"literal_string \"INVALID_SIGNER\""},"value":"INVALID_SIGNER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c","typeString":"literal_string \"INVALID_SIGNER\""}],"id":3845,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5112:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:86:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3858,"nodeType":"ExpressionStatement","src":"5112:86:10"},{"expression":{"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3859,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"5213:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3862,"indexExpression":{"id":3860,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"5223:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5213:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3863,"indexExpression":{"id":3861,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"5241:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5213:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"5252:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5213:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3866,"nodeType":"ExpressionStatement","src":"5213:44:10"}]},{"eventCall":{"arguments":[{"id":3869,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"5292:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3870,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"5299:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"5308:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3868,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"5283:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5283:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3873,"nodeType":"EmitStatement","src":"5278:36:10"}]},"functionSelector":"d505accf","id":3875,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3847:6:10","nodeType":"FunctionDefinition","parameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3790,"mutability":"mutable","name":"owner","nameLocation":"3871:5:10","nodeType":"VariableDeclaration","scope":3875,"src":"3863:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3789,"name":"address","nodeType":"ElementaryTypeName","src":"3863:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3792,"mutability":"mutable","name":"spender","nameLocation":"3894:7:10","nodeType":"VariableDeclaration","scope":3875,"src":"3886:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3791,"name":"address","nodeType":"ElementaryTypeName","src":"3886:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3794,"mutability":"mutable","name":"value","nameLocation":"3919:5:10","nodeType":"VariableDeclaration","scope":3875,"src":"3911:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"3911:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3796,"mutability":"mutable","name":"deadline","nameLocation":"3942:8:10","nodeType":"VariableDeclaration","scope":3875,"src":"3934:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"3934:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3798,"mutability":"mutable","name":"v","nameLocation":"3966:1:10","nodeType":"VariableDeclaration","scope":3875,"src":"3960:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3797,"name":"uint8","nodeType":"ElementaryTypeName","src":"3960:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3800,"mutability":"mutable","name":"r","nameLocation":"3985:1:10","nodeType":"VariableDeclaration","scope":3875,"src":"3977:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3977:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3802,"mutability":"mutable","name":"s","nameLocation":"4004:1:10","nodeType":"VariableDeclaration","scope":3875,"src":"3996:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3996:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3853:158:10"},"returnParameters":{"id":3804,"nodeType":"ParameterList","parameters":[],"src":"4027:0:10"},"scope":3977,"src":"3838:1483:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3889,"nodeType":"Block","src":"5393:111:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3880,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5410:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5416:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"5410:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3882,"name":"INITIAL_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"5427:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5410:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3885,"name":"computeDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"5473:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5473:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5410:87:10","trueExpression":{"id":3884,"name":"INITIAL_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"5446:24:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3879,"id":3888,"nodeType":"Return","src":"5403:94:10"}]},"functionSelector":"3644e515","id":3890,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"5336:16:10","nodeType":"FunctionDefinition","parameters":{"id":3876,"nodeType":"ParameterList","parameters":[],"src":"5352:2:10"},"returnParameters":{"id":3879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3890,"src":"5384:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5384:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5383:9:10"},"scope":3977,"src":"5327:177:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3919,"nodeType":"Block","src":"5584:372:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5682:84:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3898,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5672:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5672:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":3904,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"5805:4:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3902,"name":"bytes","nodeType":"ElementaryTypeName","src":"5799:5:10","typeDescriptions":{}}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":3901,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5789:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"31","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5843:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":3907,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5833:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5833:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3910,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5869:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5875:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"5869:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3914,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5912:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$3977","typeString":"contract ERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$3977","typeString":"contract ERC20"}],"id":3913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5904:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3912,"name":"address","nodeType":"ElementaryTypeName","src":"5904:7:10","typeDescriptions":{}}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5904:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3896,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5640:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5644:6:10","memberName":"encode","nodeType":"MemberAccess","src":"5640:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5640:295:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3895,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5613:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:336:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3894,"id":3918,"nodeType":"Return","src":"5594:355:10"}]},"id":3920,"implemented":true,"kind":"function","modifiers":[],"name":"computeDomainSeparator","nameLocation":"5519:22:10","nodeType":"FunctionDefinition","parameters":{"id":3891,"nodeType":"ParameterList","parameters":[],"src":"5541:2:10"},"returnParameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3920,"src":"5575:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3892,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5575:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5574:9:10"},"scope":3977,"src":"5510:446:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3947,"nodeType":"Block","src":"6210:265:10","statements":[{"expression":{"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3927,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"6220:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3928,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"6235:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6220:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3930,"nodeType":"ExpressionStatement","src":"6220:21:10"},{"id":3937,"nodeType":"UncheckedBlock","src":"6363:58:10","statements":[{"expression":{"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3931,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"6387:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3933,"indexExpression":{"id":3932,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"6397:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6387:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3934,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"6404:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6387:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3936,"nodeType":"ExpressionStatement","src":"6387:23:10"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6453:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6445:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3939,"name":"address","nodeType":"ElementaryTypeName","src":"6445:7:10","typeDescriptions":{}}},"id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6445:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3943,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"6457:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3944,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"6461:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3938,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"6436:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6436:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3946,"nodeType":"EmitStatement","src":"6431:37:10"}]},"id":3948,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"6159:5:10","nodeType":"FunctionDefinition","parameters":{"id":3925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"to","nameLocation":"6173:2:10","nodeType":"VariableDeclaration","scope":3948,"src":"6165:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3921,"name":"address","nodeType":"ElementaryTypeName","src":"6165:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3924,"mutability":"mutable","name":"amount","nameLocation":"6185:6:10","nodeType":"VariableDeclaration","scope":3948,"src":"6177:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"6177:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6164:28:10"},"returnParameters":{"id":3926,"nodeType":"ParameterList","parameters":[],"src":"6210:0:10"},"scope":3977,"src":"6150:325:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3975,"nodeType":"Block","src":"6543:266:10","statements":[{"expression":{"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3955,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"6553:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3957,"indexExpression":{"id":3956,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"6563:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6553:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3958,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"6572:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6553:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3960,"nodeType":"ExpressionStatement","src":"6553:25:10"},{"id":3965,"nodeType":"UncheckedBlock","src":"6697:56:10","statements":[{"expression":{"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3961,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"6721:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3962,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"6736:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6721:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3964,"nodeType":"ExpressionStatement","src":"6721:21:10"}]},{"eventCall":{"arguments":[{"id":3967,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"6777:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6783:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3968,"name":"address","nodeType":"ElementaryTypeName","src":"6783:7:10","typeDescriptions":{}}},"id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6783:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3972,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"6795:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3966,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"6768:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6768:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3974,"nodeType":"EmitStatement","src":"6763:39:10"}]},"id":3976,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"6490:5:10","nodeType":"FunctionDefinition","parameters":{"id":3953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3950,"mutability":"mutable","name":"from","nameLocation":"6504:4:10","nodeType":"VariableDeclaration","scope":3976,"src":"6496:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3949,"name":"address","nodeType":"ElementaryTypeName","src":"6496:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3952,"mutability":"mutable","name":"amount","nameLocation":"6518:6:10","nodeType":"VariableDeclaration","scope":3976,"src":"6510:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3951,"name":"uint256","nodeType":"ElementaryTypeName","src":"6510:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6495:30:10"},"returnParameters":{"id":3954,"nodeType":"ParameterList","parameters":[],"src":"6543:0:10"},"scope":3977,"src":"6481:328:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3978,"src":"474:6337:10","usedErrors":[]}],"src":"42:6770:10"},"id":10},"src/interfaces/IERC20.sol":{"ast":{"absolutePath":"src/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[4061]},"id":4062,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3979,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4061,"linearizedBaseContracts":[4061],"name":"IERC20","nameLocation":"68:6:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3987,"name":"Approval","nameLocation":"87:8:11","nodeType":"EventDefinition","parameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"121:5:11","nodeType":"VariableDeclaration","scope":3987,"src":"105:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3980,"name":"address","nodeType":"ElementaryTypeName","src":"105:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3983,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"152:7:11","nodeType":"VariableDeclaration","scope":3987,"src":"136:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3982,"name":"address","nodeType":"ElementaryTypeName","src":"136:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3985,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"177:5:11","nodeType":"VariableDeclaration","scope":3987,"src":"169:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3984,"name":"uint256","nodeType":"ElementaryTypeName","src":"169:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95:93:11"},"src":"81:108:11"},{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3995,"name":"Transfer","nameLocation":"200:8:11","nodeType":"EventDefinition","parameters":{"id":3994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"225:4:11","nodeType":"VariableDeclaration","scope":3995,"src":"209:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3988,"name":"address","nodeType":"ElementaryTypeName","src":"209:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3991,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"247:2:11","nodeType":"VariableDeclaration","scope":3995,"src":"231:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3990,"name":"address","nodeType":"ElementaryTypeName","src":"231:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3993,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"259:5:11","nodeType":"VariableDeclaration","scope":3995,"src":"251:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3992,"name":"uint256","nodeType":"ElementaryTypeName","src":"251:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"208:57:11"},"src":"194:72:11"},{"functionSelector":"06fdde03","id":4000,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"281:4:11","nodeType":"FunctionDefinition","parameters":{"id":3996,"nodeType":"ParameterList","parameters":[],"src":"285:2:11"},"returnParameters":{"id":3999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4000,"src":"311:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3997,"name":"string","nodeType":"ElementaryTypeName","src":"311:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"310:15:11"},"scope":4061,"src":"272:54:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":4005,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"341:6:11","nodeType":"FunctionDefinition","parameters":{"id":4001,"nodeType":"ParameterList","parameters":[],"src":"347:2:11"},"returnParameters":{"id":4004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4005,"src":"373:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4002,"name":"string","nodeType":"ElementaryTypeName","src":"373:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"372:15:11"},"scope":4061,"src":"332:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":4010,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"403:8:11","nodeType":"FunctionDefinition","parameters":{"id":4006,"nodeType":"ParameterList","parameters":[],"src":"411:2:11"},"returnParameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4010,"src":"437:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4007,"name":"uint8","nodeType":"ElementaryTypeName","src":"437:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"436:7:11"},"scope":4061,"src":"394:50:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":4015,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"459:11:11","nodeType":"FunctionDefinition","parameters":{"id":4011,"nodeType":"ParameterList","parameters":[],"src":"470:2:11"},"returnParameters":{"id":4014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4015,"src":"496:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4012,"name":"uint256","nodeType":"ElementaryTypeName","src":"496:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"495:9:11"},"scope":4061,"src":"450:55:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":4022,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"520:9:11","nodeType":"FunctionDefinition","parameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"owner","nameLocation":"538:5:11","nodeType":"VariableDeclaration","scope":4022,"src":"530:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4016,"name":"address","nodeType":"ElementaryTypeName","src":"530:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"529:15:11"},"returnParameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4022,"src":"568:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"568:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"567:9:11"},"scope":4061,"src":"511:66:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dd62ed3e","id":4031,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"592:9:11","nodeType":"FunctionDefinition","parameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"owner","nameLocation":"610:5:11","nodeType":"VariableDeclaration","scope":4031,"src":"602:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4023,"name":"address","nodeType":"ElementaryTypeName","src":"602:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4026,"mutability":"mutable","name":"spender","nameLocation":"625:7:11","nodeType":"VariableDeclaration","scope":4031,"src":"617:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4025,"name":"address","nodeType":"ElementaryTypeName","src":"617:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"601:32:11"},"returnParameters":{"id":4030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4031,"src":"681:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4028,"name":"uint256","nodeType":"ElementaryTypeName","src":"681:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"680:9:11"},"scope":4061,"src":"583:107:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":4040,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"705:7:11","nodeType":"FunctionDefinition","parameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4033,"mutability":"mutable","name":"spender","nameLocation":"721:7:11","nodeType":"VariableDeclaration","scope":4040,"src":"713:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4032,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4035,"mutability":"mutable","name":"value","nameLocation":"738:5:11","nodeType":"VariableDeclaration","scope":4040,"src":"730:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"712:32:11"},"returnParameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4040,"src":"763:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4037,"name":"bool","nodeType":"ElementaryTypeName","src":"763:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"762:6:11"},"scope":4061,"src":"696:73:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":4049,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"784:8:11","nodeType":"FunctionDefinition","parameters":{"id":4045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"to","nameLocation":"801:2:11","nodeType":"VariableDeclaration","scope":4049,"src":"793:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4041,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4044,"mutability":"mutable","name":"value","nameLocation":"813:5:11","nodeType":"VariableDeclaration","scope":4049,"src":"805:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4043,"name":"uint256","nodeType":"ElementaryTypeName","src":"805:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"792:27:11"},"returnParameters":{"id":4048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4049,"src":"838:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4046,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:11"},"scope":4061,"src":"775:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":4060,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"859:12:11","nodeType":"FunctionDefinition","parameters":{"id":4056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"from","nameLocation":"889:4:11","nodeType":"VariableDeclaration","scope":4060,"src":"881:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4050,"name":"address","nodeType":"ElementaryTypeName","src":"881:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4053,"mutability":"mutable","name":"to","nameLocation":"911:2:11","nodeType":"VariableDeclaration","scope":4060,"src":"903:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4052,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4055,"mutability":"mutable","name":"value","nameLocation":"931:5:11","nodeType":"VariableDeclaration","scope":4060,"src":"923:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"871:71:11"},"returnParameters":{"id":4059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4060,"src":"961:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4057,"name":"bool","nodeType":"ElementaryTypeName","src":"961:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"960:6:11"},"scope":4061,"src":"850:117:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4062,"src":"58:911:11","usedErrors":[]}],"src":"32:938:11"},"id":11},"src/interfaces/IPriceFeed.sol":{"ast":{"absolutePath":"src/interfaces/IPriceFeed.sol","exportedSymbols":{"IPriceFeed":[4080]},"id":4081,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4063,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IPriceFeed","contractDependencies":[],"contractKind":"interface","documentation":{"id":4064,"nodeType":"StructuredDocumentation","src":"58:51:12","text":" @dev Interface for protocol price feeds."},"fullyImplemented":false,"id":4080,"linearizedBaseContracts":[4080],"name":"IPriceFeed","nameLocation":"120:10:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":4065,"nodeType":"StructuredDocumentation","src":"160:188:12","text":" @dev Emitted after the price source of an asset is updated.\n @param asset The address of the asset.\n @param source The price feed source of the asset."},"eventSelector":"2efc45f9add60d3f347244a1bcc385d7e17c53b3cbd3643e2851a571bc565666","id":4071,"name":"AssetPriceFeedSourceUpdated","nameLocation":"359:27:12","nodeType":"EventDefinition","parameters":{"id":4070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"412:5:12","nodeType":"VariableDeclaration","scope":4071,"src":"396:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4066,"name":"address","nodeType":"ElementaryTypeName","src":"396:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4069,"indexed":true,"mutability":"mutable","name":"source","nameLocation":"443:6:12","nodeType":"VariableDeclaration","scope":4071,"src":"427:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4068,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"386:69:12"},"src":"353:103:12"},{"documentation":{"id":4072,"nodeType":"StructuredDocumentation","src":"500:156:12","text":" @dev Used to retrieve a given asset's price.\n @param _asset Address of the asset.\n @return uint256 Price of the asset."},"functionSelector":"b3596f07","id":4079,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetPrice","nameLocation":"670:13:12","nodeType":"FunctionDefinition","parameters":{"id":4075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4074,"mutability":"mutable","name":"_asset","nameLocation":"692:6:12","nodeType":"VariableDeclaration","scope":4079,"src":"684:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4073,"name":"address","nodeType":"ElementaryTypeName","src":"684:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"683:16:12"},"returnParameters":{"id":4078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4079,"src":"723:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4076,"name":"uint256","nodeType":"ElementaryTypeName","src":"723:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"722:9:12"},"scope":4080,"src":"661:71:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4081,"src":"110:624:12","usedErrors":[]}],"src":"32:703:12"},"id":12},"src/stETH.sol":{"ast":{"absolutePath":"src/stETH.sol","exportedSymbols":{"ERC20":[3977],"stETH":[4124]},"id":4125,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4082,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:13"},{"absolutePath":"src/dependencies/solmate/ERC20.sol","file":"./dependencies/solmate/ERC20.sol","id":4083,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4125,"sourceUnit":3978,"src":"58:42:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4084,"name":"ERC20","nameLocations":["120:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":3977,"src":"120:5:13"},"id":4085,"nodeType":"InheritanceSpecifier","src":"120:5:13"}],"canonicalName":"stETH","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4124,"linearizedBaseContracts":[4124,3977],"name":"stETH","nameLocation":"111:5:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":4122,"nodeType":"Block","src":"199:169:13","statements":[{"assignments":[4097],"declarations":[{"constant":false,"id":4097,"mutability":"mutable","name":"holdersLength","nameLocation":"217:13:13","nodeType":"VariableDeclaration","scope":4122,"src":"209:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4096,"name":"uint256","nodeType":"ElementaryTypeName","src":"209:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4100,"initialValue":{"expression":{"id":4098,"name":"_holders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"233:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"242:6:13","memberName":"length","nodeType":"MemberAccess","src":"233:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"209:39:13"},{"body":{"id":4120,"nodeType":"Block","src":"303:59:13","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4112,"name":"_holders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"323:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4114,"indexExpression":{"id":4113,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"332:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"323:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000_by_1","typeString":"int_const 100000000000000000000000"},"id":4117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130305f303030","id":4115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"336:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"346:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"336:14:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000_by_1","typeString":"int_const 100000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_100000000000000000000000_by_1","typeString":"int_const 100000000000000000000000"}],"id":4111,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"317:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"317:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4119,"nodeType":"ExpressionStatement","src":"317:34:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4105,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"279:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4106,"name":"holdersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"283:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"279:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4121,"initializationExpression":{"assignments":[4102],"declarations":[{"constant":false,"id":4102,"mutability":"mutable","name":"i","nameLocation":"272:1:13","nodeType":"VariableDeclaration","scope":4121,"src":"264:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4101,"name":"uint256","nodeType":"ElementaryTypeName","src":"264:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4104,"initialValue":{"hexValue":"30","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"276:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"264:13:13"},"loopExpression":{"expression":{"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"298:3:13","subExpression":{"id":4108,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"298:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4110,"nodeType":"ExpressionStatement","src":"298:3:13"},"nodeType":"ForStatement","src":"259:103:13"}]},"id":4123,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"7374455448","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"177:7:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5318b5909b20227fb38f47aa955f9f06527b0ae497ac2d344a4aacb624e26485","typeString":"literal_string \"stETH\""},"value":"stETH"},{"hexValue":"7374455448","id":4092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"186:7:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5318b5909b20227fb38f47aa955f9f06527b0ae497ac2d344a4aacb624e26485","typeString":"literal_string \"stETH\""},"value":"stETH"},{"hexValue":"3138","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"195:2:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"}],"id":4094,"kind":"baseConstructorSpecifier","modifierName":{"id":4090,"name":"ERC20","nameLocations":["171:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":3977,"src":"171:5:13"},"nodeType":"ModifierInvocation","src":"171:27:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4088,"mutability":"mutable","name":"_holders","nameLocation":"161:8:13","nodeType":"VariableDeclaration","scope":4123,"src":"144:25:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4086,"name":"address","nodeType":"ElementaryTypeName","src":"144:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4087,"nodeType":"ArrayTypeName","src":"144:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"143:27:13"},"returnParameters":{"id":4095,"nodeType":"ParameterList","parameters":[],"src":"199:0:13"},"scope":4124,"src":"132:236:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":4125,"src":"102:268:13","usedErrors":[]}],"src":"32:339:13"},"id":13},"src/stNEAR.sol":{"ast":{"absolutePath":"src/stNEAR.sol","exportedSymbols":{"ERC20":[3977],"stNEAR":[4168]},"id":4169,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4126,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:14"},{"absolutePath":"src/dependencies/solmate/ERC20.sol","file":"./dependencies/solmate/ERC20.sol","id":4127,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4169,"sourceUnit":3978,"src":"58:42:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4128,"name":"ERC20","nameLocations":["121:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":3977,"src":"121:5:14"},"id":4129,"nodeType":"InheritanceSpecifier","src":"121:5:14"}],"canonicalName":"stNEAR","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4168,"linearizedBaseContracts":[4168,3977],"name":"stNEAR","nameLocation":"111:6:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":4166,"nodeType":"Block","src":"202:169:14","statements":[{"assignments":[4141],"declarations":[{"constant":false,"id":4141,"mutability":"mutable","name":"holdersLength","nameLocation":"220:13:14","nodeType":"VariableDeclaration","scope":4166,"src":"212:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4140,"name":"uint256","nodeType":"ElementaryTypeName","src":"212:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4144,"initialValue":{"expression":{"id":4142,"name":"_holders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"236:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"245:6:14","memberName":"length","nodeType":"MemberAccess","src":"236:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"212:39:14"},{"body":{"id":4164,"nodeType":"Block","src":"306:59:14","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4156,"name":"_holders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"326:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4158,"indexExpression":{"id":4157,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"335:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"326:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000_by_1","typeString":"int_const 100000000000000000000000"},"id":4161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130305f303030","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"339:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"349:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"339:14:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000_by_1","typeString":"int_const 100000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_100000000000000000000000_by_1","typeString":"int_const 100000000000000000000000"}],"id":4155,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"320:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"320:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4163,"nodeType":"ExpressionStatement","src":"320:34:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4149,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"282:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4150,"name":"holdersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"286:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"282:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4165,"initializationExpression":{"assignments":[4146],"declarations":[{"constant":false,"id":4146,"mutability":"mutable","name":"i","nameLocation":"275:1:14","nodeType":"VariableDeclaration","scope":4165,"src":"267:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"267:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4148,"initialValue":{"hexValue":"30","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"279:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"267:13:14"},"loopExpression":{"expression":{"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"301:3:14","subExpression":{"id":4152,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"301:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4154,"nodeType":"ExpressionStatement","src":"301:3:14"},"nodeType":"ForStatement","src":"262:103:14"}]},"id":4167,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"73744e454152","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"178:8:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_50c2229640c89629fd99a90bedf4e5d317aa36b32f8405a7f59c629d631564e1","typeString":"literal_string \"stNEAR\""},"value":"stNEAR"},{"hexValue":"73744e454152","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"188:8:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_50c2229640c89629fd99a90bedf4e5d317aa36b32f8405a7f59c629d631564e1","typeString":"literal_string \"stNEAR\""},"value":"stNEAR"},{"hexValue":"3138","id":4137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"198:2:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"}],"id":4138,"kind":"baseConstructorSpecifier","modifierName":{"id":4134,"name":"ERC20","nameLocations":["172:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":3977,"src":"172:5:14"},"nodeType":"ModifierInvocation","src":"172:29:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4132,"mutability":"mutable","name":"_holders","nameLocation":"162:8:14","nodeType":"VariableDeclaration","scope":4167,"src":"145:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4130,"name":"address","nodeType":"ElementaryTypeName","src":"145:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4131,"nodeType":"ArrayTypeName","src":"145:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"144:27:14"},"returnParameters":{"id":4139,"nodeType":"ParameterList","parameters":[],"src":"202:0:14"},"scope":4168,"src":"133:238:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":4169,"src":"102:271:14","usedErrors":[]}],"src":"32:342:14"},"id":14}},"contracts":{"src/FluxPriceFeed.sol":{"FluxPriceFeed":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"source","type":"address"}],"internalType":"struct FluxPriceFeed.Config[]","name":"_config","type":"tuple[]"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":true,"internalType":"address","name":"source","type":"address"}],"name":"AssetPriceFeedSourceUpdated","type":"event"},{"inputs":[],"name":"TARGET_DIGITS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_asset","type":"address"}],"name":"getAssetPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"getAssetPrice(address)":{"details":"Used to retrieve a given asset's price.","params":{"_asset":"Address of the asset."},"returns":{"_0":"uint256 Price of the asset."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_101":{"entryPoint":null,"id":101,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":1046,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":934,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":1162,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_Config_$29_memory_ptr_fromMemory":{"entryPoint":957,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":1213,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_13e63822319f457869f7e39533cb3e11d411566d67610a8db149f751583d3789_to_t_string_memory_ptr_fromStack":{"entryPoint":1399,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e_to_t_string_memory_ptr_fromStack":{"entryPoint":1513,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_13e63822319f457869f7e39533cb3e11d411566d67610a8db149f751583d3789__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1438,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1552,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":768,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":625,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr":{"entryPoint":799,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1341,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":888,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":856,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1633,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":714,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":1643,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1586,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1294,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":667,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":645,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":851,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":846,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":640,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":635,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":650,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_13e63822319f457869f7e39533cb3e11d411566d67610a8db149f751583d3789":{"entryPoint":1358,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e":{"entryPoint":1472,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":908,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7756:15","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:15","statements":[{"nodeType":"YulAssignment","src":"57:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:15"},"nodeType":"YulFunctionCall","src":"67:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:15","type":""}],"src":"7:75:15"},{"body":{"nodeType":"YulBlock","src":"177:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:15"},"nodeType":"YulFunctionCall","src":"187:12:15"},"nodeType":"YulExpressionStatement","src":"187:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:15"},{"body":{"nodeType":"YulBlock","src":"300:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:15"},"nodeType":"YulFunctionCall","src":"310:12:15"},"nodeType":"YulExpressionStatement","src":"310:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:15"},{"body":{"nodeType":"YulBlock","src":"423:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:15"},"nodeType":"YulFunctionCall","src":"433:12:15"},"nodeType":"YulExpressionStatement","src":"433:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:15"},{"body":{"nodeType":"YulBlock","src":"505:54:15","statements":[{"nodeType":"YulAssignment","src":"515:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"533:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"540:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"529:3:15"},"nodeType":"YulFunctionCall","src":"529:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"549:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"545:3:15"},"nodeType":"YulFunctionCall","src":"545:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"525:3:15"},"nodeType":"YulFunctionCall","src":"525:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"515:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"488:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"498:6:15","type":""}],"src":"457:102:15"},{"body":{"nodeType":"YulBlock","src":"593:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"610:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"613:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"603:6:15"},"nodeType":"YulFunctionCall","src":"603:88:15"},"nodeType":"YulExpressionStatement","src":"603:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"707:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"710:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"700:6:15"},"nodeType":"YulFunctionCall","src":"700:15:15"},"nodeType":"YulExpressionStatement","src":"700:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"731:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"734:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"724:6:15"},"nodeType":"YulFunctionCall","src":"724:15:15"},"nodeType":"YulExpressionStatement","src":"724:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"565:180:15"},{"body":{"nodeType":"YulBlock","src":"794:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"804:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"826:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"856:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"834:21:15"},"nodeType":"YulFunctionCall","src":"834:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"822:3:15"},"nodeType":"YulFunctionCall","src":"822:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"808:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"973:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"975:16:15"},"nodeType":"YulFunctionCall","src":"975:18:15"},"nodeType":"YulExpressionStatement","src":"975:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"916:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"928:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"913:2:15"},"nodeType":"YulFunctionCall","src":"913:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"952:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"964:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"949:2:15"},"nodeType":"YulFunctionCall","src":"949:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"910:2:15"},"nodeType":"YulFunctionCall","src":"910:62:15"},"nodeType":"YulIf","src":"907:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1011:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1015:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1004:6:15"},"nodeType":"YulFunctionCall","src":"1004:22:15"},"nodeType":"YulExpressionStatement","src":"1004:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"780:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"788:4:15","type":""}],"src":"751:281:15"},{"body":{"nodeType":"YulBlock","src":"1079:88:15","statements":[{"nodeType":"YulAssignment","src":"1089:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1099:18:15"},"nodeType":"YulFunctionCall","src":"1099:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1089:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1148:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"1156:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1128:19:15"},"nodeType":"YulFunctionCall","src":"1128:33:15"},"nodeType":"YulExpressionStatement","src":"1128:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1063:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1072:6:15","type":""}],"src":"1038:129:15"},{"body":{"nodeType":"YulBlock","src":"1277:229:15","statements":[{"body":{"nodeType":"YulBlock","src":"1382:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1384:16:15"},"nodeType":"YulFunctionCall","src":"1384:18:15"},"nodeType":"YulExpressionStatement","src":"1384:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1354:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1362:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1351:2:15"},"nodeType":"YulFunctionCall","src":"1351:30:15"},"nodeType":"YulIf","src":"1348:56:15"},{"nodeType":"YulAssignment","src":"1414:25:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1426:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1434:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1422:3:15"},"nodeType":"YulFunctionCall","src":"1422:17:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1414:4:15"}]},{"nodeType":"YulAssignment","src":"1476:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1488:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"1494:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1484:3:15"},"nodeType":"YulFunctionCall","src":"1484:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1476:4:15"}]}]},"name":"array_allocation_size_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1261:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1272:4:15","type":""}],"src":"1173:333:15"},{"body":{"nodeType":"YulBlock","src":"1601:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1618:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1621:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1611:6:15"},"nodeType":"YulFunctionCall","src":"1611:12:15"},"nodeType":"YulExpressionStatement","src":"1611:12:15"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1512:117:15"},{"body":{"nodeType":"YulBlock","src":"1724:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1741:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1744:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1734:6:15"},"nodeType":"YulFunctionCall","src":"1734:12:15"},"nodeType":"YulExpressionStatement","src":"1734:12:15"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"1635:117:15"},{"body":{"nodeType":"YulBlock","src":"1847:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1864:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1867:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1857:6:15"},"nodeType":"YulFunctionCall","src":"1857:12:15"},"nodeType":"YulExpressionStatement","src":"1857:12:15"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"1758:117:15"},{"body":{"nodeType":"YulBlock","src":"1926:81:15","statements":[{"nodeType":"YulAssignment","src":"1936:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1951:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1958:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1947:3:15"},"nodeType":"YulFunctionCall","src":"1947:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1936:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1908:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1918:7:15","type":""}],"src":"1881:126:15"},{"body":{"nodeType":"YulBlock","src":"2058:51:15","statements":[{"nodeType":"YulAssignment","src":"2068:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2097:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2079:17:15"},"nodeType":"YulFunctionCall","src":"2079:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2068:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2040:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2050:7:15","type":""}],"src":"2013:96:15"},{"body":{"nodeType":"YulBlock","src":"2158:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"2215:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2224:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2227:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2217:6:15"},"nodeType":"YulFunctionCall","src":"2217:12:15"},"nodeType":"YulExpressionStatement","src":"2217:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2181:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2206:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2188:17:15"},"nodeType":"YulFunctionCall","src":"2188:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2178:2:15"},"nodeType":"YulFunctionCall","src":"2178:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2171:6:15"},"nodeType":"YulFunctionCall","src":"2171:43:15"},"nodeType":"YulIf","src":"2168:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2151:5:15","type":""}],"src":"2115:122:15"},{"body":{"nodeType":"YulBlock","src":"2306:80:15","statements":[{"nodeType":"YulAssignment","src":"2316:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2331:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2325:5:15"},"nodeType":"YulFunctionCall","src":"2325:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2316:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2374:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2347:26:15"},"nodeType":"YulFunctionCall","src":"2347:33:15"},"nodeType":"YulExpressionStatement","src":"2347:33:15"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2284:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2292:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2300:5:15","type":""}],"src":"2243:143:15"},{"body":{"nodeType":"YulBlock","src":"2515:519:15","statements":[{"body":{"nodeType":"YulBlock","src":"2559:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"2561:77:15"},"nodeType":"YulFunctionCall","src":"2561:79:15"},"nodeType":"YulExpressionStatement","src":"2561:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"2536:3:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2541:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2532:3:15"},"nodeType":"YulFunctionCall","src":"2532:19:15"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:15","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2528:3:15"},"nodeType":"YulFunctionCall","src":"2528:30:15"},"nodeType":"YulIf","src":"2525:117:15"},{"nodeType":"YulAssignment","src":"2651:30:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2676:4:15","type":"","value":"0x40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2660:15:15"},"nodeType":"YulFunctionCall","src":"2660:21:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2651:5:15"}]},{"nodeType":"YulBlock","src":"2691:162:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2727:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2741:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2731:6:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2767:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2774:4:15","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2763:3:15"},"nodeType":"YulFunctionCall","src":"2763:16:15"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2817:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2828:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2813:3:15"},"nodeType":"YulFunctionCall","src":"2813:22:15"},{"name":"end","nodeType":"YulIdentifier","src":"2837:3:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2781:31:15"},"nodeType":"YulFunctionCall","src":"2781:60:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2756:6:15"},"nodeType":"YulFunctionCall","src":"2756:86:15"},"nodeType":"YulExpressionStatement","src":"2756:86:15"}]},{"nodeType":"YulBlock","src":"2863:164:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2900:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2914:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2904:6:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2941:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2948:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2937:3:15"},"nodeType":"YulFunctionCall","src":"2937:16:15"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2991:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2987:3:15"},"nodeType":"YulFunctionCall","src":"2987:22:15"},{"name":"end","nodeType":"YulIdentifier","src":"3011:3:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2955:31:15"},"nodeType":"YulFunctionCall","src":"2955:60:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2930:6:15"},"nodeType":"YulFunctionCall","src":"2930:86:15"},"nodeType":"YulExpressionStatement","src":"2930:86:15"}]}]},"name":"abi_decode_t_struct$_Config_$29_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2490:9:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2501:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2509:5:15","type":""}],"src":"2427:607:15"},{"body":{"nodeType":"YulBlock","src":"3212:663:15","statements":[{"nodeType":"YulAssignment","src":"3222:112:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3326:6:15"}],"functionName":{"name":"array_allocation_size_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3247:78:15"},"nodeType":"YulFunctionCall","src":"3247:86:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3231:15:15"},"nodeType":"YulFunctionCall","src":"3231:103:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3222:5:15"}]},{"nodeType":"YulVariableDeclaration","src":"3343:16:15","value":{"name":"array","nodeType":"YulIdentifier","src":"3354:5:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3347:3:15","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3376:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"3383:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3369:6:15"},"nodeType":"YulFunctionCall","src":"3369:21:15"},"nodeType":"YulExpressionStatement","src":"3369:21:15"},{"nodeType":"YulAssignment","src":"3399:23:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3410:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"3417:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:15"},"nodeType":"YulFunctionCall","src":"3406:16:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3399:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"3432:44:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3450:6:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3462:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3470:4:15","type":"","value":"0x40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3458:3:15"},"nodeType":"YulFunctionCall","src":"3458:17:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3446:3:15"},"nodeType":"YulFunctionCall","src":"3446:30:15"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3436:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3504:103:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"3518:77:15"},"nodeType":"YulFunctionCall","src":"3518:79:15"},"nodeType":"YulExpressionStatement","src":"3518:79:15"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3491:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"3499:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3488:2:15"},"nodeType":"YulFunctionCall","src":"3488:15:15"},"nodeType":"YulIf","src":"3485:122:15"},{"body":{"nodeType":"YulBlock","src":"3692:177:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3707:21:15","value":{"name":"src","nodeType":"YulIdentifier","src":"3725:3:15"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"3711:10:15","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3749:3:15"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"3808:10:15"},{"name":"end","nodeType":"YulIdentifier","src":"3820:3:15"}],"functionName":{"name":"abi_decode_t_struct$_Config_$29_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3754:53:15"},"nodeType":"YulFunctionCall","src":"3754:70:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3742:6:15"},"nodeType":"YulFunctionCall","src":"3742:83:15"},"nodeType":"YulExpressionStatement","src":"3742:83:15"},{"nodeType":"YulAssignment","src":"3838:21:15","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3849:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3854:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3845:3:15"},"nodeType":"YulFunctionCall","src":"3845:14:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3838:3:15"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3645:3:15"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3650:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3642:2:15"},"nodeType":"YulFunctionCall","src":"3642:15:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3658:25:15","statements":[{"nodeType":"YulAssignment","src":"3660:21:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3671:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3676:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3667:3:15"},"nodeType":"YulFunctionCall","src":"3667:14:15"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3660:3:15"}]}]},"pre":{"nodeType":"YulBlock","src":"3620:21:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3622:17:15","value":{"name":"offset","nodeType":"YulIdentifier","src":"3633:6:15"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3626:3:15","type":""}]}]},"src":"3616:253:15"}]},"name":"abi_decode_available_length_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3182:6:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"3190:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"3198:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3206:5:15","type":""}],"src":"3077:798:15"},{"body":{"nodeType":"YulBlock","src":"4028:319:15","statements":[{"body":{"nodeType":"YulBlock","src":"4077:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4079:77:15"},"nodeType":"YulFunctionCall","src":"4079:79:15"},"nodeType":"YulExpressionStatement","src":"4079:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4056:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4064:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4052:3:15"},"nodeType":"YulFunctionCall","src":"4052:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"4071:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4048:3:15"},"nodeType":"YulFunctionCall","src":"4048:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4041:6:15"},"nodeType":"YulFunctionCall","src":"4041:35:15"},"nodeType":"YulIf","src":"4038:122:15"},{"nodeType":"YulVariableDeclaration","src":"4169:27:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4189:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4183:5:15"},"nodeType":"YulFunctionCall","src":"4183:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4173:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4205:136:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4314:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4322:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4310:3:15"},"nodeType":"YulFunctionCall","src":"4310:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"4329:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"4337:3:15"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4214:95:15"},"nodeType":"YulFunctionCall","src":"4214:127:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4205:5:15"}]}]},"name":"abi_decode_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4006:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"4014:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4022:5:15","type":""}],"src":"3918:429:15"},{"body":{"nodeType":"YulBlock","src":"4477:474:15","statements":[{"body":{"nodeType":"YulBlock","src":"4523:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4525:77:15"},"nodeType":"YulFunctionCall","src":"4525:79:15"},"nodeType":"YulExpressionStatement","src":"4525:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4498:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4507:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4494:3:15"},"nodeType":"YulFunctionCall","src":"4494:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4519:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4490:3:15"},"nodeType":"YulFunctionCall","src":"4490:32:15"},"nodeType":"YulIf","src":"4487:119:15"},{"nodeType":"YulBlock","src":"4616:328:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4631:38:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4655:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4666:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4651:3:15"},"nodeType":"YulFunctionCall","src":"4651:17:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4645:5:15"},"nodeType":"YulFunctionCall","src":"4645:24:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4635:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4716:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4718:77:15"},"nodeType":"YulFunctionCall","src":"4718:79:15"},"nodeType":"YulExpressionStatement","src":"4718:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4688:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4696:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4685:2:15"},"nodeType":"YulFunctionCall","src":"4685:30:15"},"nodeType":"YulIf","src":"4682:117:15"},{"nodeType":"YulAssignment","src":"4813:121:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4906:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4917:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4902:3:15"},"nodeType":"YulFunctionCall","src":"4902:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4926:7:15"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4823:78:15"},"nodeType":"YulFunctionCall","src":"4823:111:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:15"}]}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4447:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4458:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4470:6:15","type":""}],"src":"4353:598:15"},{"body":{"nodeType":"YulBlock","src":"4985:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5002:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5005:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4995:6:15"},"nodeType":"YulFunctionCall","src":"4995:88:15"},"nodeType":"YulExpressionStatement","src":"4995:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5099:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5102:4:15","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5092:6:15"},"nodeType":"YulFunctionCall","src":"5092:15:15"},"nodeType":"YulExpressionStatement","src":"5092:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5123:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5126:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5116:6:15"},"nodeType":"YulFunctionCall","src":"5116:15:15"},"nodeType":"YulExpressionStatement","src":"5116:15:15"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4957:180:15"},{"body":{"nodeType":"YulBlock","src":"5239:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5256:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"5261:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5249:6:15"},"nodeType":"YulFunctionCall","src":"5249:19:15"},"nodeType":"YulExpressionStatement","src":"5249:19:15"},{"nodeType":"YulAssignment","src":"5277:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5296:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5301:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5292:3:15"},"nodeType":"YulFunctionCall","src":"5292:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5277:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5211:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"5216:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5227:11:15","type":""}],"src":"5143:169:15"},{"body":{"nodeType":"YulBlock","src":"5424:57:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5446:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"5454:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5442:3:15"},"nodeType":"YulFunctionCall","src":"5442:14:15"},{"hexValue":"496e76616c6964206173736574","kind":"string","nodeType":"YulLiteral","src":"5458:15:15","type":"","value":"Invalid asset"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5435:6:15"},"nodeType":"YulFunctionCall","src":"5435:39:15"},"nodeType":"YulExpressionStatement","src":"5435:39:15"}]},"name":"store_literal_in_memory_13e63822319f457869f7e39533cb3e11d411566d67610a8db149f751583d3789","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5416:6:15","type":""}],"src":"5318:163:15"},{"body":{"nodeType":"YulBlock","src":"5633:220:15","statements":[{"nodeType":"YulAssignment","src":"5643:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5709:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5714:2:15","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5650:58:15"},"nodeType":"YulFunctionCall","src":"5650:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5643:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5815:3:15"}],"functionName":{"name":"store_literal_in_memory_13e63822319f457869f7e39533cb3e11d411566d67610a8db149f751583d3789","nodeType":"YulIdentifier","src":"5726:88:15"},"nodeType":"YulFunctionCall","src":"5726:93:15"},"nodeType":"YulExpressionStatement","src":"5726:93:15"},{"nodeType":"YulAssignment","src":"5828:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5839:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5844:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5835:3:15"},"nodeType":"YulFunctionCall","src":"5835:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5828:3:15"}]}]},"name":"abi_encode_t_stringliteral_13e63822319f457869f7e39533cb3e11d411566d67610a8db149f751583d3789_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5621:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5629:3:15","type":""}],"src":"5487:366:15"},{"body":{"nodeType":"YulBlock","src":"6030:248:15","statements":[{"nodeType":"YulAssignment","src":"6040:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6052:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6063:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6048:3:15"},"nodeType":"YulFunctionCall","src":"6048:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6040:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6087:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6098:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6083:3:15"},"nodeType":"YulFunctionCall","src":"6083:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6106:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"6112:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6102:3:15"},"nodeType":"YulFunctionCall","src":"6102:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6076:6:15"},"nodeType":"YulFunctionCall","src":"6076:47:15"},"nodeType":"YulExpressionStatement","src":"6076:47:15"},{"nodeType":"YulAssignment","src":"6132:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6266:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_13e63822319f457869f7e39533cb3e11d411566d67610a8db149f751583d3789_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6140:124:15"},"nodeType":"YulFunctionCall","src":"6140:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6132:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_13e63822319f457869f7e39533cb3e11d411566d67610a8db149f751583d3789__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6010:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6025:4:15","type":""}],"src":"5859:419:15"},{"body":{"nodeType":"YulBlock","src":"6390:58:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6412:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"6420:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6408:3:15"},"nodeType":"YulFunctionCall","src":"6408:14:15"},{"hexValue":"496e76616c696420736f75726365","kind":"string","nodeType":"YulLiteral","src":"6424:16:15","type":"","value":"Invalid source"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6401:6:15"},"nodeType":"YulFunctionCall","src":"6401:40:15"},"nodeType":"YulExpressionStatement","src":"6401:40:15"}]},"name":"store_literal_in_memory_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6382:6:15","type":""}],"src":"6284:164:15"},{"body":{"nodeType":"YulBlock","src":"6600:220:15","statements":[{"nodeType":"YulAssignment","src":"6610:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6676:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6681:2:15","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6617:58:15"},"nodeType":"YulFunctionCall","src":"6617:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6610:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6782:3:15"}],"functionName":{"name":"store_literal_in_memory_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e","nodeType":"YulIdentifier","src":"6693:88:15"},"nodeType":"YulFunctionCall","src":"6693:93:15"},"nodeType":"YulExpressionStatement","src":"6693:93:15"},{"nodeType":"YulAssignment","src":"6795:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6806:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6811:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6802:3:15"},"nodeType":"YulFunctionCall","src":"6802:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6795:3:15"}]}]},"name":"abi_encode_t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6588:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6596:3:15","type":""}],"src":"6454:366:15"},{"body":{"nodeType":"YulBlock","src":"6997:248:15","statements":[{"nodeType":"YulAssignment","src":"7007:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7019:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7030:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7015:3:15"},"nodeType":"YulFunctionCall","src":"7015:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7007:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7054:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7065:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7050:3:15"},"nodeType":"YulFunctionCall","src":"7050:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7073:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7079:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7069:3:15"},"nodeType":"YulFunctionCall","src":"7069:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7043:6:15"},"nodeType":"YulFunctionCall","src":"7043:47:15"},"nodeType":"YulExpressionStatement","src":"7043:47:15"},{"nodeType":"YulAssignment","src":"7099:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7233:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7107:124:15"},"nodeType":"YulFunctionCall","src":"7107:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7099:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6977:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6992:4:15","type":""}],"src":"6826:419:15"},{"body":{"nodeType":"YulBlock","src":"7279:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7296:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7299:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7289:6:15"},"nodeType":"YulFunctionCall","src":"7289:88:15"},"nodeType":"YulExpressionStatement","src":"7289:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7393:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7396:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7386:6:15"},"nodeType":"YulFunctionCall","src":"7386:15:15"},"nodeType":"YulExpressionStatement","src":"7386:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7417:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7420:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7410:6:15"},"nodeType":"YulFunctionCall","src":"7410:15:15"},"nodeType":"YulExpressionStatement","src":"7410:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7251:180:15"},{"body":{"nodeType":"YulBlock","src":"7482:32:15","statements":[{"nodeType":"YulAssignment","src":"7492:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"7503:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7492:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7464:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7474:7:15","type":""}],"src":"7437:77:15"},{"body":{"nodeType":"YulBlock","src":"7563:190:15","statements":[{"nodeType":"YulAssignment","src":"7573:33:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7600:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7582:17:15"},"nodeType":"YulFunctionCall","src":"7582:24:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7573:5:15"}]},{"body":{"nodeType":"YulBlock","src":"7696:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7698:16:15"},"nodeType":"YulFunctionCall","src":"7698:18:15"},"nodeType":"YulExpressionStatement","src":"7698:18:15"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7621:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"7628:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7618:2:15"},"nodeType":"YulFunctionCall","src":"7618:77:15"},"nodeType":"YulIf","src":"7615:103:15"},{"nodeType":"YulAssignment","src":"7727:20:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7738:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"7745:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7734:3:15"},"nodeType":"YulFunctionCall","src":"7734:13:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7727:3:15"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7549:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7559:3:15","type":""}],"src":"7520:233:15"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // struct FluxPriceFeed.Config\n    function abi_decode_t_struct$_Config_$29_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // asset\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // source\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct FluxPriceFeed.Config[]\n    function abi_decode_available_length_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x40))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x40) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_struct$_Config_$29_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct FluxPriceFeed.Config[]\n    function abi_decode_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_struct$_Config_$29_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_13e63822319f457869f7e39533cb3e11d411566d67610a8db149f751583d3789(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid asset\")\n\n    }\n\n    function abi_encode_t_stringliteral_13e63822319f457869f7e39533cb3e11d411566d67610a8db149f751583d3789_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_13e63822319f457869f7e39533cb3e11d411566d67610a8db149f751583d3789(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_13e63822319f457869f7e39533cb3e11d411566d67610a8db149f751583d3789__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_13e63822319f457869f7e39533cb3e11d411566d67610a8db149f751583d3789_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid source\")\n\n    }\n\n    function abi_encode_t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200103b3803806200103b8339818101604052810190620000379190620004bd565b60008151905060005b81811015620002685760008382815181106200006157620000606200050e565b5b602002602001015160000151905060008483815181106200008757620000866200050e565b5b6020026020010151602001519050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000107576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000fe906200059e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000179576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001709062000610565b60405180910390fd5b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f2efc45f9add60d3f347244a1bcc385d7e17c53b3cbd3643e2851a571bc56566660405160405180910390a3505080806200025f906200066b565b91505062000040565b505050620006b8565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002d5826200028a565b810181811067ffffffffffffffff82111715620002f757620002f66200029b565b5b80604052505050565b60006200030c62000271565b90506200031a8282620002ca565b919050565b600067ffffffffffffffff8211156200033d576200033c6200029b565b5b602082029050602081019050919050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003858262000358565b9050919050565b620003978162000378565b8114620003a357600080fd5b50565b600081519050620003b7816200038c565b92915050565b600060408284031215620003d657620003d562000353565b5b620003e2604062000300565b90506000620003f484828501620003a6565b60008301525060206200040a84828501620003a6565b60208301525092915050565b60006200042d62000427846200031f565b62000300565b905080838252602082019050604084028301858111156200045357620004526200034e565b5b835b818110156200048057806200046b8882620003bd565b84526020840193505060408101905062000455565b5050509392505050565b600082601f830112620004a257620004a162000285565b5b8151620004b484826020860162000416565b91505092915050565b600060208284031215620004d657620004d56200027b565b5b600082015167ffffffffffffffff811115620004f757620004f662000280565b5b62000505848285016200048a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f496e76616c696420617373657400000000000000000000000000000000000000600082015250565b600062000586600d836200053d565b915062000593826200054e565b602082019050919050565b60006020820190508181036000830152620005b98162000577565b9050919050565b7f496e76616c696420736f75726365000000000000000000000000000000000000600082015250565b6000620005f8600e836200053d565b91506200060582620005c0565b602082019050919050565b600060208201905081810360008301526200062b81620005e9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000620006788262000661565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620006ad57620006ac62000632565b5b600182019050919050565b61097380620006c86000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631be5c92f1461003b578063b3596f0714610059575b600080fd5b610043610089565b604051610050919061040d565b60405180910390f35b610073600480360381019061006e919061048b565b61008e565b604051610080919061040d565b60405180910390f35b601281565b60008073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361015c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015390610515565b60405180910390fd5b60006101678361018c565b905060006101808260200151836080015160ff16610343565b90508092505050919050565b6101946103b4565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561025f57506040513d601f19601f8201168201806040525081019061025c919061056e565b60015b610269575061033e565b80836080019060ff16908160ff1681525050508073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa9250505080156102e457506040513d601f19601f820116820180604052508101906102e1919061063f565b60015b6102ee575061033e565b84876000019069ffffffffffffffffffff16908169ffffffffffffffffffff1681525050838760200181815250508187604001818152505060018760600190151590811515815250505050505050505b919050565b600080601283106103795760128361035b91906106e9565b600a6103679190610850565b8461037291906108ca565b90506103aa565b60128310156103a95782601261038f91906106e9565b600a61039b9190610850565b846103a691906108fb565b90505b5b8091505092915050565b6040518060a00160405280600069ffffffffffffffffffff1681526020016000815260200160008152602001600015158152602001600060ff1681525090565b6000819050919050565b610407816103f4565b82525050565b600060208201905061042260008301846103fe565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104588261042d565b9050919050565b6104688161044d565b811461047357600080fd5b50565b6000813590506104858161045f565b92915050565b6000602082840312156104a1576104a0610428565b5b60006104af84828501610476565b91505092915050565b600082825260208201905092915050565b7f4173736574207072696365206665656420646f65736e27742065786973740000600082015250565b60006104ff601e836104b8565b915061050a826104c9565b602082019050919050565b6000602082019050818103600083015261052e816104f2565b9050919050565b600060ff82169050919050565b61054b81610535565b811461055657600080fd5b50565b60008151905061056881610542565b92915050565b60006020828403121561058457610583610428565b5b600061059284828501610559565b91505092915050565b600069ffffffffffffffffffff82169050919050565b6105ba8161059b565b81146105c557600080fd5b50565b6000815190506105d7816105b1565b92915050565b6000819050919050565b6105f0816105dd565b81146105fb57600080fd5b50565b60008151905061060d816105e7565b92915050565b61061c816103f4565b811461062757600080fd5b50565b60008151905061063981610613565b92915050565b600080600080600060a0868803121561065b5761065a610428565b5b6000610669888289016105c8565b955050602061067a888289016105fe565b945050604061068b8882890161062a565b935050606061069c8882890161062a565b92505060806106ad888289016105c8565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106f4826103f4565b91506106ff836103f4565b9250828203905081811115610717576107166106ba565b5b92915050565b60008160011c9050919050565b6000808291508390505b6001851115610774578086048111156107505761074f6106ba565b5b600185161561075f5780820291505b808102905061076d8561071d565b9450610734565b94509492505050565b60008261078d5760019050610849565b8161079b5760009050610849565b81600181146107b157600281146107bb576107ea565b6001915050610849565b60ff8411156107cd576107cc6106ba565b5b8360020a9150848211156107e4576107e36106ba565b5b50610849565b5060208310610133831016604e8410600b841016171561081f5782820a90508381111561081a576108196106ba565b5b610849565b61082c848484600161072a565b92509050818404811115610843576108426106ba565b5b81810290505b9392505050565b600061085b826103f4565b9150610866836103f4565b92506108937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461077d565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006108d5826103f4565b91506108e0836103f4565b9250826108f0576108ef61089b565b5b828204905092915050565b6000610906826103f4565b9150610911836103f4565b925082820261091f816103f4565b91508282048414831517610936576109356106ba565b5b509291505056fea264697066735822122026537522d2e0e14851f65b9c8be187d572692283b23f77140c544430cfa5580364736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x103B CODESIZE SUB DUP1 PUSH3 0x103B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x4BD JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x268 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x61 JUMPI PUSH3 0x60 PUSH3 0x50E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x87 JUMPI PUSH3 0x86 PUSH3 0x50E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x107 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xFE SWAP1 PUSH3 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x179 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x170 SWAP1 PUSH3 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2EFC45F9ADD60D3F347244A1BCC385D7E17C53B3CBD3643E2851A571BC565666 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP DUP1 DUP1 PUSH3 0x25F SWAP1 PUSH3 0x66B JUMP JUMPDEST SWAP2 POP POP PUSH3 0x40 JUMP JUMPDEST POP POP POP PUSH3 0x6B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x2D5 DUP3 PUSH3 0x28A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2F7 JUMPI PUSH3 0x2F6 PUSH3 0x29B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30C PUSH3 0x271 JUMP JUMPDEST SWAP1 POP PUSH3 0x31A DUP3 DUP3 PUSH3 0x2CA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x33D JUMPI PUSH3 0x33C PUSH3 0x29B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x385 DUP3 PUSH3 0x358 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x397 DUP2 PUSH3 0x378 JUMP JUMPDEST DUP2 EQ PUSH3 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3B7 DUP2 PUSH3 0x38C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3D6 JUMPI PUSH3 0x3D5 PUSH3 0x353 JUMP JUMPDEST JUMPDEST PUSH3 0x3E2 PUSH1 0x40 PUSH3 0x300 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x3F4 DUP5 DUP3 DUP6 ADD PUSH3 0x3A6 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH3 0x40A DUP5 DUP3 DUP6 ADD PUSH3 0x3A6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x42D PUSH3 0x427 DUP5 PUSH3 0x31F JUMP JUMPDEST PUSH3 0x300 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x40 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x453 JUMPI PUSH3 0x452 PUSH3 0x34E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x480 JUMPI DUP1 PUSH3 0x46B DUP9 DUP3 PUSH3 0x3BD JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x40 DUP2 ADD SWAP1 POP PUSH3 0x455 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x4A2 JUMPI PUSH3 0x4A1 PUSH3 0x285 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x4B4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x416 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x4D6 JUMPI PUSH3 0x4D5 PUSH3 0x27B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4F7 JUMPI PUSH3 0x4F6 PUSH3 0x280 JUMP JUMPDEST JUMPDEST PUSH3 0x505 DUP5 DUP3 DUP6 ADD PUSH3 0x48A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420617373657400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x586 PUSH1 0xD DUP4 PUSH3 0x53D JUMP JUMPDEST SWAP2 POP PUSH3 0x593 DUP3 PUSH3 0x54E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x5B9 DUP2 PUSH3 0x577 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420736F75726365000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5F8 PUSH1 0xE DUP4 PUSH3 0x53D JUMP JUMPDEST SWAP2 POP PUSH3 0x605 DUP3 PUSH3 0x5C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x62B DUP2 PUSH3 0x5E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x678 DUP3 PUSH3 0x661 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x6AD JUMPI PUSH3 0x6AC PUSH3 0x632 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x973 DUP1 PUSH3 0x6C8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1BE5C92F EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB3596F07 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x167 DUP4 PUSH2 0x18C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x180 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0xFF AND PUSH2 0x343 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x194 PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x25F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x269 JUMPI POP PUSH2 0x33E JUMP JUMPDEST DUP1 DUP4 PUSH1 0x80 ADD SWAP1 PUSH1 0xFF AND SWAP1 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2E4 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2EE JUMPI POP PUSH2 0x33E JUMP JUMPDEST DUP5 DUP8 PUSH1 0x0 ADD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 DUP8 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP8 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP8 PUSH1 0x60 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x12 DUP4 LT PUSH2 0x379 JUMPI PUSH1 0x12 DUP4 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0xA PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST DUP5 PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x8CA JUMP JUMPDEST SWAP1 POP PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x12 DUP4 LT ISZERO PUSH2 0x3A9 JUMPI DUP3 PUSH1 0x12 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0xA PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST DUP5 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x407 DUP2 PUSH2 0x3F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x422 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x458 DUP3 PUSH2 0x42D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x468 DUP2 PUSH2 0x44D JUMP JUMPDEST DUP2 EQ PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x485 DUP2 PUSH2 0x45F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A1 JUMPI PUSH2 0x4A0 PUSH2 0x428 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4AF DUP5 DUP3 DUP6 ADD PUSH2 0x476 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4173736574207072696365206665656420646F65736E27742065786973740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FF PUSH1 0x1E DUP4 PUSH2 0x4B8 JUMP JUMPDEST SWAP2 POP PUSH2 0x50A DUP3 PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52E DUP2 PUSH2 0x4F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x54B DUP2 PUSH2 0x535 JUMP JUMPDEST DUP2 EQ PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x568 DUP2 PUSH2 0x542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x584 JUMPI PUSH2 0x583 PUSH2 0x428 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x592 DUP5 DUP3 DUP6 ADD PUSH2 0x559 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5BA DUP2 PUSH2 0x59B JUMP JUMPDEST DUP2 EQ PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5D7 DUP2 PUSH2 0x5B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F0 DUP2 PUSH2 0x5DD JUMP JUMPDEST DUP2 EQ PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x60D DUP2 PUSH2 0x5E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x61C DUP2 PUSH2 0x3F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x639 DUP2 PUSH2 0x613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x65B JUMPI PUSH2 0x65A PUSH2 0x428 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x669 DUP9 DUP3 DUP10 ADD PUSH2 0x5C8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x67A DUP9 DUP3 DUP10 ADD PUSH2 0x5FE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x68B DUP9 DUP3 DUP10 ADD PUSH2 0x62A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x69C DUP9 DUP3 DUP10 ADD PUSH2 0x62A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x6AD DUP9 DUP3 DUP10 ADD PUSH2 0x5C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6F4 DUP3 PUSH2 0x3F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x6FF DUP4 PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x717 JUMPI PUSH2 0x716 PUSH2 0x6BA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x774 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x750 JUMPI PUSH2 0x74F PUSH2 0x6BA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x75F JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x76D DUP6 PUSH2 0x71D JUMP JUMPDEST SWAP5 POP PUSH2 0x734 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x78D JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x849 JUMP JUMPDEST DUP2 PUSH2 0x79B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x849 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x7B1 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x7BB JUMPI PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x849 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x7CD JUMPI PUSH2 0x7CC PUSH2 0x6BA JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x7E4 JUMPI PUSH2 0x7E3 PUSH2 0x6BA JUMP JUMPDEST JUMPDEST POP PUSH2 0x849 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x81F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x81A JUMPI PUSH2 0x819 PUSH2 0x6BA JUMP JUMPDEST JUMPDEST PUSH2 0x849 JUMP JUMPDEST PUSH2 0x82C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x72A JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x843 JUMPI PUSH2 0x842 PUSH2 0x6BA JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85B DUP3 PUSH2 0x3F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x866 DUP4 PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP PUSH2 0x893 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x77D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8D5 DUP3 PUSH2 0x3F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8E0 DUP4 PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x8F0 JUMPI PUSH2 0x8EF PUSH2 0x89B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x906 DUP3 PUSH2 0x3F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x911 DUP4 PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x91F DUP2 PUSH2 0x3F4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x936 JUMPI PUSH2 0x935 PUSH2 0x6BA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 MSTORE8 PUSH22 0x22D2E0E14851F65B9C8BE187D572692283B23F77140C SLOAD DIFFICULTY ADDRESS 0xCF 0xA5 PC SUB PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"146:3354:0:-:0;;;619:557;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;666:23;692:7;:14;666:40;;722:9;717:453;741:15;737:1;:19;717:453;;;777:20;800:7;808:1;800:10;;;;;;;;:::i;:::-;;;;;;;;:16;;;777:39;;830:21;854:7;862:1;854:10;;;;;;;;:::i;:::-;;;;;;;;:17;;;830:41;;918:1;894:26;;:12;:26;;;886:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;985:1;960:27;;:13;:27;;;952:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1070:13;1021:16;:30;1038:12;1021:30;;;;;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;1145:13;1103:56;;1131:12;1103:56;;;;;;;;;;;;763:407;;758:3;;;;;:::i;:::-;;;;717:453;;;;656:520;619:557;146:3354;;7:75:15;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:333::-;1272:4;1362:18;1354:6;1351:30;1348:56;;;1384:18;;:::i;:::-;1348:56;1434:4;1426:6;1422:17;1414:25;;1494:4;1488;1484:15;1476:23;;1173:333;;;:::o;1512:117::-;1621:1;1618;1611:12;1635:117;1744:1;1741;1734:12;1881:126;1918:7;1958:42;1951:5;1947:54;1936:65;;1881:126;;;:::o;2013:96::-;2050:7;2079:24;2097:5;2079:24;:::i;:::-;2068:35;;2013:96;;;:::o;2115:122::-;2188:24;2206:5;2188:24;:::i;:::-;2181:5;2178:35;2168:63;;2227:1;2224;2217:12;2168:63;2115:122;:::o;2243:143::-;2300:5;2331:6;2325:13;2316:22;;2347:33;2374:5;2347:33;:::i;:::-;2243:143;;;;:::o;2427:607::-;2509:5;2553:4;2541:9;2536:3;2532:19;2528:30;2525:117;;;2561:79;;:::i;:::-;2525:117;2660:21;2676:4;2660:21;:::i;:::-;2651:30;;2741:1;2781:60;2837:3;2828:6;2817:9;2813:22;2781:60;:::i;:::-;2774:4;2767:5;2763:16;2756:86;2691:162;2914:2;2955:60;3011:3;3002:6;2991:9;2987:22;2955:60;:::i;:::-;2948:4;2941:5;2937:16;2930:86;2863:164;2427:607;;;;:::o;3077:798::-;3206:5;3231:103;3247:86;3326:6;3247:86;:::i;:::-;3231:103;:::i;:::-;3222:112;;3354:5;3383:6;3376:5;3369:21;3417:4;3410:5;3406:16;3399:23;;3470:4;3462:6;3458:17;3450:6;3446:30;3499:3;3491:6;3488:15;3485:122;;;3518:79;;:::i;:::-;3485:122;3633:6;3616:253;3650:6;3645:3;3642:15;3616:253;;;3725:3;3754:70;3820:3;3808:10;3754:70;:::i;:::-;3749:3;3742:83;3854:4;3849:3;3845:14;3838:21;;3692:177;3676:4;3671:3;3667:14;3660:21;;3616:253;;;3620:21;3212:663;;3077:798;;;;;:::o;3918:429::-;4022:5;4071:3;4064:4;4056:6;4052:17;4048:27;4038:122;;4079:79;;:::i;:::-;4038:122;4189:6;4183:13;4214:127;4337:3;4329:6;4322:4;4314:6;4310:17;4214:127;:::i;:::-;4205:136;;4028:319;3918:429;;;;:::o;4353:598::-;4470:6;4519:2;4507:9;4498:7;4494:23;4490:32;4487:119;;;4525:79;;:::i;:::-;4487:119;4666:1;4655:9;4651:17;4645:24;4696:18;4688:6;4685:30;4682:117;;;4718:79;;:::i;:::-;4682:117;4823:111;4926:7;4917:6;4906:9;4902:22;4823:111;:::i;:::-;4813:121;;4616:328;4353:598;;;;:::o;4957:180::-;5005:77;5002:1;4995:88;5102:4;5099:1;5092:15;5126:4;5123:1;5116:15;5143:169;5227:11;5261:6;5256:3;5249:19;5301:4;5296:3;5292:14;5277:29;;5143:169;;;;:::o;5318:163::-;5458:15;5454:1;5446:6;5442:14;5435:39;5318:163;:::o;5487:366::-;5629:3;5650:67;5714:2;5709:3;5650:67;:::i;:::-;5643:74;;5726:93;5815:3;5726:93;:::i;:::-;5844:2;5839:3;5835:12;5828:19;;5487:366;;;:::o;5859:419::-;6025:4;6063:2;6052:9;6048:18;6040:26;;6112:9;6106:4;6102:20;6098:1;6087:9;6083:17;6076:47;6140:131;6266:4;6140:131;:::i;:::-;6132:139;;5859:419;;;:::o;6284:164::-;6424:16;6420:1;6412:6;6408:14;6401:40;6284:164;:::o;6454:366::-;6596:3;6617:67;6681:2;6676:3;6617:67;:::i;:::-;6610:74;;6693:93;6782:3;6693:93;:::i;:::-;6811:2;6806:3;6802:12;6795:19;;6454:366;;;:::o;6826:419::-;6992:4;7030:2;7019:9;7015:18;7007:26;;7079:9;7073:4;7069:20;7065:1;7054:9;7050:17;7043:47;7107:131;7233:4;7107:131;:::i;:::-;7099:139;;6826:419;;;:::o;7251:180::-;7299:77;7296:1;7289:88;7396:4;7393:1;7386:15;7420:4;7417:1;7410:15;7437:77;7474:7;7503:5;7492:16;;7437:77;;;:::o;7520:233::-;7559:3;7582:24;7600:5;7582:24;:::i;:::-;7573:33;;7628:66;7621:5;7618:77;7615:103;;7698:18;;:::i;:::-;7615:103;7745:1;7738:5;7734:13;7727:20;;7520:233;;;:::o;146:3354:0:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@TARGET_DIGITS_8":{"entryPoint":137,"id":8,"parameterSlots":0,"returnSlots":0},"@_getCurrentFluxResponse_277":{"entryPoint":396,"id":277,"parameterSlots":1,"returnSlots":1},"@_scaleFluxPriceByDigits_195":{"entryPoint":835,"id":195,"parameterSlots":2,"returnSlots":1},"@getAssetPrice_146":{"entryPoint":142,"id":146,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1142,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":1534,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1578,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":1480,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8_fromMemory":{"entryPoint":1369,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1163,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":1599,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":1390,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_04ba6bb27d4b8053dc24d79d9498076a9429b4914a7c0a3ca835e10744357e33_to_t_string_memory_ptr_fromStack":{"entryPoint":1266,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1022,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_04ba6bb27d4b8053dc24d79d9498076a9429b4914a7c0a3ca835e10744357e33__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1301,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1037,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1208,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":2250,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":1834,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":2128,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":1917,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2299,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":1769,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1101,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":1501,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1069,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1012,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":1333,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":1435,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1722,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":2203,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1064,"id":null,"parameterSlots":0,"returnSlots":0},"shift_right_1_unsigned":{"entryPoint":1821,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_04ba6bb27d4b8053dc24d79d9498076a9429b4914a7c0a3ca835e10744357e33":{"entryPoint":1225,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1119,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":1511,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1555,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":1346,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":1457,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8984:15","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:15","statements":[{"nodeType":"YulAssignment","src":"62:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:15","type":""}],"src":"7:77:15"},{"body":{"nodeType":"YulBlock","src":"155:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:15"},"nodeType":"YulFunctionCall","src":"177:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:15"},"nodeType":"YulFunctionCall","src":"165:37:15"},"nodeType":"YulExpressionStatement","src":"165:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:15","type":""}],"src":"90:118:15"},{"body":{"nodeType":"YulBlock","src":"312:124:15","statements":[{"nodeType":"YulAssignment","src":"322:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:15"},"nodeType":"YulFunctionCall","src":"330:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:15"},"nodeType":"YulFunctionCall","src":"411:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:15"},"nodeType":"YulFunctionCall","src":"358:71:15"},"nodeType":"YulExpressionStatement","src":"358:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:15","type":""}],"src":"214:222:15"},{"body":{"nodeType":"YulBlock","src":"482:35:15","statements":[{"nodeType":"YulAssignment","src":"492:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:15"},"nodeType":"YulFunctionCall","src":"502:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:15","type":""}],"src":"442:75:15"},{"body":{"nodeType":"YulBlock","src":"612:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:15"},"nodeType":"YulFunctionCall","src":"622:12:15"},"nodeType":"YulExpressionStatement","src":"622:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:15"},{"body":{"nodeType":"YulBlock","src":"735:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:15"},"nodeType":"YulFunctionCall","src":"745:12:15"},"nodeType":"YulExpressionStatement","src":"745:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:15"},{"body":{"nodeType":"YulBlock","src":"814:81:15","statements":[{"nodeType":"YulAssignment","src":"824:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"839:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"846:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"835:3:15"},"nodeType":"YulFunctionCall","src":"835:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"824:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"796:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"806:7:15","type":""}],"src":"769:126:15"},{"body":{"nodeType":"YulBlock","src":"946:51:15","statements":[{"nodeType":"YulAssignment","src":"956:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"967:17:15"},"nodeType":"YulFunctionCall","src":"967:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"956:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"928:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"938:7:15","type":""}],"src":"901:96:15"},{"body":{"nodeType":"YulBlock","src":"1046:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"1103:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1112:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1115:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1105:6:15"},"nodeType":"YulFunctionCall","src":"1105:12:15"},"nodeType":"YulExpressionStatement","src":"1105:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1069:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1094:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1076:17:15"},"nodeType":"YulFunctionCall","src":"1076:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1066:2:15"},"nodeType":"YulFunctionCall","src":"1066:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1059:6:15"},"nodeType":"YulFunctionCall","src":"1059:43:15"},"nodeType":"YulIf","src":"1056:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1039:5:15","type":""}],"src":"1003:122:15"},{"body":{"nodeType":"YulBlock","src":"1183:87:15","statements":[{"nodeType":"YulAssignment","src":"1193:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1215:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1202:12:15"},"nodeType":"YulFunctionCall","src":"1202:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1193:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1258:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1231:26:15"},"nodeType":"YulFunctionCall","src":"1231:33:15"},"nodeType":"YulExpressionStatement","src":"1231:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1161:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"1169:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1177:5:15","type":""}],"src":"1131:139:15"},{"body":{"nodeType":"YulBlock","src":"1342:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"1388:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1390:77:15"},"nodeType":"YulFunctionCall","src":"1390:79:15"},"nodeType":"YulExpressionStatement","src":"1390:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1363:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1372:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1359:3:15"},"nodeType":"YulFunctionCall","src":"1359:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1384:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1355:3:15"},"nodeType":"YulFunctionCall","src":"1355:32:15"},"nodeType":"YulIf","src":"1352:119:15"},{"nodeType":"YulBlock","src":"1481:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1496:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1510:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1500:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1525:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1560:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1571:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1556:3:15"},"nodeType":"YulFunctionCall","src":"1556:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1580:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1535:20:15"},"nodeType":"YulFunctionCall","src":"1535:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1525:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1312:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1323:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1335:6:15","type":""}],"src":"1276:329:15"},{"body":{"nodeType":"YulBlock","src":"1707:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1724:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"1729:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1717:6:15"},"nodeType":"YulFunctionCall","src":"1717:19:15"},"nodeType":"YulExpressionStatement","src":"1717:19:15"},{"nodeType":"YulAssignment","src":"1745:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1764:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"1769:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1760:3:15"},"nodeType":"YulFunctionCall","src":"1760:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1745:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1679:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"1684:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1695:11:15","type":""}],"src":"1611:169:15"},{"body":{"nodeType":"YulBlock","src":"1892:74:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1914:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1922:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1910:3:15"},"nodeType":"YulFunctionCall","src":"1910:14:15"},{"hexValue":"4173736574207072696365206665656420646f65736e2774206578697374","kind":"string","nodeType":"YulLiteral","src":"1926:32:15","type":"","value":"Asset price feed doesn't exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1903:6:15"},"nodeType":"YulFunctionCall","src":"1903:56:15"},"nodeType":"YulExpressionStatement","src":"1903:56:15"}]},"name":"store_literal_in_memory_04ba6bb27d4b8053dc24d79d9498076a9429b4914a7c0a3ca835e10744357e33","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1884:6:15","type":""}],"src":"1786:180:15"},{"body":{"nodeType":"YulBlock","src":"2118:220:15","statements":[{"nodeType":"YulAssignment","src":"2128:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2194:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2199:2:15","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2135:58:15"},"nodeType":"YulFunctionCall","src":"2135:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2128:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2300:3:15"}],"functionName":{"name":"store_literal_in_memory_04ba6bb27d4b8053dc24d79d9498076a9429b4914a7c0a3ca835e10744357e33","nodeType":"YulIdentifier","src":"2211:88:15"},"nodeType":"YulFunctionCall","src":"2211:93:15"},"nodeType":"YulExpressionStatement","src":"2211:93:15"},{"nodeType":"YulAssignment","src":"2313:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2324:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2329:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2320:3:15"},"nodeType":"YulFunctionCall","src":"2320:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2313:3:15"}]}]},"name":"abi_encode_t_stringliteral_04ba6bb27d4b8053dc24d79d9498076a9429b4914a7c0a3ca835e10744357e33_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2106:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2114:3:15","type":""}],"src":"1972:366:15"},{"body":{"nodeType":"YulBlock","src":"2515:248:15","statements":[{"nodeType":"YulAssignment","src":"2525:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2537:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2548:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2533:3:15"},"nodeType":"YulFunctionCall","src":"2533:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2525:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2572:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2583:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2568:3:15"},"nodeType":"YulFunctionCall","src":"2568:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2591:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2597:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2587:3:15"},"nodeType":"YulFunctionCall","src":"2587:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2561:6:15"},"nodeType":"YulFunctionCall","src":"2561:47:15"},"nodeType":"YulExpressionStatement","src":"2561:47:15"},{"nodeType":"YulAssignment","src":"2617:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2751:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_04ba6bb27d4b8053dc24d79d9498076a9429b4914a7c0a3ca835e10744357e33_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2625:124:15"},"nodeType":"YulFunctionCall","src":"2625:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2617:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_04ba6bb27d4b8053dc24d79d9498076a9429b4914a7c0a3ca835e10744357e33__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2495:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2510:4:15","type":""}],"src":"2344:419:15"},{"body":{"nodeType":"YulBlock","src":"2812:43:15","statements":[{"nodeType":"YulAssignment","src":"2822:27:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2837:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2844:4:15","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2833:3:15"},"nodeType":"YulFunctionCall","src":"2833:16:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2822:7:15"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2794:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2804:7:15","type":""}],"src":"2769:86:15"},{"body":{"nodeType":"YulBlock","src":"2902:77:15","statements":[{"body":{"nodeType":"YulBlock","src":"2957:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2966:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2969:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2959:6:15"},"nodeType":"YulFunctionCall","src":"2959:12:15"},"nodeType":"YulExpressionStatement","src":"2959:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2925:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2948:5:15"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"2932:15:15"},"nodeType":"YulFunctionCall","src":"2932:22:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2922:2:15"},"nodeType":"YulFunctionCall","src":"2922:33:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2915:6:15"},"nodeType":"YulFunctionCall","src":"2915:41:15"},"nodeType":"YulIf","src":"2912:61:15"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2895:5:15","type":""}],"src":"2861:118:15"},{"body":{"nodeType":"YulBlock","src":"3046:78:15","statements":[{"nodeType":"YulAssignment","src":"3056:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3071:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3065:5:15"},"nodeType":"YulFunctionCall","src":"3065:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3056:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3112:5:15"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"3087:24:15"},"nodeType":"YulFunctionCall","src":"3087:31:15"},"nodeType":"YulExpressionStatement","src":"3087:31:15"}]},"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3024:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"3032:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3040:5:15","type":""}],"src":"2985:139:15"},{"body":{"nodeType":"YulBlock","src":"3205:272:15","statements":[{"body":{"nodeType":"YulBlock","src":"3251:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3253:77:15"},"nodeType":"YulFunctionCall","src":"3253:79:15"},"nodeType":"YulExpressionStatement","src":"3253:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3226:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3235:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3222:3:15"},"nodeType":"YulFunctionCall","src":"3222:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3247:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3218:3:15"},"nodeType":"YulFunctionCall","src":"3218:32:15"},"nodeType":"YulIf","src":"3215:119:15"},{"nodeType":"YulBlock","src":"3344:126:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3359:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3373:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3363:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3388:72:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3432:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3443:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3428:3:15"},"nodeType":"YulFunctionCall","src":"3428:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3452:7:15"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"3398:29:15"},"nodeType":"YulFunctionCall","src":"3398:62:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3388:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3175:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3186:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3198:6:15","type":""}],"src":"3130:347:15"},{"body":{"nodeType":"YulBlock","src":"3527:61:15","statements":[{"nodeType":"YulAssignment","src":"3537:45:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3552:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"3559:22:15","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3548:3:15"},"nodeType":"YulFunctionCall","src":"3548:34:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3537:7:15"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3509:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3519:7:15","type":""}],"src":"3483:105:15"},{"body":{"nodeType":"YulBlock","src":"3636:78:15","statements":[{"body":{"nodeType":"YulBlock","src":"3692:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3701:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3704:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3694:6:15"},"nodeType":"YulFunctionCall","src":"3694:12:15"},"nodeType":"YulExpressionStatement","src":"3694:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3659:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3683:5:15"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"3666:16:15"},"nodeType":"YulFunctionCall","src":"3666:23:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3656:2:15"},"nodeType":"YulFunctionCall","src":"3656:34:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3649:6:15"},"nodeType":"YulFunctionCall","src":"3649:42:15"},"nodeType":"YulIf","src":"3646:62:15"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3629:5:15","type":""}],"src":"3594:120:15"},{"body":{"nodeType":"YulBlock","src":"3782:79:15","statements":[{"nodeType":"YulAssignment","src":"3792:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3807:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3801:5:15"},"nodeType":"YulFunctionCall","src":"3801:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3792:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3849:5:15"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"3823:25:15"},"nodeType":"YulFunctionCall","src":"3823:32:15"},"nodeType":"YulExpressionStatement","src":"3823:32:15"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3760:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"3768:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3776:5:15","type":""}],"src":"3720:141:15"},{"body":{"nodeType":"YulBlock","src":"3911:32:15","statements":[{"nodeType":"YulAssignment","src":"3921:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"3932:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3921:7:15"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3893:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3903:7:15","type":""}],"src":"3867:76:15"},{"body":{"nodeType":"YulBlock","src":"3991:78:15","statements":[{"body":{"nodeType":"YulBlock","src":"4047:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4056:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4059:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4049:6:15"},"nodeType":"YulFunctionCall","src":"4049:12:15"},"nodeType":"YulExpressionStatement","src":"4049:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4014:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4038:5:15"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"4021:16:15"},"nodeType":"YulFunctionCall","src":"4021:23:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4011:2:15"},"nodeType":"YulFunctionCall","src":"4011:34:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4004:6:15"},"nodeType":"YulFunctionCall","src":"4004:42:15"},"nodeType":"YulIf","src":"4001:62:15"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3984:5:15","type":""}],"src":"3949:120:15"},{"body":{"nodeType":"YulBlock","src":"4137:79:15","statements":[{"nodeType":"YulAssignment","src":"4147:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4162:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4156:5:15"},"nodeType":"YulFunctionCall","src":"4156:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4147:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4204:5:15"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"4178:25:15"},"nodeType":"YulFunctionCall","src":"4178:32:15"},"nodeType":"YulExpressionStatement","src":"4178:32:15"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4115:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"4123:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4131:5:15","type":""}],"src":"4075:141:15"},{"body":{"nodeType":"YulBlock","src":"4265:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"4322:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4331:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4334:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4324:6:15"},"nodeType":"YulFunctionCall","src":"4324:12:15"},"nodeType":"YulExpressionStatement","src":"4324:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4288:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4313:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4295:17:15"},"nodeType":"YulFunctionCall","src":"4295:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4285:2:15"},"nodeType":"YulFunctionCall","src":"4285:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4278:6:15"},"nodeType":"YulFunctionCall","src":"4278:43:15"},"nodeType":"YulIf","src":"4275:63:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4258:5:15","type":""}],"src":"4222:122:15"},{"body":{"nodeType":"YulBlock","src":"4413:80:15","statements":[{"nodeType":"YulAssignment","src":"4423:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4438:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4432:5:15"},"nodeType":"YulFunctionCall","src":"4432:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4423:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4481:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"4454:26:15"},"nodeType":"YulFunctionCall","src":"4454:33:15"},"nodeType":"YulExpressionStatement","src":"4454:33:15"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4391:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"4399:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4407:5:15","type":""}],"src":"4350:143:15"},{"body":{"nodeType":"YulBlock","src":"4641:829:15","statements":[{"body":{"nodeType":"YulBlock","src":"4688:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4690:77:15"},"nodeType":"YulFunctionCall","src":"4690:79:15"},"nodeType":"YulExpressionStatement","src":"4690:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4662:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4671:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4658:3:15"},"nodeType":"YulFunctionCall","src":"4658:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4683:3:15","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4654:3:15"},"nodeType":"YulFunctionCall","src":"4654:33:15"},"nodeType":"YulIf","src":"4651:120:15"},{"nodeType":"YulBlock","src":"4781:127:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4796:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4810:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4800:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4825:73:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4870:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4881:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4866:3:15"},"nodeType":"YulFunctionCall","src":"4866:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4890:7:15"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"4835:30:15"},"nodeType":"YulFunctionCall","src":"4835:63:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4825:6:15"}]}]},{"nodeType":"YulBlock","src":"4918:128:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4933:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4947:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4937:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4963:73:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5008:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5019:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5004:3:15"},"nodeType":"YulFunctionCall","src":"5004:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5028:7:15"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"4973:30:15"},"nodeType":"YulFunctionCall","src":"4973:63:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4963:6:15"}]}]},{"nodeType":"YulBlock","src":"5056:129:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5071:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5085:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5075:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5101:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5147:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5158:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5143:3:15"},"nodeType":"YulFunctionCall","src":"5143:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5167:7:15"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"5111:31:15"},"nodeType":"YulFunctionCall","src":"5111:64:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5101:6:15"}]}]},{"nodeType":"YulBlock","src":"5195:129:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5210:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5224:2:15","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5214:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5240:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5286:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5297:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5282:3:15"},"nodeType":"YulFunctionCall","src":"5282:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5306:7:15"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"5250:31:15"},"nodeType":"YulFunctionCall","src":"5250:64:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5240:6:15"}]}]},{"nodeType":"YulBlock","src":"5334:129:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5349:17:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5363:3:15","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5353:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5380:73:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5425:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5436:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5421:3:15"},"nodeType":"YulFunctionCall","src":"5421:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5445:7:15"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"5390:30:15"},"nodeType":"YulFunctionCall","src":"5390:63:15"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5380:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4579:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4590:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4602:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4610:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4618:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4626:6:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4634:6:15","type":""}],"src":"4499:971:15"},{"body":{"nodeType":"YulBlock","src":"5504:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5521:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5524:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5514:6:15"},"nodeType":"YulFunctionCall","src":"5514:88:15"},"nodeType":"YulExpressionStatement","src":"5514:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5618:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5621:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5611:6:15"},"nodeType":"YulFunctionCall","src":"5611:15:15"},"nodeType":"YulExpressionStatement","src":"5611:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5642:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5645:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5635:6:15"},"nodeType":"YulFunctionCall","src":"5635:15:15"},"nodeType":"YulExpressionStatement","src":"5635:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5476:180:15"},{"body":{"nodeType":"YulBlock","src":"5707:149:15","statements":[{"nodeType":"YulAssignment","src":"5717:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5740:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5722:17:15"},"nodeType":"YulFunctionCall","src":"5722:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5717:1:15"}]},{"nodeType":"YulAssignment","src":"5751:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5774:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5756:17:15"},"nodeType":"YulFunctionCall","src":"5756:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5751:1:15"}]},{"nodeType":"YulAssignment","src":"5785:17:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5797:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"5800:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5793:3:15"},"nodeType":"YulFunctionCall","src":"5793:9:15"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5785:4:15"}]},{"body":{"nodeType":"YulBlock","src":"5827:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5829:16:15"},"nodeType":"YulFunctionCall","src":"5829:18:15"},"nodeType":"YulExpressionStatement","src":"5829:18:15"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"5818:4:15"},{"name":"x","nodeType":"YulIdentifier","src":"5824:1:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5815:2:15"},"nodeType":"YulFunctionCall","src":"5815:11:15"},"nodeType":"YulIf","src":"5812:37:15"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5693:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"5696:1:15","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5702:4:15","type":""}],"src":"5662:194:15"},{"body":{"nodeType":"YulBlock","src":"5913:51:15","statements":[{"nodeType":"YulAssignment","src":"5923:34:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5948:1:15","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"5951:5:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5944:3:15"},"nodeType":"YulFunctionCall","src":"5944:13:15"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"5923:8:15"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5894:5:15","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"5904:8:15","type":""}],"src":"5862:102:15"},{"body":{"nodeType":"YulBlock","src":"6043:775:15","statements":[{"nodeType":"YulAssignment","src":"6053:15:15","value":{"name":"_power","nodeType":"YulIdentifier","src":"6062:6:15"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6053:5:15"}]},{"nodeType":"YulAssignment","src":"6077:14:15","value":{"name":"_base","nodeType":"YulIdentifier","src":"6086:5:15"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"6077:4:15"}]},{"body":{"nodeType":"YulBlock","src":"6135:677:15","statements":[{"body":{"nodeType":"YulBlock","src":"6223:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6225:16:15"},"nodeType":"YulFunctionCall","src":"6225:18:15"},"nodeType":"YulExpressionStatement","src":"6225:18:15"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6201:4:15"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"6211:3:15"},{"name":"base","nodeType":"YulIdentifier","src":"6216:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6207:3:15"},"nodeType":"YulFunctionCall","src":"6207:14:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6198:2:15"},"nodeType":"YulFunctionCall","src":"6198:24:15"},"nodeType":"YulIf","src":"6195:50:15"},{"body":{"nodeType":"YulBlock","src":"6290:419:15","statements":[{"nodeType":"YulAssignment","src":"6670:25:15","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"6683:5:15"},{"name":"base","nodeType":"YulIdentifier","src":"6690:4:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6679:3:15"},"nodeType":"YulFunctionCall","src":"6679:16:15"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6670:5:15"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6265:8:15"},{"kind":"number","nodeType":"YulLiteral","src":"6275:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6261:3:15"},"nodeType":"YulFunctionCall","src":"6261:16:15"},"nodeType":"YulIf","src":"6258:451:15"},{"nodeType":"YulAssignment","src":"6722:23:15","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6734:4:15"},{"name":"base","nodeType":"YulIdentifier","src":"6740:4:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6730:3:15"},"nodeType":"YulFunctionCall","src":"6730:15:15"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"6722:4:15"}]},{"nodeType":"YulAssignment","src":"6758:44:15","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6793:8:15"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"6770:22:15"},"nodeType":"YulFunctionCall","src":"6770:32:15"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"6758:8:15"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6111:8:15"},{"kind":"number","nodeType":"YulLiteral","src":"6121:1:15","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6108:2:15"},"nodeType":"YulFunctionCall","src":"6108:15:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6124:2:15","statements":[]},"pre":{"nodeType":"YulBlock","src":"6104:3:15","statements":[]},"src":"6100:712:15"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"5998:6:15","type":""},{"name":"_base","nodeType":"YulTypedName","src":"6006:5:15","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"6013:8:15","type":""},{"name":"max","nodeType":"YulTypedName","src":"6023:3:15","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"6031:5:15","type":""},{"name":"base","nodeType":"YulTypedName","src":"6038:4:15","type":""}],"src":"5970:848:15"},{"body":{"nodeType":"YulBlock","src":"6884:1013:15","statements":[{"body":{"nodeType":"YulBlock","src":"7079:20:15","statements":[{"nodeType":"YulAssignment","src":"7081:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7090:1:15","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7081:5:15"}]},{"nodeType":"YulLeave","src":"7092:5:15"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7069:8:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7062:6:15"},"nodeType":"YulFunctionCall","src":"7062:16:15"},"nodeType":"YulIf","src":"7059:40:15"},{"body":{"nodeType":"YulBlock","src":"7124:20:15","statements":[{"nodeType":"YulAssignment","src":"7126:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7135:1:15","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7126:5:15"}]},{"nodeType":"YulLeave","src":"7137:5:15"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7118:4:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7111:6:15"},"nodeType":"YulFunctionCall","src":"7111:12:15"},"nodeType":"YulIf","src":"7108:36:15"},{"cases":[{"body":{"nodeType":"YulBlock","src":"7254:20:15","statements":[{"nodeType":"YulAssignment","src":"7256:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7265:1:15","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7256:5:15"}]},{"nodeType":"YulLeave","src":"7267:5:15"}]},"nodeType":"YulCase","src":"7247:27:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7252:1:15","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"7298:176:15","statements":[{"body":{"nodeType":"YulBlock","src":"7333:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7335:16:15"},"nodeType":"YulFunctionCall","src":"7335:18:15"},"nodeType":"YulExpressionStatement","src":"7335:18:15"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7318:8:15"},{"kind":"number","nodeType":"YulLiteral","src":"7328:3:15","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7315:2:15"},"nodeType":"YulFunctionCall","src":"7315:17:15"},"nodeType":"YulIf","src":"7312:43:15"},{"nodeType":"YulAssignment","src":"7368:25:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7381:1:15","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"7384:8:15"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7377:3:15"},"nodeType":"YulFunctionCall","src":"7377:16:15"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7368:5:15"}]},{"body":{"nodeType":"YulBlock","src":"7424:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7426:16:15"},"nodeType":"YulFunctionCall","src":"7426:18:15"},"nodeType":"YulExpressionStatement","src":"7426:18:15"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"7412:5:15"},{"name":"max","nodeType":"YulIdentifier","src":"7419:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7409:2:15"},"nodeType":"YulFunctionCall","src":"7409:14:15"},"nodeType":"YulIf","src":"7406:40:15"},{"nodeType":"YulLeave","src":"7459:5:15"}]},"nodeType":"YulCase","src":"7283:191:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7288:1:15","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"7204:4:15"},"nodeType":"YulSwitch","src":"7197:277:15"},{"body":{"nodeType":"YulBlock","src":"7606:123:15","statements":[{"nodeType":"YulAssignment","src":"7620:28:15","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7633:4:15"},{"name":"exponent","nodeType":"YulIdentifier","src":"7639:8:15"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7629:3:15"},"nodeType":"YulFunctionCall","src":"7629:19:15"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7620:5:15"}]},{"body":{"nodeType":"YulBlock","src":"7679:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7681:16:15"},"nodeType":"YulFunctionCall","src":"7681:18:15"},"nodeType":"YulExpressionStatement","src":"7681:18:15"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"7667:5:15"},{"name":"max","nodeType":"YulIdentifier","src":"7674:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7664:2:15"},"nodeType":"YulFunctionCall","src":"7664:14:15"},"nodeType":"YulIf","src":"7661:40:15"},{"nodeType":"YulLeave","src":"7714:5:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7509:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"7515:2:15","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7506:2:15"},"nodeType":"YulFunctionCall","src":"7506:12:15"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7523:8:15"},{"kind":"number","nodeType":"YulLiteral","src":"7533:2:15","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7520:2:15"},"nodeType":"YulFunctionCall","src":"7520:16:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7502:3:15"},"nodeType":"YulFunctionCall","src":"7502:35:15"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7558:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"7564:3:15","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7555:2:15"},"nodeType":"YulFunctionCall","src":"7555:13:15"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7573:8:15"},{"kind":"number","nodeType":"YulLiteral","src":"7583:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7570:2:15"},"nodeType":"YulFunctionCall","src":"7570:16:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7551:3:15"},"nodeType":"YulFunctionCall","src":"7551:36:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7486:2:15"},"nodeType":"YulFunctionCall","src":"7486:111:15"},"nodeType":"YulIf","src":"7483:246:15"},{"nodeType":"YulAssignment","src":"7739:57:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7773:1:15","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"7776:4:15"},{"name":"exponent","nodeType":"YulIdentifier","src":"7782:8:15"},{"name":"max","nodeType":"YulIdentifier","src":"7792:3:15"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"7754:18:15"},"nodeType":"YulFunctionCall","src":"7754:42:15"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7739:5:15"},{"name":"base","nodeType":"YulIdentifier","src":"7746:4:15"}]},{"body":{"nodeType":"YulBlock","src":"7835:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7837:16:15"},"nodeType":"YulFunctionCall","src":"7837:18:15"},"nodeType":"YulExpressionStatement","src":"7837:18:15"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"7812:5:15"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"7823:3:15"},{"name":"base","nodeType":"YulIdentifier","src":"7828:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7819:3:15"},"nodeType":"YulFunctionCall","src":"7819:14:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7809:2:15"},"nodeType":"YulFunctionCall","src":"7809:25:15"},"nodeType":"YulIf","src":"7806:51:15"},{"nodeType":"YulAssignment","src":"7866:25:15","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"7879:5:15"},{"name":"base","nodeType":"YulIdentifier","src":"7886:4:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7875:3:15"},"nodeType":"YulFunctionCall","src":"7875:16:15"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7866:5:15"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"6854:4:15","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"6860:8:15","type":""},{"name":"max","nodeType":"YulTypedName","src":"6870:3:15","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"6878:5:15","type":""}],"src":"6824:1073:15"},{"body":{"nodeType":"YulBlock","src":"7969:219:15","statements":[{"nodeType":"YulAssignment","src":"7979:31:15","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"8005:4:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7987:17:15"},"nodeType":"YulFunctionCall","src":"7987:23:15"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"7979:4:15"}]},{"nodeType":"YulAssignment","src":"8019:39:15","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"8049:8:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8031:17:15"},"nodeType":"YulFunctionCall","src":"8031:27:15"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"8019:8:15"}]},{"nodeType":"YulAssignment","src":"8068:113:15","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"8098:4:15"},{"name":"exponent","nodeType":"YulIdentifier","src":"8104:8:15"},{"kind":"number","nodeType":"YulLiteral","src":"8114:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"8077:20:15"},"nodeType":"YulFunctionCall","src":"8077:104:15"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8068:5:15"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"7944:4:15","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"7950:8:15","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"7963:5:15","type":""}],"src":"7903:285:15"},{"body":{"nodeType":"YulBlock","src":"8222:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8239:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8242:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8232:6:15"},"nodeType":"YulFunctionCall","src":"8232:88:15"},"nodeType":"YulExpressionStatement","src":"8232:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8336:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8339:4:15","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8329:6:15"},"nodeType":"YulFunctionCall","src":"8329:15:15"},"nodeType":"YulExpressionStatement","src":"8329:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8360:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8363:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8353:6:15"},"nodeType":"YulFunctionCall","src":"8353:15:15"},"nodeType":"YulExpressionStatement","src":"8353:15:15"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"8194:180:15"},{"body":{"nodeType":"YulBlock","src":"8422:143:15","statements":[{"nodeType":"YulAssignment","src":"8432:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8455:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8437:17:15"},"nodeType":"YulFunctionCall","src":"8437:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8432:1:15"}]},{"nodeType":"YulAssignment","src":"8466:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8489:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8471:17:15"},"nodeType":"YulFunctionCall","src":"8471:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8466:1:15"}]},{"body":{"nodeType":"YulBlock","src":"8513:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"8515:16:15"},"nodeType":"YulFunctionCall","src":"8515:18:15"},"nodeType":"YulExpressionStatement","src":"8515:18:15"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8510:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8503:6:15"},"nodeType":"YulFunctionCall","src":"8503:9:15"},"nodeType":"YulIf","src":"8500:35:15"},{"nodeType":"YulAssignment","src":"8545:14:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8554:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"8557:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8550:3:15"},"nodeType":"YulFunctionCall","src":"8550:9:15"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"8545:1:15"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8411:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"8414:1:15","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"8420:1:15","type":""}],"src":"8380:185:15"},{"body":{"nodeType":"YulBlock","src":"8619:362:15","statements":[{"nodeType":"YulAssignment","src":"8629:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8652:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8634:17:15"},"nodeType":"YulFunctionCall","src":"8634:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8629:1:15"}]},{"nodeType":"YulAssignment","src":"8663:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8686:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8668:17:15"},"nodeType":"YulFunctionCall","src":"8668:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8663:1:15"}]},{"nodeType":"YulVariableDeclaration","src":"8697:28:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8720:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"8723:1:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8716:3:15"},"nodeType":"YulFunctionCall","src":"8716:9:15"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"8701:11:15","type":""}]},{"nodeType":"YulAssignment","src":"8734:41:15","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"8763:11:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8745:17:15"},"nodeType":"YulFunctionCall","src":"8745:30:15"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"8734:7:15"}]},{"body":{"nodeType":"YulBlock","src":"8952:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8954:16:15"},"nodeType":"YulFunctionCall","src":"8954:18:15"},"nodeType":"YulExpressionStatement","src":"8954:18:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8885:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8878:6:15"},"nodeType":"YulFunctionCall","src":"8878:9:15"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8908:1:15"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"8915:7:15"},{"name":"x","nodeType":"YulIdentifier","src":"8924:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8911:3:15"},"nodeType":"YulFunctionCall","src":"8911:15:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8905:2:15"},"nodeType":"YulFunctionCall","src":"8905:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8858:2:15"},"nodeType":"YulFunctionCall","src":"8858:83:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8838:6:15"},"nodeType":"YulFunctionCall","src":"8838:113:15"},"nodeType":"YulIf","src":"8835:139:15"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8602:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"8605:1:15","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"8611:7:15","type":""}],"src":"8571:410:15"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_04ba6bb27d4b8053dc24d79d9498076a9429b4914a7c0a3ca835e10744357e33(memPtr) {\n\n        mstore(add(memPtr, 0), \"Asset price feed doesn't exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_04ba6bb27d4b8053dc24d79d9498076a9429b4914a7c0a3ca835e10744357e33_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_04ba6bb27d4b8053dc24d79d9498076a9429b4914a7c0a3ca835e10744357e33(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04ba6bb27d4b8053dc24d79d9498076a9429b4914a7c0a3ca835e10744357e33__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04ba6bb27d4b8053dc24d79d9498076a9429b4914a7c0a3ca835e10744357e33_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c80631be5c92f1461003b578063b3596f0714610059575b600080fd5b610043610089565b604051610050919061040d565b60405180910390f35b610073600480360381019061006e919061048b565b61008e565b604051610080919061040d565b60405180910390f35b601281565b60008073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361015c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015390610515565b60405180910390fd5b60006101678361018c565b905060006101808260200151836080015160ff16610343565b90508092505050919050565b6101946103b4565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561025f57506040513d601f19601f8201168201806040525081019061025c919061056e565b60015b610269575061033e565b80836080019060ff16908160ff1681525050508073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa9250505080156102e457506040513d601f19601f820116820180604052508101906102e1919061063f565b60015b6102ee575061033e565b84876000019069ffffffffffffffffffff16908169ffffffffffffffffffff1681525050838760200181815250508187604001818152505060018760600190151590811515815250505050505050505b919050565b600080601283106103795760128361035b91906106e9565b600a6103679190610850565b8461037291906108ca565b90506103aa565b60128310156103a95782601261038f91906106e9565b600a61039b9190610850565b846103a691906108fb565b90505b5b8091505092915050565b6040518060a00160405280600069ffffffffffffffffffff1681526020016000815260200160008152602001600015158152602001600060ff1681525090565b6000819050919050565b610407816103f4565b82525050565b600060208201905061042260008301846103fe565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104588261042d565b9050919050565b6104688161044d565b811461047357600080fd5b50565b6000813590506104858161045f565b92915050565b6000602082840312156104a1576104a0610428565b5b60006104af84828501610476565b91505092915050565b600082825260208201905092915050565b7f4173736574207072696365206665656420646f65736e27742065786973740000600082015250565b60006104ff601e836104b8565b915061050a826104c9565b602082019050919050565b6000602082019050818103600083015261052e816104f2565b9050919050565b600060ff82169050919050565b61054b81610535565b811461055657600080fd5b50565b60008151905061056881610542565b92915050565b60006020828403121561058457610583610428565b5b600061059284828501610559565b91505092915050565b600069ffffffffffffffffffff82169050919050565b6105ba8161059b565b81146105c557600080fd5b50565b6000815190506105d7816105b1565b92915050565b6000819050919050565b6105f0816105dd565b81146105fb57600080fd5b50565b60008151905061060d816105e7565b92915050565b61061c816103f4565b811461062757600080fd5b50565b60008151905061063981610613565b92915050565b600080600080600060a0868803121561065b5761065a610428565b5b6000610669888289016105c8565b955050602061067a888289016105fe565b945050604061068b8882890161062a565b935050606061069c8882890161062a565b92505060806106ad888289016105c8565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106f4826103f4565b91506106ff836103f4565b9250828203905081811115610717576107166106ba565b5b92915050565b60008160011c9050919050565b6000808291508390505b6001851115610774578086048111156107505761074f6106ba565b5b600185161561075f5780820291505b808102905061076d8561071d565b9450610734565b94509492505050565b60008261078d5760019050610849565b8161079b5760009050610849565b81600181146107b157600281146107bb576107ea565b6001915050610849565b60ff8411156107cd576107cc6106ba565b5b8360020a9150848211156107e4576107e36106ba565b5b50610849565b5060208310610133831016604e8410600b841016171561081f5782820a90508381111561081a576108196106ba565b5b610849565b61082c848484600161072a565b92509050818404811115610843576108426106ba565b5b81810290505b9392505050565b600061085b826103f4565b9150610866836103f4565b92506108937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461077d565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006108d5826103f4565b91506108e0836103f4565b9250826108f0576108ef61089b565b5b828204905092915050565b6000610906826103f4565b9150610911836103f4565b925082820261091f816103f4565b91508282048414831517610936576109356106ba565b5b509291505056fea264697066735822122026537522d2e0e14851f65b9c8be187d572692283b23f77140c544430cfa5580364736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1BE5C92F EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB3596F07 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x167 DUP4 PUSH2 0x18C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x180 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0xFF AND PUSH2 0x343 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x194 PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x25F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x269 JUMPI POP PUSH2 0x33E JUMP JUMPDEST DUP1 DUP4 PUSH1 0x80 ADD SWAP1 PUSH1 0xFF AND SWAP1 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2E4 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2EE JUMPI POP PUSH2 0x33E JUMP JUMPDEST DUP5 DUP8 PUSH1 0x0 ADD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 DUP8 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP8 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP8 PUSH1 0x60 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x12 DUP4 LT PUSH2 0x379 JUMPI PUSH1 0x12 DUP4 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0xA PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST DUP5 PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x8CA JUMP JUMPDEST SWAP1 POP PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x12 DUP4 LT ISZERO PUSH2 0x3A9 JUMPI DUP3 PUSH1 0x12 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0xA PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST DUP5 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x407 DUP2 PUSH2 0x3F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x422 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x458 DUP3 PUSH2 0x42D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x468 DUP2 PUSH2 0x44D JUMP JUMPDEST DUP2 EQ PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x485 DUP2 PUSH2 0x45F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A1 JUMPI PUSH2 0x4A0 PUSH2 0x428 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4AF DUP5 DUP3 DUP6 ADD PUSH2 0x476 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4173736574207072696365206665656420646F65736E27742065786973740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FF PUSH1 0x1E DUP4 PUSH2 0x4B8 JUMP JUMPDEST SWAP2 POP PUSH2 0x50A DUP3 PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52E DUP2 PUSH2 0x4F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x54B DUP2 PUSH2 0x535 JUMP JUMPDEST DUP2 EQ PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x568 DUP2 PUSH2 0x542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x584 JUMPI PUSH2 0x583 PUSH2 0x428 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x592 DUP5 DUP3 DUP6 ADD PUSH2 0x559 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5BA DUP2 PUSH2 0x59B JUMP JUMPDEST DUP2 EQ PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5D7 DUP2 PUSH2 0x5B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F0 DUP2 PUSH2 0x5DD JUMP JUMPDEST DUP2 EQ PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x60D DUP2 PUSH2 0x5E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x61C DUP2 PUSH2 0x3F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x639 DUP2 PUSH2 0x613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x65B JUMPI PUSH2 0x65A PUSH2 0x428 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x669 DUP9 DUP3 DUP10 ADD PUSH2 0x5C8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x67A DUP9 DUP3 DUP10 ADD PUSH2 0x5FE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x68B DUP9 DUP3 DUP10 ADD PUSH2 0x62A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x69C DUP9 DUP3 DUP10 ADD PUSH2 0x62A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x6AD DUP9 DUP3 DUP10 ADD PUSH2 0x5C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6F4 DUP3 PUSH2 0x3F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x6FF DUP4 PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x717 JUMPI PUSH2 0x716 PUSH2 0x6BA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x774 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x750 JUMPI PUSH2 0x74F PUSH2 0x6BA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x75F JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x76D DUP6 PUSH2 0x71D JUMP JUMPDEST SWAP5 POP PUSH2 0x734 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x78D JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x849 JUMP JUMPDEST DUP2 PUSH2 0x79B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x849 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x7B1 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x7BB JUMPI PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x849 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x7CD JUMPI PUSH2 0x7CC PUSH2 0x6BA JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x7E4 JUMPI PUSH2 0x7E3 PUSH2 0x6BA JUMP JUMPDEST JUMPDEST POP PUSH2 0x849 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x81F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x81A JUMPI PUSH2 0x819 PUSH2 0x6BA JUMP JUMPDEST JUMPDEST PUSH2 0x849 JUMP JUMPDEST PUSH2 0x82C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x72A JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x843 JUMPI PUSH2 0x842 PUSH2 0x6BA JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85B DUP3 PUSH2 0x3F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x866 DUP4 PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP PUSH2 0x893 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x77D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8D5 DUP3 PUSH2 0x3F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8E0 DUP4 PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x8F0 JUMPI PUSH2 0x8EF PUSH2 0x89B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x906 DUP3 PUSH2 0x3F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x911 DUP4 PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x91F DUP2 PUSH2 0x3F4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x936 JUMPI PUSH2 0x935 PUSH2 0x6BA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 MSTORE8 PUSH22 0x22D2E0E14851F65B9C8BE187D572692283B23F77140C SLOAD DIFFICULTY ADDRESS 0xCF 0xA5 PC SUB PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"146:3354:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;215:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1182:511;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;215:42;255:2;215:42;:::o;1182:511::-;1285:7;1374:1;1329:47;;1337:16;:24;1354:6;1337:24;;;;;;;;;;;;;;;;;;;;;;;;;1329:47;;;1308:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;1442:32;1477:31;1501:6;1477:23;:31::i;:::-;1442:66;;1518:23;1544:110;1589:12;:19;;;1623:12;:21;;;1544:110;;:23;:110::i;:::-;1518:136;;1671:15;1664:22;;;;1182:511;;;:::o;2159:1339::-;2255:32;;:::i;:::-;2303:31;2337:16;:24;2354:6;2337:24;;;;;;;;;;;;;;;;;;;;;;;;;2303:58;;2431:15;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2427:337;;2734:19;;;2427:337;2599:8;2575:12;:21;;:32;;;;;;;;;;;2458:160;2829:15;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2825:667;;3462:19;;;2825:667;3164:7;3141:12;:20;;:30;;;;;;;;;;;3207:6;3185:12;:19;;:28;;;;;3252:9;3227:12;:22;;:34;;;;;3298:4;3275:12;:20;;:27;;;;;;;;;;;3316:19;;;;;;2159:1339;;;;:::o;1725:428::-;1844:7;1867:13;255:2;1894:13;:30;1890:235;;255:2;1963:13;:29;;;;:::i;:::-;1958:2;:35;;;;:::i;:::-;1948:6;:46;;;;:::i;:::-;1940:54;;1890:235;;;255:2;2015:13;:29;2011:114;;;2099:13;255:2;2083:29;;;;:::i;:::-;2078:2;:35;;;;:::i;:::-;2068:6;:46;;;;:::i;:::-;2060:54;;2011:114;1890:235;2141:5;2134:12;;;1725:428;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:15:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:169::-;1695:11;1729:6;1724:3;1717:19;1769:4;1764:3;1760:14;1745:29;;1611:169;;;;:::o;1786:180::-;1926:32;1922:1;1914:6;1910:14;1903:56;1786:180;:::o;1972:366::-;2114:3;2135:67;2199:2;2194:3;2135:67;:::i;:::-;2128:74;;2211:93;2300:3;2211:93;:::i;:::-;2329:2;2324:3;2320:12;2313:19;;1972:366;;;:::o;2344:419::-;2510:4;2548:2;2537:9;2533:18;2525:26;;2597:9;2591:4;2587:20;2583:1;2572:9;2568:17;2561:47;2625:131;2751:4;2625:131;:::i;:::-;2617:139;;2344:419;;;:::o;2769:86::-;2804:7;2844:4;2837:5;2833:16;2822:27;;2769:86;;;:::o;2861:118::-;2932:22;2948:5;2932:22;:::i;:::-;2925:5;2922:33;2912:61;;2969:1;2966;2959:12;2912:61;2861:118;:::o;2985:139::-;3040:5;3071:6;3065:13;3056:22;;3087:31;3112:5;3087:31;:::i;:::-;2985:139;;;;:::o;3130:347::-;3198:6;3247:2;3235:9;3226:7;3222:23;3218:32;3215:119;;;3253:79;;:::i;:::-;3215:119;3373:1;3398:62;3452:7;3443:6;3432:9;3428:22;3398:62;:::i;:::-;3388:72;;3344:126;3130:347;;;;:::o;3483:105::-;3519:7;3559:22;3552:5;3548:34;3537:45;;3483:105;;;:::o;3594:120::-;3666:23;3683:5;3666:23;:::i;:::-;3659:5;3656:34;3646:62;;3704:1;3701;3694:12;3646:62;3594:120;:::o;3720:141::-;3776:5;3807:6;3801:13;3792:22;;3823:32;3849:5;3823:32;:::i;:::-;3720:141;;;;:::o;3867:76::-;3903:7;3932:5;3921:16;;3867:76;;;:::o;3949:120::-;4021:23;4038:5;4021:23;:::i;:::-;4014:5;4011:34;4001:62;;4059:1;4056;4049:12;4001:62;3949:120;:::o;4075:141::-;4131:5;4162:6;4156:13;4147:22;;4178:32;4204:5;4178:32;:::i;:::-;4075:141;;;;:::o;4222:122::-;4295:24;4313:5;4295:24;:::i;:::-;4288:5;4285:35;4275:63;;4334:1;4331;4324:12;4275:63;4222:122;:::o;4350:143::-;4407:5;4438:6;4432:13;4423:22;;4454:33;4481:5;4454:33;:::i;:::-;4350:143;;;;:::o;4499:971::-;4602:6;4610;4618;4626;4634;4683:3;4671:9;4662:7;4658:23;4654:33;4651:120;;;4690:79;;:::i;:::-;4651:120;4810:1;4835:63;4890:7;4881:6;4870:9;4866:22;4835:63;:::i;:::-;4825:73;;4781:127;4947:2;4973:63;5028:7;5019:6;5008:9;5004:22;4973:63;:::i;:::-;4963:73;;4918:128;5085:2;5111:64;5167:7;5158:6;5147:9;5143:22;5111:64;:::i;:::-;5101:74;;5056:129;5224:2;5250:64;5306:7;5297:6;5286:9;5282:22;5250:64;:::i;:::-;5240:74;;5195:129;5363:3;5390:63;5445:7;5436:6;5425:9;5421:22;5390:63;:::i;:::-;5380:73;;5334:129;4499:971;;;;;;;;:::o;5476:180::-;5524:77;5521:1;5514:88;5621:4;5618:1;5611:15;5645:4;5642:1;5635:15;5662:194;5702:4;5722:20;5740:1;5722:20;:::i;:::-;5717:25;;5756:20;5774:1;5756:20;:::i;:::-;5751:25;;5800:1;5797;5793:9;5785:17;;5824:1;5818:4;5815:11;5812:37;;;5829:18;;:::i;:::-;5812:37;5662:194;;;;:::o;5862:102::-;5904:8;5951:5;5948:1;5944:13;5923:34;;5862:102;;;:::o;5970:848::-;6031:5;6038:4;6062:6;6053:15;;6086:5;6077:14;;6100:712;6121:1;6111:8;6108:15;6100:712;;;6216:4;6211:3;6207:14;6201:4;6198:24;6195:50;;;6225:18;;:::i;:::-;6195:50;6275:1;6265:8;6261:16;6258:451;;;6690:4;6683:5;6679:16;6670:25;;6258:451;6740:4;6734;6730:15;6722:23;;6770:32;6793:8;6770:32;:::i;:::-;6758:44;;6100:712;;;5970:848;;;;;;;:::o;6824:1073::-;6878:5;7069:8;7059:40;;7090:1;7081:10;;7092:5;;7059:40;7118:4;7108:36;;7135:1;7126:10;;7137:5;;7108:36;7204:4;7252:1;7247:27;;;;7288:1;7283:191;;;;7197:277;;7247:27;7265:1;7256:10;;7267:5;;;7283:191;7328:3;7318:8;7315:17;7312:43;;;7335:18;;:::i;:::-;7312:43;7384:8;7381:1;7377:16;7368:25;;7419:3;7412:5;7409:14;7406:40;;;7426:18;;:::i;:::-;7406:40;7459:5;;;7197:277;;7583:2;7573:8;7570:16;7564:3;7558:4;7555:13;7551:36;7533:2;7523:8;7520:16;7515:2;7509:4;7506:12;7502:35;7486:111;7483:246;;;7639:8;7633:4;7629:19;7620:28;;7674:3;7667:5;7664:14;7661:40;;;7681:18;;:::i;:::-;7661:40;7714:5;;7483:246;7754:42;7792:3;7782:8;7776:4;7773:1;7754:42;:::i;:::-;7739:57;;;;7828:4;7823:3;7819:14;7812:5;7809:25;7806:51;;;7837:18;;:::i;:::-;7806:51;7886:4;7879:5;7875:16;7866:25;;6824:1073;;;;;;:::o;7903:285::-;7963:5;7987:23;8005:4;7987:23;:::i;:::-;7979:31;;8031:27;8049:8;8031:27;:::i;:::-;8019:39;;8077:104;8114:66;8104:8;8098:4;8077:104;:::i;:::-;8068:113;;7903:285;;;;:::o;8194:180::-;8242:77;8239:1;8232:88;8339:4;8336:1;8329:15;8363:4;8360:1;8353:15;8380:185;8420:1;8437:20;8455:1;8437:20;:::i;:::-;8432:25;;8471:20;8489:1;8471:20;:::i;:::-;8466:25;;8510:1;8500:35;;8515:18;;:::i;:::-;8500:35;8557:1;8554;8550:9;8545:14;;8380:185;;;;:::o;8571:410::-;8611:7;8634:20;8652:1;8634:20;:::i;:::-;8629:25;;8668:20;8686:1;8668:20;:::i;:::-;8663:25;;8723:1;8720;8716:9;8745:30;8763:11;8745:30;:::i;:::-;8734:41;;8924:1;8915:7;8911:15;8908:1;8905:22;8885:1;8878:9;8858:83;8835:139;;8954:18;;:::i;:::-;8835:139;8619:362;8571:410;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"483800","executionCost":"infinite","totalCost":"infinite"},"external":{"TARGET_DIGITS()":"307","getAssetPrice(address)":"infinite"},"internal":{"_getCurrentFluxResponse(address)":"infinite","_scaleFluxPriceByDigits(uint256,uint256)":"infinite"}},"methodIdentifiers":{"TARGET_DIGITS()":"1be5c92f","getAssetPrice(address)":"b3596f07"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"internalType\":\"struct FluxPriceFeed.Config[]\",\"name\":\"_config\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"AssetPriceFeedSourceUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TARGET_DIGITS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAssetPrice(address)\":{\"details\":\"Used to retrieve a given asset's price.\",\"params\":{\"_asset\":\"Address of the asset.\"},\"returns\":{\"_0\":\"uint256 Price of the asset.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/FluxPriceFeed.sol\":\"FluxPriceFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/FluxPriceFeed.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./dependencies/flux/CLV2V3Interface.sol\\\";\\nimport \\\"./interfaces/IPriceFeed.sol\\\";\\n\\ncontract FluxPriceFeed is IPriceFeed {\\n    // @dev target digits\\n    uint256 public constant TARGET_DIGITS = 18;\\n\\n    // Map of asset price sources (asset => priceFeedSource)\\n    mapping(address => CLV2V3Interface) private priceFeedSources;\\n\\n    struct FluxResponse {\\n        uint80 roundId;\\n        int256 answer;\\n        uint256 timestamp;\\n        bool success;\\n        uint8 decimals;\\n    }\\n\\n    struct Config {\\n        address asset;\\n        address source;\\n    }\\n\\n    constructor(Config[] memory _config) {\\n        uint256 numberOfSources = _config.length;\\n\\n        for (uint256 i = 0; i < numberOfSources; i++) {\\n            address currentAsset = _config[i].asset;\\n            address currentSource = _config[i].source;\\n\\n            require(currentAsset != address(0), \\\"Invalid asset\\\");\\n            require(currentSource != address(0), \\\"Invalid source\\\");\\n\\n            priceFeedSources[currentAsset] = CLV2V3Interface(currentSource);\\n            emit AssetPriceFeedSourceUpdated(currentAsset, currentSource);\\n        }\\n    }\\n\\n    function getAssetPrice(address _asset)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        require(\\n            address(priceFeedSources[_asset]) != address(0),\\n            \\\"Asset price feed doesn't exist\\\"\\n        );\\n        FluxResponse memory fluxResponse = _getCurrentFluxResponse(_asset);\\n        uint256 scaledFluxPrice = _scaleFluxPriceByDigits(\\n            uint256(fluxResponse.answer),\\n            fluxResponse.decimals\\n        );\\n        return scaledFluxPrice;\\n    }\\n\\n    // Internal functions\\n    function _scaleFluxPriceByDigits(uint256 _price, uint256 _answerDigits)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        uint256 price;\\n        if (_answerDigits >= TARGET_DIGITS) {\\n            price = _price / (10**(_answerDigits - TARGET_DIGITS));\\n        } else if (_answerDigits < TARGET_DIGITS) {\\n            price = _price * (10**(TARGET_DIGITS - _answerDigits));\\n        }\\n        return price;\\n    }\\n\\n    function _getCurrentFluxResponse(address _asset)\\n        internal\\n        view\\n        returns (FluxResponse memory fluxResponse)\\n    {\\n        CLV2V3Interface priceAggregator = priceFeedSources[_asset];\\n        // First, try to get current decimal precision:\\n        try priceAggregator.decimals() returns (uint8 decimals) {\\n            // If call to Flux succeeds, record the current decimal precision\\n            fluxResponse.decimals = decimals;\\n        } catch {\\n            // If call to Flux aggregator reverts, return a zero response with success = false\\n            return fluxResponse;\\n        }\\n\\n        // Secondly, try to get latest price data:\\n        try priceAggregator.latestRoundData() returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256, /* startedAt */\\n            uint256 timestamp,\\n            uint80 /* answeredInRound */\\n        ) {\\n            // If call to Flux succeeds, return the response and success = true\\n            fluxResponse.roundId = roundId;\\n            fluxResponse.answer = answer;\\n            fluxResponse.timestamp = timestamp;\\n            fluxResponse.success = true;\\n            return fluxResponse;\\n        } catch {\\n            // If call to Flux aggregator reverts, return a zero response with success = false\\n            return fluxResponse;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf258f5c38a9b157bbfd7f0f604820d0e812c98a23feb78d2a00568c164ed4dd\",\"license\":\"MIT\"},\"src/dependencies/flux/CLInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\ninterface CLInterface {\\n    function latestAnswer() external view returns (int256);\\n\\n    function latestTimestamp() external view returns (uint256);\\n\\n    function latestRound() external view returns (uint256);\\n\\n    function getAnswer(uint256 roundId) external view returns (int256);\\n\\n    function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n    event AnswerUpdated(\\n        int256 indexed current,\\n        uint256 indexed roundId,\\n        uint256 updatedAt\\n    );\\n    event NewRound(\\n        uint256 indexed roundId,\\n        address indexed startedBy,\\n        uint256 startedAt\\n    );\\n}\\n\",\"keccak256\":\"0x9baff0f8ebee0f9061976d6e23535ad91a364ecbf82e4a0e1c9623be2dada605\",\"license\":\"MIT\"},\"src/dependencies/flux/CLV2V3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./CLInterface.sol\\\";\\nimport \\\"./CLV3Interface.sol\\\";\\n\\n/* solhint-disable-next-line no-empty-blocks */\\ninterface CLV2V3Interface is CLInterface, CLV3Interface {\\n\\n}\\n\",\"keccak256\":\"0x9ce7d6c594ce0f86b27e3d0eaea94999e04b443d95fa9a8c9dd5c7b94032e6c6\",\"license\":\"MIT\"},\"src/dependencies/flux/CLV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\ninterface CLV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n    // if they do not have data to report, instead of returning unset values\\n    // which could be misinterpreted as actual reported values.\\n    function getRoundData(uint80 _roundId)\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x678f3a63ba7a7d8b37a6333cac5ee1c79d3ae42e541180da59a3156385d53482\",\"license\":\"MIT\"},\"src/interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\n/**\\n * @dev Interface for protocol price feeds.\\n */\\ninterface IPriceFeed {\\n    /*~~~ EVENT ~~~*/\\n\\n    /**\\n     * @dev Emitted after the price source of an asset is updated.\\n     *\\n     * @param asset The address of the asset.\\n     * @param source The price feed source of the asset.\\n     */\\n    event AssetPriceFeedSourceUpdated(\\n        address indexed asset,\\n        address indexed source\\n    );\\n\\n    /*~~~ MAIN LOGIC FUNCTIONS ~~~*/\\n\\n    /**\\n     * @dev Used to retrieve a given asset's price.\\n     *\\n     * @param _asset Address of the asset.\\n     * @return uint256 Price of the asset.\\n     */\\n    function getAssetPrice(address _asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd959ed0ca638b27203ad749ddf33d2721d72b2efd61ca39250b4a90c72f1ca9e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":13,"contract":"src/FluxPriceFeed.sol:FluxPriceFeed","label":"priceFeedSources","offset":0,"slot":"0","type":"t_mapping(t_address,t_contract(CLV2V3Interface)1039)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(CLV2V3Interface)1039":{"encoding":"inplace","label":"contract CLV2V3Interface","numberOfBytes":"20"},"t_mapping(t_address,t_contract(CLV2V3Interface)1039)":{"encoding":"mapping","key":"t_address","label":"mapping(address => contract CLV2V3Interface)","numberOfBytes":"32","value":"t_contract(CLV2V3Interface)1039"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/InterestSwap.sol":{"InterestSwap":{"abi":[{"inputs":[{"internalType":"address","name":"_priceFeed","type":"address"},{"internalType":"address","name":"_liquidityToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"prod1","type":"uint256"}],"name":"PRBMath__MulDivFixedPointOverflow","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address[]","name":"acceptedTokens","type":"address[]"},{"indexed":false,"internalType":"address","name":"priceModel","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalLiquidity","type":"uint256"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"address[]","name":"_acceptedTokens","type":"address[]"},{"internalType":"uint256","name":"_dailyFeePercentage","type":"uint256"},{"internalType":"uint256","name":"_initialLiquidity","type":"uint256"}],"name":"createPool","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_lp","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getPool","outputs":[{"components":[{"internalType":"address[]","name":"acceptedTokens","type":"address[]"},{"internalType":"uint256","name":"totalLiquidity","type":"uint256"},{"internalType":"contract PriceModel","name":"priceModel","type":"address"}],"internalType":"struct InterestSwap.Pool","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lp","type":"address"}],"name":"getUserTotalPools","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"isAssetSupported","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidityToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceFeed","outputs":[{"internalType":"contract IPriceFeed","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"priceModels","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_asset","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_daysTerm","type":"uint256"},{"components":[{"internalType":"address","name":"poolOwner","type":"address"},{"internalType":"uint256","name":"poolIndex","type":"uint256"}],"internalType":"struct InterestSwap.Route","name":"route","type":"tuple"}],"name":"quote","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_asset","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_daysTerm","type":"uint256"},{"components":[{"internalType":"address","name":"poolOwner","type":"address"},{"internalType":"uint256","name":"poolIndex","type":"uint256"}],"internalType":"struct InterestSwap.Route","name":"route","type":"tuple"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_359":{"entryPoint":null,"id":359,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":275,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":298,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":229,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":197,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":192,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":249,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1355:15","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:15","statements":[{"nodeType":"YulAssignment","src":"57:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:15"},"nodeType":"YulFunctionCall","src":"67:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:15","type":""}],"src":"7:75:15"},{"body":{"nodeType":"YulBlock","src":"177:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:15"},"nodeType":"YulFunctionCall","src":"187:12:15"},"nodeType":"YulExpressionStatement","src":"187:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:15"},{"body":{"nodeType":"YulBlock","src":"300:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:15"},"nodeType":"YulFunctionCall","src":"310:12:15"},"nodeType":"YulExpressionStatement","src":"310:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:15"},{"body":{"nodeType":"YulBlock","src":"379:81:15","statements":[{"nodeType":"YulAssignment","src":"389:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:15"},"nodeType":"YulFunctionCall","src":"400:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:15","type":""}],"src":"334:126:15"},{"body":{"nodeType":"YulBlock","src":"511:51:15","statements":[{"nodeType":"YulAssignment","src":"521:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:15"},"nodeType":"YulFunctionCall","src":"532:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:15","type":""}],"src":"466:96:15"},{"body":{"nodeType":"YulBlock","src":"611:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:15"},"nodeType":"YulFunctionCall","src":"670:12:15"},"nodeType":"YulExpressionStatement","src":"670:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:15"},"nodeType":"YulFunctionCall","src":"641:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:15"},"nodeType":"YulFunctionCall","src":"631:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:15"},"nodeType":"YulFunctionCall","src":"624:43:15"},"nodeType":"YulIf","src":"621:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:15","type":""}],"src":"568:122:15"},{"body":{"nodeType":"YulBlock","src":"759:80:15","statements":[{"nodeType":"YulAssignment","src":"769:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:15"},"nodeType":"YulFunctionCall","src":"778:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:15"},"nodeType":"YulFunctionCall","src":"800:33:15"},"nodeType":"YulExpressionStatement","src":"800:33:15"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:15","type":""}],"src":"696:143:15"},{"body":{"nodeType":"YulBlock","src":"939:413:15","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:15"},"nodeType":"YulFunctionCall","src":"987:79:15"},"nodeType":"YulExpressionStatement","src":"987:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:15"},"nodeType":"YulFunctionCall","src":"956:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:15"},"nodeType":"YulFunctionCall","src":"952:32:15"},"nodeType":"YulIf","src":"949:119:15"},{"nodeType":"YulBlock","src":"1078:128:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:15"},"nodeType":"YulFunctionCall","src":"1164:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:15"},"nodeType":"YulFunctionCall","src":"1132:64:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:15"}]}]},{"nodeType":"YulBlock","src":"1216:129:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:15"},"nodeType":"YulFunctionCall","src":"1303:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:15"},"nodeType":"YulFunctionCall","src":"1271:64:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:15","type":""}],"src":"845:507:15"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x219D CODESIZE SUB DUP1 PUSH3 0x219D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x12A JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x171 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF2 DUP3 PUSH3 0xC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x104 DUP2 PUSH3 0xE5 JUMP JUMPDEST DUP2 EQ PUSH3 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x124 DUP2 PUSH3 0xF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x144 JUMPI PUSH3 0x143 PUSH3 0xC0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x154 DUP6 DUP3 DUP7 ADD PUSH3 0x113 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x167 DUP6 DUP3 DUP7 ADD PUSH3 0x113 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x201C DUP1 PUSH3 0x181 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x574B529B GT PUSH3 0x6F JUMPI DUP1 PUSH4 0x574B529B EQ PUSH3 0x16A JUMPI DUP1 PUSH4 0x5B5A6300 EQ PUSH3 0x1A0 JUMPI DUP1 PUSH4 0x5B5B9EA2 EQ PUSH3 0x1D6 JUMPI DUP1 PUSH4 0x6C61B615 EQ PUSH3 0x20C JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH3 0x244 JUMPI PUSH3 0xA0 JUMP JUMPDEST DUP1 PUSH4 0x658C489 EQ PUSH3 0xA5 JUMPI DUP1 PUSH4 0xA90D6AD EQ PUSH3 0xDB JUMPI DUP1 PUSH4 0x387DD500 EQ PUSH3 0x112 JUMPI DUP1 PUSH4 0x43CD8F7E EQ PUSH3 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xBD SWAP2 SWAP1 PUSH3 0x11CF JUMP JUMPDEST PUSH3 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xD2 SWAP2 SWAP1 PUSH3 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xF3 SWAP2 SWAP1 PUSH3 0x134F JUMP JUMPDEST PUSH3 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x109 SWAP3 SWAP2 SWAP1 PUSH3 0x13DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x12A SWAP2 SWAP1 PUSH3 0x1408 JUMP JUMPDEST PUSH3 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x13F SWAP2 SWAP1 PUSH3 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x152 PUSH3 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x161 SWAP2 SWAP1 PUSH3 0x14A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x182 SWAP2 SWAP1 PUSH3 0x14C2 JUMP JUMPDEST PUSH3 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x197 SWAP2 SWAP1 PUSH3 0x14F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1B8 SWAP2 SWAP1 PUSH3 0x1511 JUMP JUMPDEST PUSH3 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1CD SWAP2 SWAP1 PUSH3 0x158A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1EE SWAP2 SWAP1 PUSH3 0x15A7 JUMP JUMPDEST PUSH3 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x203 SWAP2 SWAP1 PUSH3 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x224 SWAP2 SWAP1 PUSH3 0x11CF JUMP JUMPDEST PUSH3 0x9F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x23B SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x176C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x24E PUSH3 0xD4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x25D SWAP2 SWAP1 PUSH3 0x17CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x277 DUP7 DUP7 DUP7 DUP7 PUSH3 0x9F3 JUMP JUMPDEST SWAP3 POP POP POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x20 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x17EB JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x2FA SWAP2 SWAP1 PUSH3 0x1849 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x340 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1884 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x360 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x386 SWAP2 SWAP1 PUSH3 0x18F2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3E6 SWAP3 SWAP2 SWAP1 PUSH3 0x1924 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x406 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x42C SWAP2 SWAP1 PUSH3 0x18F2 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 PUSH3 0x496 DUP8 PUSH3 0xD70 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x54F SWAP3 SWAP2 SWAP1 PUSH3 0xF35 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x688 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x619 JUMPI PUSH3 0x618 PUSH3 0x17EB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH3 0x67F SWAP1 PUSH3 0x1951 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x5A6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x6EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1884 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x70A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x730 SWAP2 SWAP1 PUSH3 0x18F2 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x91A1CD49A83A1D900C66FF806810753859AACEAF484951D6D544DED1B1D0FF68 DUP10 DUP4 DUP10 PUSH1 0x40 MLOAD PUSH3 0x77D SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1A19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 DUP2 SWAP5 POP SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP3 POP SWAP3 POP POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH3 0x88E PUSH3 0xFC4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH3 0x8E2 JUMPI PUSH3 0x8E1 PUSH3 0x17EB JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH3 0x982 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH3 0x937 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH3 0xADD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xAD4 SWAP1 PUSH3 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB3596F07 DUP10 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB3B SWAP2 SWAP1 PUSH3 0x14F4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xB59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xB7F SWAP2 SWAP1 PUSH3 0x1AF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0xB98 DUP9 DUP4 PUSH3 0xE1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP8 PUSH1 0x20 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH3 0xBF8 JUMPI PUSH3 0xBF7 PUSH3 0x17EB JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH3 0xC52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC49 SWAP1 PUSH3 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x315F1A41 DUP12 DUP12 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xCB5 SWAP3 SWAP2 SWAP1 PUSH3 0x1B9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xCD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xCF9 SWAP2 SWAP1 PUSH3 0x1AF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP12 PUSH3 0xD0B SWAP2 SWAP1 PUSH3 0x1849 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0xD31 DUP7 DUP5 DUP15 PUSH3 0xD22 SWAP2 SWAP1 PUSH3 0x1849 JUMP JUMPDEST PUSH3 0xE1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP3 DUP3 DUP3 SWAP9 POP SWAP9 POP SWAP9 POP POP POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH3 0xD82 SWAP1 PUSH3 0xFFB JUMP JUMPDEST PUSH3 0xD8E SWAP2 SWAP1 PUSH3 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xDAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x4 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE28 DUP4 DUP4 PUSH3 0xE30 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP5 DUP7 MULMOD DUP5 DUP7 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH3 0xE98 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD31B340200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE8F SWAP2 SWAP1 PUSH3 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP7 DUP9 MULMOD SWAP2 POP PUSH8 0x6F05B59D3B1FFFF DUP3 GT SWAP1 POP PUSH1 0x0 DUP4 SUB PUSH3 0xEE9 JUMPI DUP1 PUSH8 0xDE0B6B3A7640000 DUP6 DUP2 PUSH3 0xEDB JUMPI PUSH3 0xEDA PUSH3 0x1BC8 JUMP JUMPDEST JUMPDEST DIV ADD SWAP5 POP POP POP POP POP PUSH3 0xF2F JUMP JUMPDEST DUP1 PUSH32 0xACCB18165BD6FE31AE1CF318DC5B51EEE0E1BA569B88CD74C1773B91FAC10669 PUSH1 0x1 PUSH3 0x40000 DUP1 PUSH1 0x0 SUB DIV ADD DUP7 DUP6 GT DUP7 SUB MUL PUSH3 0x40000 DUP6 DUP9 SUB DIV OR MUL ADD SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0xFB1 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xFB0 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xF56 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFC0 SWAP2 SWAP1 PUSH3 0x1009 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x3EF DUP1 PUSH3 0x1BF8 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1024 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x100A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1069 DUP3 PUSH3 0x103C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x107B DUP2 PUSH3 0x105C JUMP JUMPDEST DUP2 EQ PUSH3 0x1087 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x109B DUP2 PUSH3 0x1070 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x10B6 DUP2 PUSH3 0x10A1 JUMP JUMPDEST DUP2 EQ PUSH3 0x10C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x10D6 DUP2 PUSH3 0x10AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x112C DUP3 PUSH3 0x10E1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x114E JUMPI PUSH3 0x114D PUSH3 0x10F2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1163 PUSH3 0x1028 JUMP JUMPDEST SWAP1 POP PUSH3 0x1171 DUP3 DUP3 PUSH3 0x1121 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x118F JUMPI PUSH3 0x118E PUSH3 0x10DC JUMP JUMPDEST JUMPDEST PUSH3 0x119B PUSH1 0x40 PUSH3 0x1157 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x11AD DUP5 DUP3 DUP6 ADD PUSH3 0x108A JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH3 0x11C3 DUP5 DUP3 DUP6 ADD PUSH3 0x10C5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x11EC JUMPI PUSH3 0x11EB PUSH3 0x1032 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x11FC DUP8 DUP3 DUP9 ADD PUSH3 0x108A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x120F DUP8 DUP3 DUP9 ADD PUSH3 0x10C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x1222 DUP8 DUP3 DUP9 ADD PUSH3 0x10C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x1235 DUP8 DUP3 DUP9 ADD PUSH3 0x1176 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH3 0x124C DUP2 PUSH3 0x10A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1269 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1241 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1292 JUMPI PUSH3 0x1291 PUSH3 0x10F2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x12BF PUSH3 0x12B9 DUP5 PUSH3 0x1274 JUMP JUMPDEST PUSH3 0x1157 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12E5 JUMPI PUSH3 0x12E4 PUSH3 0x12A3 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1312 JUMPI DUP1 PUSH3 0x12FD DUP9 DUP3 PUSH3 0x108A JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x12E7 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1334 JUMPI PUSH3 0x1333 PUSH3 0x126F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH3 0x1346 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x12A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x136B JUMPI PUSH3 0x136A PUSH3 0x1032 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x138C JUMPI PUSH3 0x138B PUSH3 0x1037 JUMP JUMPDEST JUMPDEST PUSH3 0x139A DUP7 DUP3 DUP8 ADD PUSH3 0x131C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x13AD DUP7 DUP3 DUP8 ADD PUSH3 0x10C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x13C0 DUP7 DUP3 DUP8 ADD PUSH3 0x10C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x13D5 DUP2 PUSH3 0x105C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x13F2 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1241 JUMP JUMPDEST PUSH3 0x1401 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x13CA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1421 JUMPI PUSH3 0x1420 PUSH3 0x1032 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1431 DUP5 DUP3 DUP6 ADD PUSH3 0x108A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1465 PUSH3 0x145F PUSH3 0x1459 DUP5 PUSH3 0x103C JUMP JUMPDEST PUSH3 0x143A JUMP JUMPDEST PUSH3 0x103C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1479 DUP3 PUSH3 0x1444 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x148D DUP3 PUSH3 0x146C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x149F DUP2 PUSH3 0x1480 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x14BC PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1494 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x14DB JUMPI PUSH3 0x14DA PUSH3 0x1032 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x14EB DUP5 DUP3 DUP6 ADD PUSH3 0x10C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x150B PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x13CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x152D JUMPI PUSH3 0x152C PUSH3 0x1032 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x153D DUP7 DUP3 DUP8 ADD PUSH3 0x108A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x1550 DUP7 DUP3 DUP8 ADD PUSH3 0x10C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x1563 DUP7 DUP3 DUP8 ADD PUSH3 0x108A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1584 DUP2 PUSH3 0x156D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x15A1 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1579 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x15C1 JUMPI PUSH3 0x15C0 PUSH3 0x1032 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x15D1 DUP6 DUP3 DUP7 ADD PUSH3 0x108A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x15E4 DUP6 DUP3 DUP7 ADD PUSH3 0x10C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1625 DUP2 PUSH3 0x105C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1639 DUP4 DUP4 PUSH3 0x161A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x165F DUP3 PUSH3 0x15EE JUMP JUMPDEST PUSH3 0x166B DUP2 DUP6 PUSH3 0x15F9 JUMP JUMPDEST SWAP4 POP PUSH3 0x1678 DUP4 PUSH3 0x160A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16AF JUMPI DUP2 MLOAD PUSH3 0x1693 DUP9 DUP3 PUSH3 0x162B JUMP JUMPDEST SWAP8 POP PUSH3 0x16A0 DUP4 PUSH3 0x1645 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x167C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x16C7 DUP2 PUSH3 0x10A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x16DA DUP3 PUSH3 0x146C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x16EC DUP2 PUSH3 0x16CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH3 0x1711 DUP3 DUP3 PUSH3 0x1652 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH3 0x1728 PUSH1 0x20 DUP7 ADD DUP3 PUSH3 0x16BC JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH3 0x173D PUSH1 0x40 DUP7 ADD DUP3 PUSH3 0x16E1 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1764 DUP2 DUP5 PUSH3 0x16F2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x1783 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1241 JUMP JUMPDEST PUSH3 0x1792 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1241 JUMP JUMPDEST PUSH3 0x17A1 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1241 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x17B6 DUP3 PUSH3 0x146C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x17C8 DUP2 PUSH3 0x17A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x17E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x17BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1856 DUP3 PUSH3 0x10A1 JUMP JUMPDEST SWAP2 POP PUSH3 0x1863 DUP4 PUSH3 0x10A1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x187E JUMPI PUSH3 0x187D PUSH3 0x181A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x189B PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x13CA JUMP JUMPDEST PUSH3 0x18AA PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x13CA JUMP JUMPDEST PUSH3 0x18B9 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1241 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH3 0x18CC DUP2 PUSH3 0x156D JUMP JUMPDEST DUP2 EQ PUSH3 0x18D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x18EC DUP2 PUSH3 0x18C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x190B JUMPI PUSH3 0x190A PUSH3 0x1032 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x191B DUP5 DUP3 DUP6 ADD PUSH3 0x18DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x193B PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x13CA JUMP JUMPDEST PUSH3 0x194A PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1241 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x195E DUP3 PUSH3 0x10A1 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x1993 JUMPI PUSH3 0x1992 PUSH3 0x181A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x19BC DUP3 PUSH3 0x15EE JUMP JUMPDEST PUSH3 0x19C8 DUP2 DUP6 PUSH3 0x199E JUMP JUMPDEST SWAP4 POP PUSH3 0x19D5 DUP4 PUSH3 0x160A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1A0C JUMPI DUP2 MLOAD PUSH3 0x19F0 DUP9 DUP3 PUSH3 0x162B JUMP JUMPDEST SWAP8 POP PUSH3 0x19FD DUP4 PUSH3 0x1645 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x19D9 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1A35 DUP2 DUP7 PUSH3 0x19AF JUMP JUMPDEST SWAP1 POP PUSH3 0x1A46 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x13CA JUMP JUMPDEST PUSH3 0x1A55 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1241 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x556E737570706F72746564206173736574000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AA6 PUSH1 0x11 DUP4 PUSH3 0x1A5D JUMP JUMPDEST SWAP2 POP PUSH3 0x1AB3 DUP3 PUSH3 0x1A6E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1AD9 DUP2 PUSH3 0x1A97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1AF1 DUP2 PUSH3 0x10AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1B10 JUMPI PUSH3 0x1B0F PUSH3 0x1032 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1B20 DUP5 DUP3 DUP6 ADD PUSH3 0x1AE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768206C697175696469747920696E2074686520706F6F6C PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B61 PUSH1 0x20 DUP4 PUSH3 0x1A5D JUMP JUMPDEST SWAP2 POP PUSH3 0x1B6E DUP3 PUSH3 0x1B29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1B94 DUP2 PUSH3 0x1B52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x1BB2 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1241 JUMP JUMPDEST PUSH3 0x1BC1 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1241 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3EF CODESIZE SUB DUP1 PUSH2 0x3EF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57 DUP2 PUSH2 0x44 JUMP JUMPDEST DUP2 EQ PUSH2 0x62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x74 DUP2 PUSH2 0x4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x90 JUMPI PUSH2 0x8F PUSH2 0x3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9E DUP5 DUP3 DUP6 ADD PUSH2 0x65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x339 DUP1 PUSH2 0xB6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29FE6199 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x315F1A41 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x6683D37D EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x267 JUMP JUMPDEST PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF DUP3 PUSH2 0xD1 PUSH1 0x0 SLOAD DUP7 PUSH2 0xF1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD DUP4 DUP4 PUSH2 0x105 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP5 DUP7 MULMOD DUP5 DUP7 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH2 0x16A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD31B340200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP7 DUP9 MULMOD SWAP2 POP PUSH8 0x6F05B59D3B1FFFF DUP3 GT SWAP1 POP PUSH1 0x0 DUP4 SUB PUSH2 0x1B6 JUMPI DUP1 PUSH8 0xDE0B6B3A7640000 DUP6 DUP2 PUSH2 0x1A9 JUMPI PUSH2 0x1A8 PUSH2 0x2D4 JUMP JUMPDEST JUMPDEST DIV ADD SWAP5 POP POP POP POP POP PUSH2 0x1FC JUMP JUMPDEST DUP1 PUSH32 0xACCB18165BD6FE31AE1CF318DC5B51EEE0E1BA569B88CD74C1773B91FAC10669 PUSH1 0x1 PUSH3 0x40000 DUP1 PUSH1 0x0 SUB DIV ADD DUP7 DUP6 GT DUP7 SUB MUL PUSH3 0x40000 DUP6 DUP9 SUB DIV OR MUL ADD SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x215 DUP2 PUSH2 0x202 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x230 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x244 DUP2 PUSH2 0x202 JUMP JUMPDEST DUP2 EQ PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x261 DUP2 PUSH2 0x23B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27E JUMPI PUSH2 0x27D PUSH2 0x236 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28C DUP6 DUP3 DUP7 ADD PUSH2 0x252 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29D DUP6 DUP3 DUP7 ADD PUSH2 0x252 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BD JUMPI PUSH2 0x2BC PUSH2 0x236 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CB DUP5 DUP3 DUP6 ADD PUSH2 0x252 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x6930FCDE403E4AC8F6484B30A5FCF07D73C0A336D7AD206F 0xBF ADD SWAP14 PUSH4 0x5170E164 PUSH20 0x6F6C63430008110033A264697066735822122049 PUSH6 0x34BE8680F296 0xCE 0xAA CALLER SWAP11 0x2C 0xC6 0x4F JUMPDEST CALLDATACOPY 0xEB EXTCODESIZE 0xE2 SDIV POP 0xA8 0xC3 GT 0xC6 RETURN GASLIMIT SELFBALANCE 0xAA 0xAB PUSH7 0x64736F6C634300 ADDMOD GT STOP CALLER ","sourceMap":"284:4487:1:-:0;;;1111:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1201:10;1178:9;;:34;;;;;;;;;;;;;;;;;;1246:15;1222:14;;:40;;;;;;;;;;;;;;;;;;1111:158;;284:4487;;88:117:15;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;284:4487:1:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@createPool_456":{"entryPoint":1081,"id":456,"parameterSlots":3,"returnSlots":2},"@createPriceModel_640":{"entryPoint":3440,"id":640,"parameterSlots":1,"returnSlots":1},"@getPool_657":{"entryPoint":2180,"id":657,"parameterSlots":2,"returnSlots":1},"@getUserTotalPools_670":{"entryPoint":1942,"id":670,"parameterSlots":1,"returnSlots":1},"@isAssetSupported_325":{"entryPoint":2120,"id":325,"parameterSlots":0,"returnSlots":0},"@liquidityToken_297":{"entryPoint":2018,"id":297,"parameterSlots":0,"returnSlots":0},"@mulDivFixedPoint_2620":{"entryPoint":3632,"id":2620,"parameterSlots":2,"returnSlots":1},"@mul_3422":{"entryPoint":3610,"id":3422,"parameterSlots":2,"returnSlots":1},"@priceFeed_294":{"entryPoint":3404,"id":294,"parameterSlots":0,"returnSlots":0},"@priceModels_328":{"entryPoint":2056,"id":328,"parameterSlots":0,"returnSlots":0},"@quote_551":{"entryPoint":2547,"id":551,"parameterSlots":4,"returnSlots":3},"@swap_609":{"entryPoint":614,"id":609,"parameterSlots":4,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":4776,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":4234,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":4892,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":6363,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_Route_$311_memory_ptr":{"entryPoint":4470,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4293,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":6880,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5128,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5543,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_address":{"entryPoint":5393,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_uint256t_struct$_Route_$311_memory_ptr":{"entryPoint":4559,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_uint256t_uint256":{"entryPoint":4943,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5314,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6903,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":5675,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":5658,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5066,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":5714,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":6575,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5497,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$4061_to_t_address_fromStack":{"entryPoint":5268,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IPriceFeed_$4080_to_t_address_fromStack":{"entryPoint":6077,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_PriceModel_$938_to_t_address":{"entryPoint":5857,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_44600962ecc58e3d7357a43883400403f194479f65246dca589e6d1b485101fb_to_t_string_memory_ptr_fromStack":{"entryPoint":6807,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5c725d7d0f4865d029c8848def0aef589f9ba45f338bc9706865a5c8377e5e52_to_t_string_memory_ptr_fromStack":{"entryPoint":6994,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Pool_$306_memory_ptr_to_t_struct$_Pool_$306_memory_ptr_fromStack":{"entryPoint":5874,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":5820,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4673,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":6276,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6436,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed":{"entryPoint":6681,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5514,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$4061__to_t_address__fromStack_reversed":{"entryPoint":5285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IPriceFeed_$4080__to_t_address__fromStack_reversed":{"entryPoint":6094,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_44600962ecc58e3d7357a43883400403f194479f65246dca589e6d1b485101fb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6846,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5c725d7d0f4865d029c8848def0aef589f9ba45f338bc9706865a5c8377e5e52__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7033,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Pool_$306_memory_ptr__to_t_struct$_Pool_$306_memory_ptr__fromStack_reversed":{"entryPoint":5960,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4690,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":5083,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7067,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5996,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":4439,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4136,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":4724,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":5642,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":5614,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":5701,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":5625,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":6558,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6749,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6217,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4188,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5485,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4156,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4257,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$4061_to_t_address":{"entryPoint":5248,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IPriceFeed_$4080_to_t_address":{"entryPoint":6057,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_PriceModel_$938_to_t_address":{"entryPoint":5837,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":5228,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":5188,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4385,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":5178,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":6481,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6170,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7112,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6123,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4338,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4719,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":4316,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":4771,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4151,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4146,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4321,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_44600962ecc58e3d7357a43883400403f194479f65246dca589e6d1b485101fb":{"entryPoint":6766,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5c725d7d0f4865d029c8848def0aef589f9ba45f338bc9706865a5c8377e5e52":{"entryPoint":6953,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4208,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6337,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4267,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:21553:15","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:15","statements":[{"nodeType":"YulAssignment","src":"57:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:15"},"nodeType":"YulFunctionCall","src":"67:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:15","type":""}],"src":"7:75:15"},{"body":{"nodeType":"YulBlock","src":"177:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:15"},"nodeType":"YulFunctionCall","src":"187:12:15"},"nodeType":"YulExpressionStatement","src":"187:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:15"},{"body":{"nodeType":"YulBlock","src":"300:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:15"},"nodeType":"YulFunctionCall","src":"310:12:15"},"nodeType":"YulExpressionStatement","src":"310:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:15"},{"body":{"nodeType":"YulBlock","src":"379:81:15","statements":[{"nodeType":"YulAssignment","src":"389:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:15"},"nodeType":"YulFunctionCall","src":"400:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:15","type":""}],"src":"334:126:15"},{"body":{"nodeType":"YulBlock","src":"511:51:15","statements":[{"nodeType":"YulAssignment","src":"521:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:15"},"nodeType":"YulFunctionCall","src":"532:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:15","type":""}],"src":"466:96:15"},{"body":{"nodeType":"YulBlock","src":"611:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:15"},"nodeType":"YulFunctionCall","src":"670:12:15"},"nodeType":"YulExpressionStatement","src":"670:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:15"},"nodeType":"YulFunctionCall","src":"641:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:15"},"nodeType":"YulFunctionCall","src":"631:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:15"},"nodeType":"YulFunctionCall","src":"624:43:15"},"nodeType":"YulIf","src":"621:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:15","type":""}],"src":"568:122:15"},{"body":{"nodeType":"YulBlock","src":"748:87:15","statements":[{"nodeType":"YulAssignment","src":"758:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:15"},"nodeType":"YulFunctionCall","src":"767:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:15"},"nodeType":"YulFunctionCall","src":"796:33:15"},"nodeType":"YulExpressionStatement","src":"796:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:15","type":""}],"src":"696:139:15"},{"body":{"nodeType":"YulBlock","src":"886:32:15","statements":[{"nodeType":"YulAssignment","src":"896:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:15","type":""}],"src":"841:77:15"},{"body":{"nodeType":"YulBlock","src":"967:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:15"},"nodeType":"YulFunctionCall","src":"1026:12:15"},"nodeType":"YulExpressionStatement","src":"1026:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:15"},"nodeType":"YulFunctionCall","src":"997:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:15"},"nodeType":"YulFunctionCall","src":"987:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:15"},"nodeType":"YulFunctionCall","src":"980:43:15"},"nodeType":"YulIf","src":"977:63:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:15","type":""}],"src":"924:122:15"},{"body":{"nodeType":"YulBlock","src":"1104:87:15","statements":[{"nodeType":"YulAssignment","src":"1114:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:15"},"nodeType":"YulFunctionCall","src":"1123:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:15"},"nodeType":"YulFunctionCall","src":"1152:33:15"},"nodeType":"YulExpressionStatement","src":"1152:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:15","type":""}],"src":"1052:139:15"},{"body":{"nodeType":"YulBlock","src":"1286:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1303:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1306:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1296:6:15"},"nodeType":"YulFunctionCall","src":"1296:12:15"},"nodeType":"YulExpressionStatement","src":"1296:12:15"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"1197:117:15"},{"body":{"nodeType":"YulBlock","src":"1368:54:15","statements":[{"nodeType":"YulAssignment","src":"1378:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1396:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1403:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1392:3:15"},"nodeType":"YulFunctionCall","src":"1392:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1412:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1408:3:15"},"nodeType":"YulFunctionCall","src":"1408:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1388:3:15"},"nodeType":"YulFunctionCall","src":"1388:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1378:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1351:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1361:6:15","type":""}],"src":"1320:102:15"},{"body":{"nodeType":"YulBlock","src":"1456:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1466:6:15"},"nodeType":"YulFunctionCall","src":"1466:88:15"},"nodeType":"YulExpressionStatement","src":"1466:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1570:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1573:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1563:6:15"},"nodeType":"YulFunctionCall","src":"1563:15:15"},"nodeType":"YulExpressionStatement","src":"1563:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1594:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1587:6:15"},"nodeType":"YulFunctionCall","src":"1587:15:15"},"nodeType":"YulExpressionStatement","src":"1587:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1428:180:15"},{"body":{"nodeType":"YulBlock","src":"1657:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1667:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1689:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1719:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1697:21:15"},"nodeType":"YulFunctionCall","src":"1697:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1685:3:15"},"nodeType":"YulFunctionCall","src":"1685:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1671:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1836:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1838:16:15"},"nodeType":"YulFunctionCall","src":"1838:18:15"},"nodeType":"YulExpressionStatement","src":"1838:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1779:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"1791:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1776:2:15"},"nodeType":"YulFunctionCall","src":"1776:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1815:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1827:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1812:2:15"},"nodeType":"YulFunctionCall","src":"1812:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1773:2:15"},"nodeType":"YulFunctionCall","src":"1773:62:15"},"nodeType":"YulIf","src":"1770:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1874:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1878:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1867:6:15"},"nodeType":"YulFunctionCall","src":"1867:22:15"},"nodeType":"YulExpressionStatement","src":"1867:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1643:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"1651:4:15","type":""}],"src":"1614:281:15"},{"body":{"nodeType":"YulBlock","src":"1942:88:15","statements":[{"nodeType":"YulAssignment","src":"1952:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1962:18:15"},"nodeType":"YulFunctionCall","src":"1962:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1952:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2011:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"2019:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1991:19:15"},"nodeType":"YulFunctionCall","src":"1991:33:15"},"nodeType":"YulExpressionStatement","src":"1991:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1926:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1935:6:15","type":""}],"src":"1901:129:15"},{"body":{"nodeType":"YulBlock","src":"2125:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2145:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2135:6:15"},"nodeType":"YulFunctionCall","src":"2135:12:15"},"nodeType":"YulExpressionStatement","src":"2135:12:15"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"2036:117:15"},{"body":{"nodeType":"YulBlock","src":"2269:504:15","statements":[{"body":{"nodeType":"YulBlock","src":"2313:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"2315:77:15"},"nodeType":"YulFunctionCall","src":"2315:79:15"},"nodeType":"YulExpressionStatement","src":"2315:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"2290:3:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2295:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2286:3:15"},"nodeType":"YulFunctionCall","src":"2286:19:15"},{"kind":"number","nodeType":"YulLiteral","src":"2307:4:15","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2282:3:15"},"nodeType":"YulFunctionCall","src":"2282:30:15"},"nodeType":"YulIf","src":"2279:117:15"},{"nodeType":"YulAssignment","src":"2405:30:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2430:4:15","type":"","value":"0x40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2414:15:15"},"nodeType":"YulFunctionCall","src":"2414:21:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2405:5:15"}]},{"nodeType":"YulBlock","src":"2445:155:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2485:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2499:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2489:6:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2525:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2532:4:15","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2521:3:15"},"nodeType":"YulFunctionCall","src":"2521:16:15"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2564:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2575:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2560:3:15"},"nodeType":"YulFunctionCall","src":"2560:22:15"},{"name":"end","nodeType":"YulIdentifier","src":"2584:3:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2539:20:15"},"nodeType":"YulFunctionCall","src":"2539:49:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2514:6:15"},"nodeType":"YulFunctionCall","src":"2514:75:15"},"nodeType":"YulExpressionStatement","src":"2514:75:15"}]},{"nodeType":"YulBlock","src":"2610:156:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2650:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2664:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2654:6:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2691:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2698:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2687:3:15"},"nodeType":"YulFunctionCall","src":"2687:16:15"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2730:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2741:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2726:3:15"},"nodeType":"YulFunctionCall","src":"2726:22:15"},{"name":"end","nodeType":"YulIdentifier","src":"2750:3:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2705:20:15"},"nodeType":"YulFunctionCall","src":"2705:49:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2680:6:15"},"nodeType":"YulFunctionCall","src":"2680:75:15"},"nodeType":"YulExpressionStatement","src":"2680:75:15"}]}]},"name":"abi_decode_t_struct$_Route_$311_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2244:9:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2255:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2263:5:15","type":""}],"src":"2192:581:15"},{"body":{"nodeType":"YulBlock","src":"2918:670:15","statements":[{"body":{"nodeType":"YulBlock","src":"2965:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2967:77:15"},"nodeType":"YulFunctionCall","src":"2967:79:15"},"nodeType":"YulExpressionStatement","src":"2967:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2939:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2948:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2935:3:15"},"nodeType":"YulFunctionCall","src":"2935:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2960:3:15","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2931:3:15"},"nodeType":"YulFunctionCall","src":"2931:33:15"},"nodeType":"YulIf","src":"2928:120:15"},{"nodeType":"YulBlock","src":"3058:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3073:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3087:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3077:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3102:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3137:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3148:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3133:3:15"},"nodeType":"YulFunctionCall","src":"3133:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3157:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3112:20:15"},"nodeType":"YulFunctionCall","src":"3112:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3102:6:15"}]}]},{"nodeType":"YulBlock","src":"3185:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3200:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3214:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3204:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3230:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3265:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3276:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3261:3:15"},"nodeType":"YulFunctionCall","src":"3261:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3285:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3240:20:15"},"nodeType":"YulFunctionCall","src":"3240:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3230:6:15"}]}]},{"nodeType":"YulBlock","src":"3313:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3328:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3342:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3332:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3358:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3393:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3404:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3389:3:15"},"nodeType":"YulFunctionCall","src":"3389:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3413:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3368:20:15"},"nodeType":"YulFunctionCall","src":"3368:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3358:6:15"}]}]},{"nodeType":"YulBlock","src":"3441:140:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3456:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3470:2:15","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3460:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3486:85:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3543:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3554:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3539:3:15"},"nodeType":"YulFunctionCall","src":"3539:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3563:7:15"}],"functionName":{"name":"abi_decode_t_struct$_Route_$311_memory_ptr","nodeType":"YulIdentifier","src":"3496:42:15"},"nodeType":"YulFunctionCall","src":"3496:75:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3486:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_struct$_Route_$311_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2864:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2875:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2887:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2895:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2903:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2911:6:15","type":""}],"src":"2779:809:15"},{"body":{"nodeType":"YulBlock","src":"3659:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3676:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3699:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3681:17:15"},"nodeType":"YulFunctionCall","src":"3681:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3669:6:15"},"nodeType":"YulFunctionCall","src":"3669:37:15"},"nodeType":"YulExpressionStatement","src":"3669:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3647:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3654:3:15","type":""}],"src":"3594:118:15"},{"body":{"nodeType":"YulBlock","src":"3816:124:15","statements":[{"nodeType":"YulAssignment","src":"3826:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3838:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3849:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3834:3:15"},"nodeType":"YulFunctionCall","src":"3834:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3826:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3906:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3919:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3930:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3915:3:15"},"nodeType":"YulFunctionCall","src":"3915:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3862:43:15"},"nodeType":"YulFunctionCall","src":"3862:71:15"},"nodeType":"YulExpressionStatement","src":"3862:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3788:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3800:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3811:4:15","type":""}],"src":"3718:222:15"},{"body":{"nodeType":"YulBlock","src":"4035:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4052:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4055:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4045:6:15"},"nodeType":"YulFunctionCall","src":"4045:12:15"},"nodeType":"YulExpressionStatement","src":"4045:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3946:117:15"},{"body":{"nodeType":"YulBlock","src":"4151:229:15","statements":[{"body":{"nodeType":"YulBlock","src":"4256:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4258:16:15"},"nodeType":"YulFunctionCall","src":"4258:18:15"},"nodeType":"YulExpressionStatement","src":"4258:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4228:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4236:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4225:2:15"},"nodeType":"YulFunctionCall","src":"4225:30:15"},"nodeType":"YulIf","src":"4222:56:15"},{"nodeType":"YulAssignment","src":"4288:25:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4300:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4308:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4296:3:15"},"nodeType":"YulFunctionCall","src":"4296:17:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4288:4:15"}]},{"nodeType":"YulAssignment","src":"4350:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4362:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"4368:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4358:3:15"},"nodeType":"YulFunctionCall","src":"4358:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4350:4:15"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4135:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4146:4:15","type":""}],"src":"4069:311:15"},{"body":{"nodeType":"YulBlock","src":"4475:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4492:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4495:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4485:6:15"},"nodeType":"YulFunctionCall","src":"4485:12:15"},"nodeType":"YulExpressionStatement","src":"4485:12:15"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"4386:117:15"},{"body":{"nodeType":"YulBlock","src":"4628:608:15","statements":[{"nodeType":"YulAssignment","src":"4638:90:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4720:6:15"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4663:56:15"},"nodeType":"YulFunctionCall","src":"4663:64:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4647:15:15"},"nodeType":"YulFunctionCall","src":"4647:81:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4638:5:15"}]},{"nodeType":"YulVariableDeclaration","src":"4737:16:15","value":{"name":"array","nodeType":"YulIdentifier","src":"4748:5:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4741:3:15","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4770:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"4777:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4763:6:15"},"nodeType":"YulFunctionCall","src":"4763:21:15"},"nodeType":"YulExpressionStatement","src":"4763:21:15"},{"nodeType":"YulAssignment","src":"4793:23:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4804:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4811:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4800:3:15"},"nodeType":"YulFunctionCall","src":"4800:16:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4793:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"4826:44:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4844:6:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4856:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4864:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4852:3:15"},"nodeType":"YulFunctionCall","src":"4852:17:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4840:3:15"},"nodeType":"YulFunctionCall","src":"4840:30:15"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"4830:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4898:103:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"4912:77:15"},"nodeType":"YulFunctionCall","src":"4912:79:15"},"nodeType":"YulExpressionStatement","src":"4912:79:15"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"4885:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"4893:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4882:2:15"},"nodeType":"YulFunctionCall","src":"4882:15:15"},"nodeType":"YulIf","src":"4879:122:15"},{"body":{"nodeType":"YulBlock","src":"5086:144:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5101:21:15","value":{"name":"src","nodeType":"YulIdentifier","src":"5119:3:15"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"5105:10:15","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5143:3:15"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"5169:10:15"},{"name":"end","nodeType":"YulIdentifier","src":"5181:3:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5148:20:15"},"nodeType":"YulFunctionCall","src":"5148:37:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5136:6:15"},"nodeType":"YulFunctionCall","src":"5136:50:15"},"nodeType":"YulExpressionStatement","src":"5136:50:15"},{"nodeType":"YulAssignment","src":"5199:21:15","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5210:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5215:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:15"},"nodeType":"YulFunctionCall","src":"5206:14:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5199:3:15"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5039:3:15"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5044:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5036:2:15"},"nodeType":"YulFunctionCall","src":"5036:15:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5052:25:15","statements":[{"nodeType":"YulAssignment","src":"5054:21:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5065:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5070:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5061:3:15"},"nodeType":"YulFunctionCall","src":"5061:14:15"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5054:3:15"}]}]},"pre":{"nodeType":"YulBlock","src":"5014:21:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5016:17:15","value":{"name":"offset","nodeType":"YulIdentifier","src":"5027:6:15"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5020:3:15","type":""}]}]},"src":"5010:220:15"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4598:6:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"4606:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"4614:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4622:5:15","type":""}],"src":"4526:710:15"},{"body":{"nodeType":"YulBlock","src":"5336:293:15","statements":[{"body":{"nodeType":"YulBlock","src":"5385:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5387:77:15"},"nodeType":"YulFunctionCall","src":"5387:79:15"},"nodeType":"YulExpressionStatement","src":"5387:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5364:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"5372:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5360:3:15"},"nodeType":"YulFunctionCall","src":"5360:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"5379:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5356:3:15"},"nodeType":"YulFunctionCall","src":"5356:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5349:6:15"},"nodeType":"YulFunctionCall","src":"5349:35:15"},"nodeType":"YulIf","src":"5346:122:15"},{"nodeType":"YulVariableDeclaration","src":"5477:34:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5504:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5491:12:15"},"nodeType":"YulFunctionCall","src":"5491:20:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5481:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5520:103:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5596:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"5604:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5592:3:15"},"nodeType":"YulFunctionCall","src":"5592:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"5611:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"5619:3:15"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5529:62:15"},"nodeType":"YulFunctionCall","src":"5529:94:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5520:5:15"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5314:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"5322:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5330:5:15","type":""}],"src":"5259:370:15"},{"body":{"nodeType":"YulBlock","src":"5760:704:15","statements":[{"body":{"nodeType":"YulBlock","src":"5806:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5808:77:15"},"nodeType":"YulFunctionCall","src":"5808:79:15"},"nodeType":"YulExpressionStatement","src":"5808:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5781:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5790:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5777:3:15"},"nodeType":"YulFunctionCall","src":"5777:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"5802:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5773:3:15"},"nodeType":"YulFunctionCall","src":"5773:32:15"},"nodeType":"YulIf","src":"5770:119:15"},{"nodeType":"YulBlock","src":"5899:302:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5914:45:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5945:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5956:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5941:3:15"},"nodeType":"YulFunctionCall","src":"5941:17:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5928:12:15"},"nodeType":"YulFunctionCall","src":"5928:31:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5918:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"6006:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6008:77:15"},"nodeType":"YulFunctionCall","src":"6008:79:15"},"nodeType":"YulExpressionStatement","src":"6008:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5978:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"5986:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5975:2:15"},"nodeType":"YulFunctionCall","src":"5975:30:15"},"nodeType":"YulIf","src":"5972:117:15"},{"nodeType":"YulAssignment","src":"6103:88:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6163:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6174:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6159:3:15"},"nodeType":"YulFunctionCall","src":"6159:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6183:7:15"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6113:45:15"},"nodeType":"YulFunctionCall","src":"6113:78:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6103:6:15"}]}]},{"nodeType":"YulBlock","src":"6211:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6226:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6240:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6230:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6256:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6291:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6302:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6287:3:15"},"nodeType":"YulFunctionCall","src":"6287:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6311:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6266:20:15"},"nodeType":"YulFunctionCall","src":"6266:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6256:6:15"}]}]},{"nodeType":"YulBlock","src":"6339:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6354:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6368:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6358:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6384:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6419:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6430:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6415:3:15"},"nodeType":"YulFunctionCall","src":"6415:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6439:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6394:20:15"},"nodeType":"YulFunctionCall","src":"6394:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6384:6:15"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5714:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5725:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5737:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5745:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5753:6:15","type":""}],"src":"5635:829:15"},{"body":{"nodeType":"YulBlock","src":"6535:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6552:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6575:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6557:17:15"},"nodeType":"YulFunctionCall","src":"6557:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6545:6:15"},"nodeType":"YulFunctionCall","src":"6545:37:15"},"nodeType":"YulExpressionStatement","src":"6545:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6523:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6530:3:15","type":""}],"src":"6470:118:15"},{"body":{"nodeType":"YulBlock","src":"6720:206:15","statements":[{"nodeType":"YulAssignment","src":"6730:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6742:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6753:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6738:3:15"},"nodeType":"YulFunctionCall","src":"6738:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6730:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6810:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6823:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6834:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6819:3:15"},"nodeType":"YulFunctionCall","src":"6819:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6766:43:15"},"nodeType":"YulFunctionCall","src":"6766:71:15"},"nodeType":"YulExpressionStatement","src":"6766:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6891:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6904:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6915:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6900:3:15"},"nodeType":"YulFunctionCall","src":"6900:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6847:43:15"},"nodeType":"YulFunctionCall","src":"6847:72:15"},"nodeType":"YulExpressionStatement","src":"6847:72:15"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6684:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6696:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6704:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6715:4:15","type":""}],"src":"6594:332:15"},{"body":{"nodeType":"YulBlock","src":"6998:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"7044:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7046:77:15"},"nodeType":"YulFunctionCall","src":"7046:79:15"},"nodeType":"YulExpressionStatement","src":"7046:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7019:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7028:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7015:3:15"},"nodeType":"YulFunctionCall","src":"7015:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"7040:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7011:3:15"},"nodeType":"YulFunctionCall","src":"7011:32:15"},"nodeType":"YulIf","src":"7008:119:15"},{"nodeType":"YulBlock","src":"7137:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7152:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7166:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7156:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7181:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7216:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7227:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7212:3:15"},"nodeType":"YulFunctionCall","src":"7212:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7236:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7191:20:15"},"nodeType":"YulFunctionCall","src":"7191:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7181:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6968:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6979:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6991:6:15","type":""}],"src":"6932:329:15"},{"body":{"nodeType":"YulBlock","src":"7299:28:15","statements":[{"nodeType":"YulAssignment","src":"7309:12:15","value":{"name":"value","nodeType":"YulIdentifier","src":"7316:5:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7309:3:15"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7285:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7295:3:15","type":""}],"src":"7267:60:15"},{"body":{"nodeType":"YulBlock","src":"7393:82:15","statements":[{"nodeType":"YulAssignment","src":"7403:66:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7461:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7443:17:15"},"nodeType":"YulFunctionCall","src":"7443:24:15"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"7434:8:15"},"nodeType":"YulFunctionCall","src":"7434:34:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7416:17:15"},"nodeType":"YulFunctionCall","src":"7416:53:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7403:9:15"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7373:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7383:9:15","type":""}],"src":"7333:142:15"},{"body":{"nodeType":"YulBlock","src":"7541:66:15","statements":[{"nodeType":"YulAssignment","src":"7551:50:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7595:5:15"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"7564:30:15"},"nodeType":"YulFunctionCall","src":"7564:37:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7551:9:15"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7521:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7531:9:15","type":""}],"src":"7481:126:15"},{"body":{"nodeType":"YulBlock","src":"7688:66:15","statements":[{"nodeType":"YulAssignment","src":"7698:50:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7742:5:15"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"7711:30:15"},"nodeType":"YulFunctionCall","src":"7711:37:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7698:9:15"}]}]},"name":"convert_t_contract$_IERC20_$4061_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7668:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7678:9:15","type":""}],"src":"7613:141:15"},{"body":{"nodeType":"YulBlock","src":"7840:81:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7857:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7908:5:15"}],"functionName":{"name":"convert_t_contract$_IERC20_$4061_to_t_address","nodeType":"YulIdentifier","src":"7862:45:15"},"nodeType":"YulFunctionCall","src":"7862:52:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7850:6:15"},"nodeType":"YulFunctionCall","src":"7850:65:15"},"nodeType":"YulExpressionStatement","src":"7850:65:15"}]},"name":"abi_encode_t_contract$_IERC20_$4061_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7828:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7835:3:15","type":""}],"src":"7760:161:15"},{"body":{"nodeType":"YulBlock","src":"8040:139:15","statements":[{"nodeType":"YulAssignment","src":"8050:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8062:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8073:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8058:3:15"},"nodeType":"YulFunctionCall","src":"8058:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8050:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8145:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8158:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8169:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8154:3:15"},"nodeType":"YulFunctionCall","src":"8154:17:15"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$4061_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8086:58:15"},"nodeType":"YulFunctionCall","src":"8086:86:15"},"nodeType":"YulExpressionStatement","src":"8086:86:15"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$4061__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8012:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8024:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8035:4:15","type":""}],"src":"7927:252:15"},{"body":{"nodeType":"YulBlock","src":"8251:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"8297:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8299:77:15"},"nodeType":"YulFunctionCall","src":"8299:79:15"},"nodeType":"YulExpressionStatement","src":"8299:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8272:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"8281:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8268:3:15"},"nodeType":"YulFunctionCall","src":"8268:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"8293:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8264:3:15"},"nodeType":"YulFunctionCall","src":"8264:32:15"},"nodeType":"YulIf","src":"8261:119:15"},{"nodeType":"YulBlock","src":"8390:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"8405:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"8419:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8409:6:15","type":""}]},{"nodeType":"YulAssignment","src":"8434:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8469:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"8480:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8465:3:15"},"nodeType":"YulFunctionCall","src":"8465:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8489:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8444:20:15"},"nodeType":"YulFunctionCall","src":"8444:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8434:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8221:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8232:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8244:6:15","type":""}],"src":"8185:329:15"},{"body":{"nodeType":"YulBlock","src":"8618:124:15","statements":[{"nodeType":"YulAssignment","src":"8628:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8640:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8651:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8636:3:15"},"nodeType":"YulFunctionCall","src":"8636:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8628:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8708:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8721:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8732:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8717:3:15"},"nodeType":"YulFunctionCall","src":"8717:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8664:43:15"},"nodeType":"YulFunctionCall","src":"8664:71:15"},"nodeType":"YulExpressionStatement","src":"8664:71:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8590:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8602:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8613:4:15","type":""}],"src":"8520:222:15"},{"body":{"nodeType":"YulBlock","src":"8848:519:15","statements":[{"body":{"nodeType":"YulBlock","src":"8894:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8896:77:15"},"nodeType":"YulFunctionCall","src":"8896:79:15"},"nodeType":"YulExpressionStatement","src":"8896:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8869:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"8878:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8865:3:15"},"nodeType":"YulFunctionCall","src":"8865:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"8890:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8861:3:15"},"nodeType":"YulFunctionCall","src":"8861:32:15"},"nodeType":"YulIf","src":"8858:119:15"},{"nodeType":"YulBlock","src":"8987:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9002:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"9016:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9006:6:15","type":""}]},{"nodeType":"YulAssignment","src":"9031:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9066:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"9077:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9062:3:15"},"nodeType":"YulFunctionCall","src":"9062:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9086:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9041:20:15"},"nodeType":"YulFunctionCall","src":"9041:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9031:6:15"}]}]},{"nodeType":"YulBlock","src":"9114:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9129:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"9143:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9133:6:15","type":""}]},{"nodeType":"YulAssignment","src":"9159:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9194:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"9205:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9190:3:15"},"nodeType":"YulFunctionCall","src":"9190:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9214:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9169:20:15"},"nodeType":"YulFunctionCall","src":"9169:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9159:6:15"}]}]},{"nodeType":"YulBlock","src":"9242:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9257:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"9271:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9261:6:15","type":""}]},{"nodeType":"YulAssignment","src":"9287:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9322:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"9333:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9318:3:15"},"nodeType":"YulFunctionCall","src":"9318:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9342:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9297:20:15"},"nodeType":"YulFunctionCall","src":"9297:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9287:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8802:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8813:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8825:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8833:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8841:6:15","type":""}],"src":"8748:619:15"},{"body":{"nodeType":"YulBlock","src":"9415:48:15","statements":[{"nodeType":"YulAssignment","src":"9425:32:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9450:5:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9443:6:15"},"nodeType":"YulFunctionCall","src":"9443:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9436:6:15"},"nodeType":"YulFunctionCall","src":"9436:21:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9425:7:15"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9397:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9407:7:15","type":""}],"src":"9373:90:15"},{"body":{"nodeType":"YulBlock","src":"9528:50:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9545:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9565:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9550:14:15"},"nodeType":"YulFunctionCall","src":"9550:21:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9538:6:15"},"nodeType":"YulFunctionCall","src":"9538:34:15"},"nodeType":"YulExpressionStatement","src":"9538:34:15"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9516:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9523:3:15","type":""}],"src":"9469:109:15"},{"body":{"nodeType":"YulBlock","src":"9676:118:15","statements":[{"nodeType":"YulAssignment","src":"9686:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9698:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9709:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9694:3:15"},"nodeType":"YulFunctionCall","src":"9694:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9686:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9760:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9773:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9784:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9769:3:15"},"nodeType":"YulFunctionCall","src":"9769:17:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"9722:37:15"},"nodeType":"YulFunctionCall","src":"9722:65:15"},"nodeType":"YulExpressionStatement","src":"9722:65:15"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9648:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9660:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9671:4:15","type":""}],"src":"9584:210:15"},{"body":{"nodeType":"YulBlock","src":"9883:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"9929:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9931:77:15"},"nodeType":"YulFunctionCall","src":"9931:79:15"},"nodeType":"YulExpressionStatement","src":"9931:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9904:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"9913:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9900:3:15"},"nodeType":"YulFunctionCall","src":"9900:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"9925:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9896:3:15"},"nodeType":"YulFunctionCall","src":"9896:32:15"},"nodeType":"YulIf","src":"9893:119:15"},{"nodeType":"YulBlock","src":"10022:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"10037:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"10051:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10041:6:15","type":""}]},{"nodeType":"YulAssignment","src":"10066:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10101:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"10112:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10097:3:15"},"nodeType":"YulFunctionCall","src":"10097:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10121:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10076:20:15"},"nodeType":"YulFunctionCall","src":"10076:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10066:6:15"}]}]},{"nodeType":"YulBlock","src":"10149:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"10164:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"10178:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10168:6:15","type":""}]},{"nodeType":"YulAssignment","src":"10194:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10229:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"10240:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10225:3:15"},"nodeType":"YulFunctionCall","src":"10225:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10249:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10204:20:15"},"nodeType":"YulFunctionCall","src":"10204:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10194:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9845:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9856:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9868:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9876:6:15","type":""}],"src":"9800:474:15"},{"body":{"nodeType":"YulBlock","src":"10354:40:15","statements":[{"nodeType":"YulAssignment","src":"10365:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10381:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10375:5:15"},"nodeType":"YulFunctionCall","src":"10375:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10365:6:15"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10337:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10347:6:15","type":""}],"src":"10280:114:15"},{"body":{"nodeType":"YulBlock","src":"10501:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10518:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"10523:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10511:6:15"},"nodeType":"YulFunctionCall","src":"10511:19:15"},"nodeType":"YulExpressionStatement","src":"10511:19:15"},{"nodeType":"YulAssignment","src":"10539:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10558:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10563:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10554:3:15"},"nodeType":"YulFunctionCall","src":"10554:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10539:11:15"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10473:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"10478:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10489:11:15","type":""}],"src":"10400:174:15"},{"body":{"nodeType":"YulBlock","src":"10652:60:15","statements":[{"nodeType":"YulAssignment","src":"10662:11:15","value":{"name":"ptr","nodeType":"YulIdentifier","src":"10670:3:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10662:4:15"}]},{"nodeType":"YulAssignment","src":"10683:22:15","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10695:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10700:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10691:3:15"},"nodeType":"YulFunctionCall","src":"10691:14:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10683:4:15"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10639:3:15","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"10647:4:15","type":""}],"src":"10580:132:15"},{"body":{"nodeType":"YulBlock","src":"10773:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10790:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10813:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"10795:17:15"},"nodeType":"YulFunctionCall","src":"10795:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10783:6:15"},"nodeType":"YulFunctionCall","src":"10783:37:15"},"nodeType":"YulExpressionStatement","src":"10783:37:15"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10761:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10768:3:15","type":""}],"src":"10718:108:15"},{"body":{"nodeType":"YulBlock","src":"10912:99:15","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10956:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"10964:3:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"10922:33:15"},"nodeType":"YulFunctionCall","src":"10922:46:15"},"nodeType":"YulExpressionStatement","src":"10922:46:15"},{"nodeType":"YulAssignment","src":"10977:28:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10995:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11000:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10991:3:15"},"nodeType":"YulFunctionCall","src":"10991:14:15"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"10977:10:15"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"10885:6:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10893:3:15","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"10901:10:15","type":""}],"src":"10832:179:15"},{"body":{"nodeType":"YulBlock","src":"11092:38:15","statements":[{"nodeType":"YulAssignment","src":"11102:22:15","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"11114:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11119:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11110:3:15"},"nodeType":"YulFunctionCall","src":"11110:14:15"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"11102:4:15"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11079:3:15","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"11087:4:15","type":""}],"src":"11017:113:15"},{"body":{"nodeType":"YulBlock","src":"11280:598:15","statements":[{"nodeType":"YulVariableDeclaration","src":"11290:68:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11352:5:15"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11304:47:15"},"nodeType":"YulFunctionCall","src":"11304:54:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11294:6:15","type":""}]},{"nodeType":"YulAssignment","src":"11367:83:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11438:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"11443:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11374:63:15"},"nodeType":"YulFunctionCall","src":"11374:76:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11367:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"11459:71:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11524:5:15"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11474:49:15"},"nodeType":"YulFunctionCall","src":"11474:56:15"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"11463:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11539:21:15","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"11553:7:15"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"11543:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"11629:224:15","statements":[{"nodeType":"YulVariableDeclaration","src":"11643:34:15","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11670:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11664:5:15"},"nodeType":"YulFunctionCall","src":"11664:13:15"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"11647:13:15","type":""}]},{"nodeType":"YulAssignment","src":"11690:70:15","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"11741:13:15"},{"name":"pos","nodeType":"YulIdentifier","src":"11756:3:15"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"11697:43:15"},"nodeType":"YulFunctionCall","src":"11697:63:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11690:3:15"}]},{"nodeType":"YulAssignment","src":"11773:70:15","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11836:6:15"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11783:52:15"},"nodeType":"YulFunctionCall","src":"11783:60:15"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11773:6:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11591:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"11594:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11588:2:15"},"nodeType":"YulFunctionCall","src":"11588:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11602:18:15","statements":[{"nodeType":"YulAssignment","src":"11604:14:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11613:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"11616:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11609:3:15"},"nodeType":"YulFunctionCall","src":"11609:9:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11604:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"11573:14:15","statements":[{"nodeType":"YulVariableDeclaration","src":"11575:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"11584:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11579:1:15","type":""}]}]},"src":"11569:284:15"},{"nodeType":"YulAssignment","src":"11862:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"11869:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11862:3:15"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11259:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11266:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11275:3:15","type":""}],"src":"11166:712:15"},{"body":{"nodeType":"YulBlock","src":"11939:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11956:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11979:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11961:17:15"},"nodeType":"YulFunctionCall","src":"11961:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11949:6:15"},"nodeType":"YulFunctionCall","src":"11949:37:15"},"nodeType":"YulExpressionStatement","src":"11949:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11927:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11934:3:15","type":""}],"src":"11884:108:15"},{"body":{"nodeType":"YulBlock","src":"12076:66:15","statements":[{"nodeType":"YulAssignment","src":"12086:50:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12130:5:15"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"12099:30:15"},"nodeType":"YulFunctionCall","src":"12099:37:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12086:9:15"}]}]},"name":"convert_t_contract$_PriceModel_$938_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12056:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12066:9:15","type":""}],"src":"11998:144:15"},{"body":{"nodeType":"YulBlock","src":"12221:84:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12238:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12292:5:15"}],"functionName":{"name":"convert_t_contract$_PriceModel_$938_to_t_address","nodeType":"YulIdentifier","src":"12243:48:15"},"nodeType":"YulFunctionCall","src":"12243:55:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12231:6:15"},"nodeType":"YulFunctionCall","src":"12231:68:15"},"nodeType":"YulExpressionStatement","src":"12231:68:15"}]},"name":"abi_encode_t_contract$_PriceModel_$938_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12209:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12216:3:15","type":""}],"src":"12148:157:15"},{"body":{"nodeType":"YulBlock","src":"12487:730:15","statements":[{"nodeType":"YulVariableDeclaration","src":"12497:26:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12513:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"12518:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12509:3:15"},"nodeType":"YulFunctionCall","src":"12509:14:15"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"12501:4:15","type":""}]},{"nodeType":"YulBlock","src":"12533:275:15","statements":[{"nodeType":"YulVariableDeclaration","src":"12578:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12608:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"12615:4:15","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12604:3:15"},"nodeType":"YulFunctionCall","src":"12604:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12598:5:15"},"nodeType":"YulFunctionCall","src":"12598:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12582:12:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12646:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"12651:4:15","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12642:3:15"},"nodeType":"YulFunctionCall","src":"12642:14:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12662:4:15"},{"name":"pos","nodeType":"YulIdentifier","src":"12668:3:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12658:3:15"},"nodeType":"YulFunctionCall","src":"12658:14:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12635:6:15"},"nodeType":"YulFunctionCall","src":"12635:38:15"},"nodeType":"YulExpressionStatement","src":"12635:38:15"},{"nodeType":"YulAssignment","src":"12686:111:15","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12778:12:15"},{"name":"tail","nodeType":"YulIdentifier","src":"12792:4:15"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12694:83:15"},"nodeType":"YulFunctionCall","src":"12694:103:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12686:4:15"}]}]},{"nodeType":"YulBlock","src":"12818:174:15","statements":[{"nodeType":"YulVariableDeclaration","src":"12863:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12893:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"12900:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12889:3:15"},"nodeType":"YulFunctionCall","src":"12889:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12883:5:15"},"nodeType":"YulFunctionCall","src":"12883:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12867:12:15","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12953:12:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12971:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"12976:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12967:3:15"},"nodeType":"YulFunctionCall","src":"12967:14:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12919:33:15"},"nodeType":"YulFunctionCall","src":"12919:63:15"},"nodeType":"YulExpressionStatement","src":"12919:63:15"}]},{"nodeType":"YulBlock","src":"13002:188:15","statements":[{"nodeType":"YulVariableDeclaration","src":"13043:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13073:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"13080:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13069:3:15"},"nodeType":"YulFunctionCall","src":"13069:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13063:5:15"},"nodeType":"YulFunctionCall","src":"13063:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13047:12:15","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13151:12:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13169:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"13174:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13165:3:15"},"nodeType":"YulFunctionCall","src":"13165:14:15"}],"functionName":{"name":"abi_encode_t_contract$_PriceModel_$938_to_t_address","nodeType":"YulIdentifier","src":"13099:51:15"},"nodeType":"YulFunctionCall","src":"13099:81:15"},"nodeType":"YulExpressionStatement","src":"13099:81:15"}]},{"nodeType":"YulAssignment","src":"13200:11:15","value":{"name":"tail","nodeType":"YulIdentifier","src":"13207:4:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13200:3:15"}]}]},"name":"abi_encode_t_struct$_Pool_$306_memory_ptr_to_t_struct$_Pool_$306_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12466:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12473:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12482:3:15","type":""}],"src":"12371:846:15"},{"body":{"nodeType":"YulBlock","src":"13363:217:15","statements":[{"nodeType":"YulAssignment","src":"13373:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13385:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13396:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13381:3:15"},"nodeType":"YulFunctionCall","src":"13381:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13373:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13420:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13431:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13416:3:15"},"nodeType":"YulFunctionCall","src":"13416:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13439:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13445:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13435:3:15"},"nodeType":"YulFunctionCall","src":"13435:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13409:6:15"},"nodeType":"YulFunctionCall","src":"13409:47:15"},"nodeType":"YulExpressionStatement","src":"13409:47:15"},{"nodeType":"YulAssignment","src":"13465:108:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13559:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"13568:4:15"}],"functionName":{"name":"abi_encode_t_struct$_Pool_$306_memory_ptr_to_t_struct$_Pool_$306_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13473:85:15"},"nodeType":"YulFunctionCall","src":"13473:100:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13465:4:15"}]}]},"name":"abi_encode_tuple_t_struct$_Pool_$306_memory_ptr__to_t_struct$_Pool_$306_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13335:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13347:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13358:4:15","type":""}],"src":"13223:357:15"},{"body":{"nodeType":"YulBlock","src":"13740:288:15","statements":[{"nodeType":"YulAssignment","src":"13750:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13762:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13773:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13758:3:15"},"nodeType":"YulFunctionCall","src":"13758:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13750:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13830:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13843:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13854:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13839:3:15"},"nodeType":"YulFunctionCall","src":"13839:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13786:43:15"},"nodeType":"YulFunctionCall","src":"13786:71:15"},"nodeType":"YulExpressionStatement","src":"13786:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13911:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13924:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13935:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13920:3:15"},"nodeType":"YulFunctionCall","src":"13920:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13867:43:15"},"nodeType":"YulFunctionCall","src":"13867:72:15"},"nodeType":"YulExpressionStatement","src":"13867:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13993:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14006:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14017:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14002:3:15"},"nodeType":"YulFunctionCall","src":"14002:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13949:43:15"},"nodeType":"YulFunctionCall","src":"13949:72:15"},"nodeType":"YulExpressionStatement","src":"13949:72:15"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13696:9:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13708:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13716:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13724:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13735:4:15","type":""}],"src":"13586:442:15"},{"body":{"nodeType":"YulBlock","src":"14113:66:15","statements":[{"nodeType":"YulAssignment","src":"14123:50:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14167:5:15"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"14136:30:15"},"nodeType":"YulFunctionCall","src":"14136:37:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"14123:9:15"}]}]},"name":"convert_t_contract$_IPriceFeed_$4080_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14093:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"14103:9:15","type":""}],"src":"14034:145:15"},{"body":{"nodeType":"YulBlock","src":"14269:85:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14286:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14341:5:15"}],"functionName":{"name":"convert_t_contract$_IPriceFeed_$4080_to_t_address","nodeType":"YulIdentifier","src":"14291:49:15"},"nodeType":"YulFunctionCall","src":"14291:56:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14279:6:15"},"nodeType":"YulFunctionCall","src":"14279:69:15"},"nodeType":"YulExpressionStatement","src":"14279:69:15"}]},"name":"abi_encode_t_contract$_IPriceFeed_$4080_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14257:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14264:3:15","type":""}],"src":"14185:169:15"},{"body":{"nodeType":"YulBlock","src":"14477:143:15","statements":[{"nodeType":"YulAssignment","src":"14487:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14499:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14510:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14495:3:15"},"nodeType":"YulFunctionCall","src":"14495:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14487:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14586:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14599:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14610:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14595:3:15"},"nodeType":"YulFunctionCall","src":"14595:17:15"}],"functionName":{"name":"abi_encode_t_contract$_IPriceFeed_$4080_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14523:62:15"},"nodeType":"YulFunctionCall","src":"14523:90:15"},"nodeType":"YulExpressionStatement","src":"14523:90:15"}]},"name":"abi_encode_tuple_t_contract$_IPriceFeed_$4080__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14449:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14461:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14472:4:15","type":""}],"src":"14360:260:15"},{"body":{"nodeType":"YulBlock","src":"14654:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14671:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14674:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14664:6:15"},"nodeType":"YulFunctionCall","src":"14664:88:15"},"nodeType":"YulExpressionStatement","src":"14664:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14768:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14771:4:15","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14761:6:15"},"nodeType":"YulFunctionCall","src":"14761:15:15"},"nodeType":"YulExpressionStatement","src":"14761:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14792:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14795:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14785:6:15"},"nodeType":"YulFunctionCall","src":"14785:15:15"},"nodeType":"YulExpressionStatement","src":"14785:15:15"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"14626:180:15"},{"body":{"nodeType":"YulBlock","src":"14840:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14857:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14860:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14850:6:15"},"nodeType":"YulFunctionCall","src":"14850:88:15"},"nodeType":"YulExpressionStatement","src":"14850:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14954:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14957:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14947:6:15"},"nodeType":"YulFunctionCall","src":"14947:15:15"},"nodeType":"YulExpressionStatement","src":"14947:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14978:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14981:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14971:6:15"},"nodeType":"YulFunctionCall","src":"14971:15:15"},"nodeType":"YulExpressionStatement","src":"14971:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14812:180:15"},{"body":{"nodeType":"YulBlock","src":"15043:149:15","statements":[{"nodeType":"YulAssignment","src":"15053:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15076:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15058:17:15"},"nodeType":"YulFunctionCall","src":"15058:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15053:1:15"}]},{"nodeType":"YulAssignment","src":"15087:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15110:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15092:17:15"},"nodeType":"YulFunctionCall","src":"15092:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15087:1:15"}]},{"nodeType":"YulAssignment","src":"15121:17:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15133:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"15136:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15129:3:15"},"nodeType":"YulFunctionCall","src":"15129:9:15"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"15121:4:15"}]},{"body":{"nodeType":"YulBlock","src":"15163:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15165:16:15"},"nodeType":"YulFunctionCall","src":"15165:18:15"},"nodeType":"YulExpressionStatement","src":"15165:18:15"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"15154:4:15"},{"name":"x","nodeType":"YulIdentifier","src":"15160:1:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15151:2:15"},"nodeType":"YulFunctionCall","src":"15151:11:15"},"nodeType":"YulIf","src":"15148:37:15"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15029:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"15032:1:15","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"15038:4:15","type":""}],"src":"14998:194:15"},{"body":{"nodeType":"YulBlock","src":"15352:288:15","statements":[{"nodeType":"YulAssignment","src":"15362:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15374:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15385:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15370:3:15"},"nodeType":"YulFunctionCall","src":"15370:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15362:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15442:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15455:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15466:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15451:3:15"},"nodeType":"YulFunctionCall","src":"15451:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15398:43:15"},"nodeType":"YulFunctionCall","src":"15398:71:15"},"nodeType":"YulExpressionStatement","src":"15398:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15523:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15536:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15547:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15532:3:15"},"nodeType":"YulFunctionCall","src":"15532:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15479:43:15"},"nodeType":"YulFunctionCall","src":"15479:72:15"},"nodeType":"YulExpressionStatement","src":"15479:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15605:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15618:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15629:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15614:3:15"},"nodeType":"YulFunctionCall","src":"15614:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15561:43:15"},"nodeType":"YulFunctionCall","src":"15561:72:15"},"nodeType":"YulExpressionStatement","src":"15561:72:15"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15308:9:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15320:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15328:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15336:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15347:4:15","type":""}],"src":"15198:442:15"},{"body":{"nodeType":"YulBlock","src":"15686:76:15","statements":[{"body":{"nodeType":"YulBlock","src":"15740:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15749:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15752:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15742:6:15"},"nodeType":"YulFunctionCall","src":"15742:12:15"},"nodeType":"YulExpressionStatement","src":"15742:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15709:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15731:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"15716:14:15"},"nodeType":"YulFunctionCall","src":"15716:21:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15706:2:15"},"nodeType":"YulFunctionCall","src":"15706:32:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15699:6:15"},"nodeType":"YulFunctionCall","src":"15699:40:15"},"nodeType":"YulIf","src":"15696:60:15"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15679:5:15","type":""}],"src":"15646:116:15"},{"body":{"nodeType":"YulBlock","src":"15828:77:15","statements":[{"nodeType":"YulAssignment","src":"15838:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15853:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15847:5:15"},"nodeType":"YulFunctionCall","src":"15847:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15838:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15893:5:15"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"15869:23:15"},"nodeType":"YulFunctionCall","src":"15869:30:15"},"nodeType":"YulExpressionStatement","src":"15869:30:15"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15806:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"15814:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15822:5:15","type":""}],"src":"15768:137:15"},{"body":{"nodeType":"YulBlock","src":"15985:271:15","statements":[{"body":{"nodeType":"YulBlock","src":"16031:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16033:77:15"},"nodeType":"YulFunctionCall","src":"16033:79:15"},"nodeType":"YulExpressionStatement","src":"16033:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16006:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"16015:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16002:3:15"},"nodeType":"YulFunctionCall","src":"16002:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"16027:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15998:3:15"},"nodeType":"YulFunctionCall","src":"15998:32:15"},"nodeType":"YulIf","src":"15995:119:15"},{"nodeType":"YulBlock","src":"16124:125:15","statements":[{"nodeType":"YulVariableDeclaration","src":"16139:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"16153:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16143:6:15","type":""}]},{"nodeType":"YulAssignment","src":"16168:71:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16211:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"16222:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16207:3:15"},"nodeType":"YulFunctionCall","src":"16207:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16231:7:15"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"16178:28:15"},"nodeType":"YulFunctionCall","src":"16178:61:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16168:6:15"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15955:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15966:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15978:6:15","type":""}],"src":"15911:345:15"},{"body":{"nodeType":"YulBlock","src":"16388:206:15","statements":[{"nodeType":"YulAssignment","src":"16398:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16410:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16421:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16406:3:15"},"nodeType":"YulFunctionCall","src":"16406:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16398:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16478:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16491:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16502:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16487:3:15"},"nodeType":"YulFunctionCall","src":"16487:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16434:43:15"},"nodeType":"YulFunctionCall","src":"16434:71:15"},"nodeType":"YulExpressionStatement","src":"16434:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16559:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16572:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16583:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16568:3:15"},"nodeType":"YulFunctionCall","src":"16568:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16515:43:15"},"nodeType":"YulFunctionCall","src":"16515:72:15"},"nodeType":"YulExpressionStatement","src":"16515:72:15"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16352:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16364:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16372:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16383:4:15","type":""}],"src":"16262:332:15"},{"body":{"nodeType":"YulBlock","src":"16643:190:15","statements":[{"nodeType":"YulAssignment","src":"16653:33:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16680:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16662:17:15"},"nodeType":"YulFunctionCall","src":"16662:24:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16653:5:15"}]},{"body":{"nodeType":"YulBlock","src":"16776:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16778:16:15"},"nodeType":"YulFunctionCall","src":"16778:18:15"},"nodeType":"YulExpressionStatement","src":"16778:18:15"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16701:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"16708:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16698:2:15"},"nodeType":"YulFunctionCall","src":"16698:77:15"},"nodeType":"YulIf","src":"16695:103:15"},{"nodeType":"YulAssignment","src":"16807:20:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16818:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"16825:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16814:3:15"},"nodeType":"YulFunctionCall","src":"16814:13:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16807:3:15"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16629:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16639:3:15","type":""}],"src":"16600:233:15"},{"body":{"nodeType":"YulBlock","src":"16950:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16967:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"16972:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16960:6:15"},"nodeType":"YulFunctionCall","src":"16960:19:15"},"nodeType":"YulExpressionStatement","src":"16960:19:15"},{"nodeType":"YulAssignment","src":"16988:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17007:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"17012:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17003:3:15"},"nodeType":"YulFunctionCall","src":"17003:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16988:11:15"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16922:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"16927:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16938:11:15","type":""}],"src":"16839:184:15"},{"body":{"nodeType":"YulBlock","src":"17183:608:15","statements":[{"nodeType":"YulVariableDeclaration","src":"17193:68:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17255:5:15"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"17207:47:15"},"nodeType":"YulFunctionCall","src":"17207:54:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17197:6:15","type":""}]},{"nodeType":"YulAssignment","src":"17270:93:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17351:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"17356:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17277:73:15"},"nodeType":"YulFunctionCall","src":"17277:86:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17270:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"17372:71:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17437:5:15"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"17387:49:15"},"nodeType":"YulFunctionCall","src":"17387:56:15"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"17376:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17452:21:15","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"17466:7:15"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"17456:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"17542:224:15","statements":[{"nodeType":"YulVariableDeclaration","src":"17556:34:15","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17583:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17577:5:15"},"nodeType":"YulFunctionCall","src":"17577:13:15"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"17560:13:15","type":""}]},{"nodeType":"YulAssignment","src":"17603:70:15","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"17654:13:15"},{"name":"pos","nodeType":"YulIdentifier","src":"17669:3:15"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"17610:43:15"},"nodeType":"YulFunctionCall","src":"17610:63:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17603:3:15"}]},{"nodeType":"YulAssignment","src":"17686:70:15","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17749:6:15"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"17696:52:15"},"nodeType":"YulFunctionCall","src":"17696:60:15"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17686:6:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17504:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"17507:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17501:2:15"},"nodeType":"YulFunctionCall","src":"17501:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17515:18:15","statements":[{"nodeType":"YulAssignment","src":"17517:14:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17526:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"17529:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17522:3:15"},"nodeType":"YulFunctionCall","src":"17522:9:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17517:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"17486:14:15","statements":[{"nodeType":"YulVariableDeclaration","src":"17488:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"17497:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17492:1:15","type":""}]}]},"src":"17482:284:15"},{"nodeType":"YulAssignment","src":"17775:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"17782:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17775:3:15"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17162:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17169:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17178:3:15","type":""}],"src":"17059:732:15"},{"body":{"nodeType":"YulBlock","src":"18001:389:15","statements":[{"nodeType":"YulAssignment","src":"18011:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18023:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18034:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18019:3:15"},"nodeType":"YulFunctionCall","src":"18019:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18011:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18058:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18069:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18054:3:15"},"nodeType":"YulFunctionCall","src":"18054:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18077:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"18083:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18073:3:15"},"nodeType":"YulFunctionCall","src":"18073:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18047:6:15"},"nodeType":"YulFunctionCall","src":"18047:47:15"},"nodeType":"YulExpressionStatement","src":"18047:47:15"},{"nodeType":"YulAssignment","src":"18103:116:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18205:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"18214:4:15"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18111:93:15"},"nodeType":"YulFunctionCall","src":"18111:108:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18103:4:15"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18273:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18286:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18297:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18282:3:15"},"nodeType":"YulFunctionCall","src":"18282:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18229:43:15"},"nodeType":"YulFunctionCall","src":"18229:72:15"},"nodeType":"YulExpressionStatement","src":"18229:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18355:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18368:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18379:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18364:3:15"},"nodeType":"YulFunctionCall","src":"18364:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18311:43:15"},"nodeType":"YulFunctionCall","src":"18311:72:15"},"nodeType":"YulExpressionStatement","src":"18311:72:15"}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17957:9:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17969:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17977:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17985:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17996:4:15","type":""}],"src":"17797:593:15"},{"body":{"nodeType":"YulBlock","src":"18492:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18509:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"18514:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18502:6:15"},"nodeType":"YulFunctionCall","src":"18502:19:15"},"nodeType":"YulExpressionStatement","src":"18502:19:15"},{"nodeType":"YulAssignment","src":"18530:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18549:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"18554:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18545:3:15"},"nodeType":"YulFunctionCall","src":"18545:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"18530:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18464:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"18469:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"18480:11:15","type":""}],"src":"18396:169:15"},{"body":{"nodeType":"YulBlock","src":"18677:61:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18699:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"18707:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18695:3:15"},"nodeType":"YulFunctionCall","src":"18695:14:15"},{"hexValue":"556e737570706f72746564206173736574","kind":"string","nodeType":"YulLiteral","src":"18711:19:15","type":"","value":"Unsupported asset"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18688:6:15"},"nodeType":"YulFunctionCall","src":"18688:43:15"},"nodeType":"YulExpressionStatement","src":"18688:43:15"}]},"name":"store_literal_in_memory_44600962ecc58e3d7357a43883400403f194479f65246dca589e6d1b485101fb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18669:6:15","type":""}],"src":"18571:167:15"},{"body":{"nodeType":"YulBlock","src":"18890:220:15","statements":[{"nodeType":"YulAssignment","src":"18900:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18966:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"18971:2:15","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18907:58:15"},"nodeType":"YulFunctionCall","src":"18907:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18900:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19072:3:15"}],"functionName":{"name":"store_literal_in_memory_44600962ecc58e3d7357a43883400403f194479f65246dca589e6d1b485101fb","nodeType":"YulIdentifier","src":"18983:88:15"},"nodeType":"YulFunctionCall","src":"18983:93:15"},"nodeType":"YulExpressionStatement","src":"18983:93:15"},{"nodeType":"YulAssignment","src":"19085:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19096:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"19101:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19092:3:15"},"nodeType":"YulFunctionCall","src":"19092:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19085:3:15"}]}]},"name":"abi_encode_t_stringliteral_44600962ecc58e3d7357a43883400403f194479f65246dca589e6d1b485101fb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18878:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18886:3:15","type":""}],"src":"18744:366:15"},{"body":{"nodeType":"YulBlock","src":"19287:248:15","statements":[{"nodeType":"YulAssignment","src":"19297:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19309:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"19320:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19305:3:15"},"nodeType":"YulFunctionCall","src":"19305:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19297:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19344:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"19355:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19340:3:15"},"nodeType":"YulFunctionCall","src":"19340:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19363:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"19369:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19359:3:15"},"nodeType":"YulFunctionCall","src":"19359:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19333:6:15"},"nodeType":"YulFunctionCall","src":"19333:47:15"},"nodeType":"YulExpressionStatement","src":"19333:47:15"},{"nodeType":"YulAssignment","src":"19389:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19523:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_44600962ecc58e3d7357a43883400403f194479f65246dca589e6d1b485101fb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19397:124:15"},"nodeType":"YulFunctionCall","src":"19397:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19389:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_44600962ecc58e3d7357a43883400403f194479f65246dca589e6d1b485101fb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19267:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19282:4:15","type":""}],"src":"19116:419:15"},{"body":{"nodeType":"YulBlock","src":"19604:80:15","statements":[{"nodeType":"YulAssignment","src":"19614:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19629:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19623:5:15"},"nodeType":"YulFunctionCall","src":"19623:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19614:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19672:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"19645:26:15"},"nodeType":"YulFunctionCall","src":"19645:33:15"},"nodeType":"YulExpressionStatement","src":"19645:33:15"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19582:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"19590:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19598:5:15","type":""}],"src":"19541:143:15"},{"body":{"nodeType":"YulBlock","src":"19767:274:15","statements":[{"body":{"nodeType":"YulBlock","src":"19813:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19815:77:15"},"nodeType":"YulFunctionCall","src":"19815:79:15"},"nodeType":"YulExpressionStatement","src":"19815:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19788:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"19797:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19784:3:15"},"nodeType":"YulFunctionCall","src":"19784:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"19809:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19780:3:15"},"nodeType":"YulFunctionCall","src":"19780:32:15"},"nodeType":"YulIf","src":"19777:119:15"},{"nodeType":"YulBlock","src":"19906:128:15","statements":[{"nodeType":"YulVariableDeclaration","src":"19921:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"19935:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19925:6:15","type":""}]},{"nodeType":"YulAssignment","src":"19950:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19996:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"20007:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19992:3:15"},"nodeType":"YulFunctionCall","src":"19992:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20016:7:15"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"19960:31:15"},"nodeType":"YulFunctionCall","src":"19960:64:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19950:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19737:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19748:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19760:6:15","type":""}],"src":"19690:351:15"},{"body":{"nodeType":"YulBlock","src":"20153:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20175:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"20183:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20171:3:15"},"nodeType":"YulFunctionCall","src":"20171:14:15"},{"hexValue":"4e6f7420656e6f756768206c697175696469747920696e2074686520706f6f6c","kind":"string","nodeType":"YulLiteral","src":"20187:34:15","type":"","value":"Not enough liquidity in the pool"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20164:6:15"},"nodeType":"YulFunctionCall","src":"20164:58:15"},"nodeType":"YulExpressionStatement","src":"20164:58:15"}]},"name":"store_literal_in_memory_5c725d7d0f4865d029c8848def0aef589f9ba45f338bc9706865a5c8377e5e52","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20145:6:15","type":""}],"src":"20047:182:15"},{"body":{"nodeType":"YulBlock","src":"20381:220:15","statements":[{"nodeType":"YulAssignment","src":"20391:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20457:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"20462:2:15","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20398:58:15"},"nodeType":"YulFunctionCall","src":"20398:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20391:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20563:3:15"}],"functionName":{"name":"store_literal_in_memory_5c725d7d0f4865d029c8848def0aef589f9ba45f338bc9706865a5c8377e5e52","nodeType":"YulIdentifier","src":"20474:88:15"},"nodeType":"YulFunctionCall","src":"20474:93:15"},"nodeType":"YulExpressionStatement","src":"20474:93:15"},{"nodeType":"YulAssignment","src":"20576:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20587:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"20592:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20583:3:15"},"nodeType":"YulFunctionCall","src":"20583:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20576:3:15"}]}]},"name":"abi_encode_t_stringliteral_5c725d7d0f4865d029c8848def0aef589f9ba45f338bc9706865a5c8377e5e52_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20369:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20377:3:15","type":""}],"src":"20235:366:15"},{"body":{"nodeType":"YulBlock","src":"20778:248:15","statements":[{"nodeType":"YulAssignment","src":"20788:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20800:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"20811:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20796:3:15"},"nodeType":"YulFunctionCall","src":"20796:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20788:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20835:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"20846:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20831:3:15"},"nodeType":"YulFunctionCall","src":"20831:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20854:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"20860:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20850:3:15"},"nodeType":"YulFunctionCall","src":"20850:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20824:6:15"},"nodeType":"YulFunctionCall","src":"20824:47:15"},"nodeType":"YulExpressionStatement","src":"20824:47:15"},{"nodeType":"YulAssignment","src":"20880:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21014:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_5c725d7d0f4865d029c8848def0aef589f9ba45f338bc9706865a5c8377e5e52_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20888:124:15"},"nodeType":"YulFunctionCall","src":"20888:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20880:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_5c725d7d0f4865d029c8848def0aef589f9ba45f338bc9706865a5c8377e5e52__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20758:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20773:4:15","type":""}],"src":"20607:419:15"},{"body":{"nodeType":"YulBlock","src":"21158:206:15","statements":[{"nodeType":"YulAssignment","src":"21168:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21180:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"21191:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21176:3:15"},"nodeType":"YulFunctionCall","src":"21176:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21168:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21248:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21261:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"21272:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21257:3:15"},"nodeType":"YulFunctionCall","src":"21257:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21204:43:15"},"nodeType":"YulFunctionCall","src":"21204:71:15"},"nodeType":"YulExpressionStatement","src":"21204:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21329:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21342:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"21353:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21338:3:15"},"nodeType":"YulFunctionCall","src":"21338:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21285:43:15"},"nodeType":"YulFunctionCall","src":"21285:72:15"},"nodeType":"YulExpressionStatement","src":"21285:72:15"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21122:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21134:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21142:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21153:4:15","type":""}],"src":"21032:332:15"},{"body":{"nodeType":"YulBlock","src":"21398:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21415:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21418:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21408:6:15"},"nodeType":"YulFunctionCall","src":"21408:88:15"},"nodeType":"YulExpressionStatement","src":"21408:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21512:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21515:4:15","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21505:6:15"},"nodeType":"YulFunctionCall","src":"21505:15:15"},"nodeType":"YulExpressionStatement","src":"21505:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21536:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21539:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21529:6:15"},"nodeType":"YulFunctionCall","src":"21529:15:15"},"nodeType":"YulExpressionStatement","src":"21529:15:15"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"21370:180:15"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    // struct InterestSwap.Route\n    function abi_decode_t_struct$_Route_$311_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // poolOwner\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // poolIndex\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_struct$_Route_$311_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_struct$_Route_$311_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$4061_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$4061_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$4061_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$4061__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$4061_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function convert_t_contract$_PriceModel_$938_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_PriceModel_$938_to_t_address(value, pos) {\n        mstore(pos, convert_t_contract$_PriceModel_$938_to_t_address(value))\n    }\n\n    // struct InterestSwap.Pool -> struct InterestSwap.Pool\n    function abi_encode_t_struct$_Pool_$306_memory_ptr_to_t_struct$_Pool_$306_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // acceptedTokens\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // totalLiquidity\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // priceModel\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_contract$_PriceModel_$938_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Pool_$306_memory_ptr__to_t_struct$_Pool_$306_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Pool_$306_memory_ptr_to_t_struct$_Pool_$306_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function convert_t_contract$_IPriceFeed_$4080_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IPriceFeed_$4080_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IPriceFeed_$4080_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IPriceFeed_$4080__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IPriceFeed_$4080_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_44600962ecc58e3d7357a43883400403f194479f65246dca589e6d1b485101fb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unsupported asset\")\n\n    }\n\n    function abi_encode_t_stringliteral_44600962ecc58e3d7357a43883400403f194479f65246dca589e6d1b485101fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_44600962ecc58e3d7357a43883400403f194479f65246dca589e6d1b485101fb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_44600962ecc58e3d7357a43883400403f194479f65246dca589e6d1b485101fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44600962ecc58e3d7357a43883400403f194479f65246dca589e6d1b485101fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_5c725d7d0f4865d029c8848def0aef589f9ba45f338bc9706865a5c8377e5e52(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough liquidity in the pool\")\n\n    }\n\n    function abi_encode_t_stringliteral_5c725d7d0f4865d029c8848def0aef589f9ba45f338bc9706865a5c8377e5e52_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_5c725d7d0f4865d029c8848def0aef589f9ba45f338bc9706865a5c8377e5e52(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5c725d7d0f4865d029c8848def0aef589f9ba45f338bc9706865a5c8377e5e52__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5c725d7d0f4865d029c8848def0aef589f9ba45f338bc9706865a5c8377e5e52_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060043610620000a05760003560e01c8063574b529b116200006f578063574b529b146200016a5780635b5a630014620001a05780635b5b9ea214620001d65780636c61b615146200020c578063741bef1a146200024457620000a0565b80630658c48914620000a55780630a90d6ad14620000db578063387dd500146200011257806343cd8f7e1462000148575b600080fd5b620000c36004803603810190620000bd9190620011cf565b62000266565b604051620000d2919062001252565b60405180910390f35b620000f96004803603810190620000f391906200134f565b62000439565b60405162000109929190620013db565b60405180910390f35b6200013060048036038101906200012a919062001408565b62000796565b6040516200013f919062001252565b60405180910390f35b62000152620007e2565b604051620001619190620014a5565b60405180910390f35b620001886004803603810190620001829190620014c2565b62000808565b604051620001979190620014f4565b60405180910390f35b620001be6004803603810190620001b8919062001511565b62000848565b604051620001cd91906200158a565b60405180910390f35b620001f46004803603810190620001ee9190620015a7565b62000884565b60405162000203919062001748565b60405180910390f35b6200022a6004803603810190620002249190620011cf565b620009f3565b6040516200023b939291906200176c565b60405180910390f35b6200024e62000d4c565b6040516200025d9190620017ce565b60405180910390f35b6000806200027786868686620009f3565b925050508060026000856000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020846020015181548110620002d857620002d7620017eb565b5b90600052602060002090600302016001016000828254620002fa919062001849565b925050819055508573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b8152600401620003409392919062001884565b6020604051808303816000875af115801562000360573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003869190620018f2565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401620003e692919062001924565b6020604051808303816000875af115801562000406573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200042c9190620018f2565b5080915050949350505050565b6000806000855190506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090506000620004968762000d70565b9050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052808a81526020018881526020018373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190805190602001906200054f92919062000f35565b506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505060005b8381101562000688576001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060008b8481518110620006195762000618620017eb565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806200067f9062001951565b915050620005a6565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b8152600401620006ea9392919062001884565b6020604051808303816000875af11580156200070a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007309190620018f2565b503373ffffffffffffffffffffffffffffffffffffffff167f91a1cd49a83a1d900c66ff806810753859aaceaf484951d6d544ded1b1d0ff688983896040516200077d9392919062001a19565b60405180910390a2818194509450505050935093915050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600481815481106200081957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003602052826000526040600020602052816000526040600020602052806000526040600020600092509250509054906101000a900460ff1681565b6200088e62000fc4565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110620008e257620008e1620017eb565b5b9060005260206000209060030201604051806060016040529081600082018054806020026020016040519081016040528092919081815260200182805480156200098257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000937575b50505050508152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b600080600060036000856000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008560200151815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1662000add576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000ad49062001abe565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3596f07896040518263ffffffff1660e01b815260040162000b3b9190620014f4565b602060405180830381865afa15801562000b59573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b7f919062001af7565b9050600062000b98888362000e1a90919063ffffffff16565b9050600060026000886000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002087602001518154811062000bf85762000bf7620017eb565b5b90600052602060002090600302019050806001015482111562000c52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000c499062001b79565b60405180910390fd5b60008160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663315f1a418b8b6040518363ffffffff1660e01b815260040162000cb592919062001b9b565b602060405180830381865afa15801562000cd3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cf9919062001af7565b90506000818b62000d0b919062001849565b9050600062000d3186848e62000d22919062001849565b62000e1a90919063ffffffff16565b90508282829850985098505050505050509450945094915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808260405162000d829062000ffb565b62000d8e919062001252565b604051809103906000f08015801562000dab573d6000803e3d6000fd5b5090506004819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080915050919050565b600062000e28838362000e30565b905092915050565b60008060008019848609848602925082811083820303915050670de0b6b3a7640000811062000e9857806040517fd31b340200000000000000000000000000000000000000000000000000000000815260040162000e8f919062001252565b60405180910390fd5b600080670de0b6b3a764000086880991506706f05b59d3b1ffff821190506000830362000ee95780670de0b6b3a7640000858162000edb5762000eda62001bc8565b5b040194505050505062000f2f565b807faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac1066960016204000080600003040186851186030262040000858803041702019450505050505b92915050565b82805482825590600052602060002090810192821562000fb1579160200282015b8281111562000fb05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019062000f56565b5b50905062000fc0919062001009565b5090565b60405180606001604052806060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6103ef8062001bf883390190565b5b80821115620010245760008160009055506001016200100a565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062001069826200103c565b9050919050565b6200107b816200105c565b81146200108757600080fd5b50565b6000813590506200109b8162001070565b92915050565b6000819050919050565b620010b681620010a1565b8114620010c257600080fd5b50565b600081359050620010d681620010ab565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200112c82620010e1565b810181811067ffffffffffffffff821117156200114e576200114d620010f2565b5b80604052505050565b60006200116362001028565b905062001171828262001121565b919050565b6000604082840312156200118f576200118e620010dc565b5b6200119b604062001157565b90506000620011ad848285016200108a565b6000830152506020620011c384828501620010c5565b60208301525092915050565b60008060008060a08587031215620011ec57620011eb62001032565b5b6000620011fc878288016200108a565b94505060206200120f87828801620010c5565b93505060406200122287828801620010c5565b9250506060620012358782880162001176565b91505092959194509250565b6200124c81620010a1565b82525050565b600060208201905062001269600083018462001241565b92915050565b600080fd5b600067ffffffffffffffff821115620012925762001291620010f2565b5b602082029050602081019050919050565b600080fd5b6000620012bf620012b98462001274565b62001157565b90508083825260208201905060208402830185811115620012e557620012e4620012a3565b5b835b81811015620013125780620012fd88826200108a565b845260208401935050602081019050620012e7565b5050509392505050565b600082601f8301126200133457620013336200126f565b5b813562001346848260208601620012a8565b91505092915050565b6000806000606084860312156200136b576200136a62001032565b5b600084013567ffffffffffffffff8111156200138c576200138b62001037565b5b6200139a868287016200131c565b9350506020620013ad86828701620010c5565b9250506040620013c086828701620010c5565b9150509250925092565b620013d5816200105c565b82525050565b6000604082019050620013f2600083018562001241565b620014016020830184620013ca565b9392505050565b60006020828403121562001421576200142062001032565b5b600062001431848285016200108a565b91505092915050565b6000819050919050565b6000620014656200145f62001459846200103c565b6200143a565b6200103c565b9050919050565b6000620014798262001444565b9050919050565b60006200148d826200146c565b9050919050565b6200149f8162001480565b82525050565b6000602082019050620014bc600083018462001494565b92915050565b600060208284031215620014db57620014da62001032565b5b6000620014eb84828501620010c5565b91505092915050565b60006020820190506200150b6000830184620013ca565b92915050565b6000806000606084860312156200152d576200152c62001032565b5b60006200153d868287016200108a565b93505060206200155086828701620010c5565b925050604062001563868287016200108a565b9150509250925092565b60008115159050919050565b62001584816200156d565b82525050565b6000602082019050620015a1600083018462001579565b92915050565b60008060408385031215620015c157620015c062001032565b5b6000620015d1858286016200108a565b9250506020620015e485828601620010c5565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b62001625816200105c565b82525050565b60006200163983836200161a565b60208301905092915050565b6000602082019050919050565b60006200165f82620015ee565b6200166b8185620015f9565b935062001678836200160a565b8060005b83811015620016af5781516200169388826200162b565b9750620016a08362001645565b9250506001810190506200167c565b5085935050505092915050565b620016c781620010a1565b82525050565b6000620016da826200146c565b9050919050565b620016ec81620016cd565b82525050565b6000606083016000830151848203600086015262001711828262001652565b9150506020830151620017286020860182620016bc565b5060408301516200173d6040860182620016e1565b508091505092915050565b60006020820190508181036000830152620017648184620016f2565b905092915050565b600060608201905062001783600083018662001241565b62001792602083018562001241565b620017a1604083018462001241565b949350505050565b6000620017b6826200146c565b9050919050565b620017c881620017a9565b82525050565b6000602082019050620017e56000830184620017bd565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200185682620010a1565b91506200186383620010a1565b92508282039050818111156200187e576200187d6200181a565b5b92915050565b60006060820190506200189b6000830186620013ca565b620018aa6020830185620013ca565b620018b9604083018462001241565b949350505050565b620018cc816200156d565b8114620018d857600080fd5b50565b600081519050620018ec81620018c1565b92915050565b6000602082840312156200190b576200190a62001032565b5b60006200191b84828501620018db565b91505092915050565b60006040820190506200193b6000830185620013ca565b6200194a602083018462001241565b9392505050565b60006200195e82620010a1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036200199357620019926200181a565b5b600182019050919050565b600082825260208201905092915050565b6000620019bc82620015ee565b620019c881856200199e565b9350620019d5836200160a565b8060005b8381101562001a0c578151620019f088826200162b565b9750620019fd8362001645565b925050600181019050620019d9565b5085935050505092915050565b6000606082019050818103600083015262001a358186620019af565b905062001a466020830185620013ca565b62001a55604083018462001241565b949350505050565b600082825260208201905092915050565b7f556e737570706f72746564206173736574000000000000000000000000000000600082015250565b600062001aa660118362001a5d565b915062001ab38262001a6e565b602082019050919050565b6000602082019050818103600083015262001ad98162001a97565b9050919050565b60008151905062001af181620010ab565b92915050565b60006020828403121562001b105762001b0f62001032565b5b600062001b208482850162001ae0565b91505092915050565b7f4e6f7420656e6f756768206c697175696469747920696e2074686520706f6f6c600082015250565b600062001b6160208362001a5d565b915062001b6e8262001b29565b602082019050919050565b6000602082019050818103600083015262001b948162001b52565b9050919050565b600060408201905062001bb2600083018562001241565b62001bc1602083018462001241565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfe608060405234801561001057600080fd5b506040516103ef3803806103ef8339818101604052810190610032919061007a565b80600081905550506100a7565b600080fd5b6000819050919050565b61005781610044565b811461006257600080fd5b50565b6000815190506100748161004e565b92915050565b6000602082840312156100905761008f61003f565b5b600061009e84828501610065565b91505092915050565b610339806100b66000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806329fe619914610046578063315f1a41146100645780636683d37d14610094575b600080fd5b61004e6100b0565b60405161005b919061021b565b60405180910390f35b61007e60048036038101906100799190610267565b6100b6565b60405161008b919061021b565b60405180910390f35b6100ae60048036038101906100a991906102a7565b6100e7565b005b60005481565b60006100df826100d1600054866100f190919063ffffffff16565b6100f190919063ffffffff16565b905092915050565b8060008190555050565b60006100fd8383610105565b905092915050565b60008060008019848609848602925082811083820303915050670de0b6b3a7640000811061016a57806040517fd31b3402000000000000000000000000000000000000000000000000000000008152600401610161919061021b565b60405180910390fd5b600080670de0b6b3a764000086880991506706f05b59d3b1ffff82119050600083036101b65780670de0b6b3a764000085816101a9576101a86102d4565b5b04019450505050506101fc565b807faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac1066960016204000080600003040186851186030262040000858803041702019450505050505b92915050565b6000819050919050565b61021581610202565b82525050565b6000602082019050610230600083018461020c565b92915050565b600080fd5b61024481610202565b811461024f57600080fd5b50565b6000813590506102618161023b565b92915050565b6000806040838503121561027e5761027d610236565b5b600061028c85828601610252565b925050602061029d85828601610252565b9150509250929050565b6000602082840312156102bd576102bc610236565b5b60006102cb84828501610252565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220776930fcde403e4ac8f6484b30a5fcf07d73c0a336d7ad206fbf019d635170e164736f6c63430008110033a2646970667358221220496534be8680f296ceaa339a2cc64f5b37eb3be20550a8c311c6f34547aaab6664736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x574B529B GT PUSH3 0x6F JUMPI DUP1 PUSH4 0x574B529B EQ PUSH3 0x16A JUMPI DUP1 PUSH4 0x5B5A6300 EQ PUSH3 0x1A0 JUMPI DUP1 PUSH4 0x5B5B9EA2 EQ PUSH3 0x1D6 JUMPI DUP1 PUSH4 0x6C61B615 EQ PUSH3 0x20C JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH3 0x244 JUMPI PUSH3 0xA0 JUMP JUMPDEST DUP1 PUSH4 0x658C489 EQ PUSH3 0xA5 JUMPI DUP1 PUSH4 0xA90D6AD EQ PUSH3 0xDB JUMPI DUP1 PUSH4 0x387DD500 EQ PUSH3 0x112 JUMPI DUP1 PUSH4 0x43CD8F7E EQ PUSH3 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xBD SWAP2 SWAP1 PUSH3 0x11CF JUMP JUMPDEST PUSH3 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xD2 SWAP2 SWAP1 PUSH3 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xF3 SWAP2 SWAP1 PUSH3 0x134F JUMP JUMPDEST PUSH3 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x109 SWAP3 SWAP2 SWAP1 PUSH3 0x13DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x12A SWAP2 SWAP1 PUSH3 0x1408 JUMP JUMPDEST PUSH3 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x13F SWAP2 SWAP1 PUSH3 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x152 PUSH3 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x161 SWAP2 SWAP1 PUSH3 0x14A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x182 SWAP2 SWAP1 PUSH3 0x14C2 JUMP JUMPDEST PUSH3 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x197 SWAP2 SWAP1 PUSH3 0x14F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1B8 SWAP2 SWAP1 PUSH3 0x1511 JUMP JUMPDEST PUSH3 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1CD SWAP2 SWAP1 PUSH3 0x158A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1EE SWAP2 SWAP1 PUSH3 0x15A7 JUMP JUMPDEST PUSH3 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x203 SWAP2 SWAP1 PUSH3 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x224 SWAP2 SWAP1 PUSH3 0x11CF JUMP JUMPDEST PUSH3 0x9F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x23B SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x176C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x24E PUSH3 0xD4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x25D SWAP2 SWAP1 PUSH3 0x17CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x277 DUP7 DUP7 DUP7 DUP7 PUSH3 0x9F3 JUMP JUMPDEST SWAP3 POP POP POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x20 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x17EB JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x2FA SWAP2 SWAP1 PUSH3 0x1849 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x340 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1884 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x360 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x386 SWAP2 SWAP1 PUSH3 0x18F2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3E6 SWAP3 SWAP2 SWAP1 PUSH3 0x1924 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x406 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x42C SWAP2 SWAP1 PUSH3 0x18F2 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 PUSH3 0x496 DUP8 PUSH3 0xD70 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x54F SWAP3 SWAP2 SWAP1 PUSH3 0xF35 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x688 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x619 JUMPI PUSH3 0x618 PUSH3 0x17EB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH3 0x67F SWAP1 PUSH3 0x1951 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x5A6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x6EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1884 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x70A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x730 SWAP2 SWAP1 PUSH3 0x18F2 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x91A1CD49A83A1D900C66FF806810753859AACEAF484951D6D544DED1B1D0FF68 DUP10 DUP4 DUP10 PUSH1 0x40 MLOAD PUSH3 0x77D SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1A19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 DUP2 SWAP5 POP SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP3 POP SWAP3 POP POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH3 0x88E PUSH3 0xFC4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH3 0x8E2 JUMPI PUSH3 0x8E1 PUSH3 0x17EB JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH3 0x982 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH3 0x937 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH3 0xADD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xAD4 SWAP1 PUSH3 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB3596F07 DUP10 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB3B SWAP2 SWAP1 PUSH3 0x14F4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xB59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xB7F SWAP2 SWAP1 PUSH3 0x1AF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0xB98 DUP9 DUP4 PUSH3 0xE1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP8 PUSH1 0x20 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH3 0xBF8 JUMPI PUSH3 0xBF7 PUSH3 0x17EB JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH3 0xC52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC49 SWAP1 PUSH3 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x315F1A41 DUP12 DUP12 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xCB5 SWAP3 SWAP2 SWAP1 PUSH3 0x1B9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xCD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xCF9 SWAP2 SWAP1 PUSH3 0x1AF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP12 PUSH3 0xD0B SWAP2 SWAP1 PUSH3 0x1849 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0xD31 DUP7 DUP5 DUP15 PUSH3 0xD22 SWAP2 SWAP1 PUSH3 0x1849 JUMP JUMPDEST PUSH3 0xE1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP3 DUP3 DUP3 SWAP9 POP SWAP9 POP SWAP9 POP POP POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH3 0xD82 SWAP1 PUSH3 0xFFB JUMP JUMPDEST PUSH3 0xD8E SWAP2 SWAP1 PUSH3 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xDAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x4 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE28 DUP4 DUP4 PUSH3 0xE30 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP5 DUP7 MULMOD DUP5 DUP7 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH3 0xE98 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD31B340200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE8F SWAP2 SWAP1 PUSH3 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP7 DUP9 MULMOD SWAP2 POP PUSH8 0x6F05B59D3B1FFFF DUP3 GT SWAP1 POP PUSH1 0x0 DUP4 SUB PUSH3 0xEE9 JUMPI DUP1 PUSH8 0xDE0B6B3A7640000 DUP6 DUP2 PUSH3 0xEDB JUMPI PUSH3 0xEDA PUSH3 0x1BC8 JUMP JUMPDEST JUMPDEST DIV ADD SWAP5 POP POP POP POP POP PUSH3 0xF2F JUMP JUMPDEST DUP1 PUSH32 0xACCB18165BD6FE31AE1CF318DC5B51EEE0E1BA569B88CD74C1773B91FAC10669 PUSH1 0x1 PUSH3 0x40000 DUP1 PUSH1 0x0 SUB DIV ADD DUP7 DUP6 GT DUP7 SUB MUL PUSH3 0x40000 DUP6 DUP9 SUB DIV OR MUL ADD SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0xFB1 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xFB0 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xF56 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFC0 SWAP2 SWAP1 PUSH3 0x1009 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x3EF DUP1 PUSH3 0x1BF8 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1024 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x100A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1069 DUP3 PUSH3 0x103C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x107B DUP2 PUSH3 0x105C JUMP JUMPDEST DUP2 EQ PUSH3 0x1087 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x109B DUP2 PUSH3 0x1070 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x10B6 DUP2 PUSH3 0x10A1 JUMP JUMPDEST DUP2 EQ PUSH3 0x10C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x10D6 DUP2 PUSH3 0x10AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x112C DUP3 PUSH3 0x10E1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x114E JUMPI PUSH3 0x114D PUSH3 0x10F2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1163 PUSH3 0x1028 JUMP JUMPDEST SWAP1 POP PUSH3 0x1171 DUP3 DUP3 PUSH3 0x1121 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x118F JUMPI PUSH3 0x118E PUSH3 0x10DC JUMP JUMPDEST JUMPDEST PUSH3 0x119B PUSH1 0x40 PUSH3 0x1157 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x11AD DUP5 DUP3 DUP6 ADD PUSH3 0x108A JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH3 0x11C3 DUP5 DUP3 DUP6 ADD PUSH3 0x10C5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x11EC JUMPI PUSH3 0x11EB PUSH3 0x1032 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x11FC DUP8 DUP3 DUP9 ADD PUSH3 0x108A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x120F DUP8 DUP3 DUP9 ADD PUSH3 0x10C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x1222 DUP8 DUP3 DUP9 ADD PUSH3 0x10C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x1235 DUP8 DUP3 DUP9 ADD PUSH3 0x1176 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH3 0x124C DUP2 PUSH3 0x10A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1269 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1241 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1292 JUMPI PUSH3 0x1291 PUSH3 0x10F2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x12BF PUSH3 0x12B9 DUP5 PUSH3 0x1274 JUMP JUMPDEST PUSH3 0x1157 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12E5 JUMPI PUSH3 0x12E4 PUSH3 0x12A3 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1312 JUMPI DUP1 PUSH3 0x12FD DUP9 DUP3 PUSH3 0x108A JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x12E7 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1334 JUMPI PUSH3 0x1333 PUSH3 0x126F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH3 0x1346 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x12A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x136B JUMPI PUSH3 0x136A PUSH3 0x1032 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x138C JUMPI PUSH3 0x138B PUSH3 0x1037 JUMP JUMPDEST JUMPDEST PUSH3 0x139A DUP7 DUP3 DUP8 ADD PUSH3 0x131C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x13AD DUP7 DUP3 DUP8 ADD PUSH3 0x10C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x13C0 DUP7 DUP3 DUP8 ADD PUSH3 0x10C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x13D5 DUP2 PUSH3 0x105C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x13F2 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1241 JUMP JUMPDEST PUSH3 0x1401 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x13CA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1421 JUMPI PUSH3 0x1420 PUSH3 0x1032 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1431 DUP5 DUP3 DUP6 ADD PUSH3 0x108A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1465 PUSH3 0x145F PUSH3 0x1459 DUP5 PUSH3 0x103C JUMP JUMPDEST PUSH3 0x143A JUMP JUMPDEST PUSH3 0x103C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1479 DUP3 PUSH3 0x1444 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x148D DUP3 PUSH3 0x146C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x149F DUP2 PUSH3 0x1480 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x14BC PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1494 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x14DB JUMPI PUSH3 0x14DA PUSH3 0x1032 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x14EB DUP5 DUP3 DUP6 ADD PUSH3 0x10C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x150B PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x13CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x152D JUMPI PUSH3 0x152C PUSH3 0x1032 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x153D DUP7 DUP3 DUP8 ADD PUSH3 0x108A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x1550 DUP7 DUP3 DUP8 ADD PUSH3 0x10C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x1563 DUP7 DUP3 DUP8 ADD PUSH3 0x108A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1584 DUP2 PUSH3 0x156D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x15A1 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1579 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x15C1 JUMPI PUSH3 0x15C0 PUSH3 0x1032 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x15D1 DUP6 DUP3 DUP7 ADD PUSH3 0x108A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x15E4 DUP6 DUP3 DUP7 ADD PUSH3 0x10C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1625 DUP2 PUSH3 0x105C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1639 DUP4 DUP4 PUSH3 0x161A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x165F DUP3 PUSH3 0x15EE JUMP JUMPDEST PUSH3 0x166B DUP2 DUP6 PUSH3 0x15F9 JUMP JUMPDEST SWAP4 POP PUSH3 0x1678 DUP4 PUSH3 0x160A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16AF JUMPI DUP2 MLOAD PUSH3 0x1693 DUP9 DUP3 PUSH3 0x162B JUMP JUMPDEST SWAP8 POP PUSH3 0x16A0 DUP4 PUSH3 0x1645 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x167C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x16C7 DUP2 PUSH3 0x10A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x16DA DUP3 PUSH3 0x146C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x16EC DUP2 PUSH3 0x16CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH3 0x1711 DUP3 DUP3 PUSH3 0x1652 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH3 0x1728 PUSH1 0x20 DUP7 ADD DUP3 PUSH3 0x16BC JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH3 0x173D PUSH1 0x40 DUP7 ADD DUP3 PUSH3 0x16E1 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1764 DUP2 DUP5 PUSH3 0x16F2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x1783 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1241 JUMP JUMPDEST PUSH3 0x1792 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1241 JUMP JUMPDEST PUSH3 0x17A1 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1241 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x17B6 DUP3 PUSH3 0x146C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x17C8 DUP2 PUSH3 0x17A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x17E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x17BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1856 DUP3 PUSH3 0x10A1 JUMP JUMPDEST SWAP2 POP PUSH3 0x1863 DUP4 PUSH3 0x10A1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x187E JUMPI PUSH3 0x187D PUSH3 0x181A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x189B PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x13CA JUMP JUMPDEST PUSH3 0x18AA PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x13CA JUMP JUMPDEST PUSH3 0x18B9 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1241 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH3 0x18CC DUP2 PUSH3 0x156D JUMP JUMPDEST DUP2 EQ PUSH3 0x18D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x18EC DUP2 PUSH3 0x18C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x190B JUMPI PUSH3 0x190A PUSH3 0x1032 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x191B DUP5 DUP3 DUP6 ADD PUSH3 0x18DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x193B PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x13CA JUMP JUMPDEST PUSH3 0x194A PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1241 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x195E DUP3 PUSH3 0x10A1 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x1993 JUMPI PUSH3 0x1992 PUSH3 0x181A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x19BC DUP3 PUSH3 0x15EE JUMP JUMPDEST PUSH3 0x19C8 DUP2 DUP6 PUSH3 0x199E JUMP JUMPDEST SWAP4 POP PUSH3 0x19D5 DUP4 PUSH3 0x160A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1A0C JUMPI DUP2 MLOAD PUSH3 0x19F0 DUP9 DUP3 PUSH3 0x162B JUMP JUMPDEST SWAP8 POP PUSH3 0x19FD DUP4 PUSH3 0x1645 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x19D9 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1A35 DUP2 DUP7 PUSH3 0x19AF JUMP JUMPDEST SWAP1 POP PUSH3 0x1A46 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x13CA JUMP JUMPDEST PUSH3 0x1A55 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1241 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x556E737570706F72746564206173736574000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AA6 PUSH1 0x11 DUP4 PUSH3 0x1A5D JUMP JUMPDEST SWAP2 POP PUSH3 0x1AB3 DUP3 PUSH3 0x1A6E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1AD9 DUP2 PUSH3 0x1A97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1AF1 DUP2 PUSH3 0x10AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1B10 JUMPI PUSH3 0x1B0F PUSH3 0x1032 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1B20 DUP5 DUP3 DUP6 ADD PUSH3 0x1AE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768206C697175696469747920696E2074686520706F6F6C PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B61 PUSH1 0x20 DUP4 PUSH3 0x1A5D JUMP JUMPDEST SWAP2 POP PUSH3 0x1B6E DUP3 PUSH3 0x1B29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1B94 DUP2 PUSH3 0x1B52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x1BB2 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1241 JUMP JUMPDEST PUSH3 0x1BC1 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1241 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3EF CODESIZE SUB DUP1 PUSH2 0x3EF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57 DUP2 PUSH2 0x44 JUMP JUMPDEST DUP2 EQ PUSH2 0x62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x74 DUP2 PUSH2 0x4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x90 JUMPI PUSH2 0x8F PUSH2 0x3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9E DUP5 DUP3 DUP6 ADD PUSH2 0x65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x339 DUP1 PUSH2 0xB6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29FE6199 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x315F1A41 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x6683D37D EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x267 JUMP JUMPDEST PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF DUP3 PUSH2 0xD1 PUSH1 0x0 SLOAD DUP7 PUSH2 0xF1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD DUP4 DUP4 PUSH2 0x105 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP5 DUP7 MULMOD DUP5 DUP7 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH2 0x16A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD31B340200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP7 DUP9 MULMOD SWAP2 POP PUSH8 0x6F05B59D3B1FFFF DUP3 GT SWAP1 POP PUSH1 0x0 DUP4 SUB PUSH2 0x1B6 JUMPI DUP1 PUSH8 0xDE0B6B3A7640000 DUP6 DUP2 PUSH2 0x1A9 JUMPI PUSH2 0x1A8 PUSH2 0x2D4 JUMP JUMPDEST JUMPDEST DIV ADD SWAP5 POP POP POP POP POP PUSH2 0x1FC JUMP JUMPDEST DUP1 PUSH32 0xACCB18165BD6FE31AE1CF318DC5B51EEE0E1BA569B88CD74C1773B91FAC10669 PUSH1 0x1 PUSH3 0x40000 DUP1 PUSH1 0x0 SUB DIV ADD DUP7 DUP6 GT DUP7 SUB MUL PUSH3 0x40000 DUP6 DUP9 SUB DIV OR MUL ADD SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x215 DUP2 PUSH2 0x202 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x230 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x244 DUP2 PUSH2 0x202 JUMP JUMPDEST DUP2 EQ PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x261 DUP2 PUSH2 0x23B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27E JUMPI PUSH2 0x27D PUSH2 0x236 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28C DUP6 DUP3 DUP7 ADD PUSH2 0x252 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29D DUP6 DUP3 DUP7 ADD PUSH2 0x252 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BD JUMPI PUSH2 0x2BC PUSH2 0x236 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CB DUP5 DUP3 DUP6 ADD PUSH2 0x252 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x6930FCDE403E4AC8F6484B30A5FCF07D73C0A336D7AD206F 0xBF ADD SWAP14 PUSH4 0x5170E164 PUSH20 0x6F6C63430008110033A264697066735822122049 PUSH6 0x34BE8680F296 0xCE 0xAA CALLER SWAP11 0x2C 0xC6 0x4F JUMPDEST CALLDATACOPY 0xEB EXTCODESIZE 0xE2 SDIV POP 0xA8 0xC3 GT 0xC6 RETURN GASLIMIT SELFBALANCE 0xAA 0xAB PUSH7 0x64736F6C634300 ADDMOD GT STOP CALLER ","sourceMap":"284:4487:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3593:623;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1275:1036;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4656:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;385:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;921;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;742:96;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4498:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2317:1270;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;351:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3593:623;3735:7;3759:27;3790:98;3809:6;3829:7;3850:9;3873:5;3790;:98::i;:::-;3754:134;;;;3970:19;3899:5;:22;3905:5;:15;;;3899:22;;;;;;;;;;;;;;;3922:5;:15;;;3899:39;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;:90;;;;;;;:::i;:::-;;;;;;;;4050:6;4043:27;;;4071:10;4091:4;4098:7;4043:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4116:14;;;;;;;;;;;:23;;;4140:10;4152:19;4116:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4190:19;4183:26;;;3593:623;;;;;;:::o;1275:1036::-;1433:7;1442;1461:19;1483:15;:22;1461:44;;1515:20;1538:5;:17;1544:10;1538:17;;;;;;;;;;;;;;;:24;;;;1515:47;;1573:21;1597:37;1614:19;1597:16;:37::i;:::-;1573:61;;1645:5;:17;1651:10;1645:17;;;;;;;;;;;;;;;1681:67;;;;;;;;1686:15;1681:67;;;;1703:17;1681:67;;;;1733:13;1681:67;;;;;1645:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1774:9;1769:166;1793:11;1789:1;:15;1769:166;;;1920:4;1825:16;:28;1842:10;1825:28;;;;;;;;;;;;;;;:42;1854:12;1825:42;;;;;;;;;;;:92;1885:15;1901:1;1885:18;;;;;;;;:::i;:::-;;;;;;;;1825:92;;;;;;;;;;;;;;;;:99;;;;;;;;;;;;;;;;;;1806:3;;;;;:::i;:::-;;;;1769:166;;;;1990:14;;;;;;;;;;;:27;;;2031:10;2063:4;2082:17;1990:119;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2150:10;2125:132;;;2174:15;2203:13;2230:17;2125:132;;;;;;;;:::i;:::-;;;;;;;;2276:12;2290:13;2268:36;;;;;;;1275:1036;;;;;;:::o;4656:113::-;4719:7;4745:5;:10;4751:3;4745:10;;;;;;;;;;;;;;;:17;;;;4738:24;;4656:113;;;:::o;385:28::-;;;;;;;;;;;;;:::o;921:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;742:96::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4498:152::-;4591:11;;:::i;:::-;4625:5;:10;4631:3;4625:10;;;;;;;;;;;;;;;4636:6;4625:18;;;;;;;;:::i;:::-;;;;;;;;;;;;4618:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4498:152;;;;:::o;2317:1270::-;2500:7;2521;2542;2648:16;:33;2665:5;:15;;;2648:33;;;;;;;;;;;;;;;:50;2682:5;:15;;;2648:50;;;;;;;;;;;:58;2699:6;2648:58;;;;;;;;;;;;;;;;;;;;;;;;;2627:122;;;;;;;;;;;;:::i;:::-;;;;;;;;;2760:23;2786:9;;;;;;;;;;;:23;;;2810:6;2786:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2760:57;;2827:29;2859:28;2879:7;2859:15;:19;;:28;;;;:::i;:::-;2827:60;;2898:26;2927:5;:22;2933:5;:15;;;2927:22;;;;;;;;;;;;;;;2950:5;:15;;;2927:39;;;;;;;;:::i;:::-;;;;;;;;;;;;2898:68;;3022:13;:28;;;2997:21;:53;;2976:132;;;;;;;;;;;;:::i;:::-;;;;;;;;;3119:31;3153:13;:24;;;;;;;;;;;;:30;;;3197:7;3218:9;3153:84;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3119:118;;3326:21;3360:23;3350:7;:33;;;;:::i;:::-;3326:57;;3393:27;3423:78;3476:15;3434:23;3424:7;:33;;;;:::i;:::-;3423:39;;:78;;;;:::i;:::-;3393:108;;3520:23;3545:13;3560:19;3512:68;;;;;;;;;;;;2317:1270;;;;;;;;:::o;351:27::-;;;;;;;;;;;;:::o;4222:270::-;4311:7;4334:24;4376:19;4361:35;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4334:62;;4406:11;4431:13;4406:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4471:13;4456:29;;;4222:270;;;:::o;21264:130:9:-;21322:14;21357:30;21382:1;21385;21357:24;:30::i;:::-;21348:39;;21264:130;;;;:::o;20185:1259:8:-;20280:14;20310:13;20333;20406:1;20402:6;20399:1;20396;20389:20;20438:1;20435;20431:9;20422:18;;20489:5;20485:2;20482:13;20474:5;20470:2;20466:14;20462:34;20453:43;;20365:141;4204:4;20520:5;:14;20516:92;;20591:5;20557:40;;;;;;;;;;;:::i;:::-;;;;;;;;20516:92;20618:17;20645:19;20723:5;20720:1;20717;20710:19;20697:32;;20771:18;20760:9;20757:33;20742:48;;20823:1;20814:5;:10;20810:152;;20895:11;4204:4;20878:5;:13;;;;;:::i;:::-;;;20877:29;20868:38;;20924:13;;;;;;20810:152;21403:11;21354:13;21282:1;21268:11;21254;21251:1;21247:19;21243:37;21239:45;21202:5;21191:9;21188:20;21181:5;21177:32;21144:166;21106:11;21094:9;21087:5;21083:21;21079:39;21051:281;21026:359;21005:423;20995:433;;20981:457;;;;20185:1259;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:102;1361:6;1412:2;1408:7;1403:2;1396:5;1392:14;1388:28;1378:38;;1320:102;;;:::o;1428:180::-;1476:77;1473:1;1466:88;1573:4;1570:1;1563:15;1597:4;1594:1;1587:15;1614:281;1697:27;1719:4;1697:27;:::i;:::-;1689:6;1685:40;1827:6;1815:10;1812:22;1791:18;1779:10;1776:34;1773:62;1770:88;;;1838:18;;:::i;:::-;1770:88;1878:10;1874:2;1867:22;1657:238;1614:281;;:::o;1901:129::-;1935:6;1962:20;;:::i;:::-;1952:30;;1991:33;2019:4;2011:6;1991:33;:::i;:::-;1901:129;;;:::o;2192:581::-;2263:5;2307:4;2295:9;2290:3;2286:19;2282:30;2279:117;;;2315:79;;:::i;:::-;2279:117;2414:21;2430:4;2414:21;:::i;:::-;2405:30;;2499:1;2539:49;2584:3;2575:6;2564:9;2560:22;2539:49;:::i;:::-;2532:4;2525:5;2521:16;2514:75;2445:155;2664:2;2705:49;2750:3;2741:6;2730:9;2726:22;2705:49;:::i;:::-;2698:4;2691:5;2687:16;2680:75;2610:156;2192:581;;;;:::o;2779:809::-;2887:6;2895;2903;2911;2960:3;2948:9;2939:7;2935:23;2931:33;2928:120;;;2967:79;;:::i;:::-;2928:120;3087:1;3112:53;3157:7;3148:6;3137:9;3133:22;3112:53;:::i;:::-;3102:63;;3058:117;3214:2;3240:53;3285:7;3276:6;3265:9;3261:22;3240:53;:::i;:::-;3230:63;;3185:118;3342:2;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3313:118;3470:2;3496:75;3563:7;3554:6;3543:9;3539:22;3496:75;:::i;:::-;3486:85;;3441:140;2779:809;;;;;;;:::o;3594:118::-;3681:24;3699:5;3681:24;:::i;:::-;3676:3;3669:37;3594:118;;:::o;3718:222::-;3811:4;3849:2;3838:9;3834:18;3826:26;;3862:71;3930:1;3919:9;3915:17;3906:6;3862:71;:::i;:::-;3718:222;;;;:::o;3946:117::-;4055:1;4052;4045:12;4069:311;4146:4;4236:18;4228:6;4225:30;4222:56;;;4258:18;;:::i;:::-;4222:56;4308:4;4300:6;4296:17;4288:25;;4368:4;4362;4358:15;4350:23;;4069:311;;;:::o;4386:117::-;4495:1;4492;4485:12;4526:710;4622:5;4647:81;4663:64;4720:6;4663:64;:::i;:::-;4647:81;:::i;:::-;4638:90;;4748:5;4777:6;4770:5;4763:21;4811:4;4804:5;4800:16;4793:23;;4864:4;4856:6;4852:17;4844:6;4840:30;4893:3;4885:6;4882:15;4879:122;;;4912:79;;:::i;:::-;4879:122;5027:6;5010:220;5044:6;5039:3;5036:15;5010:220;;;5119:3;5148:37;5181:3;5169:10;5148:37;:::i;:::-;5143:3;5136:50;5215:4;5210:3;5206:14;5199:21;;5086:144;5070:4;5065:3;5061:14;5054:21;;5010:220;;;5014:21;4628:608;;4526:710;;;;;:::o;5259:370::-;5330:5;5379:3;5372:4;5364:6;5360:17;5356:27;5346:122;;5387:79;;:::i;:::-;5346:122;5504:6;5491:20;5529:94;5619:3;5611:6;5604:4;5596:6;5592:17;5529:94;:::i;:::-;5520:103;;5336:293;5259:370;;;;:::o;5635:829::-;5737:6;5745;5753;5802:2;5790:9;5781:7;5777:23;5773:32;5770:119;;;5808:79;;:::i;:::-;5770:119;5956:1;5945:9;5941:17;5928:31;5986:18;5978:6;5975:30;5972:117;;;6008:79;;:::i;:::-;5972:117;6113:78;6183:7;6174:6;6163:9;6159:22;6113:78;:::i;:::-;6103:88;;5899:302;6240:2;6266:53;6311:7;6302:6;6291:9;6287:22;6266:53;:::i;:::-;6256:63;;6211:118;6368:2;6394:53;6439:7;6430:6;6419:9;6415:22;6394:53;:::i;:::-;6384:63;;6339:118;5635:829;;;;;:::o;6470:118::-;6557:24;6575:5;6557:24;:::i;:::-;6552:3;6545:37;6470:118;;:::o;6594:332::-;6715:4;6753:2;6742:9;6738:18;6730:26;;6766:71;6834:1;6823:9;6819:17;6810:6;6766:71;:::i;:::-;6847:72;6915:2;6904:9;6900:18;6891:6;6847:72;:::i;:::-;6594:332;;;;;:::o;6932:329::-;6991:6;7040:2;7028:9;7019:7;7015:23;7011:32;7008:119;;;7046:79;;:::i;:::-;7008:119;7166:1;7191:53;7236:7;7227:6;7216:9;7212:22;7191:53;:::i;:::-;7181:63;;7137:117;6932:329;;;;:::o;7267:60::-;7295:3;7316:5;7309:12;;7267:60;;;:::o;7333:142::-;7383:9;7416:53;7434:34;7443:24;7461:5;7443:24;:::i;:::-;7434:34;:::i;:::-;7416:53;:::i;:::-;7403:66;;7333:142;;;:::o;7481:126::-;7531:9;7564:37;7595:5;7564:37;:::i;:::-;7551:50;;7481:126;;;:::o;7613:141::-;7678:9;7711:37;7742:5;7711:37;:::i;:::-;7698:50;;7613:141;;;:::o;7760:161::-;7862:52;7908:5;7862:52;:::i;:::-;7857:3;7850:65;7760:161;;:::o;7927:252::-;8035:4;8073:2;8062:9;8058:18;8050:26;;8086:86;8169:1;8158:9;8154:17;8145:6;8086:86;:::i;:::-;7927:252;;;;:::o;8185:329::-;8244:6;8293:2;8281:9;8272:7;8268:23;8264:32;8261:119;;;8299:79;;:::i;:::-;8261:119;8419:1;8444:53;8489:7;8480:6;8469:9;8465:22;8444:53;:::i;:::-;8434:63;;8390:117;8185:329;;;;:::o;8520:222::-;8613:4;8651:2;8640:9;8636:18;8628:26;;8664:71;8732:1;8721:9;8717:17;8708:6;8664:71;:::i;:::-;8520:222;;;;:::o;8748:619::-;8825:6;8833;8841;8890:2;8878:9;8869:7;8865:23;8861:32;8858:119;;;8896:79;;:::i;:::-;8858:119;9016:1;9041:53;9086:7;9077:6;9066:9;9062:22;9041:53;:::i;:::-;9031:63;;8987:117;9143:2;9169:53;9214:7;9205:6;9194:9;9190:22;9169:53;:::i;:::-;9159:63;;9114:118;9271:2;9297:53;9342:7;9333:6;9322:9;9318:22;9297:53;:::i;:::-;9287:63;;9242:118;8748:619;;;;;:::o;9373:90::-;9407:7;9450:5;9443:13;9436:21;9425:32;;9373:90;;;:::o;9469:109::-;9550:21;9565:5;9550:21;:::i;:::-;9545:3;9538:34;9469:109;;:::o;9584:210::-;9671:4;9709:2;9698:9;9694:18;9686:26;;9722:65;9784:1;9773:9;9769:17;9760:6;9722:65;:::i;:::-;9584:210;;;;:::o;9800:474::-;9868:6;9876;9925:2;9913:9;9904:7;9900:23;9896:32;9893:119;;;9931:79;;:::i;:::-;9893:119;10051:1;10076:53;10121:7;10112:6;10101:9;10097:22;10076:53;:::i;:::-;10066:63;;10022:117;10178:2;10204:53;10249:7;10240:6;10229:9;10225:22;10204:53;:::i;:::-;10194:63;;10149:118;9800:474;;;;;:::o;10280:114::-;10347:6;10381:5;10375:12;10365:22;;10280:114;;;:::o;10400:174::-;10489:11;10523:6;10518:3;10511:19;10563:4;10558:3;10554:14;10539:29;;10400:174;;;;:::o;10580:132::-;10647:4;10670:3;10662:11;;10700:4;10695:3;10691:14;10683:22;;10580:132;;;:::o;10718:108::-;10795:24;10813:5;10795:24;:::i;:::-;10790:3;10783:37;10718:108;;:::o;10832:179::-;10901:10;10922:46;10964:3;10956:6;10922:46;:::i;:::-;11000:4;10995:3;10991:14;10977:28;;10832:179;;;;:::o;11017:113::-;11087:4;11119;11114:3;11110:14;11102:22;;11017:113;;;:::o;11166:712::-;11275:3;11304:54;11352:5;11304:54;:::i;:::-;11374:76;11443:6;11438:3;11374:76;:::i;:::-;11367:83;;11474:56;11524:5;11474:56;:::i;:::-;11553:7;11584:1;11569:284;11594:6;11591:1;11588:13;11569:284;;;11670:6;11664:13;11697:63;11756:3;11741:13;11697:63;:::i;:::-;11690:70;;11783:60;11836:6;11783:60;:::i;:::-;11773:70;;11629:224;11616:1;11613;11609:9;11604:14;;11569:284;;;11573:14;11869:3;11862:10;;11280:598;;;11166:712;;;;:::o;11884:108::-;11961:24;11979:5;11961:24;:::i;:::-;11956:3;11949:37;11884:108;;:::o;11998:144::-;12066:9;12099:37;12130:5;12099:37;:::i;:::-;12086:50;;11998:144;;;:::o;12148:157::-;12243:55;12292:5;12243:55;:::i;:::-;12238:3;12231:68;12148:157;;:::o;12371:846::-;12482:3;12518:4;12513:3;12509:14;12615:4;12608:5;12604:16;12598:23;12668:3;12662:4;12658:14;12651:4;12646:3;12642:14;12635:38;12694:103;12792:4;12778:12;12694:103;:::i;:::-;12686:111;;12533:275;12900:4;12893:5;12889:16;12883:23;12919:63;12976:4;12971:3;12967:14;12953:12;12919:63;:::i;:::-;12818:174;13080:4;13073:5;13069:16;13063:23;13099:81;13174:4;13169:3;13165:14;13151:12;13099:81;:::i;:::-;13002:188;13207:4;13200:11;;12487:730;12371:846;;;;:::o;13223:357::-;13358:4;13396:2;13385:9;13381:18;13373:26;;13445:9;13439:4;13435:20;13431:1;13420:9;13416:17;13409:47;13473:100;13568:4;13559:6;13473:100;:::i;:::-;13465:108;;13223:357;;;;:::o;13586:442::-;13735:4;13773:2;13762:9;13758:18;13750:26;;13786:71;13854:1;13843:9;13839:17;13830:6;13786:71;:::i;:::-;13867:72;13935:2;13924:9;13920:18;13911:6;13867:72;:::i;:::-;13949;14017:2;14006:9;14002:18;13993:6;13949:72;:::i;:::-;13586:442;;;;;;:::o;14034:145::-;14103:9;14136:37;14167:5;14136:37;:::i;:::-;14123:50;;14034:145;;;:::o;14185:169::-;14291:56;14341:5;14291:56;:::i;:::-;14286:3;14279:69;14185:169;;:::o;14360:260::-;14472:4;14510:2;14499:9;14495:18;14487:26;;14523:90;14610:1;14599:9;14595:17;14586:6;14523:90;:::i;:::-;14360:260;;;;:::o;14626:180::-;14674:77;14671:1;14664:88;14771:4;14768:1;14761:15;14795:4;14792:1;14785:15;14812:180;14860:77;14857:1;14850:88;14957:4;14954:1;14947:15;14981:4;14978:1;14971:15;14998:194;15038:4;15058:20;15076:1;15058:20;:::i;:::-;15053:25;;15092:20;15110:1;15092:20;:::i;:::-;15087:25;;15136:1;15133;15129:9;15121:17;;15160:1;15154:4;15151:11;15148:37;;;15165:18;;:::i;:::-;15148:37;14998:194;;;;:::o;15198:442::-;15347:4;15385:2;15374:9;15370:18;15362:26;;15398:71;15466:1;15455:9;15451:17;15442:6;15398:71;:::i;:::-;15479:72;15547:2;15536:9;15532:18;15523:6;15479:72;:::i;:::-;15561;15629:2;15618:9;15614:18;15605:6;15561:72;:::i;:::-;15198:442;;;;;;:::o;15646:116::-;15716:21;15731:5;15716:21;:::i;:::-;15709:5;15706:32;15696:60;;15752:1;15749;15742:12;15696:60;15646:116;:::o;15768:137::-;15822:5;15853:6;15847:13;15838:22;;15869:30;15893:5;15869:30;:::i;:::-;15768:137;;;;:::o;15911:345::-;15978:6;16027:2;16015:9;16006:7;16002:23;15998:32;15995:119;;;16033:79;;:::i;:::-;15995:119;16153:1;16178:61;16231:7;16222:6;16211:9;16207:22;16178:61;:::i;:::-;16168:71;;16124:125;15911:345;;;;:::o;16262:332::-;16383:4;16421:2;16410:9;16406:18;16398:26;;16434:71;16502:1;16491:9;16487:17;16478:6;16434:71;:::i;:::-;16515:72;16583:2;16572:9;16568:18;16559:6;16515:72;:::i;:::-;16262:332;;;;;:::o;16600:233::-;16639:3;16662:24;16680:5;16662:24;:::i;:::-;16653:33;;16708:66;16701:5;16698:77;16695:103;;16778:18;;:::i;:::-;16695:103;16825:1;16818:5;16814:13;16807:20;;16600:233;;;:::o;16839:184::-;16938:11;16972:6;16967:3;16960:19;17012:4;17007:3;17003:14;16988:29;;16839:184;;;;:::o;17059:732::-;17178:3;17207:54;17255:5;17207:54;:::i;:::-;17277:86;17356:6;17351:3;17277:86;:::i;:::-;17270:93;;17387:56;17437:5;17387:56;:::i;:::-;17466:7;17497:1;17482:284;17507:6;17504:1;17501:13;17482:284;;;17583:6;17577:13;17610:63;17669:3;17654:13;17610:63;:::i;:::-;17603:70;;17696:60;17749:6;17696:60;:::i;:::-;17686:70;;17542:224;17529:1;17526;17522:9;17517:14;;17482:284;;;17486:14;17782:3;17775:10;;17183:608;;;17059:732;;;;:::o;17797:593::-;17996:4;18034:2;18023:9;18019:18;18011:26;;18083:9;18077:4;18073:20;18069:1;18058:9;18054:17;18047:47;18111:108;18214:4;18205:6;18111:108;:::i;:::-;18103:116;;18229:72;18297:2;18286:9;18282:18;18273:6;18229:72;:::i;:::-;18311;18379:2;18368:9;18364:18;18355:6;18311:72;:::i;:::-;17797:593;;;;;;:::o;18396:169::-;18480:11;18514:6;18509:3;18502:19;18554:4;18549:3;18545:14;18530:29;;18396:169;;;;:::o;18571:167::-;18711:19;18707:1;18699:6;18695:14;18688:43;18571:167;:::o;18744:366::-;18886:3;18907:67;18971:2;18966:3;18907:67;:::i;:::-;18900:74;;18983:93;19072:3;18983:93;:::i;:::-;19101:2;19096:3;19092:12;19085:19;;18744:366;;;:::o;19116:419::-;19282:4;19320:2;19309:9;19305:18;19297:26;;19369:9;19363:4;19359:20;19355:1;19344:9;19340:17;19333:47;19397:131;19523:4;19397:131;:::i;:::-;19389:139;;19116:419;;;:::o;19541:143::-;19598:5;19629:6;19623:13;19614:22;;19645:33;19672:5;19645:33;:::i;:::-;19541:143;;;;:::o;19690:351::-;19760:6;19809:2;19797:9;19788:7;19784:23;19780:32;19777:119;;;19815:79;;:::i;:::-;19777:119;19935:1;19960:64;20016:7;20007:6;19996:9;19992:22;19960:64;:::i;:::-;19950:74;;19906:128;19690:351;;;;:::o;20047:182::-;20187:34;20183:1;20175:6;20171:14;20164:58;20047:182;:::o;20235:366::-;20377:3;20398:67;20462:2;20457:3;20398:67;:::i;:::-;20391:74;;20474:93;20563:3;20474:93;:::i;:::-;20592:2;20587:3;20583:12;20576:19;;20235:366;;;:::o;20607:419::-;20773:4;20811:2;20800:9;20796:18;20788:26;;20860:9;20854:4;20850:20;20846:1;20835:9;20831:17;20824:47;20888:131;21014:4;20888:131;:::i;:::-;20880:139;;20607:419;;;:::o;21032:332::-;21153:4;21191:2;21180:9;21176:18;21168:26;;21204:71;21272:1;21261:9;21257:17;21248:6;21204:71;:::i;:::-;21285:72;21353:2;21342:9;21338:18;21329:6;21285:72;:::i;:::-;21032:332;;;;;:::o;21370:180::-;21418:77;21415:1;21408:88;21515:4;21512:1;21505:15;21539:4;21536:1;21529:15"},"gasEstimates":{"creation":{"codeDepositCost":"1644000","executionCost":"infinite","totalCost":"infinite"},"external":{"createPool(address[],uint256,uint256)":"infinite","getPool(address,uint256)":"infinite","getUserTotalPools(address)":"2894","isAssetSupported(address,uint256,address)":"infinite","liquidityToken()":"infinite","priceFeed()":"infinite","priceModels(uint256)":"4956","quote(address,uint256,uint256,(address,uint256))":"infinite","swap(address,uint256,uint256,(address,uint256))":"infinite"},"internal":{"createPriceModel(uint256)":"infinite"}},"methodIdentifiers":{"createPool(address[],uint256,uint256)":"0a90d6ad","getPool(address,uint256)":"5b5b9ea2","getUserTotalPools(address)":"387dd500","isAssetSupported(address,uint256,address)":"5b5a6300","liquidityToken()":"43cd8f7e","priceFeed()":"741bef1a","priceModels(uint256)":"574b529b","quote(address,uint256,uint256,(address,uint256))":"6c61b615","swap(address,uint256,uint256,(address,uint256))":"0658c489"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidityToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prod1\",\"type\":\"uint256\"}],\"name\":\"PRBMath__MulDivFixedPointOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"acceptedTokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"priceModel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalLiquidity\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_acceptedTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_dailyFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialLiquidity\",\"type\":\"uint256\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"acceptedTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"totalLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"contract PriceModel\",\"name\":\"priceModel\",\"type\":\"address\"}],\"internalType\":\"struct InterestSwap.Pool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lp\",\"type\":\"address\"}],\"name\":\"getUserTotalPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAssetSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract IPriceFeed\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceModels\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_daysTerm\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"poolOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestSwap.Route\",\"name\":\"route\",\"type\":\"tuple\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_daysTerm\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"poolOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestSwap.Route\",\"name\":\"route\",\"type\":\"tuple\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"PRBMath__MulDivFixedPointOverflow(uint256)\":[{\"notice\":\"Emitted when the result overflows uint256.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/InterestSwap.sol\":\"InterestSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/InterestSwap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport {PRBMathUD60x18} from \\\"./dependencies/prb-math/PRBMathUD60x18.sol\\\";\\nimport {IPriceFeed} from \\\"./interfaces/IPriceFeed.sol\\\";\\nimport {IERC20} from \\\"./interfaces/IERC20.sol\\\";\\n\\nimport {PriceModel} from \\\"./PriceModel.sol\\\";\\n\\ncontract InterestSwap {\\n    using PRBMathUD60x18 for uint256;\\n\\n    IPriceFeed public priceFeed;\\n\\n    IERC20 public liquidityToken;\\n\\n    struct Pool {\\n        address[] acceptedTokens;\\n        uint256 totalLiquidity;\\n        PriceModel priceModel;\\n    }\\n\\n    struct Route {\\n        address poolOwner;\\n        uint256 poolIndex;\\n    }\\n\\n    // user => Pool\\n    mapping(address => Pool[]) private pools;\\n\\n    // user => pool index => supported asset => bool\\n    mapping(address => mapping(uint256 => mapping(address => bool)))\\n        public isAssetSupported;\\n\\n    // @dev This could be extended to more templates and include validation\\n    address[] public priceModels;\\n\\n    event PoolCreated(\\n        address indexed owner,\\n        address[] acceptedTokens,\\n        address priceModel,\\n        uint256 totalLiquidity\\n    );\\n\\n    constructor(address _priceFeed, address _liquidityToken) {\\n        priceFeed = IPriceFeed(_priceFeed);\\n        liquidityToken = IERC20(_liquidityToken);\\n    }\\n\\n    function createPool(\\n        address[] memory _acceptedTokens,\\n        uint256 _dailyFeePercentage,\\n        uint256 _initialLiquidity\\n    ) external returns (uint256, address) {\\n        uint256 totalTokens = _acceptedTokens.length;\\n        uint256 newPoolIndex = pools[msg.sender].length;\\n\\n        address newPriceModel = createPriceModel(_dailyFeePercentage);\\n\\n        pools[msg.sender].push(\\n            Pool(_acceptedTokens, _initialLiquidity, PriceModel(newPriceModel))\\n        );\\n\\n        for (uint256 i = 0; i < totalTokens; i++) {\\n            isAssetSupported[msg.sender][newPoolIndex][\\n                _acceptedTokens[i]\\n            ] = true;\\n        }\\n\\n        // transfer initial liquidity amount\\n        liquidityToken.transferFrom(\\n            msg.sender,\\n            address(this),\\n            _initialLiquidity\\n        );\\n\\n        emit PoolCreated(\\n            msg.sender,\\n            _acceptedTokens,\\n            newPriceModel,\\n            _initialLiquidity\\n        );\\n\\n        return (newPoolIndex, newPriceModel);\\n    }\\n\\n    function quote(\\n        address _asset,\\n        uint256 _amount,\\n        uint256 _daysTerm,\\n        Route memory route\\n    )\\n        public\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        // @dev verify the route supports that asset\\n        require(\\n            isAssetSupported[route.poolOwner][route.poolIndex][_asset],\\n            \\\"Unsupported asset\\\"\\n        );\\n\\n        uint256 collateralPrice = priceFeed.getAssetPrice(_asset);\\n        uint256 collateralValueinUSDC = collateralPrice.mul(_amount);\\n\\n        Pool storage poolReference = pools[route.poolOwner][route.poolIndex];\\n        require(\\n            collateralValueinUSDC <= poolReference.totalLiquidity,\\n            \\\"Not enough liquidity in the pool\\\"\\n        );\\n\\n        uint256 assetPercentageToCharge = poolReference.priceModel.quote(\\n            _amount,\\n            _daysTerm\\n        );\\n\\n        // asset percentage to charge, amount to be received, collateralPrice\\n        uint256 amounToBeSent = _amount - assetPercentageToCharge;\\n        uint256 amounToBeSentInUSDC = (_amount - assetPercentageToCharge).mul(\\n            collateralPrice\\n        );\\n\\n        return (assetPercentageToCharge, amounToBeSent, amounToBeSentInUSDC);\\n    }\\n\\n    function swap(\\n        address _asset,\\n        uint256 _amount,\\n        uint256 _daysTerm,\\n        Route memory route\\n    ) external returns (uint256) {\\n        (, , uint256 amounToBeSentInUSDC) = quote(\\n            _asset,\\n            _amount,\\n            _daysTerm,\\n            route\\n        );\\n\\n        pools[route.poolOwner][route.poolIndex]\\n            .totalLiquidity -= amounToBeSentInUSDC;\\n\\n        // transfer asset to this contract\\n        IERC20(_asset).transferFrom(msg.sender, address(this), _amount);\\n        liquidityToken.transfer(msg.sender, amounToBeSentInUSDC);\\n\\n        return amounToBeSentInUSDC;\\n    }\\n\\n    function createPriceModel(uint256 _dailyFeePercentage)\\n        internal\\n        returns (address)\\n    {\\n        PriceModel newPriceModel = new PriceModel(_dailyFeePercentage);\\n        priceModels.push(address(newPriceModel));\\n        return address(newPriceModel);\\n    }\\n\\n    function getPool(address _lp, uint256 _index)\\n        external\\n        view\\n        returns (Pool memory)\\n    {\\n        return pools[_lp][_index];\\n    }\\n\\n    function getUserTotalPools(address _lp) external view returns (uint256) {\\n        return pools[_lp].length;\\n    }\\n}\\n\",\"keccak256\":\"0x63ae3fac1bb345d704701d325336423d68bb78015df67731cecc8aac2fd12e13\",\"license\":\"MIT\"},\"src/PriceModel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./dependencies/prb-math/PRBMathUD60x18.sol\\\";\\n\\n// @dev To make this contract ownable, so only the owner can update the parameters\\ncontract PriceModel {\\n    using PRBMathUD60x18 for uint256;\\n\\n    uint256 public dailyPercent;\\n\\n    constructor(uint256 _dailyPercent) {\\n        dailyPercent = _dailyPercent;\\n    }\\n\\n    function setDailyPercentage(uint256 _newValue) external {\\n        dailyPercent = _newValue;\\n    }\\n\\n    // @dev from the amount requested, we charge you X % (the result)\\n    function quote(uint256 _amount, uint256 _numberOfDays)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        // dailyPercent * _numberOfDays = total interest\\n        return _amount.mul(dailyPercent).mul(_numberOfDays);\\n    }\\n}\\n\",\"keccak256\":\"0x5a31238183b8d86a80004a0667cfdd4eec71b49563c0b0d28cd7937defb29339\",\"license\":\"MIT\"},\"src/dependencies/prb-math/PRBMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\n/// @notice Emitted when the result overflows uint256.\\nerror PRBMath__MulDivFixedPointOverflow(uint256 prod1);\\n\\n/// @notice Emitted when the result overflows uint256.\\nerror PRBMath__MulDivOverflow(uint256 prod1, uint256 denominator);\\n\\n/// @notice Emitted when one of the inputs is type(int256).min.\\nerror PRBMath__MulDivSignedInputTooSmall();\\n\\n/// @notice Emitted when the intermediary absolute result overflows int256.\\nerror PRBMath__MulDivSignedOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is MIN_SD59x18.\\nerror PRBMathSD59x18__AbsInputTooSmall();\\n\\n/// @notice Emitted when ceiling a number overflows SD59x18.\\nerror PRBMathSD59x18__CeilOverflow(int256 x);\\n\\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\\nerror PRBMathSD59x18__DivInputTooSmall();\\n\\n/// @notice Emitted when one of the intermediary unsigned results overflows SD59x18.\\nerror PRBMathSD59x18__DivOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is greater than 133.084258667509499441.\\nerror PRBMathSD59x18__ExpInputTooBig(int256 x);\\n\\n/// @notice Emitted when the input is greater than 192.\\nerror PRBMathSD59x18__Exp2InputTooBig(int256 x);\\n\\n/// @notice Emitted when flooring a number underflows SD59x18.\\nerror PRBMathSD59x18__FloorUnderflow(int256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format overflows SD59x18.\\nerror PRBMathSD59x18__FromIntOverflow(int256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format underflows SD59x18.\\nerror PRBMathSD59x18__FromIntUnderflow(int256 x);\\n\\n/// @notice Emitted when the product of the inputs is negative.\\nerror PRBMathSD59x18__GmNegativeProduct(int256 x, int256 y);\\n\\n/// @notice Emitted when multiplying the inputs overflows SD59x18.\\nerror PRBMathSD59x18__GmOverflow(int256 x, int256 y);\\n\\n/// @notice Emitted when the input is less than or equal to zero.\\nerror PRBMathSD59x18__LogInputTooSmall(int256 x);\\n\\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\\nerror PRBMathSD59x18__MulInputTooSmall();\\n\\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\\nerror PRBMathSD59x18__MulOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\\nerror PRBMathSD59x18__PowuOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is negative.\\nerror PRBMathSD59x18__SqrtNegativeInput(int256 x);\\n\\n/// @notice Emitted when the calculating the square root overflows SD59x18.\\nerror PRBMathSD59x18__SqrtOverflow(int256 x);\\n\\n/// @notice Emitted when addition overflows UD60x18.\\nerror PRBMathUD60x18__AddOverflow(uint256 x, uint256 y);\\n\\n/// @notice Emitted when ceiling a number overflows UD60x18.\\nerror PRBMathUD60x18__CeilOverflow(uint256 x);\\n\\n/// @notice Emitted when the input is greater than 133.084258667509499441.\\nerror PRBMathUD60x18__ExpInputTooBig(uint256 x);\\n\\n/// @notice Emitted when the input is greater than 192.\\nerror PRBMathUD60x18__Exp2InputTooBig(uint256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format format overflows UD60x18.\\nerror PRBMathUD60x18__FromUintOverflow(uint256 x);\\n\\n/// @notice Emitted when multiplying the inputs overflows UD60x18.\\nerror PRBMathUD60x18__GmOverflow(uint256 x, uint256 y);\\n\\n/// @notice Emitted when the input is less than 1.\\nerror PRBMathUD60x18__LogInputTooSmall(uint256 x);\\n\\n/// @notice Emitted when the calculating the square root overflows UD60x18.\\nerror PRBMathUD60x18__SqrtOverflow(uint256 x);\\n\\n/// @notice Emitted when subtraction underflows UD60x18.\\nerror PRBMathUD60x18__SubUnderflow(uint256 x, uint256 y);\\n\\n/// @dev Common mathematical functions used in both PRBMathSD59x18 and PRBMathUD60x18. Note that this shared library\\n/// does not always assume the signed 59.18-decimal fixed-point or the unsigned 60.18-decimal fixed-point\\n/// representation. When it does not, it is explicitly mentioned in the NatSpec documentation.\\nlibrary PRBMath {\\n    /// STRUCTS ///\\n\\n    struct SD59x18 {\\n        int256 value;\\n    }\\n\\n    struct UD60x18 {\\n        uint256 value;\\n    }\\n\\n    /// STORAGE ///\\n\\n    /// @dev How many trailing decimals can be represented.\\n    uint256 internal constant SCALE = 1e18;\\n\\n    /// @dev Largest power of two divisor of SCALE.\\n    uint256 internal constant SCALE_LPOTD = 262144;\\n\\n    /// @dev SCALE inverted mod 2^256.\\n    uint256 internal constant SCALE_INVERSE =\\n        78156646155174841979727994598816262306175212592076161876661_508869554232690281;\\n\\n    /// FUNCTIONS ///\\n\\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\\n    /// @dev Has to use 192.64-bit fixed-point numbers.\\n    /// See https://ethereum.stackexchange.com/a/96594/24693.\\n    /// @param x The exponent as an unsigned 192.64-bit fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp2(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            // Start from 0.5 in the 192.64-bit fixed-point format.\\n            result = 0x800000000000000000000000000000000000000000000000;\\n\\n            // Multiply the result by root(2, 2^-i) when the bit at position i is 1. None of the intermediary results overflows\\n            // because the initial result is 2^191 and all magic factors are less than 2^65.\\n            if (x & 0x8000000000000000 > 0) {\\n                result = (result * 0x16A09E667F3BCC909) >> 64;\\n            }\\n            if (x & 0x4000000000000000 > 0) {\\n                result = (result * 0x1306FE0A31B7152DF) >> 64;\\n            }\\n            if (x & 0x2000000000000000 > 0) {\\n                result = (result * 0x1172B83C7D517ADCE) >> 64;\\n            }\\n            if (x & 0x1000000000000000 > 0) {\\n                result = (result * 0x10B5586CF9890F62A) >> 64;\\n            }\\n            if (x & 0x800000000000000 > 0) {\\n                result = (result * 0x1059B0D31585743AE) >> 64;\\n            }\\n            if (x & 0x400000000000000 > 0) {\\n                result = (result * 0x102C9A3E778060EE7) >> 64;\\n            }\\n            if (x & 0x200000000000000 > 0) {\\n                result = (result * 0x10163DA9FB33356D8) >> 64;\\n            }\\n            if (x & 0x100000000000000 > 0) {\\n                result = (result * 0x100B1AFA5ABCBED61) >> 64;\\n            }\\n            if (x & 0x80000000000000 > 0) {\\n                result = (result * 0x10058C86DA1C09EA2) >> 64;\\n            }\\n            if (x & 0x40000000000000 > 0) {\\n                result = (result * 0x1002C605E2E8CEC50) >> 64;\\n            }\\n            if (x & 0x20000000000000 > 0) {\\n                result = (result * 0x100162F3904051FA1) >> 64;\\n            }\\n            if (x & 0x10000000000000 > 0) {\\n                result = (result * 0x1000B175EFFDC76BA) >> 64;\\n            }\\n            if (x & 0x8000000000000 > 0) {\\n                result = (result * 0x100058BA01FB9F96D) >> 64;\\n            }\\n            if (x & 0x4000000000000 > 0) {\\n                result = (result * 0x10002C5CC37DA9492) >> 64;\\n            }\\n            if (x & 0x2000000000000 > 0) {\\n                result = (result * 0x1000162E525EE0547) >> 64;\\n            }\\n            if (x & 0x1000000000000 > 0) {\\n                result = (result * 0x10000B17255775C04) >> 64;\\n            }\\n            if (x & 0x800000000000 > 0) {\\n                result = (result * 0x1000058B91B5BC9AE) >> 64;\\n            }\\n            if (x & 0x400000000000 > 0) {\\n                result = (result * 0x100002C5C89D5EC6D) >> 64;\\n            }\\n            if (x & 0x200000000000 > 0) {\\n                result = (result * 0x10000162E43F4F831) >> 64;\\n            }\\n            if (x & 0x100000000000 > 0) {\\n                result = (result * 0x100000B1721BCFC9A) >> 64;\\n            }\\n            if (x & 0x80000000000 > 0) {\\n                result = (result * 0x10000058B90CF1E6E) >> 64;\\n            }\\n            if (x & 0x40000000000 > 0) {\\n                result = (result * 0x1000002C5C863B73F) >> 64;\\n            }\\n            if (x & 0x20000000000 > 0) {\\n                result = (result * 0x100000162E430E5A2) >> 64;\\n            }\\n            if (x & 0x10000000000 > 0) {\\n                result = (result * 0x1000000B172183551) >> 64;\\n            }\\n            if (x & 0x8000000000 > 0) {\\n                result = (result * 0x100000058B90C0B49) >> 64;\\n            }\\n            if (x & 0x4000000000 > 0) {\\n                result = (result * 0x10000002C5C8601CC) >> 64;\\n            }\\n            if (x & 0x2000000000 > 0) {\\n                result = (result * 0x1000000162E42FFF0) >> 64;\\n            }\\n            if (x & 0x1000000000 > 0) {\\n                result = (result * 0x10000000B17217FBB) >> 64;\\n            }\\n            if (x & 0x800000000 > 0) {\\n                result = (result * 0x1000000058B90BFCE) >> 64;\\n            }\\n            if (x & 0x400000000 > 0) {\\n                result = (result * 0x100000002C5C85FE3) >> 64;\\n            }\\n            if (x & 0x200000000 > 0) {\\n                result = (result * 0x10000000162E42FF1) >> 64;\\n            }\\n            if (x & 0x100000000 > 0) {\\n                result = (result * 0x100000000B17217F8) >> 64;\\n            }\\n            if (x & 0x80000000 > 0) {\\n                result = (result * 0x10000000058B90BFC) >> 64;\\n            }\\n            if (x & 0x40000000 > 0) {\\n                result = (result * 0x1000000002C5C85FE) >> 64;\\n            }\\n            if (x & 0x20000000 > 0) {\\n                result = (result * 0x100000000162E42FF) >> 64;\\n            }\\n            if (x & 0x10000000 > 0) {\\n                result = (result * 0x1000000000B17217F) >> 64;\\n            }\\n            if (x & 0x8000000 > 0) {\\n                result = (result * 0x100000000058B90C0) >> 64;\\n            }\\n            if (x & 0x4000000 > 0) {\\n                result = (result * 0x10000000002C5C860) >> 64;\\n            }\\n            if (x & 0x2000000 > 0) {\\n                result = (result * 0x1000000000162E430) >> 64;\\n            }\\n            if (x & 0x1000000 > 0) {\\n                result = (result * 0x10000000000B17218) >> 64;\\n            }\\n            if (x & 0x800000 > 0) {\\n                result = (result * 0x1000000000058B90C) >> 64;\\n            }\\n            if (x & 0x400000 > 0) {\\n                result = (result * 0x100000000002C5C86) >> 64;\\n            }\\n            if (x & 0x200000 > 0) {\\n                result = (result * 0x10000000000162E43) >> 64;\\n            }\\n            if (x & 0x100000 > 0) {\\n                result = (result * 0x100000000000B1721) >> 64;\\n            }\\n            if (x & 0x80000 > 0) {\\n                result = (result * 0x10000000000058B91) >> 64;\\n            }\\n            if (x & 0x40000 > 0) {\\n                result = (result * 0x1000000000002C5C8) >> 64;\\n            }\\n            if (x & 0x20000 > 0) {\\n                result = (result * 0x100000000000162E4) >> 64;\\n            }\\n            if (x & 0x10000 > 0) {\\n                result = (result * 0x1000000000000B172) >> 64;\\n            }\\n            if (x & 0x8000 > 0) {\\n                result = (result * 0x100000000000058B9) >> 64;\\n            }\\n            if (x & 0x4000 > 0) {\\n                result = (result * 0x10000000000002C5D) >> 64;\\n            }\\n            if (x & 0x2000 > 0) {\\n                result = (result * 0x1000000000000162E) >> 64;\\n            }\\n            if (x & 0x1000 > 0) {\\n                result = (result * 0x10000000000000B17) >> 64;\\n            }\\n            if (x & 0x800 > 0) {\\n                result = (result * 0x1000000000000058C) >> 64;\\n            }\\n            if (x & 0x400 > 0) {\\n                result = (result * 0x100000000000002C6) >> 64;\\n            }\\n            if (x & 0x200 > 0) {\\n                result = (result * 0x10000000000000163) >> 64;\\n            }\\n            if (x & 0x100 > 0) {\\n                result = (result * 0x100000000000000B1) >> 64;\\n            }\\n            if (x & 0x80 > 0) {\\n                result = (result * 0x10000000000000059) >> 64;\\n            }\\n            if (x & 0x40 > 0) {\\n                result = (result * 0x1000000000000002C) >> 64;\\n            }\\n            if (x & 0x20 > 0) {\\n                result = (result * 0x10000000000000016) >> 64;\\n            }\\n            if (x & 0x10 > 0) {\\n                result = (result * 0x1000000000000000B) >> 64;\\n            }\\n            if (x & 0x8 > 0) {\\n                result = (result * 0x10000000000000006) >> 64;\\n            }\\n            if (x & 0x4 > 0) {\\n                result = (result * 0x10000000000000003) >> 64;\\n            }\\n            if (x & 0x2 > 0) {\\n                result = (result * 0x10000000000000001) >> 64;\\n            }\\n            if (x & 0x1 > 0) {\\n                result = (result * 0x10000000000000001) >> 64;\\n            }\\n\\n            // We're doing two things at the same time:\\n            //\\n            //   1. Multiply the result by 2^n + 1, where \\\"2^n\\\" is the integer part and the one is added to account for\\n            //      the fact that we initially set the result to 0.5. This is accomplished by subtracting from 191\\n            //      rather than 192.\\n            //   2. Convert the result to the unsigned 60.18-decimal fixed-point format.\\n            //\\n            // This works because 2^(191-ip) = 2^ip / 2^191, where \\\"ip\\\" is the integer part \\\"2^n\\\".\\n            result *= SCALE;\\n            result >>= (191 - (x >> 64));\\n        }\\n    }\\n\\n    /// @notice Finds the zero-based index of the first one in the binary representation of x.\\n    /// @dev See the note on msb in the \\\"Find First Set\\\" Wikipedia article https://en.wikipedia.org/wiki/Find_first_set\\n    /// @param x The uint256 number for which to find the index of the most significant bit.\\n    /// @return msb The index of the most significant bit as an uint256.\\n    function mostSignificantBit(uint256 x) internal pure returns (uint256 msb) {\\n        if (x >= 2**128) {\\n            x >>= 128;\\n            msb += 128;\\n        }\\n        if (x >= 2**64) {\\n            x >>= 64;\\n            msb += 64;\\n        }\\n        if (x >= 2**32) {\\n            x >>= 32;\\n            msb += 32;\\n        }\\n        if (x >= 2**16) {\\n            x >>= 16;\\n            msb += 16;\\n        }\\n        if (x >= 2**8) {\\n            x >>= 8;\\n            msb += 8;\\n        }\\n        if (x >= 2**4) {\\n            x >>= 4;\\n            msb += 4;\\n        }\\n        if (x >= 2**2) {\\n            x >>= 2;\\n            msb += 2;\\n        }\\n        if (x >= 2**1) {\\n            // No need to shift x any more.\\n            msb += 1;\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f7denominator) with full precision.\\n    ///\\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv.\\n    ///\\n    /// Requirements:\\n    /// - The denominator cannot be zero.\\n    /// - The result must fit within uint256.\\n    ///\\n    /// Caveats:\\n    /// - This function does not work with fixed-point numbers.\\n    ///\\n    /// @param x The multiplicand as an uint256.\\n    /// @param y The multiplier as an uint256.\\n    /// @param denominator The divisor as an uint256.\\n    /// @return result The result as an uint256.\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n        // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n        // variables such that product = prod1 * 2^256 + prod0.\\n        uint256 prod0; // Least significant 256 bits of the product\\n        uint256 prod1; // Most significant 256 bits of the product\\n        assembly {\\n            let mm := mulmod(x, y, not(0))\\n            prod0 := mul(x, y)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        // Handle non-overflow cases, 256 by 256 division.\\n        if (prod1 == 0) {\\n            unchecked {\\n                result = prod0 / denominator;\\n            }\\n            return result;\\n        }\\n\\n        // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n        if (prod1 >= denominator) {\\n            revert PRBMath__MulDivOverflow(prod1, denominator);\\n        }\\n\\n        ///////////////////////////////////////////////\\n        // 512 by 256 division.\\n        ///////////////////////////////////////////////\\n\\n        // Make division exact by subtracting the remainder from [prod1 prod0].\\n        uint256 remainder;\\n        assembly {\\n            // Compute remainder using mulmod.\\n            remainder := mulmod(x, y, denominator)\\n\\n            // Subtract 256 bit number from 512 bit number.\\n            prod1 := sub(prod1, gt(remainder, prod0))\\n            prod0 := sub(prod0, remainder)\\n        }\\n\\n        // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n        // See https://cs.stackexchange.com/q/138556/92363.\\n        unchecked {\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 lpotdod = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by lpotdod.\\n                denominator := div(denominator, lpotdod)\\n\\n                // Divide [prod1 prod0] by lpotdod.\\n                prod0 := div(prod0, lpotdod)\\n\\n                // Flip lpotdod such that it is 2^256 / lpotdod. If lpotdod is zero, then it becomes one.\\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * lpotdod;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f71e18) with full precision.\\n    ///\\n    /// @dev Variant of \\\"mulDiv\\\" with constant folding, i.e. in which the denominator is always 1e18. Before returning the\\n    /// final result, we add 1 if (x * y) % SCALE >= HALF_SCALE. Without this, 6.6e-19 would be truncated to 0 instead of\\n    /// being rounded to 1e-18.  See \\\"Listing 6\\\" and text above it at https://accu.org/index.php/journals/1717.\\n    ///\\n    /// Requirements:\\n    /// - The result must fit within uint256.\\n    ///\\n    /// Caveats:\\n    /// - The body is purposely left uncommented; see the NatSpec comments in \\\"PRBMath.mulDiv\\\" to understand how this works.\\n    /// - It is assumed that the result can never be type(uint256).max when x and y solve the following two equations:\\n    ///     1. x * y = type(uint256).max * SCALE\\n    ///     2. (x * y) % SCALE >= SCALE / 2\\n    ///\\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function mulDivFixedPoint(uint256 x, uint256 y)\\n        internal\\n        pure\\n        returns (uint256 result)\\n    {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(x, y, not(0))\\n            prod0 := mul(x, y)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= SCALE) {\\n            revert PRBMath__MulDivFixedPointOverflow(prod1);\\n        }\\n\\n        uint256 remainder;\\n        uint256 roundUpUnit;\\n        assembly {\\n            remainder := mulmod(x, y, SCALE)\\n            roundUpUnit := gt(remainder, 499999999999999999)\\n        }\\n\\n        if (prod1 == 0) {\\n            unchecked {\\n                result = (prod0 / SCALE) + roundUpUnit;\\n                return result;\\n            }\\n        }\\n\\n        assembly {\\n            result := add(\\n                mul(\\n                    or(\\n                        div(sub(prod0, remainder), SCALE_LPOTD),\\n                        mul(\\n                            sub(prod1, gt(remainder, prod0)),\\n                            add(div(sub(0, SCALE_LPOTD), SCALE_LPOTD), 1)\\n                        )\\n                    ),\\n                    SCALE_INVERSE\\n                ),\\n                roundUpUnit\\n            )\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f7denominator) with full precision.\\n    ///\\n    /// @dev An extension of \\\"mulDiv\\\" for signed numbers. Works by computing the signs and the absolute values separately.\\n    ///\\n    /// Requirements:\\n    /// - None of the inputs can be type(int256).min.\\n    /// - The result must fit within int256.\\n    ///\\n    /// @param x The multiplicand as an int256.\\n    /// @param y The multiplier as an int256.\\n    /// @param denominator The divisor as an int256.\\n    /// @return result The result as an int256.\\n    function mulDivSigned(\\n        int256 x,\\n        int256 y,\\n        int256 denominator\\n    ) internal pure returns (int256 result) {\\n        if (\\n            x == type(int256).min ||\\n            y == type(int256).min ||\\n            denominator == type(int256).min\\n        ) {\\n            revert PRBMath__MulDivSignedInputTooSmall();\\n        }\\n\\n        // Get hold of the absolute values of x, y and the denominator.\\n        uint256 ax;\\n        uint256 ay;\\n        uint256 ad;\\n        unchecked {\\n            ax = x < 0 ? uint256(-x) : uint256(x);\\n            ay = y < 0 ? uint256(-y) : uint256(y);\\n            ad = denominator < 0 ? uint256(-denominator) : uint256(denominator);\\n        }\\n\\n        // Compute the absolute value of (x*y)\\u00f7denominator. The result must fit within int256.\\n        uint256 rAbs = mulDiv(ax, ay, ad);\\n        if (rAbs > uint256(type(int256).max)) {\\n            revert PRBMath__MulDivSignedOverflow(rAbs);\\n        }\\n\\n        // Get the signs of x, y and the denominator.\\n        uint256 sx;\\n        uint256 sy;\\n        uint256 sd;\\n        assembly {\\n            sx := sgt(x, sub(0, 1))\\n            sy := sgt(y, sub(0, 1))\\n            sd := sgt(denominator, sub(0, 1))\\n        }\\n\\n        // XOR over sx, sy and sd. This is checking whether there are one or three negative signs in the inputs.\\n        // If yes, the result should be negative.\\n        result = sx ^ sy ^ sd == 0 ? -int256(rAbs) : int256(rAbs);\\n    }\\n\\n    /// @notice Calculates the square root of x, rounding down.\\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\\n    ///\\n    /// Caveats:\\n    /// - This function does not work with fixed-point numbers.\\n    ///\\n    /// @param x The uint256 number for which to calculate the square root.\\n    /// @return result The result as an uint256.\\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n\\n        // Set the initial guess to the least power of two that is greater than or equal to sqrt(x).\\n        uint256 xAux = uint256(x);\\n        result = 1;\\n        if (xAux >= 0x100000000000000000000000000000000) {\\n            xAux >>= 128;\\n            result <<= 64;\\n        }\\n        if (xAux >= 0x10000000000000000) {\\n            xAux >>= 64;\\n            result <<= 32;\\n        }\\n        if (xAux >= 0x100000000) {\\n            xAux >>= 32;\\n            result <<= 16;\\n        }\\n        if (xAux >= 0x10000) {\\n            xAux >>= 16;\\n            result <<= 8;\\n        }\\n        if (xAux >= 0x100) {\\n            xAux >>= 8;\\n            result <<= 4;\\n        }\\n        if (xAux >= 0x10) {\\n            xAux >>= 4;\\n            result <<= 2;\\n        }\\n        if (xAux >= 0x8) {\\n            result <<= 1;\\n        }\\n\\n        // The operations can never overflow because the result is max 2^127 when it enters this block.\\n        unchecked {\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1; // Seven iterations should be enough\\n            uint256 roundedDownResult = x / result;\\n            return result >= roundedDownResult ? roundedDownResult : result;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcd5f95a3a6928ddbcb79ad407252c276e52a47f9d262d64130979d59a3bd4cd9\",\"license\":\"MIT\"},\"src/dependencies/prb-math/PRBMathUD60x18.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./PRBMath.sol\\\";\\n\\n/// @title PRBMathUD60x18\\n/// @author Paul Razvan Berg\\n/// @notice Smart contract library for advanced fixed-point math that works with uint256 numbers considered to have 18\\n/// trailing decimals. We call this number representation unsigned 60.18-decimal fixed-point, since there can be up to 60\\n/// digits in the integer part and up to 18 decimals in the fractional part. The numbers are bound by the minimum and the\\n/// maximum values permitted by the Solidity type uint256.\\nlibrary PRBMathUD60x18 {\\n    /// @dev Half the SCALE number.\\n    uint256 internal constant HALF_SCALE = 5e17;\\n\\n    /// @dev log2(e) as an unsigned 60.18-decimal fixed-point number.\\n    uint256 internal constant LOG2_E = 1_442695040888963407;\\n\\n    /// @dev The maximum value an unsigned 60.18-decimal fixed-point number can have.\\n    uint256 internal constant MAX_UD60x18 =\\n        115792089237316195423570985008687907853269984665640564039457_584007913129639935;\\n\\n    /// @dev The maximum whole value an unsigned 60.18-decimal fixed-point number can have.\\n    uint256 internal constant MAX_WHOLE_UD60x18 =\\n        115792089237316195423570985008687907853269984665640564039457_000000000000000000;\\n\\n    /// @dev How many trailing decimals can be represented.\\n    uint256 internal constant SCALE = 1e18;\\n\\n    /// @notice Calculates the arithmetic average of x and y, rounding down.\\n    /// @param x The first operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The second operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The arithmetic average as an unsigned 60.18-decimal fixed-point number.\\n    function avg(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        // The operations can never overflow.\\n        unchecked {\\n            // The last operand checks if both x and y are odd and if that is the case, we add 1 to the result. We need\\n            // to do this because if both numbers are odd, the 0.5 remainder gets truncated twice.\\n            result = (x >> 1) + (y >> 1) + (x & y & 1);\\n        }\\n    }\\n\\n    /// @notice Yields the least unsigned 60.18 decimal fixed-point number greater than or equal to x.\\n    ///\\n    /// @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\\n    /// See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\\n    ///\\n    /// Requirements:\\n    /// - x must be less than or equal to MAX_WHOLE_UD60x18.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number to ceil.\\n    /// @param result The least integer greater than or equal to x, as an unsigned 60.18-decimal fixed-point number.\\n    function ceil(uint256 x) internal pure returns (uint256 result) {\\n        if (x > MAX_WHOLE_UD60x18) {\\n            revert PRBMathUD60x18__CeilOverflow(x);\\n        }\\n        assembly {\\n            // Equivalent to \\\"x % SCALE\\\" but faster.\\n            let remainder := mod(x, SCALE)\\n\\n            // Equivalent to \\\"SCALE - remainder\\\" but faster.\\n            let delta := sub(SCALE, remainder)\\n\\n            // Equivalent to \\\"x + delta * (remainder > 0 ? 1 : 0)\\\" but faster.\\n            result := add(x, mul(delta, gt(remainder, 0)))\\n        }\\n    }\\n\\n    /// @notice Divides two unsigned 60.18-decimal fixed-point numbers, returning a new unsigned 60.18-decimal fixed-point number.\\n    ///\\n    /// @dev Uses mulDiv to enable overflow-safe multiplication and division.\\n    ///\\n    /// Requirements:\\n    /// - The denominator cannot be zero.\\n    ///\\n    /// @param x The numerator as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The denominator as an unsigned 60.18-decimal fixed-point number.\\n    /// @param result The quotient as an unsigned 60.18-decimal fixed-point number.\\n    function div(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        result = PRBMath.mulDiv(x, SCALE, y);\\n    }\\n\\n    /// @notice Returns Euler's number as an unsigned 60.18-decimal fixed-point number.\\n    /// @dev See https://en.wikipedia.org/wiki/E_(mathematical_constant).\\n    function e() internal pure returns (uint256 result) {\\n        result = 2_718281828459045235;\\n    }\\n\\n    /// @notice Calculates the natural exponent of x.\\n    ///\\n    /// @dev Based on the insight that e^x = 2^(x * log2(e)).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    /// - x must be less than 133.084258667509499441.\\n    ///\\n    /// @param x The exponent as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp(uint256 x) internal pure returns (uint256 result) {\\n        // Without this check, the value passed to \\\"exp2\\\" would be greater than 192.\\n        if (x >= 133_084258667509499441) {\\n            revert PRBMathUD60x18__ExpInputTooBig(x);\\n        }\\n\\n        // Do the fixed-point multiplication inline to save gas.\\n        unchecked {\\n            uint256 doubleScaleProduct = x * LOG2_E;\\n            result = exp2((doubleScaleProduct + HALF_SCALE) / SCALE);\\n        }\\n    }\\n\\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\\n    ///\\n    /// @dev See https://ethereum.stackexchange.com/q/79903/24693.\\n    ///\\n    /// Requirements:\\n    /// - x must be 192 or less.\\n    /// - The result must fit within MAX_UD60x18.\\n    ///\\n    /// @param x The exponent as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp2(uint256 x) internal pure returns (uint256 result) {\\n        // 2^192 doesn't fit within the 192.64-bit format used internally in this function.\\n        if (x >= 192e18) {\\n            revert PRBMathUD60x18__Exp2InputTooBig(x);\\n        }\\n\\n        unchecked {\\n            // Convert x to the 192.64-bit fixed-point format.\\n            uint256 x192x64 = (x << 64) / SCALE;\\n\\n            // Pass x to the PRBMath.exp2 function, which uses the 192.64-bit fixed-point number representation.\\n            result = PRBMath.exp2(x192x64);\\n        }\\n    }\\n\\n    /// @notice Yields the greatest unsigned 60.18 decimal fixed-point number less than or equal to x.\\n    /// @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\\n    /// See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to floor.\\n    /// @param result The greatest integer less than or equal to x, as an unsigned 60.18-decimal fixed-point number.\\n    function floor(uint256 x) internal pure returns (uint256 result) {\\n        assembly {\\n            // Equivalent to \\\"x % SCALE\\\" but faster.\\n            let remainder := mod(x, SCALE)\\n\\n            // Equivalent to \\\"x - remainder * (remainder > 0 ? 1 : 0)\\\" but faster.\\n            result := sub(x, mul(remainder, gt(remainder, 0)))\\n        }\\n    }\\n\\n    /// @notice Yields the excess beyond the floor of x.\\n    /// @dev Based on the odd function definition https://en.wikipedia.org/wiki/Fractional_part.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to get the fractional part of.\\n    /// @param result The fractional part of x as an unsigned 60.18-decimal fixed-point number.\\n    function frac(uint256 x) internal pure returns (uint256 result) {\\n        assembly {\\n            result := mod(x, SCALE)\\n        }\\n    }\\n\\n    /// @notice Converts a number from basic integer form to unsigned 60.18-decimal fixed-point representation.\\n    ///\\n    /// @dev Requirements:\\n    /// - x must be less than or equal to MAX_UD60x18 divided by SCALE.\\n    ///\\n    /// @param x The basic integer to convert.\\n    /// @param result The same number in unsigned 60.18-decimal fixed-point representation.\\n    function fromUint(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            if (x > MAX_UD60x18 / SCALE) {\\n                revert PRBMathUD60x18__FromUintOverflow(x);\\n            }\\n            result = x * SCALE;\\n        }\\n    }\\n\\n    /// @notice Calculates geometric mean of x and y, i.e. sqrt(x * y), rounding down.\\n    ///\\n    /// @dev Requirements:\\n    /// - x * y must fit within MAX_UD60x18, lest it overflows.\\n    ///\\n    /// @param x The first operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The second operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function gm(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n\\n        unchecked {\\n            // Checking for overflow this way is faster than letting Solidity do it.\\n            uint256 xy = x * y;\\n            if (xy / x != y) {\\n                revert PRBMathUD60x18__GmOverflow(x, y);\\n            }\\n\\n            // We don't need to multiply by the SCALE here because the x*y product had already picked up a factor of SCALE\\n            // during multiplication. See the comments within the \\\"sqrt\\\" function.\\n            result = PRBMath.sqrt(xy);\\n        }\\n    }\\n\\n    /// @notice Calculates 1 / x, rounding toward zero.\\n    ///\\n    /// @dev Requirements:\\n    /// - x cannot be zero.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the inverse.\\n    /// @return result The inverse as an unsigned 60.18-decimal fixed-point number.\\n    function inv(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 1e36 is SCALE * SCALE.\\n            result = 1e36 / x;\\n        }\\n    }\\n\\n    /// @notice Calculates the natural logarithm of x.\\n    ///\\n    /// @dev Based on the insight that ln(x) = log2(x) / log2(e).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"log2\\\".\\n    /// - This doesn't return exactly 1 for 2.718281828459045235, for that we would need more fine-grained precision.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the natural logarithm.\\n    /// @return result The natural logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function ln(uint256 x) internal pure returns (uint256 result) {\\n        // Do the fixed-point multiplication inline to save gas. This is overflow-safe because the maximum value that log2(x)\\n        // can return is 196205294292027477728.\\n        unchecked {\\n            result = (log2(x) * SCALE) / LOG2_E;\\n        }\\n    }\\n\\n    /// @notice Calculates the common logarithm of x.\\n    ///\\n    /// @dev First checks if x is an exact power of ten and it stops if yes. If it's not, calculates the common\\n    /// logarithm based on the insight that log10(x) = log2(x) / log2(10).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the common logarithm.\\n    /// @return result The common logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function log10(uint256 x) internal pure returns (uint256 result) {\\n        if (x < SCALE) {\\n            revert PRBMathUD60x18__LogInputTooSmall(x);\\n        }\\n\\n        // Note that the \\\"mul\\\" in this block is the assembly multiplication operation, not the \\\"mul\\\" function defined\\n        // in this contract.\\n        // prettier-ignore\\n        assembly {\\n            switch x\\n            case 1 { result := mul(SCALE, sub(0, 18)) }\\n            case 10 { result := mul(SCALE, sub(1, 18)) }\\n            case 100 { result := mul(SCALE, sub(2, 18)) }\\n            case 1000 { result := mul(SCALE, sub(3, 18)) }\\n            case 10000 { result := mul(SCALE, sub(4, 18)) }\\n            case 100000 { result := mul(SCALE, sub(5, 18)) }\\n            case 1000000 { result := mul(SCALE, sub(6, 18)) }\\n            case 10000000 { result := mul(SCALE, sub(7, 18)) }\\n            case 100000000 { result := mul(SCALE, sub(8, 18)) }\\n            case 1000000000 { result := mul(SCALE, sub(9, 18)) }\\n            case 10000000000 { result := mul(SCALE, sub(10, 18)) }\\n            case 100000000000 { result := mul(SCALE, sub(11, 18)) }\\n            case 1000000000000 { result := mul(SCALE, sub(12, 18)) }\\n            case 10000000000000 { result := mul(SCALE, sub(13, 18)) }\\n            case 100000000000000 { result := mul(SCALE, sub(14, 18)) }\\n            case 1000000000000000 { result := mul(SCALE, sub(15, 18)) }\\n            case 10000000000000000 { result := mul(SCALE, sub(16, 18)) }\\n            case 100000000000000000 { result := mul(SCALE, sub(17, 18)) }\\n            case 1000000000000000000 { result := 0 }\\n            case 10000000000000000000 { result := SCALE }\\n            case 100000000000000000000 { result := mul(SCALE, 2) }\\n            case 1000000000000000000000 { result := mul(SCALE, 3) }\\n            case 10000000000000000000000 { result := mul(SCALE, 4) }\\n            case 100000000000000000000000 { result := mul(SCALE, 5) }\\n            case 1000000000000000000000000 { result := mul(SCALE, 6) }\\n            case 10000000000000000000000000 { result := mul(SCALE, 7) }\\n            case 100000000000000000000000000 { result := mul(SCALE, 8) }\\n            case 1000000000000000000000000000 { result := mul(SCALE, 9) }\\n            case 10000000000000000000000000000 { result := mul(SCALE, 10) }\\n            case 100000000000000000000000000000 { result := mul(SCALE, 11) }\\n            case 1000000000000000000000000000000 { result := mul(SCALE, 12) }\\n            case 10000000000000000000000000000000 { result := mul(SCALE, 13) }\\n            case 100000000000000000000000000000000 { result := mul(SCALE, 14) }\\n            case 1000000000000000000000000000000000 { result := mul(SCALE, 15) }\\n            case 10000000000000000000000000000000000 { result := mul(SCALE, 16) }\\n            case 100000000000000000000000000000000000 { result := mul(SCALE, 17) }\\n            case 1000000000000000000000000000000000000 { result := mul(SCALE, 18) }\\n            case 10000000000000000000000000000000000000 { result := mul(SCALE, 19) }\\n            case 100000000000000000000000000000000000000 { result := mul(SCALE, 20) }\\n            case 1000000000000000000000000000000000000000 { result := mul(SCALE, 21) }\\n            case 10000000000000000000000000000000000000000 { result := mul(SCALE, 22) }\\n            case 100000000000000000000000000000000000000000 { result := mul(SCALE, 23) }\\n            case 1000000000000000000000000000000000000000000 { result := mul(SCALE, 24) }\\n            case 10000000000000000000000000000000000000000000 { result := mul(SCALE, 25) }\\n            case 100000000000000000000000000000000000000000000 { result := mul(SCALE, 26) }\\n            case 1000000000000000000000000000000000000000000000 { result := mul(SCALE, 27) }\\n            case 10000000000000000000000000000000000000000000000 { result := mul(SCALE, 28) }\\n            case 100000000000000000000000000000000000000000000000 { result := mul(SCALE, 29) }\\n            case 1000000000000000000000000000000000000000000000000 { result := mul(SCALE, 30) }\\n            case 10000000000000000000000000000000000000000000000000 { result := mul(SCALE, 31) }\\n            case 100000000000000000000000000000000000000000000000000 { result := mul(SCALE, 32) }\\n            case 1000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 33) }\\n            case 10000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 34) }\\n            case 100000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 35) }\\n            case 1000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 36) }\\n            case 10000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 37) }\\n            case 100000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 38) }\\n            case 1000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 39) }\\n            case 10000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 40) }\\n            case 100000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 41) }\\n            case 1000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 42) }\\n            case 10000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 43) }\\n            case 100000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 44) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 45) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 46) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 47) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 48) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 49) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 50) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 51) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 52) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 53) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 54) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 55) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 56) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 57) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 58) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 59) }\\n            default {\\n                result := MAX_UD60x18\\n            }\\n        }\\n\\n        if (result == MAX_UD60x18) {\\n            // Do the fixed-point division inline to save gas. The denominator is log2(10).\\n            unchecked {\\n                result = (log2(x) * SCALE) / 3_321928094887362347;\\n            }\\n        }\\n    }\\n\\n    /// @notice Calculates the binary logarithm of x.\\n    ///\\n    /// @dev Based on the iterative approximation algorithm.\\n    /// https://en.wikipedia.org/wiki/Binary_logarithm#Iterative_approximation\\n    ///\\n    /// Requirements:\\n    /// - x must be greater than or equal to SCALE, otherwise the result would be negative.\\n    ///\\n    /// Caveats:\\n    /// - The results are nor perfectly accurate to the last decimal, due to the lossy precision of the iterative approximation.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the binary logarithm.\\n    /// @return result The binary logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function log2(uint256 x) internal pure returns (uint256 result) {\\n        if (x < SCALE) {\\n            revert PRBMathUD60x18__LogInputTooSmall(x);\\n        }\\n        unchecked {\\n            // Calculate the integer part of the logarithm and add it to the result and finally calculate y = x * 2^(-n).\\n            uint256 n = PRBMath.mostSignificantBit(x / SCALE);\\n\\n            // The integer part of the logarithm as an unsigned 60.18-decimal fixed-point number. The operation can't overflow\\n            // because n is maximum 255 and SCALE is 1e18.\\n            result = n * SCALE;\\n\\n            // This is y = x * 2^(-n).\\n            uint256 y = x >> n;\\n\\n            // If y = 1, the fractional part is zero.\\n            if (y == SCALE) {\\n                return result;\\n            }\\n\\n            // Calculate the fractional part via the iterative approximation.\\n            // The \\\"delta >>= 1\\\" part is equivalent to \\\"delta /= 2\\\", but shifting bits is faster.\\n            for (uint256 delta = HALF_SCALE; delta > 0; delta >>= 1) {\\n                y = (y * y) / SCALE;\\n\\n                // Is y^2 > 2 and so in the range [2,4)?\\n                if (y >= 2 * SCALE) {\\n                    // Add the 2^(-m) factor to the logarithm.\\n                    result += delta;\\n\\n                    // Corresponds to z/2 on Wikipedia.\\n                    y >>= 1;\\n                }\\n            }\\n        }\\n    }\\n\\n    /// @notice Multiplies two unsigned 60.18-decimal fixed-point numbers together, returning a new unsigned 60.18-decimal\\n    /// fixed-point number.\\n    /// @dev See the documentation for the \\\"PRBMath.mulDivFixedPoint\\\" function.\\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The product as an unsigned 60.18-decimal fixed-point number.\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        result = PRBMath.mulDivFixedPoint(x, y);\\n    }\\n\\n    /// @notice Returns PI as an unsigned 60.18-decimal fixed-point number.\\n    function pi() internal pure returns (uint256 result) {\\n        result = 3_141592653589793238;\\n    }\\n\\n    /// @notice Raises x to the power of y.\\n    ///\\n    /// @dev Based on the insight that x^y = 2^(log2(x) * y).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"exp2\\\", \\\"log2\\\" and \\\"mul\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"exp2\\\", \\\"log2\\\" and \\\"mul\\\".\\n    /// - Assumes 0^0 is 1.\\n    ///\\n    /// @param x Number to raise to given power y, as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y Exponent to raise x to, as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result x raised to power y, as an unsigned 60.18-decimal fixed-point number.\\n    function pow(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            result = y == 0 ? SCALE : uint256(0);\\n        } else {\\n            result = exp2(mul(log2(x), y));\\n        }\\n    }\\n\\n    /// @notice Raises x (unsigned 60.18-decimal fixed-point number) to the power of y (basic unsigned integer) using the\\n    /// famous algorithm \\\"exponentiation by squaring\\\".\\n    ///\\n    /// @dev See https://en.wikipedia.org/wiki/Exponentiation_by_squaring\\n    ///\\n    /// Requirements:\\n    /// - The result must fit within MAX_UD60x18.\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"mul\\\".\\n    /// - Assumes 0^0 is 1.\\n    ///\\n    /// @param x The base as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The exponent as an uint256.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function powu(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        // Calculate the first iteration of the loop in advance.\\n        result = y & 1 > 0 ? x : SCALE;\\n\\n        // Equivalent to \\\"for(y /= 2; y > 0; y /= 2)\\\" but faster.\\n        for (y >>= 1; y > 0; y >>= 1) {\\n            x = PRBMath.mulDivFixedPoint(x, x);\\n\\n            // Equivalent to \\\"y % 2 == 1\\\" but faster.\\n            if (y & 1 > 0) {\\n                result = PRBMath.mulDivFixedPoint(result, x);\\n            }\\n        }\\n    }\\n\\n    /// @notice Returns 1 as an unsigned 60.18-decimal fixed-point number.\\n    function scale() internal pure returns (uint256 result) {\\n        result = SCALE;\\n    }\\n\\n    /// @notice Calculates the square root of x, rounding down.\\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\\n    ///\\n    /// Requirements:\\n    /// - x must be less than MAX_UD60x18 / SCALE.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the square root.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point .\\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            if (x > MAX_UD60x18 / SCALE) {\\n                revert PRBMathUD60x18__SqrtOverflow(x);\\n            }\\n            // Multiply x by the SCALE to account for the factor of SCALE that is picked up when multiplying two unsigned\\n            // 60.18-decimal fixed-point numbers together (in this case, those two numbers are both the square root).\\n            result = PRBMath.sqrt(x * SCALE);\\n        }\\n    }\\n\\n    /// @notice Converts a unsigned 60.18-decimal fixed-point number to basic integer form, rounding down in the process.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to convert.\\n    /// @return result The same number in basic integer form.\\n    function toUint(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            result = x / SCALE;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0c51a3408fc3bdf8746accf35e56f7844b3e0b05083be38545baecdf3f083e4f\",\"license\":\"MIT\"},\"src/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\ninterface IERC20 {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0xcdb6951e91d0eaa982638d567e2c8ac7d30f897b16bde3c2fdc2f4b4c51e70cd\",\"license\":\"MIT\"},\"src/interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\n/**\\n * @dev Interface for protocol price feeds.\\n */\\ninterface IPriceFeed {\\n    /*~~~ EVENT ~~~*/\\n\\n    /**\\n     * @dev Emitted after the price source of an asset is updated.\\n     *\\n     * @param asset The address of the asset.\\n     * @param source The price feed source of the asset.\\n     */\\n    event AssetPriceFeedSourceUpdated(\\n        address indexed asset,\\n        address indexed source\\n    );\\n\\n    /*~~~ MAIN LOGIC FUNCTIONS ~~~*/\\n\\n    /**\\n     * @dev Used to retrieve a given asset's price.\\n     *\\n     * @param _asset Address of the asset.\\n     * @return uint256 Price of the asset.\\n     */\\n    function getAssetPrice(address _asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd959ed0ca638b27203ad749ddf33d2721d72b2efd61ca39250b4a90c72f1ca9e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":294,"contract":"src/InterestSwap.sol:InterestSwap","label":"priceFeed","offset":0,"slot":"0","type":"t_contract(IPriceFeed)4080"},{"astId":297,"contract":"src/InterestSwap.sol:InterestSwap","label":"liquidityToken","offset":0,"slot":"1","type":"t_contract(IERC20)4061"},{"astId":317,"contract":"src/InterestSwap.sol:InterestSwap","label":"pools","offset":0,"slot":"2","type":"t_mapping(t_address,t_array(t_struct(Pool)306_storage)dyn_storage)"},{"astId":325,"contract":"src/InterestSwap.sol:InterestSwap","label":"isAssetSupported","offset":0,"slot":"3","type":"t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool)))"},{"astId":328,"contract":"src/InterestSwap.sol:InterestSwap","label":"priceModels","offset":0,"slot":"4","type":"t_array(t_address)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_struct(Pool)306_storage)dyn_storage":{"base":"t_struct(Pool)306_storage","encoding":"dynamic_array","label":"struct InterestSwap.Pool[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IERC20)4061":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_contract(IPriceFeed)4080":{"encoding":"inplace","label":"contract IPriceFeed","numberOfBytes":"20"},"t_contract(PriceModel)938":{"encoding":"inplace","label":"contract PriceModel","numberOfBytes":"20"},"t_mapping(t_address,t_array(t_struct(Pool)306_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct InterestSwap.Pool[])","numberOfBytes":"32","value":"t_array(t_struct(Pool)306_storage)dyn_storage"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool)))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => mapping(address => bool)))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_mapping(t_address,t_bool))"},"t_mapping(t_uint256,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_struct(Pool)306_storage":{"encoding":"inplace","label":"struct InterestSwap.Pool","members":[{"astId":300,"contract":"src/InterestSwap.sol:InterestSwap","label":"acceptedTokens","offset":0,"slot":"0","type":"t_array(t_address)dyn_storage"},{"astId":302,"contract":"src/InterestSwap.sol:InterestSwap","label":"totalLiquidity","offset":0,"slot":"1","type":"t_uint256"},{"astId":305,"contract":"src/InterestSwap.sol:InterestSwap","label":"priceModel","offset":0,"slot":"2","type":"t_contract(PriceModel)938"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"errors":{"PRBMath__MulDivFixedPointOverflow(uint256)":[{"notice":"Emitted when the result overflows uint256."}]},"kind":"user","methods":{},"version":1}}},"src/InterestSwapPeriphery.sol":{"InterestSwapPeriphery":{"abi":[{"inputs":[{"internalType":"address","name":"_interestSwap","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"_lp","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getPool","outputs":[{"components":[{"internalType":"address","name":"priceModel","type":"address"},{"components":[{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"tokenAddress","type":"address"}],"internalType":"struct InterestSwapPeriphery.TokenInfo","name":"liquidityToken","type":"tuple"},{"components":[{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"tokenAddress","type":"address"}],"internalType":"struct InterestSwapPeriphery.TokenInfo[]","name":"acceptedTokens","type":"tuple[]"},{"internalType":"uint256","name":"totalLiquidity","type":"uint256"}],"internalType":"struct InterestSwapPeriphery.PoolInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lp","type":"address"}],"name":"getPools","outputs":[{"components":[{"internalType":"address","name":"priceModel","type":"address"},{"components":[{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"tokenAddress","type":"address"}],"internalType":"struct InterestSwapPeriphery.TokenInfo","name":"liquidityToken","type":"tuple"},{"components":[{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"tokenAddress","type":"address"}],"internalType":"struct InterestSwapPeriphery.TokenInfo[]","name":"acceptedTokens","type":"tuple[]"},{"internalType":"uint256","name":"totalLiquidity","type":"uint256"}],"internalType":"struct InterestSwapPeriphery.PoolInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"interestSwap","outputs":[{"internalType":"contract InterestSwap","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_713":{"entryPoint":null,"id":713,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":232,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":163,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":131,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":126,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":183,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:15","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:15","statements":[{"nodeType":"YulAssignment","src":"57:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:15"},"nodeType":"YulFunctionCall","src":"67:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:15","type":""}],"src":"7:75:15"},{"body":{"nodeType":"YulBlock","src":"177:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:15"},"nodeType":"YulFunctionCall","src":"187:12:15"},"nodeType":"YulExpressionStatement","src":"187:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:15"},{"body":{"nodeType":"YulBlock","src":"300:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:15"},"nodeType":"YulFunctionCall","src":"310:12:15"},"nodeType":"YulExpressionStatement","src":"310:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:15"},{"body":{"nodeType":"YulBlock","src":"379:81:15","statements":[{"nodeType":"YulAssignment","src":"389:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:15"},"nodeType":"YulFunctionCall","src":"400:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:15","type":""}],"src":"334:126:15"},{"body":{"nodeType":"YulBlock","src":"511:51:15","statements":[{"nodeType":"YulAssignment","src":"521:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:15"},"nodeType":"YulFunctionCall","src":"532:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:15","type":""}],"src":"466:96:15"},{"body":{"nodeType":"YulBlock","src":"611:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:15"},"nodeType":"YulFunctionCall","src":"670:12:15"},"nodeType":"YulExpressionStatement","src":"670:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:15"},"nodeType":"YulFunctionCall","src":"641:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:15"},"nodeType":"YulFunctionCall","src":"631:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:15"},"nodeType":"YulFunctionCall","src":"624:43:15"},"nodeType":"YulIf","src":"621:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:15","type":""}],"src":"568:122:15"},{"body":{"nodeType":"YulBlock","src":"759:80:15","statements":[{"nodeType":"YulAssignment","src":"769:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:15"},"nodeType":"YulFunctionCall","src":"778:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:15"},"nodeType":"YulFunctionCall","src":"800:33:15"},"nodeType":"YulExpressionStatement","src":"800:33:15"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:15","type":""}],"src":"696:143:15"},{"body":{"nodeType":"YulBlock","src":"922:274:15","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:15"},"nodeType":"YulFunctionCall","src":"970:79:15"},"nodeType":"YulExpressionStatement","src":"970:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:15"},"nodeType":"YulFunctionCall","src":"939:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:15"},"nodeType":"YulFunctionCall","src":"935:32:15"},"nodeType":"YulIf","src":"932:119:15"},{"nodeType":"YulBlock","src":"1061:128:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:15"},"nodeType":"YulFunctionCall","src":"1147:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:15"},"nodeType":"YulFunctionCall","src":"1115:64:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:15"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:15","type":""}],"src":"845:351:15"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620012e6380380620012e68339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b6111bc806200012a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635b5b9ea2146100465780635c39f467146100765780635ff9d06f146100a6575b600080fd5b610060600480360381019061005b9190610764565b6100c4565b60405161006d9190610a04565b60405180910390f35b610090600480360381019061008b9190610a26565b61025c565b60405161009d9190610b7f565b60405180910390f35b6100ae6103a6565b6040516100bb9190610c00565b60405180910390f35b6100cc610637565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635b5b9ea285856040518363ffffffff1660e01b815260040161012a929190610c39565b600060405180830381865afa158015610147573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101709190610e9c565b90506040518060800160405280826040015173ffffffffffffffffffffffffffffffffffffffff16815260200161023460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561020b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022f9190610f23565b6103ca565b8152602001610246836000015161056d565b8152602001826020015181525091505092915050565b606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663387dd500846040518263ffffffff1660e01b81526004016102ba9190610f50565b602060405180830381865afa1580156102d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fb9190610f6b565b905060008167ffffffffffffffff81111561031957610318610c67565b5b60405190808252806020026020018201604052801561035257816020015b61033f610637565b8152602001906001900390816103375790505b50905060005b8281101561039b5761036a85826100c4565b82828151811061037d5761037c610f98565b5b6020026020010181905250808061039390610ff6565b915050610358565b508092505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103d261067b565b600082905060405180608001604052808273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561042d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610451919061106a565b60ff1681526020018273ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156104a4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104cd919061113d565b81526020018273ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801561051d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610546919061113d565b81526020018473ffffffffffffffffffffffffffffffffffffffff16815250915050919050565b606060008251905060008167ffffffffffffffff81111561059157610590610c67565b5b6040519080825280602002602001820160405280156105ca57816020015b6105b761067b565b8152602001906001900390816105af5790505b50905060005b8281101561062c576105fb8582815181106105ee576105ed610f98565b5b60200260200101516103ca565b82828151811061060e5761060d610f98565b5b6020026020010181905250808061062490610ff6565b9150506105d0565b508092505050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200161066761067b565b815260200160608152602001600081525090565b6040518060800160405280600060ff1681526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106fb826106d0565b9050919050565b61070b816106f0565b811461071657600080fd5b50565b60008135905061072881610702565b92915050565b6000819050919050565b6107418161072e565b811461074c57600080fd5b50565b60008135905061075e81610738565b92915050565b6000806040838503121561077b5761077a6106c6565b5b600061078985828601610719565b925050602061079a8582860161074f565b9150509250929050565b6107ad816106f0565b82525050565b600060ff82169050919050565b6107c9816107b3565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108095780820151818401526020810190506107ee565b60008484015250505050565b6000601f19601f8301169050919050565b6000610831826107cf565b61083b81856107da565b935061084b8185602086016107eb565b61085481610815565b840191505092915050565b600060808301600083015161087760008601826107c0565b506020830151848203602086015261088f8282610826565b915050604083015184820360408601526108a98282610826565b91505060608301516108be60608601826107a4565b508091505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000610901838361085f565b905092915050565b6000602082019050919050565b6000610921826108c9565b61092b81856108d4565b93508360208202850161093d856108e5565b8060005b85811015610979578484038952815161095a85826108f5565b945061096583610909565b925060208a01995050600181019050610941565b50829750879550505050505092915050565b6109948161072e565b82525050565b60006080830160008301516109b260008601826107a4565b50602083015184820360208601526109ca828261085f565b915050604083015184820360408601526109e48282610916565b91505060608301516109f9606086018261098b565b508091505092915050565b60006020820190508181036000830152610a1e818461099a565b905092915050565b600060208284031215610a3c57610a3b6106c6565b5b6000610a4a84828501610719565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000608083016000830151610a9760008601826107a4565b5060208301518482036020860152610aaf828261085f565b91505060408301518482036040860152610ac98282610916565b9150506060830151610ade606086018261098b565b508091505092915050565b6000610af58383610a7f565b905092915050565b6000602082019050919050565b6000610b1582610a53565b610b1f8185610a5e565b935083602082028501610b3185610a6f565b8060005b85811015610b6d5784840389528151610b4e8582610ae9565b9450610b5983610afd565b925060208a01995050600181019050610b35565b50829750879550505050505092915050565b60006020820190508181036000830152610b998184610b0a565b905092915050565b6000819050919050565b6000610bc6610bc1610bbc846106d0565b610ba1565b6106d0565b9050919050565b6000610bd882610bab565b9050919050565b6000610bea82610bcd565b9050919050565b610bfa81610bdf565b82525050565b6000602082019050610c156000830184610bf1565b92915050565b610c24816106f0565b82525050565b610c338161072e565b82525050565b6000604082019050610c4e6000830185610c1b565b610c5b6020830184610c2a565b9392505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c9f82610815565b810181811067ffffffffffffffff82111715610cbe57610cbd610c67565b5b80604052505050565b6000610cd16106bc565b9050610cdd8282610c96565b919050565b600080fd5b600080fd5b600067ffffffffffffffff821115610d0757610d06610c67565b5b602082029050602081019050919050565b600080fd5b600081519050610d2c81610702565b92915050565b6000610d45610d4084610cec565b610cc7565b90508083825260208201905060208402830185811115610d6857610d67610d18565b5b835b81811015610d915780610d7d8882610d1d565b845260208401935050602081019050610d6a565b5050509392505050565b600082601f830112610db057610daf610ce7565b5b8151610dc0848260208601610d32565b91505092915050565b600081519050610dd881610738565b92915050565b6000610de9826106f0565b9050919050565b610df981610dde565b8114610e0457600080fd5b50565b600081519050610e1681610df0565b92915050565b600060608284031215610e3257610e31610c62565b5b610e3c6060610cc7565b9050600082015167ffffffffffffffff811115610e5c57610e5b610ce2565b5b610e6884828501610d9b565b6000830152506020610e7c84828501610dc9565b6020830152506040610e9084828501610e07565b60408301525092915050565b600060208284031215610eb257610eb16106c6565b5b600082015167ffffffffffffffff811115610ed057610ecf6106cb565b5b610edc84828501610e1c565b91505092915050565b6000610ef0826106f0565b9050919050565b610f0081610ee5565b8114610f0b57600080fd5b50565b600081519050610f1d81610ef7565b92915050565b600060208284031215610f3957610f386106c6565b5b6000610f4784828501610f0e565b91505092915050565b6000602082019050610f656000830184610c1b565b92915050565b600060208284031215610f8157610f806106c6565b5b6000610f8f84828501610dc9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110018261072e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361103357611032610fc7565b5b600182019050919050565b611047816107b3565b811461105257600080fd5b50565b6000815190506110648161103e565b92915050565b6000602082840312156110805761107f6106c6565b5b600061108e84828501611055565b91505092915050565b600080fd5b600067ffffffffffffffff8211156110b7576110b6610c67565b5b6110c082610815565b9050602081019050919050565b60006110e06110db8461109c565b610cc7565b9050828152602081018484840111156110fc576110fb611097565b5b6111078482856107eb565b509392505050565b600082601f83011261112457611123610ce7565b5b81516111348482602086016110cd565b91505092915050565b600060208284031215611153576111526106c6565b5b600082015167ffffffffffffffff811115611171576111706106cb565b5b61117d8482850161110f565b9150509291505056fea2646970667358221220026eeeb7fb16221f067609938e1a243dd226852eec012cb7a5c28feeb1196cf164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x12E6 CODESIZE SUB DUP1 PUSH3 0x12E6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xE8 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x11A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB0 DUP3 PUSH3 0x83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC2 DUP2 PUSH3 0xA3 JUMP JUMPDEST DUP2 EQ PUSH3 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xE2 DUP2 PUSH3 0xB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x101 JUMPI PUSH3 0x100 PUSH3 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x111 DUP5 DUP3 DUP6 ADD PUSH3 0xD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11BC DUP1 PUSH3 0x12A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B5B9EA2 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x5C39F467 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x5FF9D06F EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x25C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH2 0x637 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5B5B9EA2 DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A SWAP3 SWAP2 SWAP1 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x147 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x234 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x246 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x56D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x20 ADD MLOAD DUP2 MSTORE POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x387DD500 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x319 JUMPI PUSH2 0x318 PUSH2 0xC67 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x352 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x33F PUSH2 0x637 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x337 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39B JUMPI PUSH2 0x36A DUP6 DUP3 PUSH2 0xC4 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x37D JUMPI PUSH2 0x37C PUSH2 0xF98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x393 SWAP1 PUSH2 0xFF6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x358 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x67B JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x451 SWAP2 SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x51D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x591 JUMPI PUSH2 0x590 PUSH2 0xC67 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5CA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x5B7 PUSH2 0x67B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x5AF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x62C JUMPI PUSH2 0x5FB DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5EE JUMPI PUSH2 0x5ED PUSH2 0xF98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3CA JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x60E JUMPI PUSH2 0x60D PUSH2 0xF98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x624 SWAP1 PUSH2 0xFF6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5D0 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x667 PUSH2 0x67B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FB DUP3 PUSH2 0x6D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x70B DUP2 PUSH2 0x6F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x728 DUP2 PUSH2 0x702 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x741 DUP2 PUSH2 0x72E JUMP JUMPDEST DUP2 EQ PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x75E DUP2 PUSH2 0x738 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x77B JUMPI PUSH2 0x77A PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x789 DUP6 DUP3 DUP7 ADD PUSH2 0x719 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x79A DUP6 DUP3 DUP7 ADD PUSH2 0x74F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AD DUP2 PUSH2 0x6F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C9 DUP2 PUSH2 0x7B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x809 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x831 DUP3 PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x83B DUP2 DUP6 PUSH2 0x7DA JUMP JUMPDEST SWAP4 POP PUSH2 0x84B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x854 DUP2 PUSH2 0x815 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x877 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x7C0 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x88F DUP3 DUP3 PUSH2 0x826 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x8A9 DUP3 DUP3 PUSH2 0x826 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x8BE PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x7A4 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x901 DUP4 DUP4 PUSH2 0x85F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x921 DUP3 PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0x92B DUP2 DUP6 PUSH2 0x8D4 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x93D DUP6 PUSH2 0x8E5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x979 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x95A DUP6 DUP3 PUSH2 0x8F5 JUMP JUMPDEST SWAP5 POP PUSH2 0x965 DUP4 PUSH2 0x909 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x941 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x994 DUP2 PUSH2 0x72E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x9B2 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x7A4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x9CA DUP3 DUP3 PUSH2 0x85F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x9E4 DUP3 DUP3 PUSH2 0x916 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x9F9 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x98B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA1E DUP2 DUP5 PUSH2 0x99A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3C JUMPI PUSH2 0xA3B PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA4A DUP5 DUP3 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0xA97 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x7A4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0xAAF DUP3 DUP3 PUSH2 0x85F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0xAC9 DUP3 DUP3 PUSH2 0x916 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xADE PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x98B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF5 DUP4 DUP4 PUSH2 0xA7F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB15 DUP3 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0xB1F DUP2 DUP6 PUSH2 0xA5E JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0xB31 DUP6 PUSH2 0xA6F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xB6D JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0xB4E DUP6 DUP3 PUSH2 0xAE9 JUMP JUMPDEST SWAP5 POP PUSH2 0xB59 DUP4 PUSH2 0xAFD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xB35 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB99 DUP2 DUP5 PUSH2 0xB0A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC6 PUSH2 0xBC1 PUSH2 0xBBC DUP5 PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD8 DUP3 PUSH2 0xBAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEA DUP3 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBFA DUP2 PUSH2 0xBDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC15 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC24 DUP2 PUSH2 0x6F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC33 DUP2 PUSH2 0x72E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC4E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0xC5B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC2A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC9F DUP3 PUSH2 0x815 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCBE JUMPI PUSH2 0xCBD PUSH2 0xC67 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD1 PUSH2 0x6BC JUMP JUMPDEST SWAP1 POP PUSH2 0xCDD DUP3 DUP3 PUSH2 0xC96 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xC67 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD2C DUP2 PUSH2 0x702 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD45 PUSH2 0xD40 DUP5 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0xCC7 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xD68 JUMPI PUSH2 0xD67 PUSH2 0xD18 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD91 JUMPI DUP1 PUSH2 0xD7D DUP9 DUP3 PUSH2 0xD1D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD6A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDB0 JUMPI PUSH2 0xDAF PUSH2 0xCE7 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xDC0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xDD8 DUP2 PUSH2 0x738 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE9 DUP3 PUSH2 0x6F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF9 DUP2 PUSH2 0xDDE JUMP JUMPDEST DUP2 EQ PUSH2 0xE04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE16 DUP2 PUSH2 0xDF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE32 JUMPI PUSH2 0xE31 PUSH2 0xC62 JUMP JUMPDEST JUMPDEST PUSH2 0xE3C PUSH1 0x60 PUSH2 0xCC7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE5C JUMPI PUSH2 0xE5B PUSH2 0xCE2 JUMP JUMPDEST JUMPDEST PUSH2 0xE68 DUP5 DUP3 DUP6 ADD PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xE7C DUP5 DUP3 DUP6 ADD PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xE90 DUP5 DUP3 DUP6 ADD PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB2 JUMPI PUSH2 0xEB1 PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xED0 JUMPI PUSH2 0xECF PUSH2 0x6CB JUMP JUMPDEST JUMPDEST PUSH2 0xEDC DUP5 DUP3 DUP6 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF0 DUP3 PUSH2 0x6F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF00 DUP2 PUSH2 0xEE5 JUMP JUMPDEST DUP2 EQ PUSH2 0xF0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF1D DUP2 PUSH2 0xEF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF39 JUMPI PUSH2 0xF38 PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF47 DUP5 DUP3 DUP6 ADD PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF81 JUMPI PUSH2 0xF80 PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF8F DUP5 DUP3 DUP6 ADD PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1001 DUP3 PUSH2 0x72E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1033 JUMPI PUSH2 0x1032 PUSH2 0xFC7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1047 DUP2 PUSH2 0x7B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1052 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1064 DUP2 PUSH2 0x103E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1080 JUMPI PUSH2 0x107F PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x108E DUP5 DUP3 DUP6 ADD PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x10B7 JUMPI PUSH2 0x10B6 PUSH2 0xC67 JUMP JUMPDEST JUMPDEST PUSH2 0x10C0 DUP3 PUSH2 0x815 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E0 PUSH2 0x10DB DUP5 PUSH2 0x109C JUMP JUMPDEST PUSH2 0xCC7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x10FC JUMPI PUSH2 0x10FB PUSH2 0x1097 JUMP JUMPDEST JUMPDEST PUSH2 0x1107 DUP5 DUP3 DUP6 PUSH2 0x7EB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1124 JUMPI PUSH2 0x1123 PUSH2 0xCE7 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1134 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x10CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1153 JUMPI PUSH2 0x1152 PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1171 JUMPI PUSH2 0x1170 PUSH2 0x6CB JUMP JUMPDEST JUMPDEST PUSH2 0x117D DUP5 DUP3 DUP6 ADD PUSH2 0x110F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL PUSH15 0xEEB7FB16221F067609938E1A243DD2 0x26 DUP6 0x2E 0xEC ADD 0x2C 0xB7 0xA5 0xC2 DUP16 0xEE 0xB1 NOT PUSH13 0xF164736F6C6343000811003300 ","sourceMap":"156:2005:2:-:0;;;519:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;592:13;564:12;;:42;;;;;;;;;;;;;;;;;;519:94;156:2005;;88:117:15;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;156:2005:2:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@getPool_809":{"entryPoint":196,"id":809,"parameterSlots":2,"returnSlots":1},"@getPools_765":{"entryPoint":604,"id":765,"parameterSlots":1,"returnSlots":1},"@getTokenInfo_838":{"entryPoint":970,"id":838,"parameterSlots":1,"returnSlots":1},"@getTokensInfo_890":{"entryPoint":1389,"id":890,"parameterSlots":1,"returnSlots":1},"@interestSwap_680":{"entryPoint":934,"id":680,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":3378,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":4301,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1817,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":3357,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":3483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$4061_fromMemory":{"entryPoint":3854,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_PriceModel_$938_fromMemory":{"entryPoint":3591,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":4367,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_Pool_$306_memory_ptr_fromMemory":{"entryPoint":3612,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1871,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3529,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8_fromMemory":{"entryPoint":4181,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2598,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1892,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_contract$_IERC20_$4061_fromMemory":{"entryPoint":3875,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr_fromMemory":{"entryPoint":4413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_Pool_$306_memory_ptr_fromMemory":{"entryPoint":3740,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3947,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":4202,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_PoolInfo_$701_memory_ptr_to_t_struct$_PoolInfo_$701_memory_ptr":{"entryPoint":2793,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_TokenInfo_$689_memory_ptr_to_t_struct$_TokenInfo_$689_memory_ptr":{"entryPoint":2293,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":1956,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3099,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":2826,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr":{"entryPoint":2326,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_InterestSwap_$671_to_t_address_fromStack":{"entryPoint":3057,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":2086,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_PoolInfo_$701_memory_ptr_to_t_struct$_PoolInfo_$701_memory_ptr":{"entryPoint":2687,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_PoolInfo_$701_memory_ptr_to_t_struct$_PoolInfo_$701_memory_ptr_fromStack":{"entryPoint":2458,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_TokenInfo_$689_memory_ptr_to_t_struct$_TokenInfo_$689_memory_ptr":{"entryPoint":2143,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":2443,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3114,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8":{"entryPoint":1984,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3920,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":3129,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":2943,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_InterestSwap_$671__to_t_address__fromStack_reversed":{"entryPoint":3072,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_PoolInfo_$701_memory_ptr__to_t_struct$_PoolInfo_$701_memory_ptr__fromStack_reversed":{"entryPoint":2564,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3271,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1724,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":3308,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":4252,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr":{"entryPoint":2671,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr":{"entryPoint":2277,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr":{"entryPoint":2643,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr":{"entryPoint":2249,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1999,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr":{"entryPoint":2813,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr":{"entryPoint":2313,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":2654,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr":{"entryPoint":2260,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":2010,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1776,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$4061":{"entryPoint":3813,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_PriceModel_$938":{"entryPoint":3550,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1744,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1838,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":1971,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_InterestSwap_$671_to_t_address":{"entryPoint":3039,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":3021,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":2987,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2027,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":3222,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":2977,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":4086,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4039,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3992,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3175,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3303,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":3170,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":3298,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3352,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4247,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1739,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1734,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2069,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1794,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$4061":{"entryPoint":3831,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_PriceModel_$938":{"entryPoint":3568,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1848,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":4158,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23097:15","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:15","statements":[{"nodeType":"YulAssignment","src":"57:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:15"},"nodeType":"YulFunctionCall","src":"67:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:15","type":""}],"src":"7:75:15"},{"body":{"nodeType":"YulBlock","src":"177:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:15"},"nodeType":"YulFunctionCall","src":"187:12:15"},"nodeType":"YulExpressionStatement","src":"187:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:15"},{"body":{"nodeType":"YulBlock","src":"300:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:15"},"nodeType":"YulFunctionCall","src":"310:12:15"},"nodeType":"YulExpressionStatement","src":"310:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:15"},{"body":{"nodeType":"YulBlock","src":"379:81:15","statements":[{"nodeType":"YulAssignment","src":"389:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:15"},"nodeType":"YulFunctionCall","src":"400:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:15","type":""}],"src":"334:126:15"},{"body":{"nodeType":"YulBlock","src":"511:51:15","statements":[{"nodeType":"YulAssignment","src":"521:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:15"},"nodeType":"YulFunctionCall","src":"532:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:15","type":""}],"src":"466:96:15"},{"body":{"nodeType":"YulBlock","src":"611:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:15"},"nodeType":"YulFunctionCall","src":"670:12:15"},"nodeType":"YulExpressionStatement","src":"670:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:15"},"nodeType":"YulFunctionCall","src":"641:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:15"},"nodeType":"YulFunctionCall","src":"631:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:15"},"nodeType":"YulFunctionCall","src":"624:43:15"},"nodeType":"YulIf","src":"621:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:15","type":""}],"src":"568:122:15"},{"body":{"nodeType":"YulBlock","src":"748:87:15","statements":[{"nodeType":"YulAssignment","src":"758:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:15"},"nodeType":"YulFunctionCall","src":"767:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:15"},"nodeType":"YulFunctionCall","src":"796:33:15"},"nodeType":"YulExpressionStatement","src":"796:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:15","type":""}],"src":"696:139:15"},{"body":{"nodeType":"YulBlock","src":"886:32:15","statements":[{"nodeType":"YulAssignment","src":"896:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:15","type":""}],"src":"841:77:15"},{"body":{"nodeType":"YulBlock","src":"967:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:15"},"nodeType":"YulFunctionCall","src":"1026:12:15"},"nodeType":"YulExpressionStatement","src":"1026:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:15"},"nodeType":"YulFunctionCall","src":"997:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:15"},"nodeType":"YulFunctionCall","src":"987:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:15"},"nodeType":"YulFunctionCall","src":"980:43:15"},"nodeType":"YulIf","src":"977:63:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:15","type":""}],"src":"924:122:15"},{"body":{"nodeType":"YulBlock","src":"1104:87:15","statements":[{"nodeType":"YulAssignment","src":"1114:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:15"},"nodeType":"YulFunctionCall","src":"1123:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:15"},"nodeType":"YulFunctionCall","src":"1152:33:15"},"nodeType":"YulExpressionStatement","src":"1152:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:15","type":""}],"src":"1052:139:15"},{"body":{"nodeType":"YulBlock","src":"1280:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:15"},"nodeType":"YulFunctionCall","src":"1328:79:15"},"nodeType":"YulExpressionStatement","src":"1328:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:15"},"nodeType":"YulFunctionCall","src":"1297:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:15"},"nodeType":"YulFunctionCall","src":"1293:32:15"},"nodeType":"YulIf","src":"1290:119:15"},{"nodeType":"YulBlock","src":"1419:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:15"},"nodeType":"YulFunctionCall","src":"1494:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1473:20:15"},"nodeType":"YulFunctionCall","src":"1473:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:15"}]}]},{"nodeType":"YulBlock","src":"1546:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:15"},"nodeType":"YulFunctionCall","src":"1622:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1601:20:15"},"nodeType":"YulFunctionCall","src":"1601:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:15","type":""}],"src":"1197:474:15"},{"body":{"nodeType":"YulBlock","src":"1732:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1749:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1772:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1754:17:15"},"nodeType":"YulFunctionCall","src":"1754:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1742:6:15"},"nodeType":"YulFunctionCall","src":"1742:37:15"},"nodeType":"YulExpressionStatement","src":"1742:37:15"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1720:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1727:3:15","type":""}],"src":"1677:108:15"},{"body":{"nodeType":"YulBlock","src":"1834:43:15","statements":[{"nodeType":"YulAssignment","src":"1844:27:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1859:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1866:4:15","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1855:3:15"},"nodeType":"YulFunctionCall","src":"1855:16:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1844:7:15"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1816:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1826:7:15","type":""}],"src":"1791:86:15"},{"body":{"nodeType":"YulBlock","src":"1934:51:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1951:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1972:5:15"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"1956:15:15"},"nodeType":"YulFunctionCall","src":"1956:22:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1944:6:15"},"nodeType":"YulFunctionCall","src":"1944:35:15"},"nodeType":"YulExpressionStatement","src":"1944:35:15"}]},"name":"abi_encode_t_uint8_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1922:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1929:3:15","type":""}],"src":"1883:102:15"},{"body":{"nodeType":"YulBlock","src":"2050:40:15","statements":[{"nodeType":"YulAssignment","src":"2061:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2077:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2071:5:15"},"nodeType":"YulFunctionCall","src":"2071:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2061:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2033:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2043:6:15","type":""}],"src":"1991:99:15"},{"body":{"nodeType":"YulBlock","src":"2182:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2199:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2204:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2192:6:15"},"nodeType":"YulFunctionCall","src":"2192:19:15"},"nodeType":"YulExpressionStatement","src":"2192:19:15"},{"nodeType":"YulAssignment","src":"2220:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2239:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2244:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2235:3:15"},"nodeType":"YulFunctionCall","src":"2235:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2220:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2154:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"2159:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2170:11:15","type":""}],"src":"2096:159:15"},{"body":{"nodeType":"YulBlock","src":"2323:184:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2333:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2342:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2337:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2402:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2427:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"2432:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2423:3:15"},"nodeType":"YulFunctionCall","src":"2423:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2446:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"2451:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2442:3:15"},"nodeType":"YulFunctionCall","src":"2442:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2436:5:15"},"nodeType":"YulFunctionCall","src":"2436:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2416:6:15"},"nodeType":"YulFunctionCall","src":"2416:39:15"},"nodeType":"YulExpressionStatement","src":"2416:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2363:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"2366:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2360:2:15"},"nodeType":"YulFunctionCall","src":"2360:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2374:19:15","statements":[{"nodeType":"YulAssignment","src":"2376:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2385:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"2388:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2381:3:15"},"nodeType":"YulFunctionCall","src":"2381:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2376:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"2356:3:15","statements":[]},"src":"2352:113:15"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2485:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2490:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2481:3:15"},"nodeType":"YulFunctionCall","src":"2481:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"2499:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2474:6:15"},"nodeType":"YulFunctionCall","src":"2474:27:15"},"nodeType":"YulExpressionStatement","src":"2474:27:15"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2305:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2310:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"2315:6:15","type":""}],"src":"2261:246:15"},{"body":{"nodeType":"YulBlock","src":"2561:54:15","statements":[{"nodeType":"YulAssignment","src":"2571:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2589:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2596:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2585:3:15"},"nodeType":"YulFunctionCall","src":"2585:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2605:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2601:3:15"},"nodeType":"YulFunctionCall","src":"2601:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2581:3:15"},"nodeType":"YulFunctionCall","src":"2581:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2571:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2544:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2554:6:15","type":""}],"src":"2513:102:15"},{"body":{"nodeType":"YulBlock","src":"2703:275:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2713:53:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2760:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2727:32:15"},"nodeType":"YulFunctionCall","src":"2727:39:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2717:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2775:68:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2831:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2836:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2782:48:15"},"nodeType":"YulFunctionCall","src":"2782:61:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2775:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2891:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2898:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2887:3:15"},"nodeType":"YulFunctionCall","src":"2887:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"2905:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2910:6:15"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2852:34:15"},"nodeType":"YulFunctionCall","src":"2852:65:15"},"nodeType":"YulExpressionStatement","src":"2852:65:15"},{"nodeType":"YulAssignment","src":"2926:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2937:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2964:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2942:21:15"},"nodeType":"YulFunctionCall","src":"2942:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2933:3:15"},"nodeType":"YulFunctionCall","src":"2933:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2926:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2684:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2691:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2699:3:15","type":""}],"src":"2621:357:15"},{"body":{"nodeType":"YulBlock","src":"3188:911:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3198:26:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3214:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3219:4:15","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3210:3:15"},"nodeType":"YulFunctionCall","src":"3210:14:15"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"3202:4:15","type":""}]},{"nodeType":"YulBlock","src":"3234:164:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3273:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3303:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"3310:4:15","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:15"},"nodeType":"YulFunctionCall","src":"3299:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3293:5:15"},"nodeType":"YulFunctionCall","src":"3293:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3277:12:15","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3359:12:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3377:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3382:4:15","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3373:3:15"},"nodeType":"YulFunctionCall","src":"3373:14:15"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8","nodeType":"YulIdentifier","src":"3329:29:15"},"nodeType":"YulFunctionCall","src":"3329:59:15"},"nodeType":"YulExpressionStatement","src":"3329:59:15"}]},{"nodeType":"YulBlock","src":"3408:235:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3443:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3473:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"3480:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3469:3:15"},"nodeType":"YulFunctionCall","src":"3469:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3463:5:15"},"nodeType":"YulFunctionCall","src":"3463:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3447:12:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3511:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3516:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3507:3:15"},"nodeType":"YulFunctionCall","src":"3507:14:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3527:4:15"},{"name":"pos","nodeType":"YulIdentifier","src":"3533:3:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3523:3:15"},"nodeType":"YulFunctionCall","src":"3523:14:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3500:6:15"},"nodeType":"YulFunctionCall","src":"3500:38:15"},"nodeType":"YulExpressionStatement","src":"3500:38:15"},{"nodeType":"YulAssignment","src":"3551:81:15","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3613:12:15"},{"name":"tail","nodeType":"YulIdentifier","src":"3627:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3559:53:15"},"nodeType":"YulFunctionCall","src":"3559:73:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3551:4:15"}]}]},{"nodeType":"YulBlock","src":"3653:237:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3690:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3720:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"3727:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3716:3:15"},"nodeType":"YulFunctionCall","src":"3716:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3710:5:15"},"nodeType":"YulFunctionCall","src":"3710:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3694:12:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3758:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3763:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3754:3:15"},"nodeType":"YulFunctionCall","src":"3754:14:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3774:4:15"},{"name":"pos","nodeType":"YulIdentifier","src":"3780:3:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3770:3:15"},"nodeType":"YulFunctionCall","src":"3770:14:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3747:6:15"},"nodeType":"YulFunctionCall","src":"3747:38:15"},"nodeType":"YulExpressionStatement","src":"3747:38:15"},{"nodeType":"YulAssignment","src":"3798:81:15","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3860:12:15"},{"name":"tail","nodeType":"YulIdentifier","src":"3874:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3806:53:15"},"nodeType":"YulFunctionCall","src":"3806:73:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3798:4:15"}]}]},{"nodeType":"YulBlock","src":"3900:172:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3943:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3973:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"3980:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3969:3:15"},"nodeType":"YulFunctionCall","src":"3969:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3963:5:15"},"nodeType":"YulFunctionCall","src":"3963:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3947:12:15","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4033:12:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4051:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4056:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4047:3:15"},"nodeType":"YulFunctionCall","src":"4047:14:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"3999:33:15"},"nodeType":"YulFunctionCall","src":"3999:63:15"},"nodeType":"YulExpressionStatement","src":"3999:63:15"}]},{"nodeType":"YulAssignment","src":"4082:11:15","value":{"name":"tail","nodeType":"YulIdentifier","src":"4089:4:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4082:3:15"}]}]},"name":"abi_encode_t_struct$_TokenInfo_$689_memory_ptr_to_t_struct$_TokenInfo_$689_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3167:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3174:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3183:3:15","type":""}],"src":"3072:1027:15"},{"body":{"nodeType":"YulBlock","src":"4205:40:15","statements":[{"nodeType":"YulAssignment","src":"4216:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4232:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4226:5:15"},"nodeType":"YulFunctionCall","src":"4226:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4216:6:15"}]}]},"name":"array_length_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4188:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4198:6:15","type":""}],"src":"4105:140:15"},{"body":{"nodeType":"YulBlock","src":"4378:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4395:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"4400:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4388:6:15"},"nodeType":"YulFunctionCall","src":"4388:19:15"},"nodeType":"YulExpressionStatement","src":"4388:19:15"},{"nodeType":"YulAssignment","src":"4416:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4435:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4440:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4431:3:15"},"nodeType":"YulFunctionCall","src":"4431:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4416:11:15"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4350:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"4355:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4366:11:15","type":""}],"src":"4251:200:15"},{"body":{"nodeType":"YulBlock","src":"4555:60:15","statements":[{"nodeType":"YulAssignment","src":"4565:11:15","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4573:3:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4565:4:15"}]},{"nodeType":"YulAssignment","src":"4586:22:15","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4598:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4603:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4594:3:15"},"nodeType":"YulFunctionCall","src":"4594:14:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4586:4:15"}]}]},"name":"array_dataslot_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4542:3:15","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4550:4:15","type":""}],"src":"4457:158:15"},{"body":{"nodeType":"YulBlock","src":"4753:128:15","statements":[{"nodeType":"YulAssignment","src":"4763:112:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4863:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"4871:3:15"}],"functionName":{"name":"abi_encode_t_struct$_TokenInfo_$689_memory_ptr_to_t_struct$_TokenInfo_$689_memory_ptr","nodeType":"YulIdentifier","src":"4777:85:15"},"nodeType":"YulFunctionCall","src":"4777:98:15"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"4763:10:15"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_TokenInfo_$689_memory_ptr_to_t_struct$_TokenInfo_$689_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"4726:6:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4734:3:15","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"4742:10:15","type":""}],"src":"4621:260:15"},{"body":{"nodeType":"YulBlock","src":"4988:38:15","statements":[{"nodeType":"YulAssignment","src":"4998:22:15","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5010:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5015:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5006:3:15"},"nodeType":"YulFunctionCall","src":"5006:14:15"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"4998:4:15"}]}]},"name":"array_nextElement_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4975:3:15","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"4983:4:15","type":""}],"src":"4887:139:15"},{"body":{"nodeType":"YulBlock","src":"5290:933:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5300:94:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5388:5:15"}],"functionName":{"name":"array_length_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5314:73:15"},"nodeType":"YulFunctionCall","src":"5314:80:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5304:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5403:109:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5500:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"5505:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5410:89:15"},"nodeType":"YulFunctionCall","src":"5410:102:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5403:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"5521:20:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"5538:3:15"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"5525:9:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5550:39:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5566:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5575:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"5583:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5571:3:15"},"nodeType":"YulFunctionCall","src":"5571:17:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5562:3:15"},"nodeType":"YulFunctionCall","src":"5562:27:15"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"5554:4:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5598:97:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5689:5:15"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5613:75:15"},"nodeType":"YulFunctionCall","src":"5613:82:15"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"5602:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5704:21:15","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"5718:7:15"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5708:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"5794:384:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5815:3:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5824:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5830:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5820:3:15"},"nodeType":"YulFunctionCall","src":"5820:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5808:6:15"},"nodeType":"YulFunctionCall","src":"5808:33:15"},"nodeType":"YulExpressionStatement","src":"5808:33:15"},{"nodeType":"YulVariableDeclaration","src":"5854:34:15","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5881:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5875:5:15"},"nodeType":"YulFunctionCall","src":"5875:13:15"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"5858:13:15","type":""}]},{"nodeType":"YulAssignment","src":"5901:124:15","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"6005:13:15"},{"name":"tail","nodeType":"YulIdentifier","src":"6020:4:15"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_TokenInfo_$689_memory_ptr_to_t_struct$_TokenInfo_$689_memory_ptr","nodeType":"YulIdentifier","src":"5909:95:15"},"nodeType":"YulFunctionCall","src":"5909:116:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5901:4:15"}]},{"nodeType":"YulAssignment","src":"6038:96:15","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6127:6:15"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6048:78:15"},"nodeType":"YulFunctionCall","src":"6048:86:15"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6038:6:15"}]},{"nodeType":"YulAssignment","src":"6147:21:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6158:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6163:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6154:3:15"},"nodeType":"YulFunctionCall","src":"6154:14:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6147:3:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5756:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"5759:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5753:2:15"},"nodeType":"YulFunctionCall","src":"5753:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5767:18:15","statements":[{"nodeType":"YulAssignment","src":"5769:14:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5778:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"5781:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5774:3:15"},"nodeType":"YulFunctionCall","src":"5774:9:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5769:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"5738:14:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5740:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5749:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5744:1:15","type":""}]}]},"src":"5734:444:15"},{"nodeType":"YulAssignment","src":"6187:11:15","value":{"name":"tail","nodeType":"YulIdentifier","src":"6194:4:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6187:3:15"}]},{"nodeType":"YulAssignment","src":"6207:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"6214:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6207:3:15"}]}]},"name":"abi_encode_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5269:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5276:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5285:3:15","type":""}],"src":"5124:1099:15"},{"body":{"nodeType":"YulBlock","src":"6284:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6301:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6324:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6306:17:15"},"nodeType":"YulFunctionCall","src":"6306:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6294:6:15"},"nodeType":"YulFunctionCall","src":"6294:37:15"},"nodeType":"YulExpressionStatement","src":"6294:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6272:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6279:3:15","type":""}],"src":"6229:108:15"},{"body":{"nodeType":"YulBlock","src":"6553:1051:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6563:26:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6579:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6584:4:15","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6575:3:15"},"nodeType":"YulFunctionCall","src":"6575:14:15"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"6567:4:15","type":""}]},{"nodeType":"YulBlock","src":"6599:170:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6640:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6670:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"6677:4:15","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6666:3:15"},"nodeType":"YulFunctionCall","src":"6666:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6660:5:15"},"nodeType":"YulFunctionCall","src":"6660:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6644:12:15","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6730:12:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6748:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6753:4:15","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6744:3:15"},"nodeType":"YulFunctionCall","src":"6744:14:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"6696:33:15"},"nodeType":"YulFunctionCall","src":"6696:63:15"},"nodeType":"YulExpressionStatement","src":"6696:63:15"}]},{"nodeType":"YulBlock","src":"6779:277:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6824:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6854:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"6861:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6850:3:15"},"nodeType":"YulFunctionCall","src":"6850:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6844:5:15"},"nodeType":"YulFunctionCall","src":"6844:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6828:12:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6892:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6897:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6888:3:15"},"nodeType":"YulFunctionCall","src":"6888:14:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6908:4:15"},{"name":"pos","nodeType":"YulIdentifier","src":"6914:3:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6904:3:15"},"nodeType":"YulFunctionCall","src":"6904:14:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6881:6:15"},"nodeType":"YulFunctionCall","src":"6881:38:15"},"nodeType":"YulExpressionStatement","src":"6881:38:15"},{"nodeType":"YulAssignment","src":"6932:113:15","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7026:12:15"},{"name":"tail","nodeType":"YulIdentifier","src":"7040:4:15"}],"functionName":{"name":"abi_encode_t_struct$_TokenInfo_$689_memory_ptr_to_t_struct$_TokenInfo_$689_memory_ptr","nodeType":"YulIdentifier","src":"6940:85:15"},"nodeType":"YulFunctionCall","src":"6940:105:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6932:4:15"}]}]},{"nodeType":"YulBlock","src":"7066:327:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7111:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7141:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"7148:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7137:3:15"},"nodeType":"YulFunctionCall","src":"7137:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7131:5:15"},"nodeType":"YulFunctionCall","src":"7131:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7115:12:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7179:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7184:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7175:3:15"},"nodeType":"YulFunctionCall","src":"7175:14:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7195:4:15"},{"name":"pos","nodeType":"YulIdentifier","src":"7201:3:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7191:3:15"},"nodeType":"YulFunctionCall","src":"7191:14:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7168:6:15"},"nodeType":"YulFunctionCall","src":"7168:38:15"},"nodeType":"YulExpressionStatement","src":"7168:38:15"},{"nodeType":"YulAssignment","src":"7219:163:15","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7363:12:15"},{"name":"tail","nodeType":"YulIdentifier","src":"7377:4:15"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7227:135:15"},"nodeType":"YulFunctionCall","src":"7227:155:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7219:4:15"}]}]},{"nodeType":"YulBlock","src":"7403:174:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7448:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7478:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"7485:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7474:3:15"},"nodeType":"YulFunctionCall","src":"7474:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7468:5:15"},"nodeType":"YulFunctionCall","src":"7468:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7452:12:15","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7538:12:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7556:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7561:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7552:3:15"},"nodeType":"YulFunctionCall","src":"7552:14:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7504:33:15"},"nodeType":"YulFunctionCall","src":"7504:63:15"},"nodeType":"YulExpressionStatement","src":"7504:63:15"}]},{"nodeType":"YulAssignment","src":"7587:11:15","value":{"name":"tail","nodeType":"YulIdentifier","src":"7594:4:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7587:3:15"}]}]},"name":"abi_encode_t_struct$_PoolInfo_$701_memory_ptr_to_t_struct$_PoolInfo_$701_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6532:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6539:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6548:3:15","type":""}],"src":"6429:1175:15"},{"body":{"nodeType":"YulBlock","src":"7758:225:15","statements":[{"nodeType":"YulAssignment","src":"7768:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7780:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7791:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7776:3:15"},"nodeType":"YulFunctionCall","src":"7776:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7768:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7815:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7826:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7811:3:15"},"nodeType":"YulFunctionCall","src":"7811:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7834:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7840:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7830:3:15"},"nodeType":"YulFunctionCall","src":"7830:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7804:6:15"},"nodeType":"YulFunctionCall","src":"7804:47:15"},"nodeType":"YulExpressionStatement","src":"7804:47:15"},{"nodeType":"YulAssignment","src":"7860:116:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7962:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"7971:4:15"}],"functionName":{"name":"abi_encode_t_struct$_PoolInfo_$701_memory_ptr_to_t_struct$_PoolInfo_$701_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7868:93:15"},"nodeType":"YulFunctionCall","src":"7868:108:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7860:4:15"}]}]},"name":"abi_encode_tuple_t_struct$_PoolInfo_$701_memory_ptr__to_t_struct$_PoolInfo_$701_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7730:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7742:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7753:4:15","type":""}],"src":"7610:373:15"},{"body":{"nodeType":"YulBlock","src":"8055:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"8101:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8103:77:15"},"nodeType":"YulFunctionCall","src":"8103:79:15"},"nodeType":"YulExpressionStatement","src":"8103:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8076:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"8085:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8072:3:15"},"nodeType":"YulFunctionCall","src":"8072:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"8097:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8068:3:15"},"nodeType":"YulFunctionCall","src":"8068:32:15"},"nodeType":"YulIf","src":"8065:119:15"},{"nodeType":"YulBlock","src":"8194:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"8209:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"8223:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8213:6:15","type":""}]},{"nodeType":"YulAssignment","src":"8238:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8273:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"8284:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8269:3:15"},"nodeType":"YulFunctionCall","src":"8269:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8293:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8248:20:15"},"nodeType":"YulFunctionCall","src":"8248:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8238:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8025:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8036:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8048:6:15","type":""}],"src":"7989:329:15"},{"body":{"nodeType":"YulBlock","src":"8423:40:15","statements":[{"nodeType":"YulAssignment","src":"8434:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8450:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8444:5:15"},"nodeType":"YulFunctionCall","src":"8444:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8434:6:15"}]}]},"name":"array_length_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8406:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8416:6:15","type":""}],"src":"8324:139:15"},{"body":{"nodeType":"YulBlock","src":"8605:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8622:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"8627:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8615:6:15"},"nodeType":"YulFunctionCall","src":"8615:19:15"},"nodeType":"YulExpressionStatement","src":"8615:19:15"},{"nodeType":"YulAssignment","src":"8643:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8662:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8667:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8658:3:15"},"nodeType":"YulFunctionCall","src":"8658:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8643:11:15"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8577:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"8582:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8593:11:15","type":""}],"src":"8469:209:15"},{"body":{"nodeType":"YulBlock","src":"8781:60:15","statements":[{"nodeType":"YulAssignment","src":"8791:11:15","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8799:3:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8791:4:15"}]},{"nodeType":"YulAssignment","src":"8812:22:15","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8824:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8829:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8820:3:15"},"nodeType":"YulFunctionCall","src":"8820:14:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8812:4:15"}]}]},"name":"array_dataslot_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8768:3:15","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8776:4:15","type":""}],"src":"8684:157:15"},{"body":{"nodeType":"YulBlock","src":"9047:1051:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9057:26:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9073:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9078:4:15","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9069:3:15"},"nodeType":"YulFunctionCall","src":"9069:14:15"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"9061:4:15","type":""}]},{"nodeType":"YulBlock","src":"9093:170:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9134:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9164:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"9171:4:15","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9160:3:15"},"nodeType":"YulFunctionCall","src":"9160:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9154:5:15"},"nodeType":"YulFunctionCall","src":"9154:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9138:12:15","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9224:12:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9242:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9247:4:15","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9238:3:15"},"nodeType":"YulFunctionCall","src":"9238:14:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"9190:33:15"},"nodeType":"YulFunctionCall","src":"9190:63:15"},"nodeType":"YulExpressionStatement","src":"9190:63:15"}]},{"nodeType":"YulBlock","src":"9273:277:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9318:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9348:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"9355:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9344:3:15"},"nodeType":"YulFunctionCall","src":"9344:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9338:5:15"},"nodeType":"YulFunctionCall","src":"9338:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9322:12:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9386:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9391:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9382:3:15"},"nodeType":"YulFunctionCall","src":"9382:14:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9402:4:15"},{"name":"pos","nodeType":"YulIdentifier","src":"9408:3:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9398:3:15"},"nodeType":"YulFunctionCall","src":"9398:14:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9375:6:15"},"nodeType":"YulFunctionCall","src":"9375:38:15"},"nodeType":"YulExpressionStatement","src":"9375:38:15"},{"nodeType":"YulAssignment","src":"9426:113:15","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9520:12:15"},{"name":"tail","nodeType":"YulIdentifier","src":"9534:4:15"}],"functionName":{"name":"abi_encode_t_struct$_TokenInfo_$689_memory_ptr_to_t_struct$_TokenInfo_$689_memory_ptr","nodeType":"YulIdentifier","src":"9434:85:15"},"nodeType":"YulFunctionCall","src":"9434:105:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9426:4:15"}]}]},{"nodeType":"YulBlock","src":"9560:327:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9605:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9635:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"9642:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9631:3:15"},"nodeType":"YulFunctionCall","src":"9631:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9625:5:15"},"nodeType":"YulFunctionCall","src":"9625:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9609:12:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9673:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9678:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9669:3:15"},"nodeType":"YulFunctionCall","src":"9669:14:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9689:4:15"},{"name":"pos","nodeType":"YulIdentifier","src":"9695:3:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9685:3:15"},"nodeType":"YulFunctionCall","src":"9685:14:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9662:6:15"},"nodeType":"YulFunctionCall","src":"9662:38:15"},"nodeType":"YulExpressionStatement","src":"9662:38:15"},{"nodeType":"YulAssignment","src":"9713:163:15","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9857:12:15"},{"name":"tail","nodeType":"YulIdentifier","src":"9871:4:15"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9721:135:15"},"nodeType":"YulFunctionCall","src":"9721:155:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9713:4:15"}]}]},{"nodeType":"YulBlock","src":"9897:174:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9942:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9972:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"9979:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9968:3:15"},"nodeType":"YulFunctionCall","src":"9968:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9962:5:15"},"nodeType":"YulFunctionCall","src":"9962:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9946:12:15","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10032:12:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10050:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10055:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10046:3:15"},"nodeType":"YulFunctionCall","src":"10046:14:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9998:33:15"},"nodeType":"YulFunctionCall","src":"9998:63:15"},"nodeType":"YulExpressionStatement","src":"9998:63:15"}]},{"nodeType":"YulAssignment","src":"10081:11:15","value":{"name":"tail","nodeType":"YulIdentifier","src":"10088:4:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10081:3:15"}]}]},"name":"abi_encode_t_struct$_PoolInfo_$701_memory_ptr_to_t_struct$_PoolInfo_$701_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9026:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9033:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9042:3:15","type":""}],"src":"8933:1165:15"},{"body":{"nodeType":"YulBlock","src":"10234:126:15","statements":[{"nodeType":"YulAssignment","src":"10244:110:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10342:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"10350:3:15"}],"functionName":{"name":"abi_encode_t_struct$_PoolInfo_$701_memory_ptr_to_t_struct$_PoolInfo_$701_memory_ptr","nodeType":"YulIdentifier","src":"10258:83:15"},"nodeType":"YulFunctionCall","src":"10258:96:15"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"10244:10:15"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_PoolInfo_$701_memory_ptr_to_t_struct$_PoolInfo_$701_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"10207:6:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10215:3:15","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"10223:10:15","type":""}],"src":"10104:256:15"},{"body":{"nodeType":"YulBlock","src":"10466:38:15","statements":[{"nodeType":"YulAssignment","src":"10476:22:15","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10488:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10493:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10484:3:15"},"nodeType":"YulFunctionCall","src":"10484:14:15"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"10476:4:15"}]}]},"name":"array_nextElement_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10453:3:15","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"10461:4:15","type":""}],"src":"10366:138:15"},{"body":{"nodeType":"YulBlock","src":"10774:937:15","statements":[{"nodeType":"YulVariableDeclaration","src":"10784:93:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10871:5:15"}],"functionName":{"name":"array_length_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10798:72:15"},"nodeType":"YulFunctionCall","src":"10798:79:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10788:6:15","type":""}]},{"nodeType":"YulAssignment","src":"10886:118:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10992:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"10997:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10893:98:15"},"nodeType":"YulFunctionCall","src":"10893:111:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10886:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"11013:20:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"11030:3:15"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"11017:9:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11042:39:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11058:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11067:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11075:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11063:3:15"},"nodeType":"YulFunctionCall","src":"11063:17:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11054:3:15"},"nodeType":"YulFunctionCall","src":"11054:27:15"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"11046:4:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11090:96:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11180:5:15"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11105:74:15"},"nodeType":"YulFunctionCall","src":"11105:81:15"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"11094:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11195:21:15","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"11209:7:15"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"11199:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"11285:381:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11306:3:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11315:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"11321:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11311:3:15"},"nodeType":"YulFunctionCall","src":"11311:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11299:6:15"},"nodeType":"YulFunctionCall","src":"11299:33:15"},"nodeType":"YulExpressionStatement","src":"11299:33:15"},{"nodeType":"YulVariableDeclaration","src":"11345:34:15","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11372:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11366:5:15"},"nodeType":"YulFunctionCall","src":"11366:13:15"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"11349:13:15","type":""}]},{"nodeType":"YulAssignment","src":"11392:122:15","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"11494:13:15"},{"name":"tail","nodeType":"YulIdentifier","src":"11509:4:15"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_PoolInfo_$701_memory_ptr_to_t_struct$_PoolInfo_$701_memory_ptr","nodeType":"YulIdentifier","src":"11400:93:15"},"nodeType":"YulFunctionCall","src":"11400:114:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11392:4:15"}]},{"nodeType":"YulAssignment","src":"11527:95:15","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11615:6:15"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11537:77:15"},"nodeType":"YulFunctionCall","src":"11537:85:15"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11527:6:15"}]},{"nodeType":"YulAssignment","src":"11635:21:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11646:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11651:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11642:3:15"},"nodeType":"YulFunctionCall","src":"11642:14:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11635:3:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11247:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"11250:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11244:2:15"},"nodeType":"YulFunctionCall","src":"11244:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11258:18:15","statements":[{"nodeType":"YulAssignment","src":"11260:14:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11269:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"11272:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11265:3:15"},"nodeType":"YulFunctionCall","src":"11265:9:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11260:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"11229:14:15","statements":[{"nodeType":"YulVariableDeclaration","src":"11231:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"11240:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11235:1:15","type":""}]}]},"src":"11225:441:15"},{"nodeType":"YulAssignment","src":"11675:11:15","value":{"name":"tail","nodeType":"YulIdentifier","src":"11682:4:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11675:3:15"}]},{"nodeType":"YulAssignment","src":"11695:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"11702:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11695:3:15"}]}]},"name":"abi_encode_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10753:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10760:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10769:3:15","type":""}],"src":"10600:1111:15"},{"body":{"nodeType":"YulBlock","src":"11915:275:15","statements":[{"nodeType":"YulAssignment","src":"11925:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11937:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11948:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11933:3:15"},"nodeType":"YulFunctionCall","src":"11933:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11925:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11972:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11983:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11968:3:15"},"nodeType":"YulFunctionCall","src":"11968:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11991:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"11997:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11987:3:15"},"nodeType":"YulFunctionCall","src":"11987:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11961:6:15"},"nodeType":"YulFunctionCall","src":"11961:47:15"},"nodeType":"YulExpressionStatement","src":"11961:47:15"},{"nodeType":"YulAssignment","src":"12017:166:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12169:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"12178:4:15"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12025:143:15"},"nodeType":"YulFunctionCall","src":"12025:158:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12017:4:15"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11887:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11899:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11910:4:15","type":""}],"src":"11717:473:15"},{"body":{"nodeType":"YulBlock","src":"12228:28:15","statements":[{"nodeType":"YulAssignment","src":"12238:12:15","value":{"name":"value","nodeType":"YulIdentifier","src":"12245:5:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12238:3:15"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12214:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12224:3:15","type":""}],"src":"12196:60:15"},{"body":{"nodeType":"YulBlock","src":"12322:82:15","statements":[{"nodeType":"YulAssignment","src":"12332:66:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12390:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12372:17:15"},"nodeType":"YulFunctionCall","src":"12372:24:15"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"12363:8:15"},"nodeType":"YulFunctionCall","src":"12363:34:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12345:17:15"},"nodeType":"YulFunctionCall","src":"12345:53:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12332:9:15"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12302:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12312:9:15","type":""}],"src":"12262:142:15"},{"body":{"nodeType":"YulBlock","src":"12470:66:15","statements":[{"nodeType":"YulAssignment","src":"12480:50:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12524:5:15"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"12493:30:15"},"nodeType":"YulFunctionCall","src":"12493:37:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12480:9:15"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12450:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12460:9:15","type":""}],"src":"12410:126:15"},{"body":{"nodeType":"YulBlock","src":"12622:66:15","statements":[{"nodeType":"YulAssignment","src":"12632:50:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12676:5:15"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"12645:30:15"},"nodeType":"YulFunctionCall","src":"12645:37:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12632:9:15"}]}]},"name":"convert_t_contract$_InterestSwap_$671_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12602:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12612:9:15","type":""}],"src":"12542:146:15"},{"body":{"nodeType":"YulBlock","src":"12779:86:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12796:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12852:5:15"}],"functionName":{"name":"convert_t_contract$_InterestSwap_$671_to_t_address","nodeType":"YulIdentifier","src":"12801:50:15"},"nodeType":"YulFunctionCall","src":"12801:57:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12789:6:15"},"nodeType":"YulFunctionCall","src":"12789:70:15"},"nodeType":"YulExpressionStatement","src":"12789:70:15"}]},"name":"abi_encode_t_contract$_InterestSwap_$671_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12767:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12774:3:15","type":""}],"src":"12694:171:15"},{"body":{"nodeType":"YulBlock","src":"12989:144:15","statements":[{"nodeType":"YulAssignment","src":"12999:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13011:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13022:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13007:3:15"},"nodeType":"YulFunctionCall","src":"13007:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12999:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13099:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13112:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13123:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13108:3:15"},"nodeType":"YulFunctionCall","src":"13108:17:15"}],"functionName":{"name":"abi_encode_t_contract$_InterestSwap_$671_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13035:63:15"},"nodeType":"YulFunctionCall","src":"13035:91:15"},"nodeType":"YulExpressionStatement","src":"13035:91:15"}]},"name":"abi_encode_tuple_t_contract$_InterestSwap_$671__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12961:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12973:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12984:4:15","type":""}],"src":"12871:262:15"},{"body":{"nodeType":"YulBlock","src":"13204:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13221:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13244:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"13226:17:15"},"nodeType":"YulFunctionCall","src":"13226:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13214:6:15"},"nodeType":"YulFunctionCall","src":"13214:37:15"},"nodeType":"YulExpressionStatement","src":"13214:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13192:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13199:3:15","type":""}],"src":"13139:118:15"},{"body":{"nodeType":"YulBlock","src":"13328:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13345:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13368:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13350:17:15"},"nodeType":"YulFunctionCall","src":"13350:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13338:6:15"},"nodeType":"YulFunctionCall","src":"13338:37:15"},"nodeType":"YulExpressionStatement","src":"13338:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13316:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13323:3:15","type":""}],"src":"13263:118:15"},{"body":{"nodeType":"YulBlock","src":"13513:206:15","statements":[{"nodeType":"YulAssignment","src":"13523:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13535:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13546:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13531:3:15"},"nodeType":"YulFunctionCall","src":"13531:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13523:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13603:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13616:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13627:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13612:3:15"},"nodeType":"YulFunctionCall","src":"13612:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13559:43:15"},"nodeType":"YulFunctionCall","src":"13559:71:15"},"nodeType":"YulExpressionStatement","src":"13559:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13684:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13697:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13708:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13693:3:15"},"nodeType":"YulFunctionCall","src":"13693:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13640:43:15"},"nodeType":"YulFunctionCall","src":"13640:72:15"},"nodeType":"YulExpressionStatement","src":"13640:72:15"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13477:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13489:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13497:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13508:4:15","type":""}],"src":"13387:332:15"},{"body":{"nodeType":"YulBlock","src":"13814:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13831:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13834:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13824:6:15"},"nodeType":"YulFunctionCall","src":"13824:12:15"},"nodeType":"YulExpressionStatement","src":"13824:12:15"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"13725:117:15"},{"body":{"nodeType":"YulBlock","src":"13876:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13893:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13896:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13886:6:15"},"nodeType":"YulFunctionCall","src":"13886:88:15"},"nodeType":"YulExpressionStatement","src":"13886:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13990:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13993:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13983:6:15"},"nodeType":"YulFunctionCall","src":"13983:15:15"},"nodeType":"YulExpressionStatement","src":"13983:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14014:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14017:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14007:6:15"},"nodeType":"YulFunctionCall","src":"14007:15:15"},"nodeType":"YulExpressionStatement","src":"14007:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"13848:180:15"},{"body":{"nodeType":"YulBlock","src":"14077:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"14087:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14109:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"14139:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14117:21:15"},"nodeType":"YulFunctionCall","src":"14117:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14105:3:15"},"nodeType":"YulFunctionCall","src":"14105:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"14091:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"14256:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14258:16:15"},"nodeType":"YulFunctionCall","src":"14258:18:15"},"nodeType":"YulExpressionStatement","src":"14258:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"14199:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"14211:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14196:2:15"},"nodeType":"YulFunctionCall","src":"14196:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"14235:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"14247:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14232:2:15"},"nodeType":"YulFunctionCall","src":"14232:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14193:2:15"},"nodeType":"YulFunctionCall","src":"14193:62:15"},"nodeType":"YulIf","src":"14190:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14294:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"14298:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14287:6:15"},"nodeType":"YulFunctionCall","src":"14287:22:15"},"nodeType":"YulExpressionStatement","src":"14287:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14063:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"14071:4:15","type":""}],"src":"14034:281:15"},{"body":{"nodeType":"YulBlock","src":"14362:88:15","statements":[{"nodeType":"YulAssignment","src":"14372:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"14382:18:15"},"nodeType":"YulFunctionCall","src":"14382:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14372:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14431:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"14439:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"14411:19:15"},"nodeType":"YulFunctionCall","src":"14411:33:15"},"nodeType":"YulExpressionStatement","src":"14411:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"14346:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"14355:6:15","type":""}],"src":"14321:129:15"},{"body":{"nodeType":"YulBlock","src":"14545:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14562:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14565:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14555:6:15"},"nodeType":"YulFunctionCall","src":"14555:12:15"},"nodeType":"YulExpressionStatement","src":"14555:12:15"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"14456:117:15"},{"body":{"nodeType":"YulBlock","src":"14668:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14685:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14688:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14678:6:15"},"nodeType":"YulFunctionCall","src":"14678:12:15"},"nodeType":"YulExpressionStatement","src":"14678:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"14579:117:15"},{"body":{"nodeType":"YulBlock","src":"14784:229:15","statements":[{"body":{"nodeType":"YulBlock","src":"14889:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14891:16:15"},"nodeType":"YulFunctionCall","src":"14891:18:15"},"nodeType":"YulExpressionStatement","src":"14891:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14861:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"14869:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14858:2:15"},"nodeType":"YulFunctionCall","src":"14858:30:15"},"nodeType":"YulIf","src":"14855:56:15"},{"nodeType":"YulAssignment","src":"14921:25:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14933:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"14941:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14929:3:15"},"nodeType":"YulFunctionCall","src":"14929:17:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14921:4:15"}]},{"nodeType":"YulAssignment","src":"14983:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"14995:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"15001:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14991:3:15"},"nodeType":"YulFunctionCall","src":"14991:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14983:4:15"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"14768:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"14779:4:15","type":""}],"src":"14702:311:15"},{"body":{"nodeType":"YulBlock","src":"15108:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15125:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15128:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15118:6:15"},"nodeType":"YulFunctionCall","src":"15118:12:15"},"nodeType":"YulExpressionStatement","src":"15118:12:15"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"15019:117:15"},{"body":{"nodeType":"YulBlock","src":"15205:80:15","statements":[{"nodeType":"YulAssignment","src":"15215:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15230:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15224:5:15"},"nodeType":"YulFunctionCall","src":"15224:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15215:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15273:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"15246:26:15"},"nodeType":"YulFunctionCall","src":"15246:33:15"},"nodeType":"YulExpressionStatement","src":"15246:33:15"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15183:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"15191:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15199:5:15","type":""}],"src":"15142:143:15"},{"body":{"nodeType":"YulBlock","src":"15421:619:15","statements":[{"nodeType":"YulAssignment","src":"15431:90:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15513:6:15"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15456:56:15"},"nodeType":"YulFunctionCall","src":"15456:64:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"15440:15:15"},"nodeType":"YulFunctionCall","src":"15440:81:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"15431:5:15"}]},{"nodeType":"YulVariableDeclaration","src":"15530:16:15","value":{"name":"array","nodeType":"YulIdentifier","src":"15541:5:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"15534:3:15","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"15563:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"15570:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15556:6:15"},"nodeType":"YulFunctionCall","src":"15556:21:15"},"nodeType":"YulExpressionStatement","src":"15556:21:15"},{"nodeType":"YulAssignment","src":"15586:23:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"15597:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"15604:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15593:3:15"},"nodeType":"YulFunctionCall","src":"15593:16:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"15586:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"15619:44:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15637:6:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15649:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15645:3:15"},"nodeType":"YulFunctionCall","src":"15645:17:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15633:3:15"},"nodeType":"YulFunctionCall","src":"15633:30:15"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"15623:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"15691:103:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"15705:77:15"},"nodeType":"YulFunctionCall","src":"15705:79:15"},"nodeType":"YulExpressionStatement","src":"15705:79:15"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"15678:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"15686:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15675:2:15"},"nodeType":"YulFunctionCall","src":"15675:15:15"},"nodeType":"YulIf","src":"15672:122:15"},{"body":{"nodeType":"YulBlock","src":"15879:155:15","statements":[{"nodeType":"YulVariableDeclaration","src":"15894:21:15","value":{"name":"src","nodeType":"YulIdentifier","src":"15912:3:15"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"15898:10:15","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15936:3:15"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"15973:10:15"},{"name":"end","nodeType":"YulIdentifier","src":"15985:3:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"15941:31:15"},"nodeType":"YulFunctionCall","src":"15941:48:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15929:6:15"},"nodeType":"YulFunctionCall","src":"15929:61:15"},"nodeType":"YulExpressionStatement","src":"15929:61:15"},{"nodeType":"YulAssignment","src":"16003:21:15","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"16014:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"16019:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16010:3:15"},"nodeType":"YulFunctionCall","src":"16010:14:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"16003:3:15"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15832:3:15"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"15837:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15829:2:15"},"nodeType":"YulFunctionCall","src":"15829:15:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15845:25:15","statements":[{"nodeType":"YulAssignment","src":"15847:21:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15858:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"15863:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15854:3:15"},"nodeType":"YulFunctionCall","src":"15854:14:15"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"15847:3:15"}]}]},"pre":{"nodeType":"YulBlock","src":"15807:21:15","statements":[{"nodeType":"YulVariableDeclaration","src":"15809:17:15","value":{"name":"offset","nodeType":"YulIdentifier","src":"15820:6:15"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"15813:3:15","type":""}]}]},"src":"15803:231:15"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15391:6:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"15399:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"15407:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"15415:5:15","type":""}],"src":"15308:732:15"},{"body":{"nodeType":"YulBlock","src":"16151:297:15","statements":[{"body":{"nodeType":"YulBlock","src":"16200:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"16202:77:15"},"nodeType":"YulFunctionCall","src":"16202:79:15"},"nodeType":"YulExpressionStatement","src":"16202:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16179:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"16187:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16175:3:15"},"nodeType":"YulFunctionCall","src":"16175:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"16194:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16171:3:15"},"nodeType":"YulFunctionCall","src":"16171:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16164:6:15"},"nodeType":"YulFunctionCall","src":"16164:35:15"},"nodeType":"YulIf","src":"16161:122:15"},{"nodeType":"YulVariableDeclaration","src":"16292:27:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16312:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16306:5:15"},"nodeType":"YulFunctionCall","src":"16306:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16296:6:15","type":""}]},{"nodeType":"YulAssignment","src":"16328:114:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16415:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"16423:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16411:3:15"},"nodeType":"YulFunctionCall","src":"16411:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"16430:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"16438:3:15"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"16337:73:15"},"nodeType":"YulFunctionCall","src":"16337:105:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"16328:5:15"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16129:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"16137:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"16145:5:15","type":""}],"src":"16063:385:15"},{"body":{"nodeType":"YulBlock","src":"16517:80:15","statements":[{"nodeType":"YulAssignment","src":"16527:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16542:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16536:5:15"},"nodeType":"YulFunctionCall","src":"16536:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16527:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16585:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"16558:26:15"},"nodeType":"YulFunctionCall","src":"16558:33:15"},"nodeType":"YulExpressionStatement","src":"16558:33:15"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16495:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"16503:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16511:5:15","type":""}],"src":"16454:143:15"},{"body":{"nodeType":"YulBlock","src":"16666:51:15","statements":[{"nodeType":"YulAssignment","src":"16676:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16705:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"16687:17:15"},"nodeType":"YulFunctionCall","src":"16687:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"16676:7:15"}]}]},"name":"cleanup_t_contract$_PriceModel_$938","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16648:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"16658:7:15","type":""}],"src":"16603:114:15"},{"body":{"nodeType":"YulBlock","src":"16784:97:15","statements":[{"body":{"nodeType":"YulBlock","src":"16859:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16868:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16871:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16861:6:15"},"nodeType":"YulFunctionCall","src":"16861:12:15"},"nodeType":"YulExpressionStatement","src":"16861:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16807:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16850:5:15"}],"functionName":{"name":"cleanup_t_contract$_PriceModel_$938","nodeType":"YulIdentifier","src":"16814:35:15"},"nodeType":"YulFunctionCall","src":"16814:42:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16804:2:15"},"nodeType":"YulFunctionCall","src":"16804:53:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16797:6:15"},"nodeType":"YulFunctionCall","src":"16797:61:15"},"nodeType":"YulIf","src":"16794:81:15"}]},"name":"validator_revert_t_contract$_PriceModel_$938","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16777:5:15","type":""}],"src":"16723:158:15"},{"body":{"nodeType":"YulBlock","src":"16968:98:15","statements":[{"nodeType":"YulAssignment","src":"16978:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16993:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16987:5:15"},"nodeType":"YulFunctionCall","src":"16987:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16978:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17054:5:15"}],"functionName":{"name":"validator_revert_t_contract$_PriceModel_$938","nodeType":"YulIdentifier","src":"17009:44:15"},"nodeType":"YulFunctionCall","src":"17009:51:15"},"nodeType":"YulExpressionStatement","src":"17009:51:15"}]},"name":"abi_decode_t_contract$_PriceModel_$938_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16946:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"16954:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16962:5:15","type":""}],"src":"16887:179:15"},{"body":{"nodeType":"YulBlock","src":"17191:910:15","statements":[{"body":{"nodeType":"YulBlock","src":"17235:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"17237:77:15"},"nodeType":"YulFunctionCall","src":"17237:79:15"},"nodeType":"YulExpressionStatement","src":"17237:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"17212:3:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"17217:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17208:3:15"},"nodeType":"YulFunctionCall","src":"17208:19:15"},{"kind":"number","nodeType":"YulLiteral","src":"17229:4:15","type":"","value":"0x60"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17204:3:15"},"nodeType":"YulFunctionCall","src":"17204:30:15"},"nodeType":"YulIf","src":"17201:117:15"},{"nodeType":"YulAssignment","src":"17327:30:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17352:4:15","type":"","value":"0x60"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"17336:15:15"},"nodeType":"YulFunctionCall","src":"17336:21:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17327:5:15"}]},{"nodeType":"YulBlock","src":"17367:349:15","statements":[{"nodeType":"YulVariableDeclaration","src":"17412:38:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17436:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"17447:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17432:3:15"},"nodeType":"YulFunctionCall","src":"17432:17:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17426:5:15"},"nodeType":"YulFunctionCall","src":"17426:24:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17416:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"17497:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"17499:77:15"},"nodeType":"YulFunctionCall","src":"17499:79:15"},"nodeType":"YulExpressionStatement","src":"17499:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17469:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"17477:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17466:2:15"},"nodeType":"YulFunctionCall","src":"17466:30:15"},"nodeType":"YulIf","src":"17463:117:15"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17605:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"17612:4:15","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17601:3:15"},"nodeType":"YulFunctionCall","src":"17601:16:15"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17680:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"17691:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17676:3:15"},"nodeType":"YulFunctionCall","src":"17676:22:15"},{"name":"end","nodeType":"YulIdentifier","src":"17700:3:15"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"17619:56:15"},"nodeType":"YulFunctionCall","src":"17619:85:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17594:6:15"},"nodeType":"YulFunctionCall","src":"17594:111:15"},"nodeType":"YulExpressionStatement","src":"17594:111:15"}]},{"nodeType":"YulBlock","src":"17726:172:15","statements":[{"nodeType":"YulVariableDeclaration","src":"17771:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"17785:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17775:6:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17812:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"17819:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17808:3:15"},"nodeType":"YulFunctionCall","src":"17808:16:15"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17862:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"17873:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17858:3:15"},"nodeType":"YulFunctionCall","src":"17858:22:15"},{"name":"end","nodeType":"YulIdentifier","src":"17882:3:15"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"17826:31:15"},"nodeType":"YulFunctionCall","src":"17826:60:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17801:6:15"},"nodeType":"YulFunctionCall","src":"17801:86:15"},"nodeType":"YulExpressionStatement","src":"17801:86:15"}]},{"nodeType":"YulBlock","src":"17908:186:15","statements":[{"nodeType":"YulVariableDeclaration","src":"17949:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"17963:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17953:6:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17990:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"17997:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17986:3:15"},"nodeType":"YulFunctionCall","src":"17986:16:15"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18058:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"18069:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18054:3:15"},"nodeType":"YulFunctionCall","src":"18054:22:15"},{"name":"end","nodeType":"YulIdentifier","src":"18078:3:15"}],"functionName":{"name":"abi_decode_t_contract$_PriceModel_$938_fromMemory","nodeType":"YulIdentifier","src":"18004:49:15"},"nodeType":"YulFunctionCall","src":"18004:78:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17979:6:15"},"nodeType":"YulFunctionCall","src":"17979:104:15"},"nodeType":"YulExpressionStatement","src":"17979:104:15"}]}]},"name":"abi_decode_t_struct$_Pool_$306_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17166:9:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"17177:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"17185:5:15","type":""}],"src":"17104:997:15"},{"body":{"nodeType":"YulBlock","src":"18205:448:15","statements":[{"body":{"nodeType":"YulBlock","src":"18251:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18253:77:15"},"nodeType":"YulFunctionCall","src":"18253:79:15"},"nodeType":"YulExpressionStatement","src":"18253:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18226:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"18235:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18222:3:15"},"nodeType":"YulFunctionCall","src":"18222:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"18247:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18218:3:15"},"nodeType":"YulFunctionCall","src":"18218:32:15"},"nodeType":"YulIf","src":"18215:119:15"},{"nodeType":"YulBlock","src":"18344:302:15","statements":[{"nodeType":"YulVariableDeclaration","src":"18359:38:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18383:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18394:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18379:3:15"},"nodeType":"YulFunctionCall","src":"18379:17:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18373:5:15"},"nodeType":"YulFunctionCall","src":"18373:24:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18363:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"18444:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18446:77:15"},"nodeType":"YulFunctionCall","src":"18446:79:15"},"nodeType":"YulExpressionStatement","src":"18446:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18416:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"18424:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18413:2:15"},"nodeType":"YulFunctionCall","src":"18413:30:15"},"nodeType":"YulIf","src":"18410:117:15"},{"nodeType":"YulAssignment","src":"18541:95:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18608:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"18619:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18604:3:15"},"nodeType":"YulFunctionCall","src":"18604:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18628:7:15"}],"functionName":{"name":"abi_decode_t_struct$_Pool_$306_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"18551:52:15"},"nodeType":"YulFunctionCall","src":"18551:85:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18541:6:15"}]}]}]},"name":"abi_decode_tuple_t_struct$_Pool_$306_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18175:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18186:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18198:6:15","type":""}],"src":"18107:546:15"},{"body":{"nodeType":"YulBlock","src":"18719:51:15","statements":[{"nodeType":"YulAssignment","src":"18729:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18758:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"18740:17:15"},"nodeType":"YulFunctionCall","src":"18740:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18729:7:15"}]}]},"name":"cleanup_t_contract$_IERC20_$4061","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18701:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18711:7:15","type":""}],"src":"18659:111:15"},{"body":{"nodeType":"YulBlock","src":"18834:94:15","statements":[{"body":{"nodeType":"YulBlock","src":"18906:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18915:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18918:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18908:6:15"},"nodeType":"YulFunctionCall","src":"18908:12:15"},"nodeType":"YulExpressionStatement","src":"18908:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18857:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18897:5:15"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$4061","nodeType":"YulIdentifier","src":"18864:32:15"},"nodeType":"YulFunctionCall","src":"18864:39:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18854:2:15"},"nodeType":"YulFunctionCall","src":"18854:50:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18847:6:15"},"nodeType":"YulFunctionCall","src":"18847:58:15"},"nodeType":"YulIf","src":"18844:78:15"}]},"name":"validator_revert_t_contract$_IERC20_$4061","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18827:5:15","type":""}],"src":"18776:152:15"},{"body":{"nodeType":"YulBlock","src":"19012:95:15","statements":[{"nodeType":"YulAssignment","src":"19022:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19037:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19031:5:15"},"nodeType":"YulFunctionCall","src":"19031:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19022:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19095:5:15"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$4061","nodeType":"YulIdentifier","src":"19053:41:15"},"nodeType":"YulFunctionCall","src":"19053:48:15"},"nodeType":"YulExpressionStatement","src":"19053:48:15"}]},"name":"abi_decode_t_contract$_IERC20_$4061_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18990:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"18998:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19006:5:15","type":""}],"src":"18934:173:15"},{"body":{"nodeType":"YulBlock","src":"19205:289:15","statements":[{"body":{"nodeType":"YulBlock","src":"19251:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19253:77:15"},"nodeType":"YulFunctionCall","src":"19253:79:15"},"nodeType":"YulExpressionStatement","src":"19253:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19226:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"19235:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19222:3:15"},"nodeType":"YulFunctionCall","src":"19222:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"19247:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19218:3:15"},"nodeType":"YulFunctionCall","src":"19218:32:15"},"nodeType":"YulIf","src":"19215:119:15"},{"nodeType":"YulBlock","src":"19344:143:15","statements":[{"nodeType":"YulVariableDeclaration","src":"19359:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"19373:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19363:6:15","type":""}]},{"nodeType":"YulAssignment","src":"19388:89:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19449:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"19460:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19445:3:15"},"nodeType":"YulFunctionCall","src":"19445:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19469:7:15"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$4061_fromMemory","nodeType":"YulIdentifier","src":"19398:46:15"},"nodeType":"YulFunctionCall","src":"19398:79:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19388:6:15"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$4061_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19175:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19186:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19198:6:15","type":""}],"src":"19113:381:15"},{"body":{"nodeType":"YulBlock","src":"19598:124:15","statements":[{"nodeType":"YulAssignment","src":"19608:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19620:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"19631:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19616:3:15"},"nodeType":"YulFunctionCall","src":"19616:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19608:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19688:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19701:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"19712:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19697:3:15"},"nodeType":"YulFunctionCall","src":"19697:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19644:43:15"},"nodeType":"YulFunctionCall","src":"19644:71:15"},"nodeType":"YulExpressionStatement","src":"19644:71:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19570:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19582:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19593:4:15","type":""}],"src":"19500:222:15"},{"body":{"nodeType":"YulBlock","src":"19805:274:15","statements":[{"body":{"nodeType":"YulBlock","src":"19851:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19853:77:15"},"nodeType":"YulFunctionCall","src":"19853:79:15"},"nodeType":"YulExpressionStatement","src":"19853:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19826:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"19835:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19822:3:15"},"nodeType":"YulFunctionCall","src":"19822:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"19847:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19818:3:15"},"nodeType":"YulFunctionCall","src":"19818:32:15"},"nodeType":"YulIf","src":"19815:119:15"},{"nodeType":"YulBlock","src":"19944:128:15","statements":[{"nodeType":"YulVariableDeclaration","src":"19959:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"19973:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19963:6:15","type":""}]},{"nodeType":"YulAssignment","src":"19988:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20034:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"20045:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20030:3:15"},"nodeType":"YulFunctionCall","src":"20030:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20054:7:15"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"19998:31:15"},"nodeType":"YulFunctionCall","src":"19998:64:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19988:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19775:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19786:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19798:6:15","type":""}],"src":"19728:351:15"},{"body":{"nodeType":"YulBlock","src":"20113:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20130:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20133:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20123:6:15"},"nodeType":"YulFunctionCall","src":"20123:88:15"},"nodeType":"YulExpressionStatement","src":"20123:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20227:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20230:4:15","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20220:6:15"},"nodeType":"YulFunctionCall","src":"20220:15:15"},"nodeType":"YulExpressionStatement","src":"20220:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20251:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20254:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20244:6:15"},"nodeType":"YulFunctionCall","src":"20244:15:15"},"nodeType":"YulExpressionStatement","src":"20244:15:15"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"20085:180:15"},{"body":{"nodeType":"YulBlock","src":"20299:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20316:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20319:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20309:6:15"},"nodeType":"YulFunctionCall","src":"20309:88:15"},"nodeType":"YulExpressionStatement","src":"20309:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20413:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20416:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20406:6:15"},"nodeType":"YulFunctionCall","src":"20406:15:15"},"nodeType":"YulExpressionStatement","src":"20406:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20437:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20440:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20430:6:15"},"nodeType":"YulFunctionCall","src":"20430:15:15"},"nodeType":"YulExpressionStatement","src":"20430:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"20271:180:15"},{"body":{"nodeType":"YulBlock","src":"20500:190:15","statements":[{"nodeType":"YulAssignment","src":"20510:33:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20537:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20519:17:15"},"nodeType":"YulFunctionCall","src":"20519:24:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20510:5:15"}]},{"body":{"nodeType":"YulBlock","src":"20633:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20635:16:15"},"nodeType":"YulFunctionCall","src":"20635:18:15"},"nodeType":"YulExpressionStatement","src":"20635:18:15"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20558:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"20565:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20555:2:15"},"nodeType":"YulFunctionCall","src":"20555:77:15"},"nodeType":"YulIf","src":"20552:103:15"},{"nodeType":"YulAssignment","src":"20664:20:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20675:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"20682:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20671:3:15"},"nodeType":"YulFunctionCall","src":"20671:13:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20664:3:15"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20486:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20496:3:15","type":""}],"src":"20457:233:15"},{"body":{"nodeType":"YulBlock","src":"20737:77:15","statements":[{"body":{"nodeType":"YulBlock","src":"20792:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20801:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20804:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20794:6:15"},"nodeType":"YulFunctionCall","src":"20794:12:15"},"nodeType":"YulExpressionStatement","src":"20794:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20760:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20783:5:15"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"20767:15:15"},"nodeType":"YulFunctionCall","src":"20767:22:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20757:2:15"},"nodeType":"YulFunctionCall","src":"20757:33:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20750:6:15"},"nodeType":"YulFunctionCall","src":"20750:41:15"},"nodeType":"YulIf","src":"20747:61:15"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20730:5:15","type":""}],"src":"20696:118:15"},{"body":{"nodeType":"YulBlock","src":"20881:78:15","statements":[{"nodeType":"YulAssignment","src":"20891:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20906:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20900:5:15"},"nodeType":"YulFunctionCall","src":"20900:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20891:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20947:5:15"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"20922:24:15"},"nodeType":"YulFunctionCall","src":"20922:31:15"},"nodeType":"YulExpressionStatement","src":"20922:31:15"}]},"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"20859:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"20867:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"20875:5:15","type":""}],"src":"20820:139:15"},{"body":{"nodeType":"YulBlock","src":"21040:272:15","statements":[{"body":{"nodeType":"YulBlock","src":"21086:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21088:77:15"},"nodeType":"YulFunctionCall","src":"21088:79:15"},"nodeType":"YulExpressionStatement","src":"21088:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21061:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"21070:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21057:3:15"},"nodeType":"YulFunctionCall","src":"21057:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"21082:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21053:3:15"},"nodeType":"YulFunctionCall","src":"21053:32:15"},"nodeType":"YulIf","src":"21050:119:15"},{"nodeType":"YulBlock","src":"21179:126:15","statements":[{"nodeType":"YulVariableDeclaration","src":"21194:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"21208:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21198:6:15","type":""}]},{"nodeType":"YulAssignment","src":"21223:72:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21267:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"21278:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21263:3:15"},"nodeType":"YulFunctionCall","src":"21263:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21287:7:15"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"21233:29:15"},"nodeType":"YulFunctionCall","src":"21233:62:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21223:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21010:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21021:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21033:6:15","type":""}],"src":"20965:347:15"},{"body":{"nodeType":"YulBlock","src":"21407:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21424:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21427:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21417:6:15"},"nodeType":"YulFunctionCall","src":"21417:12:15"},"nodeType":"YulExpressionStatement","src":"21417:12:15"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"21318:117:15"},{"body":{"nodeType":"YulBlock","src":"21508:241:15","statements":[{"body":{"nodeType":"YulBlock","src":"21613:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21615:16:15"},"nodeType":"YulFunctionCall","src":"21615:18:15"},"nodeType":"YulExpressionStatement","src":"21615:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21585:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21593:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21582:2:15"},"nodeType":"YulFunctionCall","src":"21582:30:15"},"nodeType":"YulIf","src":"21579:56:15"},{"nodeType":"YulAssignment","src":"21645:37:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21675:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"21653:21:15"},"nodeType":"YulFunctionCall","src":"21653:29:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"21645:4:15"}]},{"nodeType":"YulAssignment","src":"21719:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"21731:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"21737:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21727:3:15"},"nodeType":"YulFunctionCall","src":"21727:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"21719:4:15"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"21492:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"21503:4:15","type":""}],"src":"21441:308:15"},{"body":{"nodeType":"YulBlock","src":"21850:339:15","statements":[{"nodeType":"YulAssignment","src":"21860:75:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21927:6:15"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21885:41:15"},"nodeType":"YulFunctionCall","src":"21885:49:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"21869:15:15"},"nodeType":"YulFunctionCall","src":"21869:66:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"21860:5:15"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"21951:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"21958:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21944:6:15"},"nodeType":"YulFunctionCall","src":"21944:21:15"},"nodeType":"YulExpressionStatement","src":"21944:21:15"},{"nodeType":"YulVariableDeclaration","src":"21974:27:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"21989:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"21996:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21985:3:15"},"nodeType":"YulFunctionCall","src":"21985:16:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"21978:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"22039:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"22041:77:15"},"nodeType":"YulFunctionCall","src":"22041:79:15"},"nodeType":"YulExpressionStatement","src":"22041:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22020:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"22025:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22016:3:15"},"nodeType":"YulFunctionCall","src":"22016:16:15"},{"name":"end","nodeType":"YulIdentifier","src":"22034:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22013:2:15"},"nodeType":"YulFunctionCall","src":"22013:25:15"},"nodeType":"YulIf","src":"22010:112:15"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22166:3:15"},{"name":"dst","nodeType":"YulIdentifier","src":"22171:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"22176:6:15"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"22131:34:15"},"nodeType":"YulFunctionCall","src":"22131:52:15"},"nodeType":"YulExpressionStatement","src":"22131:52:15"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"21823:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"21828:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"21836:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"21844:5:15","type":""}],"src":"21755:434:15"},{"body":{"nodeType":"YulBlock","src":"22282:282:15","statements":[{"body":{"nodeType":"YulBlock","src":"22331:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"22333:77:15"},"nodeType":"YulFunctionCall","src":"22333:79:15"},"nodeType":"YulExpressionStatement","src":"22333:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22310:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22318:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22306:3:15"},"nodeType":"YulFunctionCall","src":"22306:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"22325:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22302:3:15"},"nodeType":"YulFunctionCall","src":"22302:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22295:6:15"},"nodeType":"YulFunctionCall","src":"22295:35:15"},"nodeType":"YulIf","src":"22292:122:15"},{"nodeType":"YulVariableDeclaration","src":"22423:27:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22443:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22437:5:15"},"nodeType":"YulFunctionCall","src":"22437:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22427:6:15","type":""}]},{"nodeType":"YulAssignment","src":"22459:99:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22531:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22539:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22527:3:15"},"nodeType":"YulFunctionCall","src":"22527:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"22546:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"22554:3:15"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"22468:58:15"},"nodeType":"YulFunctionCall","src":"22468:90:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"22459:5:15"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22260:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"22268:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"22276:5:15","type":""}],"src":"22209:355:15"},{"body":{"nodeType":"YulBlock","src":"22657:437:15","statements":[{"body":{"nodeType":"YulBlock","src":"22703:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22705:77:15"},"nodeType":"YulFunctionCall","src":"22705:79:15"},"nodeType":"YulExpressionStatement","src":"22705:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22678:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"22687:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22674:3:15"},"nodeType":"YulFunctionCall","src":"22674:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"22699:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22670:3:15"},"nodeType":"YulFunctionCall","src":"22670:32:15"},"nodeType":"YulIf","src":"22667:119:15"},{"nodeType":"YulBlock","src":"22796:291:15","statements":[{"nodeType":"YulVariableDeclaration","src":"22811:38:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22835:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"22846:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22831:3:15"},"nodeType":"YulFunctionCall","src":"22831:17:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22825:5:15"},"nodeType":"YulFunctionCall","src":"22825:24:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22815:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"22896:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"22898:77:15"},"nodeType":"YulFunctionCall","src":"22898:79:15"},"nodeType":"YulExpressionStatement","src":"22898:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22868:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22876:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22865:2:15"},"nodeType":"YulFunctionCall","src":"22865:30:15"},"nodeType":"YulIf","src":"22862:117:15"},{"nodeType":"YulAssignment","src":"22993:84:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23049:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"23060:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23045:3:15"},"nodeType":"YulFunctionCall","src":"23045:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23069:7:15"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"23003:41:15"},"nodeType":"YulFunctionCall","src":"23003:74:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22993:6:15"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22627:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22638:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22650:6:15","type":""}],"src":"22570:524:15"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct InterestSwapPeriphery.TokenInfo -> struct InterestSwapPeriphery.TokenInfo\n    function abi_encode_t_struct$_TokenInfo_$689_memory_ptr_to_t_struct$_TokenInfo_$689_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // decimals\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // name\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // symbol\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // tokenAddress\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        end := tail\n    }\n\n    function array_length_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TokenInfo_$689_memory_ptr_to_t_struct$_TokenInfo_$689_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_TokenInfo_$689_memory_ptr_to_t_struct$_TokenInfo_$689_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct InterestSwapPeriphery.TokenInfo[] -> struct InterestSwapPeriphery.TokenInfo[]\n    function abi_encode_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_TokenInfo_$689_memory_ptr_to_t_struct$_TokenInfo_$689_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct InterestSwapPeriphery.PoolInfo -> struct InterestSwapPeriphery.PoolInfo\n    function abi_encode_t_struct$_PoolInfo_$701_memory_ptr_to_t_struct$_PoolInfo_$701_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // priceModel\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // liquidityToken\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_struct$_TokenInfo_$689_memory_ptr_to_t_struct$_TokenInfo_$689_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // acceptedTokens\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // totalLiquidity\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_PoolInfo_$701_memory_ptr__to_t_struct$_PoolInfo_$701_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_PoolInfo_$701_memory_ptr_to_t_struct$_PoolInfo_$701_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct InterestSwapPeriphery.PoolInfo -> struct InterestSwapPeriphery.PoolInfo\n    function abi_encode_t_struct$_PoolInfo_$701_memory_ptr_to_t_struct$_PoolInfo_$701_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // priceModel\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // liquidityToken\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_struct$_TokenInfo_$689_memory_ptr_to_t_struct$_TokenInfo_$689_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // acceptedTokens\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenInfo_$689_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // totalLiquidity\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_PoolInfo_$701_memory_ptr_to_t_struct$_PoolInfo_$701_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_PoolInfo_$701_memory_ptr_to_t_struct$_PoolInfo_$701_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct InterestSwapPeriphery.PoolInfo[] -> struct InterestSwapPeriphery.PoolInfo[]\n    function abi_encode_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_PoolInfo_$701_memory_ptr_to_t_struct$_PoolInfo_$701_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_PoolInfo_$701_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_InterestSwap_$671_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_InterestSwap_$671_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_InterestSwap_$671_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_InterestSwap_$671__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_InterestSwap_$671_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_contract$_PriceModel_$938(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_PriceModel_$938(value) {\n        if iszero(eq(value, cleanup_t_contract$_PriceModel_$938(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_PriceModel_$938_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_PriceModel_$938(value)\n    }\n\n    // struct InterestSwap.Pool\n    function abi_decode_t_struct$_Pool_$306_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x60)\n\n        {\n            // acceptedTokens\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x00), abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // totalLiquidity\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // priceModel\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_contract$_PriceModel_$938_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_Pool_$306_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_Pool_$306_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC20_$4061(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$4061(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$4061(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$4061_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$4061(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$4061_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$4061_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c80635b5b9ea2146100465780635c39f467146100765780635ff9d06f146100a6575b600080fd5b610060600480360381019061005b9190610764565b6100c4565b60405161006d9190610a04565b60405180910390f35b610090600480360381019061008b9190610a26565b61025c565b60405161009d9190610b7f565b60405180910390f35b6100ae6103a6565b6040516100bb9190610c00565b60405180910390f35b6100cc610637565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635b5b9ea285856040518363ffffffff1660e01b815260040161012a929190610c39565b600060405180830381865afa158015610147573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101709190610e9c565b90506040518060800160405280826040015173ffffffffffffffffffffffffffffffffffffffff16815260200161023460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561020b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022f9190610f23565b6103ca565b8152602001610246836000015161056d565b8152602001826020015181525091505092915050565b606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663387dd500846040518263ffffffff1660e01b81526004016102ba9190610f50565b602060405180830381865afa1580156102d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fb9190610f6b565b905060008167ffffffffffffffff81111561031957610318610c67565b5b60405190808252806020026020018201604052801561035257816020015b61033f610637565b8152602001906001900390816103375790505b50905060005b8281101561039b5761036a85826100c4565b82828151811061037d5761037c610f98565b5b6020026020010181905250808061039390610ff6565b915050610358565b508092505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103d261067b565b600082905060405180608001604052808273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561042d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610451919061106a565b60ff1681526020018273ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156104a4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104cd919061113d565b81526020018273ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801561051d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610546919061113d565b81526020018473ffffffffffffffffffffffffffffffffffffffff16815250915050919050565b606060008251905060008167ffffffffffffffff81111561059157610590610c67565b5b6040519080825280602002602001820160405280156105ca57816020015b6105b761067b565b8152602001906001900390816105af5790505b50905060005b8281101561062c576105fb8582815181106105ee576105ed610f98565b5b60200260200101516103ca565b82828151811061060e5761060d610f98565b5b6020026020010181905250808061062490610ff6565b9150506105d0565b508092505050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200161066761067b565b815260200160608152602001600081525090565b6040518060800160405280600060ff1681526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106fb826106d0565b9050919050565b61070b816106f0565b811461071657600080fd5b50565b60008135905061072881610702565b92915050565b6000819050919050565b6107418161072e565b811461074c57600080fd5b50565b60008135905061075e81610738565b92915050565b6000806040838503121561077b5761077a6106c6565b5b600061078985828601610719565b925050602061079a8582860161074f565b9150509250929050565b6107ad816106f0565b82525050565b600060ff82169050919050565b6107c9816107b3565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108095780820151818401526020810190506107ee565b60008484015250505050565b6000601f19601f8301169050919050565b6000610831826107cf565b61083b81856107da565b935061084b8185602086016107eb565b61085481610815565b840191505092915050565b600060808301600083015161087760008601826107c0565b506020830151848203602086015261088f8282610826565b915050604083015184820360408601526108a98282610826565b91505060608301516108be60608601826107a4565b508091505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000610901838361085f565b905092915050565b6000602082019050919050565b6000610921826108c9565b61092b81856108d4565b93508360208202850161093d856108e5565b8060005b85811015610979578484038952815161095a85826108f5565b945061096583610909565b925060208a01995050600181019050610941565b50829750879550505050505092915050565b6109948161072e565b82525050565b60006080830160008301516109b260008601826107a4565b50602083015184820360208601526109ca828261085f565b915050604083015184820360408601526109e48282610916565b91505060608301516109f9606086018261098b565b508091505092915050565b60006020820190508181036000830152610a1e818461099a565b905092915050565b600060208284031215610a3c57610a3b6106c6565b5b6000610a4a84828501610719565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000608083016000830151610a9760008601826107a4565b5060208301518482036020860152610aaf828261085f565b91505060408301518482036040860152610ac98282610916565b9150506060830151610ade606086018261098b565b508091505092915050565b6000610af58383610a7f565b905092915050565b6000602082019050919050565b6000610b1582610a53565b610b1f8185610a5e565b935083602082028501610b3185610a6f565b8060005b85811015610b6d5784840389528151610b4e8582610ae9565b9450610b5983610afd565b925060208a01995050600181019050610b35565b50829750879550505050505092915050565b60006020820190508181036000830152610b998184610b0a565b905092915050565b6000819050919050565b6000610bc6610bc1610bbc846106d0565b610ba1565b6106d0565b9050919050565b6000610bd882610bab565b9050919050565b6000610bea82610bcd565b9050919050565b610bfa81610bdf565b82525050565b6000602082019050610c156000830184610bf1565b92915050565b610c24816106f0565b82525050565b610c338161072e565b82525050565b6000604082019050610c4e6000830185610c1b565b610c5b6020830184610c2a565b9392505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c9f82610815565b810181811067ffffffffffffffff82111715610cbe57610cbd610c67565b5b80604052505050565b6000610cd16106bc565b9050610cdd8282610c96565b919050565b600080fd5b600080fd5b600067ffffffffffffffff821115610d0757610d06610c67565b5b602082029050602081019050919050565b600080fd5b600081519050610d2c81610702565b92915050565b6000610d45610d4084610cec565b610cc7565b90508083825260208201905060208402830185811115610d6857610d67610d18565b5b835b81811015610d915780610d7d8882610d1d565b845260208401935050602081019050610d6a565b5050509392505050565b600082601f830112610db057610daf610ce7565b5b8151610dc0848260208601610d32565b91505092915050565b600081519050610dd881610738565b92915050565b6000610de9826106f0565b9050919050565b610df981610dde565b8114610e0457600080fd5b50565b600081519050610e1681610df0565b92915050565b600060608284031215610e3257610e31610c62565b5b610e3c6060610cc7565b9050600082015167ffffffffffffffff811115610e5c57610e5b610ce2565b5b610e6884828501610d9b565b6000830152506020610e7c84828501610dc9565b6020830152506040610e9084828501610e07565b60408301525092915050565b600060208284031215610eb257610eb16106c6565b5b600082015167ffffffffffffffff811115610ed057610ecf6106cb565b5b610edc84828501610e1c565b91505092915050565b6000610ef0826106f0565b9050919050565b610f0081610ee5565b8114610f0b57600080fd5b50565b600081519050610f1d81610ef7565b92915050565b600060208284031215610f3957610f386106c6565b5b6000610f4784828501610f0e565b91505092915050565b6000602082019050610f656000830184610c1b565b92915050565b600060208284031215610f8157610f806106c6565b5b6000610f8f84828501610dc9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110018261072e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361103357611032610fc7565b5b600182019050919050565b611047816107b3565b811461105257600080fd5b50565b6000815190506110648161103e565b92915050565b6000602082840312156110805761107f6106c6565b5b600061108e84828501611055565b91505092915050565b600080fd5b600067ffffffffffffffff8211156110b7576110b6610c67565b5b6110c082610815565b9050602081019050919050565b60006110e06110db8461109c565b610cc7565b9050828152602081018484840111156110fc576110fb611097565b5b6111078482856107eb565b509392505050565b600082601f83011261112457611123610ce7565b5b81516111348482602086016110cd565b91505092915050565b600060208284031215611153576111526106c6565b5b600082015167ffffffffffffffff811115611171576111706106cb565b5b61117d8482850161110f565b9150509291505056fea2646970667358221220026eeeb7fb16221f067609938e1a243dd226852eec012cb7a5c28feeb1196cf164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B5B9EA2 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x5C39F467 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x5FF9D06F EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x25C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH2 0x637 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5B5B9EA2 DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A SWAP3 SWAP2 SWAP1 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x147 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x234 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x246 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x56D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x20 ADD MLOAD DUP2 MSTORE POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x387DD500 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x319 JUMPI PUSH2 0x318 PUSH2 0xC67 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x352 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x33F PUSH2 0x637 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x337 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39B JUMPI PUSH2 0x36A DUP6 DUP3 PUSH2 0xC4 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x37D JUMPI PUSH2 0x37C PUSH2 0xF98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x393 SWAP1 PUSH2 0xFF6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x358 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x67B JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x451 SWAP2 SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x51D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x591 JUMPI PUSH2 0x590 PUSH2 0xC67 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5CA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x5B7 PUSH2 0x67B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x5AF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x62C JUMPI PUSH2 0x5FB DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5EE JUMPI PUSH2 0x5ED PUSH2 0xF98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3CA JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x60E JUMPI PUSH2 0x60D PUSH2 0xF98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x624 SWAP1 PUSH2 0xFF6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5D0 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x667 PUSH2 0x67B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FB DUP3 PUSH2 0x6D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x70B DUP2 PUSH2 0x6F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x728 DUP2 PUSH2 0x702 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x741 DUP2 PUSH2 0x72E JUMP JUMPDEST DUP2 EQ PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x75E DUP2 PUSH2 0x738 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x77B JUMPI PUSH2 0x77A PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x789 DUP6 DUP3 DUP7 ADD PUSH2 0x719 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x79A DUP6 DUP3 DUP7 ADD PUSH2 0x74F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AD DUP2 PUSH2 0x6F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C9 DUP2 PUSH2 0x7B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x809 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x831 DUP3 PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x83B DUP2 DUP6 PUSH2 0x7DA JUMP JUMPDEST SWAP4 POP PUSH2 0x84B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x854 DUP2 PUSH2 0x815 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x877 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x7C0 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x88F DUP3 DUP3 PUSH2 0x826 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x8A9 DUP3 DUP3 PUSH2 0x826 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x8BE PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x7A4 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x901 DUP4 DUP4 PUSH2 0x85F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x921 DUP3 PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0x92B DUP2 DUP6 PUSH2 0x8D4 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x93D DUP6 PUSH2 0x8E5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x979 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x95A DUP6 DUP3 PUSH2 0x8F5 JUMP JUMPDEST SWAP5 POP PUSH2 0x965 DUP4 PUSH2 0x909 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x941 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x994 DUP2 PUSH2 0x72E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x9B2 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x7A4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x9CA DUP3 DUP3 PUSH2 0x85F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x9E4 DUP3 DUP3 PUSH2 0x916 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x9F9 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x98B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA1E DUP2 DUP5 PUSH2 0x99A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3C JUMPI PUSH2 0xA3B PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA4A DUP5 DUP3 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0xA97 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x7A4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0xAAF DUP3 DUP3 PUSH2 0x85F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0xAC9 DUP3 DUP3 PUSH2 0x916 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xADE PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x98B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF5 DUP4 DUP4 PUSH2 0xA7F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB15 DUP3 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0xB1F DUP2 DUP6 PUSH2 0xA5E JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0xB31 DUP6 PUSH2 0xA6F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xB6D JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0xB4E DUP6 DUP3 PUSH2 0xAE9 JUMP JUMPDEST SWAP5 POP PUSH2 0xB59 DUP4 PUSH2 0xAFD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xB35 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB99 DUP2 DUP5 PUSH2 0xB0A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC6 PUSH2 0xBC1 PUSH2 0xBBC DUP5 PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD8 DUP3 PUSH2 0xBAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEA DUP3 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBFA DUP2 PUSH2 0xBDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC15 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC24 DUP2 PUSH2 0x6F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC33 DUP2 PUSH2 0x72E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC4E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0xC5B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC2A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC9F DUP3 PUSH2 0x815 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCBE JUMPI PUSH2 0xCBD PUSH2 0xC67 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD1 PUSH2 0x6BC JUMP JUMPDEST SWAP1 POP PUSH2 0xCDD DUP3 DUP3 PUSH2 0xC96 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xC67 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD2C DUP2 PUSH2 0x702 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD45 PUSH2 0xD40 DUP5 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0xCC7 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xD68 JUMPI PUSH2 0xD67 PUSH2 0xD18 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD91 JUMPI DUP1 PUSH2 0xD7D DUP9 DUP3 PUSH2 0xD1D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD6A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDB0 JUMPI PUSH2 0xDAF PUSH2 0xCE7 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xDC0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xDD8 DUP2 PUSH2 0x738 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE9 DUP3 PUSH2 0x6F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF9 DUP2 PUSH2 0xDDE JUMP JUMPDEST DUP2 EQ PUSH2 0xE04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE16 DUP2 PUSH2 0xDF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE32 JUMPI PUSH2 0xE31 PUSH2 0xC62 JUMP JUMPDEST JUMPDEST PUSH2 0xE3C PUSH1 0x60 PUSH2 0xCC7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE5C JUMPI PUSH2 0xE5B PUSH2 0xCE2 JUMP JUMPDEST JUMPDEST PUSH2 0xE68 DUP5 DUP3 DUP6 ADD PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xE7C DUP5 DUP3 DUP6 ADD PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xE90 DUP5 DUP3 DUP6 ADD PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB2 JUMPI PUSH2 0xEB1 PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xED0 JUMPI PUSH2 0xECF PUSH2 0x6CB JUMP JUMPDEST JUMPDEST PUSH2 0xEDC DUP5 DUP3 DUP6 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF0 DUP3 PUSH2 0x6F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF00 DUP2 PUSH2 0xEE5 JUMP JUMPDEST DUP2 EQ PUSH2 0xF0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF1D DUP2 PUSH2 0xEF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF39 JUMPI PUSH2 0xF38 PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF47 DUP5 DUP3 DUP6 ADD PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF81 JUMPI PUSH2 0xF80 PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF8F DUP5 DUP3 DUP6 ADD PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1001 DUP3 PUSH2 0x72E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1033 JUMPI PUSH2 0x1032 PUSH2 0xFC7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1047 DUP2 PUSH2 0x7B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1052 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1064 DUP2 PUSH2 0x103E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1080 JUMPI PUSH2 0x107F PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x108E DUP5 DUP3 DUP6 ADD PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x10B7 JUMPI PUSH2 0x10B6 PUSH2 0xC67 JUMP JUMPDEST JUMPDEST PUSH2 0x10C0 DUP3 PUSH2 0x815 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E0 PUSH2 0x10DB DUP5 PUSH2 0x109C JUMP JUMPDEST PUSH2 0xCC7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x10FC JUMPI PUSH2 0x10FB PUSH2 0x1097 JUMP JUMPDEST JUMPDEST PUSH2 0x1107 DUP5 DUP3 DUP6 PUSH2 0x7EB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1124 JUMPI PUSH2 0x1123 PUSH2 0xCE7 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1134 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x10CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1153 JUMPI PUSH2 0x1152 PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1171 JUMPI PUSH2 0x1170 PUSH2 0x6CB JUMP JUMPDEST JUMPDEST PUSH2 0x117D DUP5 DUP3 DUP6 ADD PUSH2 0x110F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL PUSH15 0xEEB7FB16221F067609938E1A243DD2 0x26 DUP6 0x2E 0xEC ADD 0x2C 0xB7 0xA5 0xC2 DUP16 0xEE 0xB1 NOT PUSH13 0xF164736F6C6343000811003300 ","sourceMap":"156:2005:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;962:447;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;619:337;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;193:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;962:447;1053:15;;:::i;:::-;1084:29;1116:12;;;;;;;;;;;:20;;;1137:3;1142:6;1116:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1084:65;;1179:223;;;;;;;;1213:4;:15;;;1179:223;;;;;;1247:52;1268:12;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1247:12;:52::i;:::-;1179:223;;;;1317:34;1331:4;:19;;;1317:13;:34::i;:::-;1179:223;;;;1369:4;:19;;;1179:223;;;1160:242;;;962:447;;;;:::o;619:337::-;673:17;702:18;723:12;;;;;;;;;;;:30;;;754:3;723:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;702:56;;769:24;811:10;796:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;769:53;;838:9;833:93;857:10;853:1;:14;833:93;;;900:15;908:3;913:1;900:7;:15::i;:::-;888:6;895:1;888:9;;;;;;;;:::i;:::-;;;;;;;:27;;;;869:3;;;;;:::i;:::-;;;;833:93;;;;943:6;936:13;;;;619:337;;;:::o;193:32::-;;;;;;;;;;;;:::o;1415:346::-;1507:16;;:::i;:::-;1539:12;1561:13;1539:36;;1604:150;;;;;;;;1631:5;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1604:150;;;;;;1665:5;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1604:150;;;;1695:5;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1604:150;;;;1727:13;1604:150;;;;;1585:169;;;1415:346;;;:::o;1767:392::-;1869:18;1903:19;1925:13;:20;1903:42;;1955:25;1999:11;1983:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1955:56;;2026:9;2021:109;2045:11;2041:1;:15;2021:109;;;2089:30;2102:13;2116:1;2102:16;;;;;;;;:::i;:::-;;;;;;;;2089:12;:30::i;:::-;2077:6;2084:1;2077:9;;;;;;;;:::i;:::-;;;;;;;:42;;;;2058:3;;;;;:::i;:::-;;;;2021:109;;;;2146:6;2139:13;;;;1767:392;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:108::-;1754:24;1772:5;1754:24;:::i;:::-;1749:3;1742:37;1677:108;;:::o;1791:86::-;1826:7;1866:4;1859:5;1855:16;1844:27;;1791:86;;;:::o;1883:102::-;1956:22;1972:5;1956:22;:::i;:::-;1951:3;1944:35;1883:102;;:::o;1991:99::-;2043:6;2077:5;2071:12;2061:22;;1991:99;;;:::o;2096:159::-;2170:11;2204:6;2199:3;2192:19;2244:4;2239:3;2235:14;2220:29;;2096:159;;;;:::o;2261:246::-;2342:1;2352:113;2366:6;2363:1;2360:13;2352:113;;;2451:1;2446:3;2442:11;2436:18;2432:1;2427:3;2423:11;2416:39;2388:2;2385:1;2381:10;2376:15;;2352:113;;;2499:1;2490:6;2485:3;2481:16;2474:27;2323:184;2261:246;;;:::o;2513:102::-;2554:6;2605:2;2601:7;2596:2;2589:5;2585:14;2581:28;2571:38;;2513:102;;;:::o;2621:357::-;2699:3;2727:39;2760:5;2727:39;:::i;:::-;2782:61;2836:6;2831:3;2782:61;:::i;:::-;2775:68;;2852:65;2910:6;2905:3;2898:4;2891:5;2887:16;2852:65;:::i;:::-;2942:29;2964:6;2942:29;:::i;:::-;2937:3;2933:39;2926:46;;2703:275;2621:357;;;;:::o;3072:1027::-;3183:3;3219:4;3214:3;3210:14;3310:4;3303:5;3299:16;3293:23;3329:59;3382:4;3377:3;3373:14;3359:12;3329:59;:::i;:::-;3234:164;3480:4;3473:5;3469:16;3463:23;3533:3;3527:4;3523:14;3516:4;3511:3;3507:14;3500:38;3559:73;3627:4;3613:12;3559:73;:::i;:::-;3551:81;;3408:235;3727:4;3720:5;3716:16;3710:23;3780:3;3774:4;3770:14;3763:4;3758:3;3754:14;3747:38;3806:73;3874:4;3860:12;3806:73;:::i;:::-;3798:81;;3653:237;3980:4;3973:5;3969:16;3963:23;3999:63;4056:4;4051:3;4047:14;4033:12;3999:63;:::i;:::-;3900:172;4089:4;4082:11;;3188:911;3072:1027;;;;:::o;4105:140::-;4198:6;4232:5;4226:12;4216:22;;4105:140;;;:::o;4251:200::-;4366:11;4400:6;4395:3;4388:19;4440:4;4435:3;4431:14;4416:29;;4251:200;;;;:::o;4457:158::-;4550:4;4573:3;4565:11;;4603:4;4598:3;4594:14;4586:22;;4457:158;;;:::o;4621:260::-;4742:10;4777:98;4871:3;4863:6;4777:98;:::i;:::-;4763:112;;4621:260;;;;:::o;4887:139::-;4983:4;5015;5010:3;5006:14;4998:22;;4887:139;;;:::o;5124:1099::-;5285:3;5314:80;5388:5;5314:80;:::i;:::-;5410:102;5505:6;5500:3;5410:102;:::i;:::-;5403:109;;5538:3;5583:4;5575:6;5571:17;5566:3;5562:27;5613:82;5689:5;5613:82;:::i;:::-;5718:7;5749:1;5734:444;5759:6;5756:1;5753:13;5734:444;;;5830:9;5824:4;5820:20;5815:3;5808:33;5881:6;5875:13;5909:116;6020:4;6005:13;5909:116;:::i;:::-;5901:124;;6048:86;6127:6;6048:86;:::i;:::-;6038:96;;6163:4;6158:3;6154:14;6147:21;;5794:384;5781:1;5778;5774:9;5769:14;;5734:444;;;5738:14;6194:4;6187:11;;6214:3;6207:10;;5290:933;;;;;5124:1099;;;;:::o;6229:108::-;6306:24;6324:5;6306:24;:::i;:::-;6301:3;6294:37;6229:108;;:::o;6429:1175::-;6548:3;6584:4;6579:3;6575:14;6677:4;6670:5;6666:16;6660:23;6696:63;6753:4;6748:3;6744:14;6730:12;6696:63;:::i;:::-;6599:170;6861:4;6854:5;6850:16;6844:23;6914:3;6908:4;6904:14;6897:4;6892:3;6888:14;6881:38;6940:105;7040:4;7026:12;6940:105;:::i;:::-;6932:113;;6779:277;7148:4;7141:5;7137:16;7131:23;7201:3;7195:4;7191:14;7184:4;7179:3;7175:14;7168:38;7227:155;7377:4;7363:12;7227:155;:::i;:::-;7219:163;;7066:327;7485:4;7478:5;7474:16;7468:23;7504:63;7561:4;7556:3;7552:14;7538:12;7504:63;:::i;:::-;7403:174;7594:4;7587:11;;6553:1051;6429:1175;;;;:::o;7610:373::-;7753:4;7791:2;7780:9;7776:18;7768:26;;7840:9;7834:4;7830:20;7826:1;7815:9;7811:17;7804:47;7868:108;7971:4;7962:6;7868:108;:::i;:::-;7860:116;;7610:373;;;;:::o;7989:329::-;8048:6;8097:2;8085:9;8076:7;8072:23;8068:32;8065:119;;;8103:79;;:::i;:::-;8065:119;8223:1;8248:53;8293:7;8284:6;8273:9;8269:22;8248:53;:::i;:::-;8238:63;;8194:117;7989:329;;;;:::o;8324:139::-;8416:6;8450:5;8444:12;8434:22;;8324:139;;;:::o;8469:209::-;8593:11;8627:6;8622:3;8615:19;8667:4;8662:3;8658:14;8643:29;;8469:209;;;;:::o;8684:157::-;8776:4;8799:3;8791:11;;8829:4;8824:3;8820:14;8812:22;;8684:157;;;:::o;8933:1165::-;9042:3;9078:4;9073:3;9069:14;9171:4;9164:5;9160:16;9154:23;9190:63;9247:4;9242:3;9238:14;9224:12;9190:63;:::i;:::-;9093:170;9355:4;9348:5;9344:16;9338:23;9408:3;9402:4;9398:14;9391:4;9386:3;9382:14;9375:38;9434:105;9534:4;9520:12;9434:105;:::i;:::-;9426:113;;9273:277;9642:4;9635:5;9631:16;9625:23;9695:3;9689:4;9685:14;9678:4;9673:3;9669:14;9662:38;9721:155;9871:4;9857:12;9721:155;:::i;:::-;9713:163;;9560:327;9979:4;9972:5;9968:16;9962:23;9998:63;10055:4;10050:3;10046:14;10032:12;9998:63;:::i;:::-;9897:174;10088:4;10081:11;;9047:1051;8933:1165;;;;:::o;10104:256::-;10223:10;10258:96;10350:3;10342:6;10258:96;:::i;:::-;10244:110;;10104:256;;;;:::o;10366:138::-;10461:4;10493;10488:3;10484:14;10476:22;;10366:138;;;:::o;10600:1111::-;10769:3;10798:79;10871:5;10798:79;:::i;:::-;10893:111;10997:6;10992:3;10893:111;:::i;:::-;10886:118;;11030:3;11075:4;11067:6;11063:17;11058:3;11054:27;11105:81;11180:5;11105:81;:::i;:::-;11209:7;11240:1;11225:441;11250:6;11247:1;11244:13;11225:441;;;11321:9;11315:4;11311:20;11306:3;11299:33;11372:6;11366:13;11400:114;11509:4;11494:13;11400:114;:::i;:::-;11392:122;;11537:85;11615:6;11537:85;:::i;:::-;11527:95;;11651:4;11646:3;11642:14;11635:21;;11285:381;11272:1;11269;11265:9;11260:14;;11225:441;;;11229:14;11682:4;11675:11;;11702:3;11695:10;;10774:937;;;;;10600:1111;;;;:::o;11717:473::-;11910:4;11948:2;11937:9;11933:18;11925:26;;11997:9;11991:4;11987:20;11983:1;11972:9;11968:17;11961:47;12025:158;12178:4;12169:6;12025:158;:::i;:::-;12017:166;;11717:473;;;;:::o;12196:60::-;12224:3;12245:5;12238:12;;12196:60;;;:::o;12262:142::-;12312:9;12345:53;12363:34;12372:24;12390:5;12372:24;:::i;:::-;12363:34;:::i;:::-;12345:53;:::i;:::-;12332:66;;12262:142;;;:::o;12410:126::-;12460:9;12493:37;12524:5;12493:37;:::i;:::-;12480:50;;12410:126;;;:::o;12542:146::-;12612:9;12645:37;12676:5;12645:37;:::i;:::-;12632:50;;12542:146;;;:::o;12694:171::-;12801:57;12852:5;12801:57;:::i;:::-;12796:3;12789:70;12694:171;;:::o;12871:262::-;12984:4;13022:2;13011:9;13007:18;12999:26;;13035:91;13123:1;13112:9;13108:17;13099:6;13035:91;:::i;:::-;12871:262;;;;:::o;13139:118::-;13226:24;13244:5;13226:24;:::i;:::-;13221:3;13214:37;13139:118;;:::o;13263:::-;13350:24;13368:5;13350:24;:::i;:::-;13345:3;13338:37;13263:118;;:::o;13387:332::-;13508:4;13546:2;13535:9;13531:18;13523:26;;13559:71;13627:1;13616:9;13612:17;13603:6;13559:71;:::i;:::-;13640:72;13708:2;13697:9;13693:18;13684:6;13640:72;:::i;:::-;13387:332;;;;;:::o;13725:117::-;13834:1;13831;13824:12;13848:180;13896:77;13893:1;13886:88;13993:4;13990:1;13983:15;14017:4;14014:1;14007:15;14034:281;14117:27;14139:4;14117:27;:::i;:::-;14109:6;14105:40;14247:6;14235:10;14232:22;14211:18;14199:10;14196:34;14193:62;14190:88;;;14258:18;;:::i;:::-;14190:88;14298:10;14294:2;14287:22;14077:238;14034:281;;:::o;14321:129::-;14355:6;14382:20;;:::i;:::-;14372:30;;14411:33;14439:4;14431:6;14411:33;:::i;:::-;14321:129;;;:::o;14456:117::-;14565:1;14562;14555:12;14579:117;14688:1;14685;14678:12;14702:311;14779:4;14869:18;14861:6;14858:30;14855:56;;;14891:18;;:::i;:::-;14855:56;14941:4;14933:6;14929:17;14921:25;;15001:4;14995;14991:15;14983:23;;14702:311;;;:::o;15019:117::-;15128:1;15125;15118:12;15142:143;15199:5;15230:6;15224:13;15215:22;;15246:33;15273:5;15246:33;:::i;:::-;15142:143;;;;:::o;15308:732::-;15415:5;15440:81;15456:64;15513:6;15456:64;:::i;:::-;15440:81;:::i;:::-;15431:90;;15541:5;15570:6;15563:5;15556:21;15604:4;15597:5;15593:16;15586:23;;15657:4;15649:6;15645:17;15637:6;15633:30;15686:3;15678:6;15675:15;15672:122;;;15705:79;;:::i;:::-;15672:122;15820:6;15803:231;15837:6;15832:3;15829:15;15803:231;;;15912:3;15941:48;15985:3;15973:10;15941:48;:::i;:::-;15936:3;15929:61;16019:4;16014:3;16010:14;16003:21;;15879:155;15863:4;15858:3;15854:14;15847:21;;15803:231;;;15807:21;15421:619;;15308:732;;;;;:::o;16063:385::-;16145:5;16194:3;16187:4;16179:6;16175:17;16171:27;16161:122;;16202:79;;:::i;:::-;16161:122;16312:6;16306:13;16337:105;16438:3;16430:6;16423:4;16415:6;16411:17;16337:105;:::i;:::-;16328:114;;16151:297;16063:385;;;;:::o;16454:143::-;16511:5;16542:6;16536:13;16527:22;;16558:33;16585:5;16558:33;:::i;:::-;16454:143;;;;:::o;16603:114::-;16658:7;16687:24;16705:5;16687:24;:::i;:::-;16676:35;;16603:114;;;:::o;16723:158::-;16814:42;16850:5;16814:42;:::i;:::-;16807:5;16804:53;16794:81;;16871:1;16868;16861:12;16794:81;16723:158;:::o;16887:179::-;16962:5;16993:6;16987:13;16978:22;;17009:51;17054:5;17009:51;:::i;:::-;16887:179;;;;:::o;17104:997::-;17185:5;17229:4;17217:9;17212:3;17208:19;17204:30;17201:117;;;17237:79;;:::i;:::-;17201:117;17336:21;17352:4;17336:21;:::i;:::-;17327:30;;17447:1;17436:9;17432:17;17426:24;17477:18;17469:6;17466:30;17463:117;;;17499:79;;:::i;:::-;17463:117;17619:85;17700:3;17691:6;17680:9;17676:22;17619:85;:::i;:::-;17612:4;17605:5;17601:16;17594:111;17367:349;17785:2;17826:60;17882:3;17873:6;17862:9;17858:22;17826:60;:::i;:::-;17819:4;17812:5;17808:16;17801:86;17726:172;17963:2;18004:78;18078:3;18069:6;18058:9;18054:22;18004:78;:::i;:::-;17997:4;17990:5;17986:16;17979:104;17908:186;17104:997;;;;:::o;18107:546::-;18198:6;18247:2;18235:9;18226:7;18222:23;18218:32;18215:119;;;18253:79;;:::i;:::-;18215:119;18394:1;18383:9;18379:17;18373:24;18424:18;18416:6;18413:30;18410:117;;;18446:79;;:::i;:::-;18410:117;18551:85;18628:7;18619:6;18608:9;18604:22;18551:85;:::i;:::-;18541:95;;18344:302;18107:546;;;;:::o;18659:111::-;18711:7;18740:24;18758:5;18740:24;:::i;:::-;18729:35;;18659:111;;;:::o;18776:152::-;18864:39;18897:5;18864:39;:::i;:::-;18857:5;18854:50;18844:78;;18918:1;18915;18908:12;18844:78;18776:152;:::o;18934:173::-;19006:5;19037:6;19031:13;19022:22;;19053:48;19095:5;19053:48;:::i;:::-;18934:173;;;;:::o;19113:381::-;19198:6;19247:2;19235:9;19226:7;19222:23;19218:32;19215:119;;;19253:79;;:::i;:::-;19215:119;19373:1;19398:79;19469:7;19460:6;19449:9;19445:22;19398:79;:::i;:::-;19388:89;;19344:143;19113:381;;;;:::o;19500:222::-;19593:4;19631:2;19620:9;19616:18;19608:26;;19644:71;19712:1;19701:9;19697:17;19688:6;19644:71;:::i;:::-;19500:222;;;;:::o;19728:351::-;19798:6;19847:2;19835:9;19826:7;19822:23;19818:32;19815:119;;;19853:79;;:::i;:::-;19815:119;19973:1;19998:64;20054:7;20045:6;20034:9;20030:22;19998:64;:::i;:::-;19988:74;;19944:128;19728:351;;;;:::o;20085:180::-;20133:77;20130:1;20123:88;20230:4;20227:1;20220:15;20254:4;20251:1;20244:15;20271:180;20319:77;20316:1;20309:88;20416:4;20413:1;20406:15;20440:4;20437:1;20430:15;20457:233;20496:3;20519:24;20537:5;20519:24;:::i;:::-;20510:33;;20565:66;20558:5;20555:77;20552:103;;20635:18;;:::i;:::-;20552:103;20682:1;20675:5;20671:13;20664:20;;20457:233;;;:::o;20696:118::-;20767:22;20783:5;20767:22;:::i;:::-;20760:5;20757:33;20747:61;;20804:1;20801;20794:12;20747:61;20696:118;:::o;20820:139::-;20875:5;20906:6;20900:13;20891:22;;20922:31;20947:5;20922:31;:::i;:::-;20820:139;;;;:::o;20965:347::-;21033:6;21082:2;21070:9;21061:7;21057:23;21053:32;21050:119;;;21088:79;;:::i;:::-;21050:119;21208:1;21233:62;21287:7;21278:6;21267:9;21263:22;21233:62;:::i;:::-;21223:72;;21179:126;20965:347;;;;:::o;21318:117::-;21427:1;21424;21417:12;21441:308;21503:4;21593:18;21585:6;21582:30;21579:56;;;21615:18;;:::i;:::-;21579:56;21653:29;21675:6;21653:29;:::i;:::-;21645:37;;21737:4;21731;21727:15;21719:23;;21441:308;;;:::o;21755:434::-;21844:5;21869:66;21885:49;21927:6;21885:49;:::i;:::-;21869:66;:::i;:::-;21860:75;;21958:6;21951:5;21944:21;21996:4;21989:5;21985:16;22034:3;22025:6;22020:3;22016:16;22013:25;22010:112;;;22041:79;;:::i;:::-;22010:112;22131:52;22176:6;22171:3;22166;22131:52;:::i;:::-;21850:339;21755:434;;;;;:::o;22209:355::-;22276:5;22325:3;22318:4;22310:6;22306:17;22302:27;22292:122;;22333:79;;:::i;:::-;22292:122;22443:6;22437:13;22468:90;22554:3;22546:6;22539:4;22531:6;22527:17;22468:90;:::i;:::-;22459:99;;22282:282;22209:355;;;;:::o;22570:524::-;22650:6;22699:2;22687:9;22678:7;22674:23;22670:32;22667:119;;;22705:79;;:::i;:::-;22667:119;22846:1;22835:9;22831:17;22825:24;22876:18;22868:6;22865:30;22862:117;;;22898:79;;:::i;:::-;22862:117;23003:74;23069:7;23060:6;23049:9;23045:22;23003:74;:::i;:::-;22993:84;;22796:291;22570:524;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"908000","executionCost":"infinite","totalCost":"infinite"},"external":{"getPool(address,uint256)":"infinite","getPools(address)":"infinite","interestSwap()":"infinite"},"internal":{"getTokenInfo(address)":"infinite","getTokensInfo(address[] memory)":"infinite"}},"methodIdentifiers":{"getPool(address,uint256)":"5b5b9ea2","getPools(address)":"5c39f467","interestSwap()":"5ff9d06f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_interestSwap\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"priceModel\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"internalType\":\"struct InterestSwapPeriphery.TokenInfo\",\"name\":\"liquidityToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"internalType\":\"struct InterestSwapPeriphery.TokenInfo[]\",\"name\":\"acceptedTokens\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"totalLiquidity\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestSwapPeriphery.PoolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lp\",\"type\":\"address\"}],\"name\":\"getPools\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"priceModel\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"internalType\":\"struct InterestSwapPeriphery.TokenInfo\",\"name\":\"liquidityToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"internalType\":\"struct InterestSwapPeriphery.TokenInfo[]\",\"name\":\"acceptedTokens\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"totalLiquidity\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestSwapPeriphery.PoolInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestSwap\",\"outputs\":[{\"internalType\":\"contract InterestSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/InterestSwapPeriphery.sol\":\"InterestSwapPeriphery\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/InterestSwap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport {PRBMathUD60x18} from \\\"./dependencies/prb-math/PRBMathUD60x18.sol\\\";\\nimport {IPriceFeed} from \\\"./interfaces/IPriceFeed.sol\\\";\\nimport {IERC20} from \\\"./interfaces/IERC20.sol\\\";\\n\\nimport {PriceModel} from \\\"./PriceModel.sol\\\";\\n\\ncontract InterestSwap {\\n    using PRBMathUD60x18 for uint256;\\n\\n    IPriceFeed public priceFeed;\\n\\n    IERC20 public liquidityToken;\\n\\n    struct Pool {\\n        address[] acceptedTokens;\\n        uint256 totalLiquidity;\\n        PriceModel priceModel;\\n    }\\n\\n    struct Route {\\n        address poolOwner;\\n        uint256 poolIndex;\\n    }\\n\\n    // user => Pool\\n    mapping(address => Pool[]) private pools;\\n\\n    // user => pool index => supported asset => bool\\n    mapping(address => mapping(uint256 => mapping(address => bool)))\\n        public isAssetSupported;\\n\\n    // @dev This could be extended to more templates and include validation\\n    address[] public priceModels;\\n\\n    event PoolCreated(\\n        address indexed owner,\\n        address[] acceptedTokens,\\n        address priceModel,\\n        uint256 totalLiquidity\\n    );\\n\\n    constructor(address _priceFeed, address _liquidityToken) {\\n        priceFeed = IPriceFeed(_priceFeed);\\n        liquidityToken = IERC20(_liquidityToken);\\n    }\\n\\n    function createPool(\\n        address[] memory _acceptedTokens,\\n        uint256 _dailyFeePercentage,\\n        uint256 _initialLiquidity\\n    ) external returns (uint256, address) {\\n        uint256 totalTokens = _acceptedTokens.length;\\n        uint256 newPoolIndex = pools[msg.sender].length;\\n\\n        address newPriceModel = createPriceModel(_dailyFeePercentage);\\n\\n        pools[msg.sender].push(\\n            Pool(_acceptedTokens, _initialLiquidity, PriceModel(newPriceModel))\\n        );\\n\\n        for (uint256 i = 0; i < totalTokens; i++) {\\n            isAssetSupported[msg.sender][newPoolIndex][\\n                _acceptedTokens[i]\\n            ] = true;\\n        }\\n\\n        // transfer initial liquidity amount\\n        liquidityToken.transferFrom(\\n            msg.sender,\\n            address(this),\\n            _initialLiquidity\\n        );\\n\\n        emit PoolCreated(\\n            msg.sender,\\n            _acceptedTokens,\\n            newPriceModel,\\n            _initialLiquidity\\n        );\\n\\n        return (newPoolIndex, newPriceModel);\\n    }\\n\\n    function quote(\\n        address _asset,\\n        uint256 _amount,\\n        uint256 _daysTerm,\\n        Route memory route\\n    )\\n        public\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        // @dev verify the route supports that asset\\n        require(\\n            isAssetSupported[route.poolOwner][route.poolIndex][_asset],\\n            \\\"Unsupported asset\\\"\\n        );\\n\\n        uint256 collateralPrice = priceFeed.getAssetPrice(_asset);\\n        uint256 collateralValueinUSDC = collateralPrice.mul(_amount);\\n\\n        Pool storage poolReference = pools[route.poolOwner][route.poolIndex];\\n        require(\\n            collateralValueinUSDC <= poolReference.totalLiquidity,\\n            \\\"Not enough liquidity in the pool\\\"\\n        );\\n\\n        uint256 assetPercentageToCharge = poolReference.priceModel.quote(\\n            _amount,\\n            _daysTerm\\n        );\\n\\n        // asset percentage to charge, amount to be received, collateralPrice\\n        uint256 amounToBeSent = _amount - assetPercentageToCharge;\\n        uint256 amounToBeSentInUSDC = (_amount - assetPercentageToCharge).mul(\\n            collateralPrice\\n        );\\n\\n        return (assetPercentageToCharge, amounToBeSent, amounToBeSentInUSDC);\\n    }\\n\\n    function swap(\\n        address _asset,\\n        uint256 _amount,\\n        uint256 _daysTerm,\\n        Route memory route\\n    ) external returns (uint256) {\\n        (, , uint256 amounToBeSentInUSDC) = quote(\\n            _asset,\\n            _amount,\\n            _daysTerm,\\n            route\\n        );\\n\\n        pools[route.poolOwner][route.poolIndex]\\n            .totalLiquidity -= amounToBeSentInUSDC;\\n\\n        // transfer asset to this contract\\n        IERC20(_asset).transferFrom(msg.sender, address(this), _amount);\\n        liquidityToken.transfer(msg.sender, amounToBeSentInUSDC);\\n\\n        return amounToBeSentInUSDC;\\n    }\\n\\n    function createPriceModel(uint256 _dailyFeePercentage)\\n        internal\\n        returns (address)\\n    {\\n        PriceModel newPriceModel = new PriceModel(_dailyFeePercentage);\\n        priceModels.push(address(newPriceModel));\\n        return address(newPriceModel);\\n    }\\n\\n    function getPool(address _lp, uint256 _index)\\n        external\\n        view\\n        returns (Pool memory)\\n    {\\n        return pools[_lp][_index];\\n    }\\n\\n    function getUserTotalPools(address _lp) external view returns (uint256) {\\n        return pools[_lp].length;\\n    }\\n}\\n\",\"keccak256\":\"0x63ae3fac1bb345d704701d325336423d68bb78015df67731cecc8aac2fd12e13\",\"license\":\"MIT\"},\"src/InterestSwapPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport {IERC20} from \\\"./interfaces/IERC20.sol\\\";\\nimport {InterestSwap} from \\\"./InterestSwap.sol\\\";\\n\\ncontract InterestSwapPeriphery {\\n    InterestSwap public interestSwap;\\n\\n    struct TokenInfo {\\n        uint8 decimals;\\n        string name;\\n        string symbol;\\n        address tokenAddress;\\n    }\\n\\n    struct PoolInfo {\\n        address priceModel;\\n        TokenInfo liquidityToken;\\n        TokenInfo[] acceptedTokens;\\n        uint256 totalLiquidity;\\n    }\\n\\n    constructor(address _interestSwap) {\\n        interestSwap = InterestSwap(_interestSwap);\\n    }\\n\\n    function getPools(address _lp) external view returns (PoolInfo[] memory) {\\n        uint256 totalPools = interestSwap.getUserTotalPools(_lp);\\n\\n        PoolInfo[] memory result = new PoolInfo[](totalPools);\\n\\n        for (uint256 i = 0; i < totalPools; i++) {\\n            result[i] = getPool(_lp, i);\\n        }\\n\\n        return result;\\n    }\\n\\n    function getPool(address _lp, uint256 _index)\\n        public\\n        view\\n        returns (PoolInfo memory)\\n    {\\n        InterestSwap.Pool memory pool = interestSwap.getPool(_lp, _index);\\n\\n        return\\n            PoolInfo(\\n                address(pool.priceModel),\\n                getTokenInfo(address(interestSwap.liquidityToken())),\\n                getTokensInfo(pool.acceptedTokens),\\n                pool.totalLiquidity\\n            );\\n    }\\n\\n    function getTokenInfo(address _tokenToCheck)\\n        internal\\n        view\\n        returns (TokenInfo memory)\\n    {\\n        IERC20 token = IERC20(_tokenToCheck);\\n        return\\n            TokenInfo(\\n                token.decimals(),\\n                token.name(),\\n                token.symbol(),\\n                _tokenToCheck\\n            );\\n    }\\n\\n    function getTokensInfo(address[] memory _tokenToCheck)\\n        internal\\n        view\\n        returns (TokenInfo[] memory)\\n    {\\n        uint256 totalTokens = _tokenToCheck.length;\\n        TokenInfo[] memory result = new TokenInfo[](totalTokens);\\n        for (uint256 i = 0; i < totalTokens; i++) {\\n            result[i] = getTokenInfo(_tokenToCheck[i]);\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xdcbd4424c1a2ff706724f1fffb54c1a4a3db7b0c7a4a1d62afe32cdcfd7626c5\",\"license\":\"MIT\"},\"src/PriceModel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./dependencies/prb-math/PRBMathUD60x18.sol\\\";\\n\\n// @dev To make this contract ownable, so only the owner can update the parameters\\ncontract PriceModel {\\n    using PRBMathUD60x18 for uint256;\\n\\n    uint256 public dailyPercent;\\n\\n    constructor(uint256 _dailyPercent) {\\n        dailyPercent = _dailyPercent;\\n    }\\n\\n    function setDailyPercentage(uint256 _newValue) external {\\n        dailyPercent = _newValue;\\n    }\\n\\n    // @dev from the amount requested, we charge you X % (the result)\\n    function quote(uint256 _amount, uint256 _numberOfDays)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        // dailyPercent * _numberOfDays = total interest\\n        return _amount.mul(dailyPercent).mul(_numberOfDays);\\n    }\\n}\\n\",\"keccak256\":\"0x5a31238183b8d86a80004a0667cfdd4eec71b49563c0b0d28cd7937defb29339\",\"license\":\"MIT\"},\"src/dependencies/prb-math/PRBMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\n/// @notice Emitted when the result overflows uint256.\\nerror PRBMath__MulDivFixedPointOverflow(uint256 prod1);\\n\\n/// @notice Emitted when the result overflows uint256.\\nerror PRBMath__MulDivOverflow(uint256 prod1, uint256 denominator);\\n\\n/// @notice Emitted when one of the inputs is type(int256).min.\\nerror PRBMath__MulDivSignedInputTooSmall();\\n\\n/// @notice Emitted when the intermediary absolute result overflows int256.\\nerror PRBMath__MulDivSignedOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is MIN_SD59x18.\\nerror PRBMathSD59x18__AbsInputTooSmall();\\n\\n/// @notice Emitted when ceiling a number overflows SD59x18.\\nerror PRBMathSD59x18__CeilOverflow(int256 x);\\n\\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\\nerror PRBMathSD59x18__DivInputTooSmall();\\n\\n/// @notice Emitted when one of the intermediary unsigned results overflows SD59x18.\\nerror PRBMathSD59x18__DivOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is greater than 133.084258667509499441.\\nerror PRBMathSD59x18__ExpInputTooBig(int256 x);\\n\\n/// @notice Emitted when the input is greater than 192.\\nerror PRBMathSD59x18__Exp2InputTooBig(int256 x);\\n\\n/// @notice Emitted when flooring a number underflows SD59x18.\\nerror PRBMathSD59x18__FloorUnderflow(int256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format overflows SD59x18.\\nerror PRBMathSD59x18__FromIntOverflow(int256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format underflows SD59x18.\\nerror PRBMathSD59x18__FromIntUnderflow(int256 x);\\n\\n/// @notice Emitted when the product of the inputs is negative.\\nerror PRBMathSD59x18__GmNegativeProduct(int256 x, int256 y);\\n\\n/// @notice Emitted when multiplying the inputs overflows SD59x18.\\nerror PRBMathSD59x18__GmOverflow(int256 x, int256 y);\\n\\n/// @notice Emitted when the input is less than or equal to zero.\\nerror PRBMathSD59x18__LogInputTooSmall(int256 x);\\n\\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\\nerror PRBMathSD59x18__MulInputTooSmall();\\n\\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\\nerror PRBMathSD59x18__MulOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\\nerror PRBMathSD59x18__PowuOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is negative.\\nerror PRBMathSD59x18__SqrtNegativeInput(int256 x);\\n\\n/// @notice Emitted when the calculating the square root overflows SD59x18.\\nerror PRBMathSD59x18__SqrtOverflow(int256 x);\\n\\n/// @notice Emitted when addition overflows UD60x18.\\nerror PRBMathUD60x18__AddOverflow(uint256 x, uint256 y);\\n\\n/// @notice Emitted when ceiling a number overflows UD60x18.\\nerror PRBMathUD60x18__CeilOverflow(uint256 x);\\n\\n/// @notice Emitted when the input is greater than 133.084258667509499441.\\nerror PRBMathUD60x18__ExpInputTooBig(uint256 x);\\n\\n/// @notice Emitted when the input is greater than 192.\\nerror PRBMathUD60x18__Exp2InputTooBig(uint256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format format overflows UD60x18.\\nerror PRBMathUD60x18__FromUintOverflow(uint256 x);\\n\\n/// @notice Emitted when multiplying the inputs overflows UD60x18.\\nerror PRBMathUD60x18__GmOverflow(uint256 x, uint256 y);\\n\\n/// @notice Emitted when the input is less than 1.\\nerror PRBMathUD60x18__LogInputTooSmall(uint256 x);\\n\\n/// @notice Emitted when the calculating the square root overflows UD60x18.\\nerror PRBMathUD60x18__SqrtOverflow(uint256 x);\\n\\n/// @notice Emitted when subtraction underflows UD60x18.\\nerror PRBMathUD60x18__SubUnderflow(uint256 x, uint256 y);\\n\\n/// @dev Common mathematical functions used in both PRBMathSD59x18 and PRBMathUD60x18. Note that this shared library\\n/// does not always assume the signed 59.18-decimal fixed-point or the unsigned 60.18-decimal fixed-point\\n/// representation. When it does not, it is explicitly mentioned in the NatSpec documentation.\\nlibrary PRBMath {\\n    /// STRUCTS ///\\n\\n    struct SD59x18 {\\n        int256 value;\\n    }\\n\\n    struct UD60x18 {\\n        uint256 value;\\n    }\\n\\n    /// STORAGE ///\\n\\n    /// @dev How many trailing decimals can be represented.\\n    uint256 internal constant SCALE = 1e18;\\n\\n    /// @dev Largest power of two divisor of SCALE.\\n    uint256 internal constant SCALE_LPOTD = 262144;\\n\\n    /// @dev SCALE inverted mod 2^256.\\n    uint256 internal constant SCALE_INVERSE =\\n        78156646155174841979727994598816262306175212592076161876661_508869554232690281;\\n\\n    /// FUNCTIONS ///\\n\\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\\n    /// @dev Has to use 192.64-bit fixed-point numbers.\\n    /// See https://ethereum.stackexchange.com/a/96594/24693.\\n    /// @param x The exponent as an unsigned 192.64-bit fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp2(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            // Start from 0.5 in the 192.64-bit fixed-point format.\\n            result = 0x800000000000000000000000000000000000000000000000;\\n\\n            // Multiply the result by root(2, 2^-i) when the bit at position i is 1. None of the intermediary results overflows\\n            // because the initial result is 2^191 and all magic factors are less than 2^65.\\n            if (x & 0x8000000000000000 > 0) {\\n                result = (result * 0x16A09E667F3BCC909) >> 64;\\n            }\\n            if (x & 0x4000000000000000 > 0) {\\n                result = (result * 0x1306FE0A31B7152DF) >> 64;\\n            }\\n            if (x & 0x2000000000000000 > 0) {\\n                result = (result * 0x1172B83C7D517ADCE) >> 64;\\n            }\\n            if (x & 0x1000000000000000 > 0) {\\n                result = (result * 0x10B5586CF9890F62A) >> 64;\\n            }\\n            if (x & 0x800000000000000 > 0) {\\n                result = (result * 0x1059B0D31585743AE) >> 64;\\n            }\\n            if (x & 0x400000000000000 > 0) {\\n                result = (result * 0x102C9A3E778060EE7) >> 64;\\n            }\\n            if (x & 0x200000000000000 > 0) {\\n                result = (result * 0x10163DA9FB33356D8) >> 64;\\n            }\\n            if (x & 0x100000000000000 > 0) {\\n                result = (result * 0x100B1AFA5ABCBED61) >> 64;\\n            }\\n            if (x & 0x80000000000000 > 0) {\\n                result = (result * 0x10058C86DA1C09EA2) >> 64;\\n            }\\n            if (x & 0x40000000000000 > 0) {\\n                result = (result * 0x1002C605E2E8CEC50) >> 64;\\n            }\\n            if (x & 0x20000000000000 > 0) {\\n                result = (result * 0x100162F3904051FA1) >> 64;\\n            }\\n            if (x & 0x10000000000000 > 0) {\\n                result = (result * 0x1000B175EFFDC76BA) >> 64;\\n            }\\n            if (x & 0x8000000000000 > 0) {\\n                result = (result * 0x100058BA01FB9F96D) >> 64;\\n            }\\n            if (x & 0x4000000000000 > 0) {\\n                result = (result * 0x10002C5CC37DA9492) >> 64;\\n            }\\n            if (x & 0x2000000000000 > 0) {\\n                result = (result * 0x1000162E525EE0547) >> 64;\\n            }\\n            if (x & 0x1000000000000 > 0) {\\n                result = (result * 0x10000B17255775C04) >> 64;\\n            }\\n            if (x & 0x800000000000 > 0) {\\n                result = (result * 0x1000058B91B5BC9AE) >> 64;\\n            }\\n            if (x & 0x400000000000 > 0) {\\n                result = (result * 0x100002C5C89D5EC6D) >> 64;\\n            }\\n            if (x & 0x200000000000 > 0) {\\n                result = (result * 0x10000162E43F4F831) >> 64;\\n            }\\n            if (x & 0x100000000000 > 0) {\\n                result = (result * 0x100000B1721BCFC9A) >> 64;\\n            }\\n            if (x & 0x80000000000 > 0) {\\n                result = (result * 0x10000058B90CF1E6E) >> 64;\\n            }\\n            if (x & 0x40000000000 > 0) {\\n                result = (result * 0x1000002C5C863B73F) >> 64;\\n            }\\n            if (x & 0x20000000000 > 0) {\\n                result = (result * 0x100000162E430E5A2) >> 64;\\n            }\\n            if (x & 0x10000000000 > 0) {\\n                result = (result * 0x1000000B172183551) >> 64;\\n            }\\n            if (x & 0x8000000000 > 0) {\\n                result = (result * 0x100000058B90C0B49) >> 64;\\n            }\\n            if (x & 0x4000000000 > 0) {\\n                result = (result * 0x10000002C5C8601CC) >> 64;\\n            }\\n            if (x & 0x2000000000 > 0) {\\n                result = (result * 0x1000000162E42FFF0) >> 64;\\n            }\\n            if (x & 0x1000000000 > 0) {\\n                result = (result * 0x10000000B17217FBB) >> 64;\\n            }\\n            if (x & 0x800000000 > 0) {\\n                result = (result * 0x1000000058B90BFCE) >> 64;\\n            }\\n            if (x & 0x400000000 > 0) {\\n                result = (result * 0x100000002C5C85FE3) >> 64;\\n            }\\n            if (x & 0x200000000 > 0) {\\n                result = (result * 0x10000000162E42FF1) >> 64;\\n            }\\n            if (x & 0x100000000 > 0) {\\n                result = (result * 0x100000000B17217F8) >> 64;\\n            }\\n            if (x & 0x80000000 > 0) {\\n                result = (result * 0x10000000058B90BFC) >> 64;\\n            }\\n            if (x & 0x40000000 > 0) {\\n                result = (result * 0x1000000002C5C85FE) >> 64;\\n            }\\n            if (x & 0x20000000 > 0) {\\n                result = (result * 0x100000000162E42FF) >> 64;\\n            }\\n            if (x & 0x10000000 > 0) {\\n                result = (result * 0x1000000000B17217F) >> 64;\\n            }\\n            if (x & 0x8000000 > 0) {\\n                result = (result * 0x100000000058B90C0) >> 64;\\n            }\\n            if (x & 0x4000000 > 0) {\\n                result = (result * 0x10000000002C5C860) >> 64;\\n            }\\n            if (x & 0x2000000 > 0) {\\n                result = (result * 0x1000000000162E430) >> 64;\\n            }\\n            if (x & 0x1000000 > 0) {\\n                result = (result * 0x10000000000B17218) >> 64;\\n            }\\n            if (x & 0x800000 > 0) {\\n                result = (result * 0x1000000000058B90C) >> 64;\\n            }\\n            if (x & 0x400000 > 0) {\\n                result = (result * 0x100000000002C5C86) >> 64;\\n            }\\n            if (x & 0x200000 > 0) {\\n                result = (result * 0x10000000000162E43) >> 64;\\n            }\\n            if (x & 0x100000 > 0) {\\n                result = (result * 0x100000000000B1721) >> 64;\\n            }\\n            if (x & 0x80000 > 0) {\\n                result = (result * 0x10000000000058B91) >> 64;\\n            }\\n            if (x & 0x40000 > 0) {\\n                result = (result * 0x1000000000002C5C8) >> 64;\\n            }\\n            if (x & 0x20000 > 0) {\\n                result = (result * 0x100000000000162E4) >> 64;\\n            }\\n            if (x & 0x10000 > 0) {\\n                result = (result * 0x1000000000000B172) >> 64;\\n            }\\n            if (x & 0x8000 > 0) {\\n                result = (result * 0x100000000000058B9) >> 64;\\n            }\\n            if (x & 0x4000 > 0) {\\n                result = (result * 0x10000000000002C5D) >> 64;\\n            }\\n            if (x & 0x2000 > 0) {\\n                result = (result * 0x1000000000000162E) >> 64;\\n            }\\n            if (x & 0x1000 > 0) {\\n                result = (result * 0x10000000000000B17) >> 64;\\n            }\\n            if (x & 0x800 > 0) {\\n                result = (result * 0x1000000000000058C) >> 64;\\n            }\\n            if (x & 0x400 > 0) {\\n                result = (result * 0x100000000000002C6) >> 64;\\n            }\\n            if (x & 0x200 > 0) {\\n                result = (result * 0x10000000000000163) >> 64;\\n            }\\n            if (x & 0x100 > 0) {\\n                result = (result * 0x100000000000000B1) >> 64;\\n            }\\n            if (x & 0x80 > 0) {\\n                result = (result * 0x10000000000000059) >> 64;\\n            }\\n            if (x & 0x40 > 0) {\\n                result = (result * 0x1000000000000002C) >> 64;\\n            }\\n            if (x & 0x20 > 0) {\\n                result = (result * 0x10000000000000016) >> 64;\\n            }\\n            if (x & 0x10 > 0) {\\n                result = (result * 0x1000000000000000B) >> 64;\\n            }\\n            if (x & 0x8 > 0) {\\n                result = (result * 0x10000000000000006) >> 64;\\n            }\\n            if (x & 0x4 > 0) {\\n                result = (result * 0x10000000000000003) >> 64;\\n            }\\n            if (x & 0x2 > 0) {\\n                result = (result * 0x10000000000000001) >> 64;\\n            }\\n            if (x & 0x1 > 0) {\\n                result = (result * 0x10000000000000001) >> 64;\\n            }\\n\\n            // We're doing two things at the same time:\\n            //\\n            //   1. Multiply the result by 2^n + 1, where \\\"2^n\\\" is the integer part and the one is added to account for\\n            //      the fact that we initially set the result to 0.5. This is accomplished by subtracting from 191\\n            //      rather than 192.\\n            //   2. Convert the result to the unsigned 60.18-decimal fixed-point format.\\n            //\\n            // This works because 2^(191-ip) = 2^ip / 2^191, where \\\"ip\\\" is the integer part \\\"2^n\\\".\\n            result *= SCALE;\\n            result >>= (191 - (x >> 64));\\n        }\\n    }\\n\\n    /// @notice Finds the zero-based index of the first one in the binary representation of x.\\n    /// @dev See the note on msb in the \\\"Find First Set\\\" Wikipedia article https://en.wikipedia.org/wiki/Find_first_set\\n    /// @param x The uint256 number for which to find the index of the most significant bit.\\n    /// @return msb The index of the most significant bit as an uint256.\\n    function mostSignificantBit(uint256 x) internal pure returns (uint256 msb) {\\n        if (x >= 2**128) {\\n            x >>= 128;\\n            msb += 128;\\n        }\\n        if (x >= 2**64) {\\n            x >>= 64;\\n            msb += 64;\\n        }\\n        if (x >= 2**32) {\\n            x >>= 32;\\n            msb += 32;\\n        }\\n        if (x >= 2**16) {\\n            x >>= 16;\\n            msb += 16;\\n        }\\n        if (x >= 2**8) {\\n            x >>= 8;\\n            msb += 8;\\n        }\\n        if (x >= 2**4) {\\n            x >>= 4;\\n            msb += 4;\\n        }\\n        if (x >= 2**2) {\\n            x >>= 2;\\n            msb += 2;\\n        }\\n        if (x >= 2**1) {\\n            // No need to shift x any more.\\n            msb += 1;\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f7denominator) with full precision.\\n    ///\\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv.\\n    ///\\n    /// Requirements:\\n    /// - The denominator cannot be zero.\\n    /// - The result must fit within uint256.\\n    ///\\n    /// Caveats:\\n    /// - This function does not work with fixed-point numbers.\\n    ///\\n    /// @param x The multiplicand as an uint256.\\n    /// @param y The multiplier as an uint256.\\n    /// @param denominator The divisor as an uint256.\\n    /// @return result The result as an uint256.\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n        // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n        // variables such that product = prod1 * 2^256 + prod0.\\n        uint256 prod0; // Least significant 256 bits of the product\\n        uint256 prod1; // Most significant 256 bits of the product\\n        assembly {\\n            let mm := mulmod(x, y, not(0))\\n            prod0 := mul(x, y)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        // Handle non-overflow cases, 256 by 256 division.\\n        if (prod1 == 0) {\\n            unchecked {\\n                result = prod0 / denominator;\\n            }\\n            return result;\\n        }\\n\\n        // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n        if (prod1 >= denominator) {\\n            revert PRBMath__MulDivOverflow(prod1, denominator);\\n        }\\n\\n        ///////////////////////////////////////////////\\n        // 512 by 256 division.\\n        ///////////////////////////////////////////////\\n\\n        // Make division exact by subtracting the remainder from [prod1 prod0].\\n        uint256 remainder;\\n        assembly {\\n            // Compute remainder using mulmod.\\n            remainder := mulmod(x, y, denominator)\\n\\n            // Subtract 256 bit number from 512 bit number.\\n            prod1 := sub(prod1, gt(remainder, prod0))\\n            prod0 := sub(prod0, remainder)\\n        }\\n\\n        // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n        // See https://cs.stackexchange.com/q/138556/92363.\\n        unchecked {\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 lpotdod = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by lpotdod.\\n                denominator := div(denominator, lpotdod)\\n\\n                // Divide [prod1 prod0] by lpotdod.\\n                prod0 := div(prod0, lpotdod)\\n\\n                // Flip lpotdod such that it is 2^256 / lpotdod. If lpotdod is zero, then it becomes one.\\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * lpotdod;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f71e18) with full precision.\\n    ///\\n    /// @dev Variant of \\\"mulDiv\\\" with constant folding, i.e. in which the denominator is always 1e18. Before returning the\\n    /// final result, we add 1 if (x * y) % SCALE >= HALF_SCALE. Without this, 6.6e-19 would be truncated to 0 instead of\\n    /// being rounded to 1e-18.  See \\\"Listing 6\\\" and text above it at https://accu.org/index.php/journals/1717.\\n    ///\\n    /// Requirements:\\n    /// - The result must fit within uint256.\\n    ///\\n    /// Caveats:\\n    /// - The body is purposely left uncommented; see the NatSpec comments in \\\"PRBMath.mulDiv\\\" to understand how this works.\\n    /// - It is assumed that the result can never be type(uint256).max when x and y solve the following two equations:\\n    ///     1. x * y = type(uint256).max * SCALE\\n    ///     2. (x * y) % SCALE >= SCALE / 2\\n    ///\\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function mulDivFixedPoint(uint256 x, uint256 y)\\n        internal\\n        pure\\n        returns (uint256 result)\\n    {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(x, y, not(0))\\n            prod0 := mul(x, y)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= SCALE) {\\n            revert PRBMath__MulDivFixedPointOverflow(prod1);\\n        }\\n\\n        uint256 remainder;\\n        uint256 roundUpUnit;\\n        assembly {\\n            remainder := mulmod(x, y, SCALE)\\n            roundUpUnit := gt(remainder, 499999999999999999)\\n        }\\n\\n        if (prod1 == 0) {\\n            unchecked {\\n                result = (prod0 / SCALE) + roundUpUnit;\\n                return result;\\n            }\\n        }\\n\\n        assembly {\\n            result := add(\\n                mul(\\n                    or(\\n                        div(sub(prod0, remainder), SCALE_LPOTD),\\n                        mul(\\n                            sub(prod1, gt(remainder, prod0)),\\n                            add(div(sub(0, SCALE_LPOTD), SCALE_LPOTD), 1)\\n                        )\\n                    ),\\n                    SCALE_INVERSE\\n                ),\\n                roundUpUnit\\n            )\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f7denominator) with full precision.\\n    ///\\n    /// @dev An extension of \\\"mulDiv\\\" for signed numbers. Works by computing the signs and the absolute values separately.\\n    ///\\n    /// Requirements:\\n    /// - None of the inputs can be type(int256).min.\\n    /// - The result must fit within int256.\\n    ///\\n    /// @param x The multiplicand as an int256.\\n    /// @param y The multiplier as an int256.\\n    /// @param denominator The divisor as an int256.\\n    /// @return result The result as an int256.\\n    function mulDivSigned(\\n        int256 x,\\n        int256 y,\\n        int256 denominator\\n    ) internal pure returns (int256 result) {\\n        if (\\n            x == type(int256).min ||\\n            y == type(int256).min ||\\n            denominator == type(int256).min\\n        ) {\\n            revert PRBMath__MulDivSignedInputTooSmall();\\n        }\\n\\n        // Get hold of the absolute values of x, y and the denominator.\\n        uint256 ax;\\n        uint256 ay;\\n        uint256 ad;\\n        unchecked {\\n            ax = x < 0 ? uint256(-x) : uint256(x);\\n            ay = y < 0 ? uint256(-y) : uint256(y);\\n            ad = denominator < 0 ? uint256(-denominator) : uint256(denominator);\\n        }\\n\\n        // Compute the absolute value of (x*y)\\u00f7denominator. The result must fit within int256.\\n        uint256 rAbs = mulDiv(ax, ay, ad);\\n        if (rAbs > uint256(type(int256).max)) {\\n            revert PRBMath__MulDivSignedOverflow(rAbs);\\n        }\\n\\n        // Get the signs of x, y and the denominator.\\n        uint256 sx;\\n        uint256 sy;\\n        uint256 sd;\\n        assembly {\\n            sx := sgt(x, sub(0, 1))\\n            sy := sgt(y, sub(0, 1))\\n            sd := sgt(denominator, sub(0, 1))\\n        }\\n\\n        // XOR over sx, sy and sd. This is checking whether there are one or three negative signs in the inputs.\\n        // If yes, the result should be negative.\\n        result = sx ^ sy ^ sd == 0 ? -int256(rAbs) : int256(rAbs);\\n    }\\n\\n    /// @notice Calculates the square root of x, rounding down.\\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\\n    ///\\n    /// Caveats:\\n    /// - This function does not work with fixed-point numbers.\\n    ///\\n    /// @param x The uint256 number for which to calculate the square root.\\n    /// @return result The result as an uint256.\\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n\\n        // Set the initial guess to the least power of two that is greater than or equal to sqrt(x).\\n        uint256 xAux = uint256(x);\\n        result = 1;\\n        if (xAux >= 0x100000000000000000000000000000000) {\\n            xAux >>= 128;\\n            result <<= 64;\\n        }\\n        if (xAux >= 0x10000000000000000) {\\n            xAux >>= 64;\\n            result <<= 32;\\n        }\\n        if (xAux >= 0x100000000) {\\n            xAux >>= 32;\\n            result <<= 16;\\n        }\\n        if (xAux >= 0x10000) {\\n            xAux >>= 16;\\n            result <<= 8;\\n        }\\n        if (xAux >= 0x100) {\\n            xAux >>= 8;\\n            result <<= 4;\\n        }\\n        if (xAux >= 0x10) {\\n            xAux >>= 4;\\n            result <<= 2;\\n        }\\n        if (xAux >= 0x8) {\\n            result <<= 1;\\n        }\\n\\n        // The operations can never overflow because the result is max 2^127 when it enters this block.\\n        unchecked {\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1; // Seven iterations should be enough\\n            uint256 roundedDownResult = x / result;\\n            return result >= roundedDownResult ? roundedDownResult : result;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcd5f95a3a6928ddbcb79ad407252c276e52a47f9d262d64130979d59a3bd4cd9\",\"license\":\"MIT\"},\"src/dependencies/prb-math/PRBMathUD60x18.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./PRBMath.sol\\\";\\n\\n/// @title PRBMathUD60x18\\n/// @author Paul Razvan Berg\\n/// @notice Smart contract library for advanced fixed-point math that works with uint256 numbers considered to have 18\\n/// trailing decimals. We call this number representation unsigned 60.18-decimal fixed-point, since there can be up to 60\\n/// digits in the integer part and up to 18 decimals in the fractional part. The numbers are bound by the minimum and the\\n/// maximum values permitted by the Solidity type uint256.\\nlibrary PRBMathUD60x18 {\\n    /// @dev Half the SCALE number.\\n    uint256 internal constant HALF_SCALE = 5e17;\\n\\n    /// @dev log2(e) as an unsigned 60.18-decimal fixed-point number.\\n    uint256 internal constant LOG2_E = 1_442695040888963407;\\n\\n    /// @dev The maximum value an unsigned 60.18-decimal fixed-point number can have.\\n    uint256 internal constant MAX_UD60x18 =\\n        115792089237316195423570985008687907853269984665640564039457_584007913129639935;\\n\\n    /// @dev The maximum whole value an unsigned 60.18-decimal fixed-point number can have.\\n    uint256 internal constant MAX_WHOLE_UD60x18 =\\n        115792089237316195423570985008687907853269984665640564039457_000000000000000000;\\n\\n    /// @dev How many trailing decimals can be represented.\\n    uint256 internal constant SCALE = 1e18;\\n\\n    /// @notice Calculates the arithmetic average of x and y, rounding down.\\n    /// @param x The first operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The second operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The arithmetic average as an unsigned 60.18-decimal fixed-point number.\\n    function avg(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        // The operations can never overflow.\\n        unchecked {\\n            // The last operand checks if both x and y are odd and if that is the case, we add 1 to the result. We need\\n            // to do this because if both numbers are odd, the 0.5 remainder gets truncated twice.\\n            result = (x >> 1) + (y >> 1) + (x & y & 1);\\n        }\\n    }\\n\\n    /// @notice Yields the least unsigned 60.18 decimal fixed-point number greater than or equal to x.\\n    ///\\n    /// @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\\n    /// See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\\n    ///\\n    /// Requirements:\\n    /// - x must be less than or equal to MAX_WHOLE_UD60x18.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number to ceil.\\n    /// @param result The least integer greater than or equal to x, as an unsigned 60.18-decimal fixed-point number.\\n    function ceil(uint256 x) internal pure returns (uint256 result) {\\n        if (x > MAX_WHOLE_UD60x18) {\\n            revert PRBMathUD60x18__CeilOverflow(x);\\n        }\\n        assembly {\\n            // Equivalent to \\\"x % SCALE\\\" but faster.\\n            let remainder := mod(x, SCALE)\\n\\n            // Equivalent to \\\"SCALE - remainder\\\" but faster.\\n            let delta := sub(SCALE, remainder)\\n\\n            // Equivalent to \\\"x + delta * (remainder > 0 ? 1 : 0)\\\" but faster.\\n            result := add(x, mul(delta, gt(remainder, 0)))\\n        }\\n    }\\n\\n    /// @notice Divides two unsigned 60.18-decimal fixed-point numbers, returning a new unsigned 60.18-decimal fixed-point number.\\n    ///\\n    /// @dev Uses mulDiv to enable overflow-safe multiplication and division.\\n    ///\\n    /// Requirements:\\n    /// - The denominator cannot be zero.\\n    ///\\n    /// @param x The numerator as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The denominator as an unsigned 60.18-decimal fixed-point number.\\n    /// @param result The quotient as an unsigned 60.18-decimal fixed-point number.\\n    function div(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        result = PRBMath.mulDiv(x, SCALE, y);\\n    }\\n\\n    /// @notice Returns Euler's number as an unsigned 60.18-decimal fixed-point number.\\n    /// @dev See https://en.wikipedia.org/wiki/E_(mathematical_constant).\\n    function e() internal pure returns (uint256 result) {\\n        result = 2_718281828459045235;\\n    }\\n\\n    /// @notice Calculates the natural exponent of x.\\n    ///\\n    /// @dev Based on the insight that e^x = 2^(x * log2(e)).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    /// - x must be less than 133.084258667509499441.\\n    ///\\n    /// @param x The exponent as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp(uint256 x) internal pure returns (uint256 result) {\\n        // Without this check, the value passed to \\\"exp2\\\" would be greater than 192.\\n        if (x >= 133_084258667509499441) {\\n            revert PRBMathUD60x18__ExpInputTooBig(x);\\n        }\\n\\n        // Do the fixed-point multiplication inline to save gas.\\n        unchecked {\\n            uint256 doubleScaleProduct = x * LOG2_E;\\n            result = exp2((doubleScaleProduct + HALF_SCALE) / SCALE);\\n        }\\n    }\\n\\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\\n    ///\\n    /// @dev See https://ethereum.stackexchange.com/q/79903/24693.\\n    ///\\n    /// Requirements:\\n    /// - x must be 192 or less.\\n    /// - The result must fit within MAX_UD60x18.\\n    ///\\n    /// @param x The exponent as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp2(uint256 x) internal pure returns (uint256 result) {\\n        // 2^192 doesn't fit within the 192.64-bit format used internally in this function.\\n        if (x >= 192e18) {\\n            revert PRBMathUD60x18__Exp2InputTooBig(x);\\n        }\\n\\n        unchecked {\\n            // Convert x to the 192.64-bit fixed-point format.\\n            uint256 x192x64 = (x << 64) / SCALE;\\n\\n            // Pass x to the PRBMath.exp2 function, which uses the 192.64-bit fixed-point number representation.\\n            result = PRBMath.exp2(x192x64);\\n        }\\n    }\\n\\n    /// @notice Yields the greatest unsigned 60.18 decimal fixed-point number less than or equal to x.\\n    /// @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\\n    /// See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to floor.\\n    /// @param result The greatest integer less than or equal to x, as an unsigned 60.18-decimal fixed-point number.\\n    function floor(uint256 x) internal pure returns (uint256 result) {\\n        assembly {\\n            // Equivalent to \\\"x % SCALE\\\" but faster.\\n            let remainder := mod(x, SCALE)\\n\\n            // Equivalent to \\\"x - remainder * (remainder > 0 ? 1 : 0)\\\" but faster.\\n            result := sub(x, mul(remainder, gt(remainder, 0)))\\n        }\\n    }\\n\\n    /// @notice Yields the excess beyond the floor of x.\\n    /// @dev Based on the odd function definition https://en.wikipedia.org/wiki/Fractional_part.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to get the fractional part of.\\n    /// @param result The fractional part of x as an unsigned 60.18-decimal fixed-point number.\\n    function frac(uint256 x) internal pure returns (uint256 result) {\\n        assembly {\\n            result := mod(x, SCALE)\\n        }\\n    }\\n\\n    /// @notice Converts a number from basic integer form to unsigned 60.18-decimal fixed-point representation.\\n    ///\\n    /// @dev Requirements:\\n    /// - x must be less than or equal to MAX_UD60x18 divided by SCALE.\\n    ///\\n    /// @param x The basic integer to convert.\\n    /// @param result The same number in unsigned 60.18-decimal fixed-point representation.\\n    function fromUint(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            if (x > MAX_UD60x18 / SCALE) {\\n                revert PRBMathUD60x18__FromUintOverflow(x);\\n            }\\n            result = x * SCALE;\\n        }\\n    }\\n\\n    /// @notice Calculates geometric mean of x and y, i.e. sqrt(x * y), rounding down.\\n    ///\\n    /// @dev Requirements:\\n    /// - x * y must fit within MAX_UD60x18, lest it overflows.\\n    ///\\n    /// @param x The first operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The second operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function gm(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n\\n        unchecked {\\n            // Checking for overflow this way is faster than letting Solidity do it.\\n            uint256 xy = x * y;\\n            if (xy / x != y) {\\n                revert PRBMathUD60x18__GmOverflow(x, y);\\n            }\\n\\n            // We don't need to multiply by the SCALE here because the x*y product had already picked up a factor of SCALE\\n            // during multiplication. See the comments within the \\\"sqrt\\\" function.\\n            result = PRBMath.sqrt(xy);\\n        }\\n    }\\n\\n    /// @notice Calculates 1 / x, rounding toward zero.\\n    ///\\n    /// @dev Requirements:\\n    /// - x cannot be zero.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the inverse.\\n    /// @return result The inverse as an unsigned 60.18-decimal fixed-point number.\\n    function inv(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 1e36 is SCALE * SCALE.\\n            result = 1e36 / x;\\n        }\\n    }\\n\\n    /// @notice Calculates the natural logarithm of x.\\n    ///\\n    /// @dev Based on the insight that ln(x) = log2(x) / log2(e).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"log2\\\".\\n    /// - This doesn't return exactly 1 for 2.718281828459045235, for that we would need more fine-grained precision.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the natural logarithm.\\n    /// @return result The natural logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function ln(uint256 x) internal pure returns (uint256 result) {\\n        // Do the fixed-point multiplication inline to save gas. This is overflow-safe because the maximum value that log2(x)\\n        // can return is 196205294292027477728.\\n        unchecked {\\n            result = (log2(x) * SCALE) / LOG2_E;\\n        }\\n    }\\n\\n    /// @notice Calculates the common logarithm of x.\\n    ///\\n    /// @dev First checks if x is an exact power of ten and it stops if yes. If it's not, calculates the common\\n    /// logarithm based on the insight that log10(x) = log2(x) / log2(10).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the common logarithm.\\n    /// @return result The common logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function log10(uint256 x) internal pure returns (uint256 result) {\\n        if (x < SCALE) {\\n            revert PRBMathUD60x18__LogInputTooSmall(x);\\n        }\\n\\n        // Note that the \\\"mul\\\" in this block is the assembly multiplication operation, not the \\\"mul\\\" function defined\\n        // in this contract.\\n        // prettier-ignore\\n        assembly {\\n            switch x\\n            case 1 { result := mul(SCALE, sub(0, 18)) }\\n            case 10 { result := mul(SCALE, sub(1, 18)) }\\n            case 100 { result := mul(SCALE, sub(2, 18)) }\\n            case 1000 { result := mul(SCALE, sub(3, 18)) }\\n            case 10000 { result := mul(SCALE, sub(4, 18)) }\\n            case 100000 { result := mul(SCALE, sub(5, 18)) }\\n            case 1000000 { result := mul(SCALE, sub(6, 18)) }\\n            case 10000000 { result := mul(SCALE, sub(7, 18)) }\\n            case 100000000 { result := mul(SCALE, sub(8, 18)) }\\n            case 1000000000 { result := mul(SCALE, sub(9, 18)) }\\n            case 10000000000 { result := mul(SCALE, sub(10, 18)) }\\n            case 100000000000 { result := mul(SCALE, sub(11, 18)) }\\n            case 1000000000000 { result := mul(SCALE, sub(12, 18)) }\\n            case 10000000000000 { result := mul(SCALE, sub(13, 18)) }\\n            case 100000000000000 { result := mul(SCALE, sub(14, 18)) }\\n            case 1000000000000000 { result := mul(SCALE, sub(15, 18)) }\\n            case 10000000000000000 { result := mul(SCALE, sub(16, 18)) }\\n            case 100000000000000000 { result := mul(SCALE, sub(17, 18)) }\\n            case 1000000000000000000 { result := 0 }\\n            case 10000000000000000000 { result := SCALE }\\n            case 100000000000000000000 { result := mul(SCALE, 2) }\\n            case 1000000000000000000000 { result := mul(SCALE, 3) }\\n            case 10000000000000000000000 { result := mul(SCALE, 4) }\\n            case 100000000000000000000000 { result := mul(SCALE, 5) }\\n            case 1000000000000000000000000 { result := mul(SCALE, 6) }\\n            case 10000000000000000000000000 { result := mul(SCALE, 7) }\\n            case 100000000000000000000000000 { result := mul(SCALE, 8) }\\n            case 1000000000000000000000000000 { result := mul(SCALE, 9) }\\n            case 10000000000000000000000000000 { result := mul(SCALE, 10) }\\n            case 100000000000000000000000000000 { result := mul(SCALE, 11) }\\n            case 1000000000000000000000000000000 { result := mul(SCALE, 12) }\\n            case 10000000000000000000000000000000 { result := mul(SCALE, 13) }\\n            case 100000000000000000000000000000000 { result := mul(SCALE, 14) }\\n            case 1000000000000000000000000000000000 { result := mul(SCALE, 15) }\\n            case 10000000000000000000000000000000000 { result := mul(SCALE, 16) }\\n            case 100000000000000000000000000000000000 { result := mul(SCALE, 17) }\\n            case 1000000000000000000000000000000000000 { result := mul(SCALE, 18) }\\n            case 10000000000000000000000000000000000000 { result := mul(SCALE, 19) }\\n            case 100000000000000000000000000000000000000 { result := mul(SCALE, 20) }\\n            case 1000000000000000000000000000000000000000 { result := mul(SCALE, 21) }\\n            case 10000000000000000000000000000000000000000 { result := mul(SCALE, 22) }\\n            case 100000000000000000000000000000000000000000 { result := mul(SCALE, 23) }\\n            case 1000000000000000000000000000000000000000000 { result := mul(SCALE, 24) }\\n            case 10000000000000000000000000000000000000000000 { result := mul(SCALE, 25) }\\n            case 100000000000000000000000000000000000000000000 { result := mul(SCALE, 26) }\\n            case 1000000000000000000000000000000000000000000000 { result := mul(SCALE, 27) }\\n            case 10000000000000000000000000000000000000000000000 { result := mul(SCALE, 28) }\\n            case 100000000000000000000000000000000000000000000000 { result := mul(SCALE, 29) }\\n            case 1000000000000000000000000000000000000000000000000 { result := mul(SCALE, 30) }\\n            case 10000000000000000000000000000000000000000000000000 { result := mul(SCALE, 31) }\\n            case 100000000000000000000000000000000000000000000000000 { result := mul(SCALE, 32) }\\n            case 1000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 33) }\\n            case 10000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 34) }\\n            case 100000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 35) }\\n            case 1000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 36) }\\n            case 10000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 37) }\\n            case 100000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 38) }\\n            case 1000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 39) }\\n            case 10000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 40) }\\n            case 100000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 41) }\\n            case 1000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 42) }\\n            case 10000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 43) }\\n            case 100000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 44) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 45) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 46) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 47) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 48) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 49) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 50) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 51) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 52) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 53) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 54) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 55) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 56) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 57) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 58) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 59) }\\n            default {\\n                result := MAX_UD60x18\\n            }\\n        }\\n\\n        if (result == MAX_UD60x18) {\\n            // Do the fixed-point division inline to save gas. The denominator is log2(10).\\n            unchecked {\\n                result = (log2(x) * SCALE) / 3_321928094887362347;\\n            }\\n        }\\n    }\\n\\n    /// @notice Calculates the binary logarithm of x.\\n    ///\\n    /// @dev Based on the iterative approximation algorithm.\\n    /// https://en.wikipedia.org/wiki/Binary_logarithm#Iterative_approximation\\n    ///\\n    /// Requirements:\\n    /// - x must be greater than or equal to SCALE, otherwise the result would be negative.\\n    ///\\n    /// Caveats:\\n    /// - The results are nor perfectly accurate to the last decimal, due to the lossy precision of the iterative approximation.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the binary logarithm.\\n    /// @return result The binary logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function log2(uint256 x) internal pure returns (uint256 result) {\\n        if (x < SCALE) {\\n            revert PRBMathUD60x18__LogInputTooSmall(x);\\n        }\\n        unchecked {\\n            // Calculate the integer part of the logarithm and add it to the result and finally calculate y = x * 2^(-n).\\n            uint256 n = PRBMath.mostSignificantBit(x / SCALE);\\n\\n            // The integer part of the logarithm as an unsigned 60.18-decimal fixed-point number. The operation can't overflow\\n            // because n is maximum 255 and SCALE is 1e18.\\n            result = n * SCALE;\\n\\n            // This is y = x * 2^(-n).\\n            uint256 y = x >> n;\\n\\n            // If y = 1, the fractional part is zero.\\n            if (y == SCALE) {\\n                return result;\\n            }\\n\\n            // Calculate the fractional part via the iterative approximation.\\n            // The \\\"delta >>= 1\\\" part is equivalent to \\\"delta /= 2\\\", but shifting bits is faster.\\n            for (uint256 delta = HALF_SCALE; delta > 0; delta >>= 1) {\\n                y = (y * y) / SCALE;\\n\\n                // Is y^2 > 2 and so in the range [2,4)?\\n                if (y >= 2 * SCALE) {\\n                    // Add the 2^(-m) factor to the logarithm.\\n                    result += delta;\\n\\n                    // Corresponds to z/2 on Wikipedia.\\n                    y >>= 1;\\n                }\\n            }\\n        }\\n    }\\n\\n    /// @notice Multiplies two unsigned 60.18-decimal fixed-point numbers together, returning a new unsigned 60.18-decimal\\n    /// fixed-point number.\\n    /// @dev See the documentation for the \\\"PRBMath.mulDivFixedPoint\\\" function.\\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The product as an unsigned 60.18-decimal fixed-point number.\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        result = PRBMath.mulDivFixedPoint(x, y);\\n    }\\n\\n    /// @notice Returns PI as an unsigned 60.18-decimal fixed-point number.\\n    function pi() internal pure returns (uint256 result) {\\n        result = 3_141592653589793238;\\n    }\\n\\n    /// @notice Raises x to the power of y.\\n    ///\\n    /// @dev Based on the insight that x^y = 2^(log2(x) * y).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"exp2\\\", \\\"log2\\\" and \\\"mul\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"exp2\\\", \\\"log2\\\" and \\\"mul\\\".\\n    /// - Assumes 0^0 is 1.\\n    ///\\n    /// @param x Number to raise to given power y, as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y Exponent to raise x to, as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result x raised to power y, as an unsigned 60.18-decimal fixed-point number.\\n    function pow(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            result = y == 0 ? SCALE : uint256(0);\\n        } else {\\n            result = exp2(mul(log2(x), y));\\n        }\\n    }\\n\\n    /// @notice Raises x (unsigned 60.18-decimal fixed-point number) to the power of y (basic unsigned integer) using the\\n    /// famous algorithm \\\"exponentiation by squaring\\\".\\n    ///\\n    /// @dev See https://en.wikipedia.org/wiki/Exponentiation_by_squaring\\n    ///\\n    /// Requirements:\\n    /// - The result must fit within MAX_UD60x18.\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"mul\\\".\\n    /// - Assumes 0^0 is 1.\\n    ///\\n    /// @param x The base as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The exponent as an uint256.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function powu(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        // Calculate the first iteration of the loop in advance.\\n        result = y & 1 > 0 ? x : SCALE;\\n\\n        // Equivalent to \\\"for(y /= 2; y > 0; y /= 2)\\\" but faster.\\n        for (y >>= 1; y > 0; y >>= 1) {\\n            x = PRBMath.mulDivFixedPoint(x, x);\\n\\n            // Equivalent to \\\"y % 2 == 1\\\" but faster.\\n            if (y & 1 > 0) {\\n                result = PRBMath.mulDivFixedPoint(result, x);\\n            }\\n        }\\n    }\\n\\n    /// @notice Returns 1 as an unsigned 60.18-decimal fixed-point number.\\n    function scale() internal pure returns (uint256 result) {\\n        result = SCALE;\\n    }\\n\\n    /// @notice Calculates the square root of x, rounding down.\\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\\n    ///\\n    /// Requirements:\\n    /// - x must be less than MAX_UD60x18 / SCALE.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the square root.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point .\\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            if (x > MAX_UD60x18 / SCALE) {\\n                revert PRBMathUD60x18__SqrtOverflow(x);\\n            }\\n            // Multiply x by the SCALE to account for the factor of SCALE that is picked up when multiplying two unsigned\\n            // 60.18-decimal fixed-point numbers together (in this case, those two numbers are both the square root).\\n            result = PRBMath.sqrt(x * SCALE);\\n        }\\n    }\\n\\n    /// @notice Converts a unsigned 60.18-decimal fixed-point number to basic integer form, rounding down in the process.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to convert.\\n    /// @return result The same number in basic integer form.\\n    function toUint(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            result = x / SCALE;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0c51a3408fc3bdf8746accf35e56f7844b3e0b05083be38545baecdf3f083e4f\",\"license\":\"MIT\"},\"src/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\ninterface IERC20 {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0xcdb6951e91d0eaa982638d567e2c8ac7d30f897b16bde3c2fdc2f4b4c51e70cd\",\"license\":\"MIT\"},\"src/interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\n/**\\n * @dev Interface for protocol price feeds.\\n */\\ninterface IPriceFeed {\\n    /*~~~ EVENT ~~~*/\\n\\n    /**\\n     * @dev Emitted after the price source of an asset is updated.\\n     *\\n     * @param asset The address of the asset.\\n     * @param source The price feed source of the asset.\\n     */\\n    event AssetPriceFeedSourceUpdated(\\n        address indexed asset,\\n        address indexed source\\n    );\\n\\n    /*~~~ MAIN LOGIC FUNCTIONS ~~~*/\\n\\n    /**\\n     * @dev Used to retrieve a given asset's price.\\n     *\\n     * @param _asset Address of the asset.\\n     * @return uint256 Price of the asset.\\n     */\\n    function getAssetPrice(address _asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd959ed0ca638b27203ad749ddf33d2721d72b2efd61ca39250b4a90c72f1ca9e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":680,"contract":"src/InterestSwapPeriphery.sol:InterestSwapPeriphery","label":"interestSwap","offset":0,"slot":"0","type":"t_contract(InterestSwap)671"}],"types":{"t_contract(InterestSwap)671":{"encoding":"inplace","label":"contract InterestSwap","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/PriceModel.sol":{"PriceModel":{"abi":[{"inputs":[{"internalType":"uint256","name":"_dailyPercent","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"prod1","type":"uint256"}],"name":"PRBMath__MulDivFixedPointOverflow","type":"error"},{"inputs":[],"name":"dailyPercent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_numberOfDays","type":"uint256"}],"name":"quote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newValue","type":"uint256"}],"name":"setDailyPercentage","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_909":{"entryPoint":null,"id":909,"parameterSlots":1,"returnSlots":0},"abi_decode_t_uint256_fromMemory":{"entryPoint":101,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":122,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":68,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":63,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":78,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1048:15","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:15","statements":[{"nodeType":"YulAssignment","src":"57:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:15"},"nodeType":"YulFunctionCall","src":"67:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:15","type":""}],"src":"7:75:15"},{"body":{"nodeType":"YulBlock","src":"177:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:15"},"nodeType":"YulFunctionCall","src":"187:12:15"},"nodeType":"YulExpressionStatement","src":"187:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:15"},{"body":{"nodeType":"YulBlock","src":"300:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:15"},"nodeType":"YulFunctionCall","src":"310:12:15"},"nodeType":"YulExpressionStatement","src":"310:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:15"},{"body":{"nodeType":"YulBlock","src":"379:32:15","statements":[{"nodeType":"YulAssignment","src":"389:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:15","type":""}],"src":"334:77:15"},{"body":{"nodeType":"YulBlock","src":"460:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:15"},"nodeType":"YulFunctionCall","src":"519:12:15"},"nodeType":"YulExpressionStatement","src":"519:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:15"},"nodeType":"YulFunctionCall","src":"490:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:15"},"nodeType":"YulFunctionCall","src":"480:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:15"},"nodeType":"YulFunctionCall","src":"473:43:15"},"nodeType":"YulIf","src":"470:63:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:15","type":""}],"src":"417:122:15"},{"body":{"nodeType":"YulBlock","src":"608:80:15","statements":[{"nodeType":"YulAssignment","src":"618:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"633:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"627:5:15"},"nodeType":"YulFunctionCall","src":"627:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"618:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"649:26:15"},"nodeType":"YulFunctionCall","src":"649:33:15"},"nodeType":"YulExpressionStatement","src":"649:33:15"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"586:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"594:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"602:5:15","type":""}],"src":"545:143:15"},{"body":{"nodeType":"YulBlock","src":"771:274:15","statements":[{"body":{"nodeType":"YulBlock","src":"817:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"819:77:15"},"nodeType":"YulFunctionCall","src":"819:79:15"},"nodeType":"YulExpressionStatement","src":"819:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"792:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"801:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"788:3:15"},"nodeType":"YulFunctionCall","src":"788:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"813:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"784:3:15"},"nodeType":"YulFunctionCall","src":"784:32:15"},"nodeType":"YulIf","src":"781:119:15"},{"nodeType":"YulBlock","src":"910:128:15","statements":[{"nodeType":"YulVariableDeclaration","src":"925:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"939:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"929:6:15","type":""}]},{"nodeType":"YulAssignment","src":"954:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1000:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1011:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"996:3:15"},"nodeType":"YulFunctionCall","src":"996:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1020:7:15"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"964:31:15"},"nodeType":"YulFunctionCall","src":"964:64:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"954:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"741:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"752:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"764:6:15","type":""}],"src":"694:351:15"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516103ef3803806103ef8339818101604052810190610032919061007a565b80600081905550506100a7565b600080fd5b6000819050919050565b61005781610044565b811461006257600080fd5b50565b6000815190506100748161004e565b92915050565b6000602082840312156100905761008f61003f565b5b600061009e84828501610065565b91505092915050565b610339806100b66000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806329fe619914610046578063315f1a41146100645780636683d37d14610094575b600080fd5b61004e6100b0565b60405161005b919061021b565b60405180910390f35b61007e60048036038101906100799190610267565b6100b6565b60405161008b919061021b565b60405180910390f35b6100ae60048036038101906100a991906102a7565b6100e7565b005b60005481565b60006100df826100d1600054866100f190919063ffffffff16565b6100f190919063ffffffff16565b905092915050565b8060008190555050565b60006100fd8383610105565b905092915050565b60008060008019848609848602925082811083820303915050670de0b6b3a7640000811061016a57806040517fd31b3402000000000000000000000000000000000000000000000000000000008152600401610161919061021b565b60405180910390fd5b600080670de0b6b3a764000086880991506706f05b59d3b1ffff82119050600083036101b65780670de0b6b3a764000085816101a9576101a86102d4565b5b04019450505050506101fc565b807faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac1066960016204000080600003040186851186030262040000858803041702019450505050505b92915050565b6000819050919050565b61021581610202565b82525050565b6000602082019050610230600083018461020c565b92915050565b600080fd5b61024481610202565b811461024f57600080fd5b50565b6000813590506102618161023b565b92915050565b6000806040838503121561027e5761027d610236565b5b600061028c85828601610252565b925050602061029d85828601610252565b9150509250929050565b6000602082840312156102bd576102bc610236565b5b60006102cb84828501610252565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220776930fcde403e4ac8f6484b30a5fcf07d73c0a336d7ad206fbf019d635170e164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3EF CODESIZE SUB DUP1 PUSH2 0x3EF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57 DUP2 PUSH2 0x44 JUMP JUMPDEST DUP2 EQ PUSH2 0x62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x74 DUP2 PUSH2 0x4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x90 JUMPI PUSH2 0x8F PUSH2 0x3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9E DUP5 DUP3 DUP6 ADD PUSH2 0x65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x339 DUP1 PUSH2 0xB6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29FE6199 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x315F1A41 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x6683D37D EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x267 JUMP JUMPDEST PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF DUP3 PUSH2 0xD1 PUSH1 0x0 SLOAD DUP7 PUSH2 0xF1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD DUP4 DUP4 PUSH2 0x105 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP5 DUP7 MULMOD DUP5 DUP7 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH2 0x16A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD31B340200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP7 DUP9 MULMOD SWAP2 POP PUSH8 0x6F05B59D3B1FFFF DUP3 GT SWAP1 POP PUSH1 0x0 DUP4 SUB PUSH2 0x1B6 JUMPI DUP1 PUSH8 0xDE0B6B3A7640000 DUP6 DUP2 PUSH2 0x1A9 JUMPI PUSH2 0x1A8 PUSH2 0x2D4 JUMP JUMPDEST JUMPDEST DIV ADD SWAP5 POP POP POP POP POP PUSH2 0x1FC JUMP JUMPDEST DUP1 PUSH32 0xACCB18165BD6FE31AE1CF318DC5B51EEE0E1BA569B88CD74C1773B91FAC10669 PUSH1 0x1 PUSH3 0x40000 DUP1 PUSH1 0x0 SUB DIV ADD DUP7 DUP6 GT DUP7 SUB MUL PUSH3 0x40000 DUP6 DUP9 SUB DIV OR MUL ADD SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x215 DUP2 PUSH2 0x202 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x230 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x244 DUP2 PUSH2 0x202 JUMP JUMPDEST DUP2 EQ PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x261 DUP2 PUSH2 0x23B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27E JUMPI PUSH2 0x27D PUSH2 0x236 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28C DUP6 DUP3 DUP7 ADD PUSH2 0x252 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29D DUP6 DUP3 DUP7 ADD PUSH2 0x252 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BD JUMPI PUSH2 0x2BC PUSH2 0x236 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CB DUP5 DUP3 DUP6 ADD PUSH2 0x252 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x6930FCDE403E4AC8F6484B30A5FCF07D73C0A336D7AD206F 0xBF ADD SWAP14 PUSH4 0x5170E164 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"195:598:3:-:0;;;294:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;354:13;339:12;:28;;;;294:80;195:598;;88:117:15;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;195:598:3:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@dailyPercent_899":{"entryPoint":176,"id":899,"parameterSlots":0,"returnSlots":0},"@mulDivFixedPoint_2620":{"entryPoint":261,"id":2620,"parameterSlots":2,"returnSlots":1},"@mul_3422":{"entryPoint":241,"id":3422,"parameterSlots":2,"returnSlots":1},"@quote_937":{"entryPoint":182,"id":937,"parameterSlots":2,"returnSlots":1},"@setDailyPercentage_919":{"entryPoint":231,"id":919,"parameterSlots":1,"returnSlots":0},"abi_decode_t_uint256":{"entryPoint":594,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":679,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":615,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":524,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":539,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":514,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x12":{"entryPoint":724,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":566,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":571,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2040:15","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:15","statements":[{"nodeType":"YulAssignment","src":"62:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:15","type":""}],"src":"7:77:15"},{"body":{"nodeType":"YulBlock","src":"155:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:15"},"nodeType":"YulFunctionCall","src":"177:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:15"},"nodeType":"YulFunctionCall","src":"165:37:15"},"nodeType":"YulExpressionStatement","src":"165:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:15","type":""}],"src":"90:118:15"},{"body":{"nodeType":"YulBlock","src":"312:124:15","statements":[{"nodeType":"YulAssignment","src":"322:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:15"},"nodeType":"YulFunctionCall","src":"330:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:15"},"nodeType":"YulFunctionCall","src":"411:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:15"},"nodeType":"YulFunctionCall","src":"358:71:15"},"nodeType":"YulExpressionStatement","src":"358:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:15","type":""}],"src":"214:222:15"},{"body":{"nodeType":"YulBlock","src":"482:35:15","statements":[{"nodeType":"YulAssignment","src":"492:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:15"},"nodeType":"YulFunctionCall","src":"502:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:15","type":""}],"src":"442:75:15"},{"body":{"nodeType":"YulBlock","src":"612:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:15"},"nodeType":"YulFunctionCall","src":"622:12:15"},"nodeType":"YulExpressionStatement","src":"622:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:15"},{"body":{"nodeType":"YulBlock","src":"735:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:15"},"nodeType":"YulFunctionCall","src":"745:12:15"},"nodeType":"YulExpressionStatement","src":"745:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:15"},{"body":{"nodeType":"YulBlock","src":"812:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"869:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"878:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"881:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"871:6:15"},"nodeType":"YulFunctionCall","src":"871:12:15"},"nodeType":"YulExpressionStatement","src":"871:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"835:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"860:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"842:17:15"},"nodeType":"YulFunctionCall","src":"842:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"832:2:15"},"nodeType":"YulFunctionCall","src":"832:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"825:6:15"},"nodeType":"YulFunctionCall","src":"825:43:15"},"nodeType":"YulIf","src":"822:63:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"805:5:15","type":""}],"src":"769:122:15"},{"body":{"nodeType":"YulBlock","src":"949:87:15","statements":[{"nodeType":"YulAssignment","src":"959:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"981:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"968:12:15"},"nodeType":"YulFunctionCall","src":"968:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"959:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1024:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"997:26:15"},"nodeType":"YulFunctionCall","src":"997:33:15"},"nodeType":"YulExpressionStatement","src":"997:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"927:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"935:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"943:5:15","type":""}],"src":"897:139:15"},{"body":{"nodeType":"YulBlock","src":"1125:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"1171:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1173:77:15"},"nodeType":"YulFunctionCall","src":"1173:79:15"},"nodeType":"YulExpressionStatement","src":"1173:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1146:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1155:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1142:3:15"},"nodeType":"YulFunctionCall","src":"1142:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1167:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1138:3:15"},"nodeType":"YulFunctionCall","src":"1138:32:15"},"nodeType":"YulIf","src":"1135:119:15"},{"nodeType":"YulBlock","src":"1264:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1279:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1293:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1283:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1308:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1343:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1354:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1339:3:15"},"nodeType":"YulFunctionCall","src":"1339:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1363:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1318:20:15"},"nodeType":"YulFunctionCall","src":"1318:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1308:6:15"}]}]},{"nodeType":"YulBlock","src":"1391:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1406:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1420:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1410:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1436:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1471:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1482:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1467:3:15"},"nodeType":"YulFunctionCall","src":"1467:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1491:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1446:20:15"},"nodeType":"YulFunctionCall","src":"1446:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1436:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1087:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1098:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1110:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1118:6:15","type":""}],"src":"1042:474:15"},{"body":{"nodeType":"YulBlock","src":"1588:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"1634:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1636:77:15"},"nodeType":"YulFunctionCall","src":"1636:79:15"},"nodeType":"YulExpressionStatement","src":"1636:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1609:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1618:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1605:3:15"},"nodeType":"YulFunctionCall","src":"1605:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1630:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1601:3:15"},"nodeType":"YulFunctionCall","src":"1601:32:15"},"nodeType":"YulIf","src":"1598:119:15"},{"nodeType":"YulBlock","src":"1727:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1742:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1756:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1746:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1771:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1806:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1817:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1802:3:15"},"nodeType":"YulFunctionCall","src":"1802:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1826:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1781:20:15"},"nodeType":"YulFunctionCall","src":"1781:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1771:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1558:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1569:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1581:6:15","type":""}],"src":"1522:329:15"},{"body":{"nodeType":"YulBlock","src":"1885:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1902:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1905:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1895:6:15"},"nodeType":"YulFunctionCall","src":"1895:88:15"},"nodeType":"YulExpressionStatement","src":"1895:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1999:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2002:4:15","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1992:6:15"},"nodeType":"YulFunctionCall","src":"1992:15:15"},"nodeType":"YulExpressionStatement","src":"1992:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2023:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2026:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2016:6:15"},"nodeType":"YulFunctionCall","src":"2016:15:15"},"nodeType":"YulExpressionStatement","src":"2016:15:15"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"1857:180:15"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806329fe619914610046578063315f1a41146100645780636683d37d14610094575b600080fd5b61004e6100b0565b60405161005b919061021b565b60405180910390f35b61007e60048036038101906100799190610267565b6100b6565b60405161008b919061021b565b60405180910390f35b6100ae60048036038101906100a991906102a7565b6100e7565b005b60005481565b60006100df826100d1600054866100f190919063ffffffff16565b6100f190919063ffffffff16565b905092915050565b8060008190555050565b60006100fd8383610105565b905092915050565b60008060008019848609848602925082811083820303915050670de0b6b3a7640000811061016a57806040517fd31b3402000000000000000000000000000000000000000000000000000000008152600401610161919061021b565b60405180910390fd5b600080670de0b6b3a764000086880991506706f05b59d3b1ffff82119050600083036101b65780670de0b6b3a764000085816101a9576101a86102d4565b5b04019450505050506101fc565b807faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac1066960016204000080600003040186851186030262040000858803041702019450505050505b92915050565b6000819050919050565b61021581610202565b82525050565b6000602082019050610230600083018461020c565b92915050565b600080fd5b61024481610202565b811461024f57600080fd5b50565b6000813590506102618161023b565b92915050565b6000806040838503121561027e5761027d610236565b5b600061028c85828601610252565b925050602061029d85828601610252565b9150509250929050565b6000602082840312156102bd576102bc610236565b5b60006102cb84828501610252565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220776930fcde403e4ac8f6484b30a5fcf07d73c0a336d7ad206fbf019d635170e164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29FE6199 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x315F1A41 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x6683D37D EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x267 JUMP JUMPDEST PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF DUP3 PUSH2 0xD1 PUSH1 0x0 SLOAD DUP7 PUSH2 0xF1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD DUP4 DUP4 PUSH2 0x105 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP5 DUP7 MULMOD DUP5 DUP7 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH2 0x16A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD31B340200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP7 DUP9 MULMOD SWAP2 POP PUSH8 0x6F05B59D3B1FFFF DUP3 GT SWAP1 POP PUSH1 0x0 DUP4 SUB PUSH2 0x1B6 JUMPI DUP1 PUSH8 0xDE0B6B3A7640000 DUP6 DUP2 PUSH2 0x1A9 JUMPI PUSH2 0x1A8 PUSH2 0x2D4 JUMP JUMPDEST JUMPDEST DIV ADD SWAP5 POP POP POP POP POP PUSH2 0x1FC JUMP JUMPDEST DUP1 PUSH32 0xACCB18165BD6FE31AE1CF318DC5B51EEE0E1BA569B88CD74C1773B91FAC10669 PUSH1 0x1 PUSH3 0x40000 DUP1 PUSH1 0x0 SUB DIV ADD DUP7 DUP6 GT DUP7 SUB MUL PUSH3 0x40000 DUP6 DUP9 SUB DIV OR MUL ADD SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x215 DUP2 PUSH2 0x202 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x230 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x244 DUP2 PUSH2 0x202 JUMP JUMPDEST DUP2 EQ PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x261 DUP2 PUSH2 0x23B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27E JUMPI PUSH2 0x27D PUSH2 0x236 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28C DUP6 DUP3 DUP7 ADD PUSH2 0x252 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29D DUP6 DUP3 DUP7 ADD PUSH2 0x252 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BD JUMPI PUSH2 0x2BC PUSH2 0x236 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CB DUP5 DUP3 DUP6 ADD PUSH2 0x252 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x6930FCDE403E4AC8F6484B30A5FCF07D73C0A336D7AD206F 0xBF ADD SWAP14 PUSH4 0x5170E164 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"195:598:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;260:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;553:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;380:97;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;260:27;;;;:::o;553:238::-;653:7;740:44;770:13;740:25;752:12;;740:7;:11;;:25;;;;:::i;:::-;:29;;:44;;;;:::i;:::-;733:51;;553:238;;;;:::o;380:97::-;461:9;446:12;:24;;;;380:97;:::o;21264:130:9:-;21322:14;21357:30;21382:1;21385;21357:24;:30::i;:::-;21348:39;;21264:130;;;;:::o;20185:1259:8:-;20280:14;20310:13;20333;20406:1;20402:6;20399:1;20396;20389:20;20438:1;20435;20431:9;20422:18;;20489:5;20485:2;20482:13;20474:5;20470:2;20466:14;20462:34;20453:43;;20365:141;4204:4;20520:5;:14;20516:92;;20591:5;20557:40;;;;;;;;;;;:::i;:::-;;;;;;;;20516:92;20618:17;20645:19;20723:5;20720:1;20717;20710:19;20697:32;;20771:18;20760:9;20757:33;20742:48;;20823:1;20814:5;:10;20810:152;;20895:11;4204:4;20878:5;:13;;;;;:::i;:::-;;;20877:29;20868:38;;20924:13;;;;;;20810:152;21403:11;21354:13;21282:1;21268:11;21254;21251:1;21247:19;21243:37;21239:45;21202:5;21191:9;21188:20;21181:5;21177:32;21144:166;21106:11;21094:9;21087:5;21083:21;21079:39;21051:281;21026:359;21005:423;20995:433;;20981:457;;;;20185:1259;;;;;:::o;7:77:15:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:474::-;1110:6;1118;1167:2;1155:9;1146:7;1142:23;1138:32;1135:119;;;1173:79;;:::i;:::-;1135:119;1293:1;1318:53;1363:7;1354:6;1343:9;1339:22;1318:53;:::i;:::-;1308:63;;1264:117;1420:2;1446:53;1491:7;1482:6;1471:9;1467:22;1446:53;:::i;:::-;1436:63;;1391:118;1042:474;;;;;:::o;1522:329::-;1581:6;1630:2;1618:9;1609:7;1605:23;1601:32;1598:119;;;1636:79;;:::i;:::-;1598:119;1756:1;1781:53;1826:7;1817:6;1806:9;1802:22;1781:53;:::i;:::-;1771:63;;1727:117;1522:329;;;;:::o;1857:180::-;1905:77;1902:1;1895:88;2002:4;1999:1;1992:15;2026:4;2023:1;2016:15"},"gasEstimates":{"creation":{"codeDepositCost":"165000","executionCost":"infinite","totalCost":"infinite"},"external":{"dailyPercent()":"2407","quote(uint256,uint256)":"infinite","setDailyPercentage(uint256)":"22542"}},"methodIdentifiers":{"dailyPercent()":"29fe6199","quote(uint256,uint256)":"315f1a41","setDailyPercentage(uint256)":"6683d37d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dailyPercent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prod1\",\"type\":\"uint256\"}],\"name\":\"PRBMath__MulDivFixedPointOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"dailyPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_numberOfDays\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newValue\",\"type\":\"uint256\"}],\"name\":\"setDailyPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"PRBMath__MulDivFixedPointOverflow(uint256)\":[{\"notice\":\"Emitted when the result overflows uint256.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PriceModel.sol\":\"PriceModel\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/PriceModel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./dependencies/prb-math/PRBMathUD60x18.sol\\\";\\n\\n// @dev To make this contract ownable, so only the owner can update the parameters\\ncontract PriceModel {\\n    using PRBMathUD60x18 for uint256;\\n\\n    uint256 public dailyPercent;\\n\\n    constructor(uint256 _dailyPercent) {\\n        dailyPercent = _dailyPercent;\\n    }\\n\\n    function setDailyPercentage(uint256 _newValue) external {\\n        dailyPercent = _newValue;\\n    }\\n\\n    // @dev from the amount requested, we charge you X % (the result)\\n    function quote(uint256 _amount, uint256 _numberOfDays)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        // dailyPercent * _numberOfDays = total interest\\n        return _amount.mul(dailyPercent).mul(_numberOfDays);\\n    }\\n}\\n\",\"keccak256\":\"0x5a31238183b8d86a80004a0667cfdd4eec71b49563c0b0d28cd7937defb29339\",\"license\":\"MIT\"},\"src/dependencies/prb-math/PRBMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\n/// @notice Emitted when the result overflows uint256.\\nerror PRBMath__MulDivFixedPointOverflow(uint256 prod1);\\n\\n/// @notice Emitted when the result overflows uint256.\\nerror PRBMath__MulDivOverflow(uint256 prod1, uint256 denominator);\\n\\n/// @notice Emitted when one of the inputs is type(int256).min.\\nerror PRBMath__MulDivSignedInputTooSmall();\\n\\n/// @notice Emitted when the intermediary absolute result overflows int256.\\nerror PRBMath__MulDivSignedOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is MIN_SD59x18.\\nerror PRBMathSD59x18__AbsInputTooSmall();\\n\\n/// @notice Emitted when ceiling a number overflows SD59x18.\\nerror PRBMathSD59x18__CeilOverflow(int256 x);\\n\\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\\nerror PRBMathSD59x18__DivInputTooSmall();\\n\\n/// @notice Emitted when one of the intermediary unsigned results overflows SD59x18.\\nerror PRBMathSD59x18__DivOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is greater than 133.084258667509499441.\\nerror PRBMathSD59x18__ExpInputTooBig(int256 x);\\n\\n/// @notice Emitted when the input is greater than 192.\\nerror PRBMathSD59x18__Exp2InputTooBig(int256 x);\\n\\n/// @notice Emitted when flooring a number underflows SD59x18.\\nerror PRBMathSD59x18__FloorUnderflow(int256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format overflows SD59x18.\\nerror PRBMathSD59x18__FromIntOverflow(int256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format underflows SD59x18.\\nerror PRBMathSD59x18__FromIntUnderflow(int256 x);\\n\\n/// @notice Emitted when the product of the inputs is negative.\\nerror PRBMathSD59x18__GmNegativeProduct(int256 x, int256 y);\\n\\n/// @notice Emitted when multiplying the inputs overflows SD59x18.\\nerror PRBMathSD59x18__GmOverflow(int256 x, int256 y);\\n\\n/// @notice Emitted when the input is less than or equal to zero.\\nerror PRBMathSD59x18__LogInputTooSmall(int256 x);\\n\\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\\nerror PRBMathSD59x18__MulInputTooSmall();\\n\\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\\nerror PRBMathSD59x18__MulOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\\nerror PRBMathSD59x18__PowuOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is negative.\\nerror PRBMathSD59x18__SqrtNegativeInput(int256 x);\\n\\n/// @notice Emitted when the calculating the square root overflows SD59x18.\\nerror PRBMathSD59x18__SqrtOverflow(int256 x);\\n\\n/// @notice Emitted when addition overflows UD60x18.\\nerror PRBMathUD60x18__AddOverflow(uint256 x, uint256 y);\\n\\n/// @notice Emitted when ceiling a number overflows UD60x18.\\nerror PRBMathUD60x18__CeilOverflow(uint256 x);\\n\\n/// @notice Emitted when the input is greater than 133.084258667509499441.\\nerror PRBMathUD60x18__ExpInputTooBig(uint256 x);\\n\\n/// @notice Emitted when the input is greater than 192.\\nerror PRBMathUD60x18__Exp2InputTooBig(uint256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format format overflows UD60x18.\\nerror PRBMathUD60x18__FromUintOverflow(uint256 x);\\n\\n/// @notice Emitted when multiplying the inputs overflows UD60x18.\\nerror PRBMathUD60x18__GmOverflow(uint256 x, uint256 y);\\n\\n/// @notice Emitted when the input is less than 1.\\nerror PRBMathUD60x18__LogInputTooSmall(uint256 x);\\n\\n/// @notice Emitted when the calculating the square root overflows UD60x18.\\nerror PRBMathUD60x18__SqrtOverflow(uint256 x);\\n\\n/// @notice Emitted when subtraction underflows UD60x18.\\nerror PRBMathUD60x18__SubUnderflow(uint256 x, uint256 y);\\n\\n/// @dev Common mathematical functions used in both PRBMathSD59x18 and PRBMathUD60x18. Note that this shared library\\n/// does not always assume the signed 59.18-decimal fixed-point or the unsigned 60.18-decimal fixed-point\\n/// representation. When it does not, it is explicitly mentioned in the NatSpec documentation.\\nlibrary PRBMath {\\n    /// STRUCTS ///\\n\\n    struct SD59x18 {\\n        int256 value;\\n    }\\n\\n    struct UD60x18 {\\n        uint256 value;\\n    }\\n\\n    /// STORAGE ///\\n\\n    /// @dev How many trailing decimals can be represented.\\n    uint256 internal constant SCALE = 1e18;\\n\\n    /// @dev Largest power of two divisor of SCALE.\\n    uint256 internal constant SCALE_LPOTD = 262144;\\n\\n    /// @dev SCALE inverted mod 2^256.\\n    uint256 internal constant SCALE_INVERSE =\\n        78156646155174841979727994598816262306175212592076161876661_508869554232690281;\\n\\n    /// FUNCTIONS ///\\n\\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\\n    /// @dev Has to use 192.64-bit fixed-point numbers.\\n    /// See https://ethereum.stackexchange.com/a/96594/24693.\\n    /// @param x The exponent as an unsigned 192.64-bit fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp2(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            // Start from 0.5 in the 192.64-bit fixed-point format.\\n            result = 0x800000000000000000000000000000000000000000000000;\\n\\n            // Multiply the result by root(2, 2^-i) when the bit at position i is 1. None of the intermediary results overflows\\n            // because the initial result is 2^191 and all magic factors are less than 2^65.\\n            if (x & 0x8000000000000000 > 0) {\\n                result = (result * 0x16A09E667F3BCC909) >> 64;\\n            }\\n            if (x & 0x4000000000000000 > 0) {\\n                result = (result * 0x1306FE0A31B7152DF) >> 64;\\n            }\\n            if (x & 0x2000000000000000 > 0) {\\n                result = (result * 0x1172B83C7D517ADCE) >> 64;\\n            }\\n            if (x & 0x1000000000000000 > 0) {\\n                result = (result * 0x10B5586CF9890F62A) >> 64;\\n            }\\n            if (x & 0x800000000000000 > 0) {\\n                result = (result * 0x1059B0D31585743AE) >> 64;\\n            }\\n            if (x & 0x400000000000000 > 0) {\\n                result = (result * 0x102C9A3E778060EE7) >> 64;\\n            }\\n            if (x & 0x200000000000000 > 0) {\\n                result = (result * 0x10163DA9FB33356D8) >> 64;\\n            }\\n            if (x & 0x100000000000000 > 0) {\\n                result = (result * 0x100B1AFA5ABCBED61) >> 64;\\n            }\\n            if (x & 0x80000000000000 > 0) {\\n                result = (result * 0x10058C86DA1C09EA2) >> 64;\\n            }\\n            if (x & 0x40000000000000 > 0) {\\n                result = (result * 0x1002C605E2E8CEC50) >> 64;\\n            }\\n            if (x & 0x20000000000000 > 0) {\\n                result = (result * 0x100162F3904051FA1) >> 64;\\n            }\\n            if (x & 0x10000000000000 > 0) {\\n                result = (result * 0x1000B175EFFDC76BA) >> 64;\\n            }\\n            if (x & 0x8000000000000 > 0) {\\n                result = (result * 0x100058BA01FB9F96D) >> 64;\\n            }\\n            if (x & 0x4000000000000 > 0) {\\n                result = (result * 0x10002C5CC37DA9492) >> 64;\\n            }\\n            if (x & 0x2000000000000 > 0) {\\n                result = (result * 0x1000162E525EE0547) >> 64;\\n            }\\n            if (x & 0x1000000000000 > 0) {\\n                result = (result * 0x10000B17255775C04) >> 64;\\n            }\\n            if (x & 0x800000000000 > 0) {\\n                result = (result * 0x1000058B91B5BC9AE) >> 64;\\n            }\\n            if (x & 0x400000000000 > 0) {\\n                result = (result * 0x100002C5C89D5EC6D) >> 64;\\n            }\\n            if (x & 0x200000000000 > 0) {\\n                result = (result * 0x10000162E43F4F831) >> 64;\\n            }\\n            if (x & 0x100000000000 > 0) {\\n                result = (result * 0x100000B1721BCFC9A) >> 64;\\n            }\\n            if (x & 0x80000000000 > 0) {\\n                result = (result * 0x10000058B90CF1E6E) >> 64;\\n            }\\n            if (x & 0x40000000000 > 0) {\\n                result = (result * 0x1000002C5C863B73F) >> 64;\\n            }\\n            if (x & 0x20000000000 > 0) {\\n                result = (result * 0x100000162E430E5A2) >> 64;\\n            }\\n            if (x & 0x10000000000 > 0) {\\n                result = (result * 0x1000000B172183551) >> 64;\\n            }\\n            if (x & 0x8000000000 > 0) {\\n                result = (result * 0x100000058B90C0B49) >> 64;\\n            }\\n            if (x & 0x4000000000 > 0) {\\n                result = (result * 0x10000002C5C8601CC) >> 64;\\n            }\\n            if (x & 0x2000000000 > 0) {\\n                result = (result * 0x1000000162E42FFF0) >> 64;\\n            }\\n            if (x & 0x1000000000 > 0) {\\n                result = (result * 0x10000000B17217FBB) >> 64;\\n            }\\n            if (x & 0x800000000 > 0) {\\n                result = (result * 0x1000000058B90BFCE) >> 64;\\n            }\\n            if (x & 0x400000000 > 0) {\\n                result = (result * 0x100000002C5C85FE3) >> 64;\\n            }\\n            if (x & 0x200000000 > 0) {\\n                result = (result * 0x10000000162E42FF1) >> 64;\\n            }\\n            if (x & 0x100000000 > 0) {\\n                result = (result * 0x100000000B17217F8) >> 64;\\n            }\\n            if (x & 0x80000000 > 0) {\\n                result = (result * 0x10000000058B90BFC) >> 64;\\n            }\\n            if (x & 0x40000000 > 0) {\\n                result = (result * 0x1000000002C5C85FE) >> 64;\\n            }\\n            if (x & 0x20000000 > 0) {\\n                result = (result * 0x100000000162E42FF) >> 64;\\n            }\\n            if (x & 0x10000000 > 0) {\\n                result = (result * 0x1000000000B17217F) >> 64;\\n            }\\n            if (x & 0x8000000 > 0) {\\n                result = (result * 0x100000000058B90C0) >> 64;\\n            }\\n            if (x & 0x4000000 > 0) {\\n                result = (result * 0x10000000002C5C860) >> 64;\\n            }\\n            if (x & 0x2000000 > 0) {\\n                result = (result * 0x1000000000162E430) >> 64;\\n            }\\n            if (x & 0x1000000 > 0) {\\n                result = (result * 0x10000000000B17218) >> 64;\\n            }\\n            if (x & 0x800000 > 0) {\\n                result = (result * 0x1000000000058B90C) >> 64;\\n            }\\n            if (x & 0x400000 > 0) {\\n                result = (result * 0x100000000002C5C86) >> 64;\\n            }\\n            if (x & 0x200000 > 0) {\\n                result = (result * 0x10000000000162E43) >> 64;\\n            }\\n            if (x & 0x100000 > 0) {\\n                result = (result * 0x100000000000B1721) >> 64;\\n            }\\n            if (x & 0x80000 > 0) {\\n                result = (result * 0x10000000000058B91) >> 64;\\n            }\\n            if (x & 0x40000 > 0) {\\n                result = (result * 0x1000000000002C5C8) >> 64;\\n            }\\n            if (x & 0x20000 > 0) {\\n                result = (result * 0x100000000000162E4) >> 64;\\n            }\\n            if (x & 0x10000 > 0) {\\n                result = (result * 0x1000000000000B172) >> 64;\\n            }\\n            if (x & 0x8000 > 0) {\\n                result = (result * 0x100000000000058B9) >> 64;\\n            }\\n            if (x & 0x4000 > 0) {\\n                result = (result * 0x10000000000002C5D) >> 64;\\n            }\\n            if (x & 0x2000 > 0) {\\n                result = (result * 0x1000000000000162E) >> 64;\\n            }\\n            if (x & 0x1000 > 0) {\\n                result = (result * 0x10000000000000B17) >> 64;\\n            }\\n            if (x & 0x800 > 0) {\\n                result = (result * 0x1000000000000058C) >> 64;\\n            }\\n            if (x & 0x400 > 0) {\\n                result = (result * 0x100000000000002C6) >> 64;\\n            }\\n            if (x & 0x200 > 0) {\\n                result = (result * 0x10000000000000163) >> 64;\\n            }\\n            if (x & 0x100 > 0) {\\n                result = (result * 0x100000000000000B1) >> 64;\\n            }\\n            if (x & 0x80 > 0) {\\n                result = (result * 0x10000000000000059) >> 64;\\n            }\\n            if (x & 0x40 > 0) {\\n                result = (result * 0x1000000000000002C) >> 64;\\n            }\\n            if (x & 0x20 > 0) {\\n                result = (result * 0x10000000000000016) >> 64;\\n            }\\n            if (x & 0x10 > 0) {\\n                result = (result * 0x1000000000000000B) >> 64;\\n            }\\n            if (x & 0x8 > 0) {\\n                result = (result * 0x10000000000000006) >> 64;\\n            }\\n            if (x & 0x4 > 0) {\\n                result = (result * 0x10000000000000003) >> 64;\\n            }\\n            if (x & 0x2 > 0) {\\n                result = (result * 0x10000000000000001) >> 64;\\n            }\\n            if (x & 0x1 > 0) {\\n                result = (result * 0x10000000000000001) >> 64;\\n            }\\n\\n            // We're doing two things at the same time:\\n            //\\n            //   1. Multiply the result by 2^n + 1, where \\\"2^n\\\" is the integer part and the one is added to account for\\n            //      the fact that we initially set the result to 0.5. This is accomplished by subtracting from 191\\n            //      rather than 192.\\n            //   2. Convert the result to the unsigned 60.18-decimal fixed-point format.\\n            //\\n            // This works because 2^(191-ip) = 2^ip / 2^191, where \\\"ip\\\" is the integer part \\\"2^n\\\".\\n            result *= SCALE;\\n            result >>= (191 - (x >> 64));\\n        }\\n    }\\n\\n    /// @notice Finds the zero-based index of the first one in the binary representation of x.\\n    /// @dev See the note on msb in the \\\"Find First Set\\\" Wikipedia article https://en.wikipedia.org/wiki/Find_first_set\\n    /// @param x The uint256 number for which to find the index of the most significant bit.\\n    /// @return msb The index of the most significant bit as an uint256.\\n    function mostSignificantBit(uint256 x) internal pure returns (uint256 msb) {\\n        if (x >= 2**128) {\\n            x >>= 128;\\n            msb += 128;\\n        }\\n        if (x >= 2**64) {\\n            x >>= 64;\\n            msb += 64;\\n        }\\n        if (x >= 2**32) {\\n            x >>= 32;\\n            msb += 32;\\n        }\\n        if (x >= 2**16) {\\n            x >>= 16;\\n            msb += 16;\\n        }\\n        if (x >= 2**8) {\\n            x >>= 8;\\n            msb += 8;\\n        }\\n        if (x >= 2**4) {\\n            x >>= 4;\\n            msb += 4;\\n        }\\n        if (x >= 2**2) {\\n            x >>= 2;\\n            msb += 2;\\n        }\\n        if (x >= 2**1) {\\n            // No need to shift x any more.\\n            msb += 1;\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f7denominator) with full precision.\\n    ///\\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv.\\n    ///\\n    /// Requirements:\\n    /// - The denominator cannot be zero.\\n    /// - The result must fit within uint256.\\n    ///\\n    /// Caveats:\\n    /// - This function does not work with fixed-point numbers.\\n    ///\\n    /// @param x The multiplicand as an uint256.\\n    /// @param y The multiplier as an uint256.\\n    /// @param denominator The divisor as an uint256.\\n    /// @return result The result as an uint256.\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n        // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n        // variables such that product = prod1 * 2^256 + prod0.\\n        uint256 prod0; // Least significant 256 bits of the product\\n        uint256 prod1; // Most significant 256 bits of the product\\n        assembly {\\n            let mm := mulmod(x, y, not(0))\\n            prod0 := mul(x, y)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        // Handle non-overflow cases, 256 by 256 division.\\n        if (prod1 == 0) {\\n            unchecked {\\n                result = prod0 / denominator;\\n            }\\n            return result;\\n        }\\n\\n        // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n        if (prod1 >= denominator) {\\n            revert PRBMath__MulDivOverflow(prod1, denominator);\\n        }\\n\\n        ///////////////////////////////////////////////\\n        // 512 by 256 division.\\n        ///////////////////////////////////////////////\\n\\n        // Make division exact by subtracting the remainder from [prod1 prod0].\\n        uint256 remainder;\\n        assembly {\\n            // Compute remainder using mulmod.\\n            remainder := mulmod(x, y, denominator)\\n\\n            // Subtract 256 bit number from 512 bit number.\\n            prod1 := sub(prod1, gt(remainder, prod0))\\n            prod0 := sub(prod0, remainder)\\n        }\\n\\n        // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n        // See https://cs.stackexchange.com/q/138556/92363.\\n        unchecked {\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 lpotdod = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by lpotdod.\\n                denominator := div(denominator, lpotdod)\\n\\n                // Divide [prod1 prod0] by lpotdod.\\n                prod0 := div(prod0, lpotdod)\\n\\n                // Flip lpotdod such that it is 2^256 / lpotdod. If lpotdod is zero, then it becomes one.\\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * lpotdod;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f71e18) with full precision.\\n    ///\\n    /// @dev Variant of \\\"mulDiv\\\" with constant folding, i.e. in which the denominator is always 1e18. Before returning the\\n    /// final result, we add 1 if (x * y) % SCALE >= HALF_SCALE. Without this, 6.6e-19 would be truncated to 0 instead of\\n    /// being rounded to 1e-18.  See \\\"Listing 6\\\" and text above it at https://accu.org/index.php/journals/1717.\\n    ///\\n    /// Requirements:\\n    /// - The result must fit within uint256.\\n    ///\\n    /// Caveats:\\n    /// - The body is purposely left uncommented; see the NatSpec comments in \\\"PRBMath.mulDiv\\\" to understand how this works.\\n    /// - It is assumed that the result can never be type(uint256).max when x and y solve the following two equations:\\n    ///     1. x * y = type(uint256).max * SCALE\\n    ///     2. (x * y) % SCALE >= SCALE / 2\\n    ///\\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function mulDivFixedPoint(uint256 x, uint256 y)\\n        internal\\n        pure\\n        returns (uint256 result)\\n    {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(x, y, not(0))\\n            prod0 := mul(x, y)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= SCALE) {\\n            revert PRBMath__MulDivFixedPointOverflow(prod1);\\n        }\\n\\n        uint256 remainder;\\n        uint256 roundUpUnit;\\n        assembly {\\n            remainder := mulmod(x, y, SCALE)\\n            roundUpUnit := gt(remainder, 499999999999999999)\\n        }\\n\\n        if (prod1 == 0) {\\n            unchecked {\\n                result = (prod0 / SCALE) + roundUpUnit;\\n                return result;\\n            }\\n        }\\n\\n        assembly {\\n            result := add(\\n                mul(\\n                    or(\\n                        div(sub(prod0, remainder), SCALE_LPOTD),\\n                        mul(\\n                            sub(prod1, gt(remainder, prod0)),\\n                            add(div(sub(0, SCALE_LPOTD), SCALE_LPOTD), 1)\\n                        )\\n                    ),\\n                    SCALE_INVERSE\\n                ),\\n                roundUpUnit\\n            )\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f7denominator) with full precision.\\n    ///\\n    /// @dev An extension of \\\"mulDiv\\\" for signed numbers. Works by computing the signs and the absolute values separately.\\n    ///\\n    /// Requirements:\\n    /// - None of the inputs can be type(int256).min.\\n    /// - The result must fit within int256.\\n    ///\\n    /// @param x The multiplicand as an int256.\\n    /// @param y The multiplier as an int256.\\n    /// @param denominator The divisor as an int256.\\n    /// @return result The result as an int256.\\n    function mulDivSigned(\\n        int256 x,\\n        int256 y,\\n        int256 denominator\\n    ) internal pure returns (int256 result) {\\n        if (\\n            x == type(int256).min ||\\n            y == type(int256).min ||\\n            denominator == type(int256).min\\n        ) {\\n            revert PRBMath__MulDivSignedInputTooSmall();\\n        }\\n\\n        // Get hold of the absolute values of x, y and the denominator.\\n        uint256 ax;\\n        uint256 ay;\\n        uint256 ad;\\n        unchecked {\\n            ax = x < 0 ? uint256(-x) : uint256(x);\\n            ay = y < 0 ? uint256(-y) : uint256(y);\\n            ad = denominator < 0 ? uint256(-denominator) : uint256(denominator);\\n        }\\n\\n        // Compute the absolute value of (x*y)\\u00f7denominator. The result must fit within int256.\\n        uint256 rAbs = mulDiv(ax, ay, ad);\\n        if (rAbs > uint256(type(int256).max)) {\\n            revert PRBMath__MulDivSignedOverflow(rAbs);\\n        }\\n\\n        // Get the signs of x, y and the denominator.\\n        uint256 sx;\\n        uint256 sy;\\n        uint256 sd;\\n        assembly {\\n            sx := sgt(x, sub(0, 1))\\n            sy := sgt(y, sub(0, 1))\\n            sd := sgt(denominator, sub(0, 1))\\n        }\\n\\n        // XOR over sx, sy and sd. This is checking whether there are one or three negative signs in the inputs.\\n        // If yes, the result should be negative.\\n        result = sx ^ sy ^ sd == 0 ? -int256(rAbs) : int256(rAbs);\\n    }\\n\\n    /// @notice Calculates the square root of x, rounding down.\\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\\n    ///\\n    /// Caveats:\\n    /// - This function does not work with fixed-point numbers.\\n    ///\\n    /// @param x The uint256 number for which to calculate the square root.\\n    /// @return result The result as an uint256.\\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n\\n        // Set the initial guess to the least power of two that is greater than or equal to sqrt(x).\\n        uint256 xAux = uint256(x);\\n        result = 1;\\n        if (xAux >= 0x100000000000000000000000000000000) {\\n            xAux >>= 128;\\n            result <<= 64;\\n        }\\n        if (xAux >= 0x10000000000000000) {\\n            xAux >>= 64;\\n            result <<= 32;\\n        }\\n        if (xAux >= 0x100000000) {\\n            xAux >>= 32;\\n            result <<= 16;\\n        }\\n        if (xAux >= 0x10000) {\\n            xAux >>= 16;\\n            result <<= 8;\\n        }\\n        if (xAux >= 0x100) {\\n            xAux >>= 8;\\n            result <<= 4;\\n        }\\n        if (xAux >= 0x10) {\\n            xAux >>= 4;\\n            result <<= 2;\\n        }\\n        if (xAux >= 0x8) {\\n            result <<= 1;\\n        }\\n\\n        // The operations can never overflow because the result is max 2^127 when it enters this block.\\n        unchecked {\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1; // Seven iterations should be enough\\n            uint256 roundedDownResult = x / result;\\n            return result >= roundedDownResult ? roundedDownResult : result;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcd5f95a3a6928ddbcb79ad407252c276e52a47f9d262d64130979d59a3bd4cd9\",\"license\":\"MIT\"},\"src/dependencies/prb-math/PRBMathUD60x18.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./PRBMath.sol\\\";\\n\\n/// @title PRBMathUD60x18\\n/// @author Paul Razvan Berg\\n/// @notice Smart contract library for advanced fixed-point math that works with uint256 numbers considered to have 18\\n/// trailing decimals. We call this number representation unsigned 60.18-decimal fixed-point, since there can be up to 60\\n/// digits in the integer part and up to 18 decimals in the fractional part. The numbers are bound by the minimum and the\\n/// maximum values permitted by the Solidity type uint256.\\nlibrary PRBMathUD60x18 {\\n    /// @dev Half the SCALE number.\\n    uint256 internal constant HALF_SCALE = 5e17;\\n\\n    /// @dev log2(e) as an unsigned 60.18-decimal fixed-point number.\\n    uint256 internal constant LOG2_E = 1_442695040888963407;\\n\\n    /// @dev The maximum value an unsigned 60.18-decimal fixed-point number can have.\\n    uint256 internal constant MAX_UD60x18 =\\n        115792089237316195423570985008687907853269984665640564039457_584007913129639935;\\n\\n    /// @dev The maximum whole value an unsigned 60.18-decimal fixed-point number can have.\\n    uint256 internal constant MAX_WHOLE_UD60x18 =\\n        115792089237316195423570985008687907853269984665640564039457_000000000000000000;\\n\\n    /// @dev How many trailing decimals can be represented.\\n    uint256 internal constant SCALE = 1e18;\\n\\n    /// @notice Calculates the arithmetic average of x and y, rounding down.\\n    /// @param x The first operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The second operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The arithmetic average as an unsigned 60.18-decimal fixed-point number.\\n    function avg(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        // The operations can never overflow.\\n        unchecked {\\n            // The last operand checks if both x and y are odd and if that is the case, we add 1 to the result. We need\\n            // to do this because if both numbers are odd, the 0.5 remainder gets truncated twice.\\n            result = (x >> 1) + (y >> 1) + (x & y & 1);\\n        }\\n    }\\n\\n    /// @notice Yields the least unsigned 60.18 decimal fixed-point number greater than or equal to x.\\n    ///\\n    /// @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\\n    /// See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\\n    ///\\n    /// Requirements:\\n    /// - x must be less than or equal to MAX_WHOLE_UD60x18.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number to ceil.\\n    /// @param result The least integer greater than or equal to x, as an unsigned 60.18-decimal fixed-point number.\\n    function ceil(uint256 x) internal pure returns (uint256 result) {\\n        if (x > MAX_WHOLE_UD60x18) {\\n            revert PRBMathUD60x18__CeilOverflow(x);\\n        }\\n        assembly {\\n            // Equivalent to \\\"x % SCALE\\\" but faster.\\n            let remainder := mod(x, SCALE)\\n\\n            // Equivalent to \\\"SCALE - remainder\\\" but faster.\\n            let delta := sub(SCALE, remainder)\\n\\n            // Equivalent to \\\"x + delta * (remainder > 0 ? 1 : 0)\\\" but faster.\\n            result := add(x, mul(delta, gt(remainder, 0)))\\n        }\\n    }\\n\\n    /// @notice Divides two unsigned 60.18-decimal fixed-point numbers, returning a new unsigned 60.18-decimal fixed-point number.\\n    ///\\n    /// @dev Uses mulDiv to enable overflow-safe multiplication and division.\\n    ///\\n    /// Requirements:\\n    /// - The denominator cannot be zero.\\n    ///\\n    /// @param x The numerator as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The denominator as an unsigned 60.18-decimal fixed-point number.\\n    /// @param result The quotient as an unsigned 60.18-decimal fixed-point number.\\n    function div(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        result = PRBMath.mulDiv(x, SCALE, y);\\n    }\\n\\n    /// @notice Returns Euler's number as an unsigned 60.18-decimal fixed-point number.\\n    /// @dev See https://en.wikipedia.org/wiki/E_(mathematical_constant).\\n    function e() internal pure returns (uint256 result) {\\n        result = 2_718281828459045235;\\n    }\\n\\n    /// @notice Calculates the natural exponent of x.\\n    ///\\n    /// @dev Based on the insight that e^x = 2^(x * log2(e)).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    /// - x must be less than 133.084258667509499441.\\n    ///\\n    /// @param x The exponent as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp(uint256 x) internal pure returns (uint256 result) {\\n        // Without this check, the value passed to \\\"exp2\\\" would be greater than 192.\\n        if (x >= 133_084258667509499441) {\\n            revert PRBMathUD60x18__ExpInputTooBig(x);\\n        }\\n\\n        // Do the fixed-point multiplication inline to save gas.\\n        unchecked {\\n            uint256 doubleScaleProduct = x * LOG2_E;\\n            result = exp2((doubleScaleProduct + HALF_SCALE) / SCALE);\\n        }\\n    }\\n\\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\\n    ///\\n    /// @dev See https://ethereum.stackexchange.com/q/79903/24693.\\n    ///\\n    /// Requirements:\\n    /// - x must be 192 or less.\\n    /// - The result must fit within MAX_UD60x18.\\n    ///\\n    /// @param x The exponent as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp2(uint256 x) internal pure returns (uint256 result) {\\n        // 2^192 doesn't fit within the 192.64-bit format used internally in this function.\\n        if (x >= 192e18) {\\n            revert PRBMathUD60x18__Exp2InputTooBig(x);\\n        }\\n\\n        unchecked {\\n            // Convert x to the 192.64-bit fixed-point format.\\n            uint256 x192x64 = (x << 64) / SCALE;\\n\\n            // Pass x to the PRBMath.exp2 function, which uses the 192.64-bit fixed-point number representation.\\n            result = PRBMath.exp2(x192x64);\\n        }\\n    }\\n\\n    /// @notice Yields the greatest unsigned 60.18 decimal fixed-point number less than or equal to x.\\n    /// @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\\n    /// See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to floor.\\n    /// @param result The greatest integer less than or equal to x, as an unsigned 60.18-decimal fixed-point number.\\n    function floor(uint256 x) internal pure returns (uint256 result) {\\n        assembly {\\n            // Equivalent to \\\"x % SCALE\\\" but faster.\\n            let remainder := mod(x, SCALE)\\n\\n            // Equivalent to \\\"x - remainder * (remainder > 0 ? 1 : 0)\\\" but faster.\\n            result := sub(x, mul(remainder, gt(remainder, 0)))\\n        }\\n    }\\n\\n    /// @notice Yields the excess beyond the floor of x.\\n    /// @dev Based on the odd function definition https://en.wikipedia.org/wiki/Fractional_part.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to get the fractional part of.\\n    /// @param result The fractional part of x as an unsigned 60.18-decimal fixed-point number.\\n    function frac(uint256 x) internal pure returns (uint256 result) {\\n        assembly {\\n            result := mod(x, SCALE)\\n        }\\n    }\\n\\n    /// @notice Converts a number from basic integer form to unsigned 60.18-decimal fixed-point representation.\\n    ///\\n    /// @dev Requirements:\\n    /// - x must be less than or equal to MAX_UD60x18 divided by SCALE.\\n    ///\\n    /// @param x The basic integer to convert.\\n    /// @param result The same number in unsigned 60.18-decimal fixed-point representation.\\n    function fromUint(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            if (x > MAX_UD60x18 / SCALE) {\\n                revert PRBMathUD60x18__FromUintOverflow(x);\\n            }\\n            result = x * SCALE;\\n        }\\n    }\\n\\n    /// @notice Calculates geometric mean of x and y, i.e. sqrt(x * y), rounding down.\\n    ///\\n    /// @dev Requirements:\\n    /// - x * y must fit within MAX_UD60x18, lest it overflows.\\n    ///\\n    /// @param x The first operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The second operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function gm(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n\\n        unchecked {\\n            // Checking for overflow this way is faster than letting Solidity do it.\\n            uint256 xy = x * y;\\n            if (xy / x != y) {\\n                revert PRBMathUD60x18__GmOverflow(x, y);\\n            }\\n\\n            // We don't need to multiply by the SCALE here because the x*y product had already picked up a factor of SCALE\\n            // during multiplication. See the comments within the \\\"sqrt\\\" function.\\n            result = PRBMath.sqrt(xy);\\n        }\\n    }\\n\\n    /// @notice Calculates 1 / x, rounding toward zero.\\n    ///\\n    /// @dev Requirements:\\n    /// - x cannot be zero.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the inverse.\\n    /// @return result The inverse as an unsigned 60.18-decimal fixed-point number.\\n    function inv(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 1e36 is SCALE * SCALE.\\n            result = 1e36 / x;\\n        }\\n    }\\n\\n    /// @notice Calculates the natural logarithm of x.\\n    ///\\n    /// @dev Based on the insight that ln(x) = log2(x) / log2(e).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"log2\\\".\\n    /// - This doesn't return exactly 1 for 2.718281828459045235, for that we would need more fine-grained precision.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the natural logarithm.\\n    /// @return result The natural logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function ln(uint256 x) internal pure returns (uint256 result) {\\n        // Do the fixed-point multiplication inline to save gas. This is overflow-safe because the maximum value that log2(x)\\n        // can return is 196205294292027477728.\\n        unchecked {\\n            result = (log2(x) * SCALE) / LOG2_E;\\n        }\\n    }\\n\\n    /// @notice Calculates the common logarithm of x.\\n    ///\\n    /// @dev First checks if x is an exact power of ten and it stops if yes. If it's not, calculates the common\\n    /// logarithm based on the insight that log10(x) = log2(x) / log2(10).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the common logarithm.\\n    /// @return result The common logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function log10(uint256 x) internal pure returns (uint256 result) {\\n        if (x < SCALE) {\\n            revert PRBMathUD60x18__LogInputTooSmall(x);\\n        }\\n\\n        // Note that the \\\"mul\\\" in this block is the assembly multiplication operation, not the \\\"mul\\\" function defined\\n        // in this contract.\\n        // prettier-ignore\\n        assembly {\\n            switch x\\n            case 1 { result := mul(SCALE, sub(0, 18)) }\\n            case 10 { result := mul(SCALE, sub(1, 18)) }\\n            case 100 { result := mul(SCALE, sub(2, 18)) }\\n            case 1000 { result := mul(SCALE, sub(3, 18)) }\\n            case 10000 { result := mul(SCALE, sub(4, 18)) }\\n            case 100000 { result := mul(SCALE, sub(5, 18)) }\\n            case 1000000 { result := mul(SCALE, sub(6, 18)) }\\n            case 10000000 { result := mul(SCALE, sub(7, 18)) }\\n            case 100000000 { result := mul(SCALE, sub(8, 18)) }\\n            case 1000000000 { result := mul(SCALE, sub(9, 18)) }\\n            case 10000000000 { result := mul(SCALE, sub(10, 18)) }\\n            case 100000000000 { result := mul(SCALE, sub(11, 18)) }\\n            case 1000000000000 { result := mul(SCALE, sub(12, 18)) }\\n            case 10000000000000 { result := mul(SCALE, sub(13, 18)) }\\n            case 100000000000000 { result := mul(SCALE, sub(14, 18)) }\\n            case 1000000000000000 { result := mul(SCALE, sub(15, 18)) }\\n            case 10000000000000000 { result := mul(SCALE, sub(16, 18)) }\\n            case 100000000000000000 { result := mul(SCALE, sub(17, 18)) }\\n            case 1000000000000000000 { result := 0 }\\n            case 10000000000000000000 { result := SCALE }\\n            case 100000000000000000000 { result := mul(SCALE, 2) }\\n            case 1000000000000000000000 { result := mul(SCALE, 3) }\\n            case 10000000000000000000000 { result := mul(SCALE, 4) }\\n            case 100000000000000000000000 { result := mul(SCALE, 5) }\\n            case 1000000000000000000000000 { result := mul(SCALE, 6) }\\n            case 10000000000000000000000000 { result := mul(SCALE, 7) }\\n            case 100000000000000000000000000 { result := mul(SCALE, 8) }\\n            case 1000000000000000000000000000 { result := mul(SCALE, 9) }\\n            case 10000000000000000000000000000 { result := mul(SCALE, 10) }\\n            case 100000000000000000000000000000 { result := mul(SCALE, 11) }\\n            case 1000000000000000000000000000000 { result := mul(SCALE, 12) }\\n            case 10000000000000000000000000000000 { result := mul(SCALE, 13) }\\n            case 100000000000000000000000000000000 { result := mul(SCALE, 14) }\\n            case 1000000000000000000000000000000000 { result := mul(SCALE, 15) }\\n            case 10000000000000000000000000000000000 { result := mul(SCALE, 16) }\\n            case 100000000000000000000000000000000000 { result := mul(SCALE, 17) }\\n            case 1000000000000000000000000000000000000 { result := mul(SCALE, 18) }\\n            case 10000000000000000000000000000000000000 { result := mul(SCALE, 19) }\\n            case 100000000000000000000000000000000000000 { result := mul(SCALE, 20) }\\n            case 1000000000000000000000000000000000000000 { result := mul(SCALE, 21) }\\n            case 10000000000000000000000000000000000000000 { result := mul(SCALE, 22) }\\n            case 100000000000000000000000000000000000000000 { result := mul(SCALE, 23) }\\n            case 1000000000000000000000000000000000000000000 { result := mul(SCALE, 24) }\\n            case 10000000000000000000000000000000000000000000 { result := mul(SCALE, 25) }\\n            case 100000000000000000000000000000000000000000000 { result := mul(SCALE, 26) }\\n            case 1000000000000000000000000000000000000000000000 { result := mul(SCALE, 27) }\\n            case 10000000000000000000000000000000000000000000000 { result := mul(SCALE, 28) }\\n            case 100000000000000000000000000000000000000000000000 { result := mul(SCALE, 29) }\\n            case 1000000000000000000000000000000000000000000000000 { result := mul(SCALE, 30) }\\n            case 10000000000000000000000000000000000000000000000000 { result := mul(SCALE, 31) }\\n            case 100000000000000000000000000000000000000000000000000 { result := mul(SCALE, 32) }\\n            case 1000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 33) }\\n            case 10000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 34) }\\n            case 100000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 35) }\\n            case 1000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 36) }\\n            case 10000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 37) }\\n            case 100000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 38) }\\n            case 1000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 39) }\\n            case 10000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 40) }\\n            case 100000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 41) }\\n            case 1000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 42) }\\n            case 10000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 43) }\\n            case 100000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 44) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 45) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 46) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 47) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 48) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 49) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 50) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 51) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 52) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 53) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 54) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 55) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 56) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 57) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 58) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 59) }\\n            default {\\n                result := MAX_UD60x18\\n            }\\n        }\\n\\n        if (result == MAX_UD60x18) {\\n            // Do the fixed-point division inline to save gas. The denominator is log2(10).\\n            unchecked {\\n                result = (log2(x) * SCALE) / 3_321928094887362347;\\n            }\\n        }\\n    }\\n\\n    /// @notice Calculates the binary logarithm of x.\\n    ///\\n    /// @dev Based on the iterative approximation algorithm.\\n    /// https://en.wikipedia.org/wiki/Binary_logarithm#Iterative_approximation\\n    ///\\n    /// Requirements:\\n    /// - x must be greater than or equal to SCALE, otherwise the result would be negative.\\n    ///\\n    /// Caveats:\\n    /// - The results are nor perfectly accurate to the last decimal, due to the lossy precision of the iterative approximation.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the binary logarithm.\\n    /// @return result The binary logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function log2(uint256 x) internal pure returns (uint256 result) {\\n        if (x < SCALE) {\\n            revert PRBMathUD60x18__LogInputTooSmall(x);\\n        }\\n        unchecked {\\n            // Calculate the integer part of the logarithm and add it to the result and finally calculate y = x * 2^(-n).\\n            uint256 n = PRBMath.mostSignificantBit(x / SCALE);\\n\\n            // The integer part of the logarithm as an unsigned 60.18-decimal fixed-point number. The operation can't overflow\\n            // because n is maximum 255 and SCALE is 1e18.\\n            result = n * SCALE;\\n\\n            // This is y = x * 2^(-n).\\n            uint256 y = x >> n;\\n\\n            // If y = 1, the fractional part is zero.\\n            if (y == SCALE) {\\n                return result;\\n            }\\n\\n            // Calculate the fractional part via the iterative approximation.\\n            // The \\\"delta >>= 1\\\" part is equivalent to \\\"delta /= 2\\\", but shifting bits is faster.\\n            for (uint256 delta = HALF_SCALE; delta > 0; delta >>= 1) {\\n                y = (y * y) / SCALE;\\n\\n                // Is y^2 > 2 and so in the range [2,4)?\\n                if (y >= 2 * SCALE) {\\n                    // Add the 2^(-m) factor to the logarithm.\\n                    result += delta;\\n\\n                    // Corresponds to z/2 on Wikipedia.\\n                    y >>= 1;\\n                }\\n            }\\n        }\\n    }\\n\\n    /// @notice Multiplies two unsigned 60.18-decimal fixed-point numbers together, returning a new unsigned 60.18-decimal\\n    /// fixed-point number.\\n    /// @dev See the documentation for the \\\"PRBMath.mulDivFixedPoint\\\" function.\\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The product as an unsigned 60.18-decimal fixed-point number.\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        result = PRBMath.mulDivFixedPoint(x, y);\\n    }\\n\\n    /// @notice Returns PI as an unsigned 60.18-decimal fixed-point number.\\n    function pi() internal pure returns (uint256 result) {\\n        result = 3_141592653589793238;\\n    }\\n\\n    /// @notice Raises x to the power of y.\\n    ///\\n    /// @dev Based on the insight that x^y = 2^(log2(x) * y).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"exp2\\\", \\\"log2\\\" and \\\"mul\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"exp2\\\", \\\"log2\\\" and \\\"mul\\\".\\n    /// - Assumes 0^0 is 1.\\n    ///\\n    /// @param x Number to raise to given power y, as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y Exponent to raise x to, as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result x raised to power y, as an unsigned 60.18-decimal fixed-point number.\\n    function pow(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            result = y == 0 ? SCALE : uint256(0);\\n        } else {\\n            result = exp2(mul(log2(x), y));\\n        }\\n    }\\n\\n    /// @notice Raises x (unsigned 60.18-decimal fixed-point number) to the power of y (basic unsigned integer) using the\\n    /// famous algorithm \\\"exponentiation by squaring\\\".\\n    ///\\n    /// @dev See https://en.wikipedia.org/wiki/Exponentiation_by_squaring\\n    ///\\n    /// Requirements:\\n    /// - The result must fit within MAX_UD60x18.\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"mul\\\".\\n    /// - Assumes 0^0 is 1.\\n    ///\\n    /// @param x The base as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The exponent as an uint256.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function powu(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        // Calculate the first iteration of the loop in advance.\\n        result = y & 1 > 0 ? x : SCALE;\\n\\n        // Equivalent to \\\"for(y /= 2; y > 0; y /= 2)\\\" but faster.\\n        for (y >>= 1; y > 0; y >>= 1) {\\n            x = PRBMath.mulDivFixedPoint(x, x);\\n\\n            // Equivalent to \\\"y % 2 == 1\\\" but faster.\\n            if (y & 1 > 0) {\\n                result = PRBMath.mulDivFixedPoint(result, x);\\n            }\\n        }\\n    }\\n\\n    /// @notice Returns 1 as an unsigned 60.18-decimal fixed-point number.\\n    function scale() internal pure returns (uint256 result) {\\n        result = SCALE;\\n    }\\n\\n    /// @notice Calculates the square root of x, rounding down.\\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\\n    ///\\n    /// Requirements:\\n    /// - x must be less than MAX_UD60x18 / SCALE.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the square root.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point .\\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            if (x > MAX_UD60x18 / SCALE) {\\n                revert PRBMathUD60x18__SqrtOverflow(x);\\n            }\\n            // Multiply x by the SCALE to account for the factor of SCALE that is picked up when multiplying two unsigned\\n            // 60.18-decimal fixed-point numbers together (in this case, those two numbers are both the square root).\\n            result = PRBMath.sqrt(x * SCALE);\\n        }\\n    }\\n\\n    /// @notice Converts a unsigned 60.18-decimal fixed-point number to basic integer form, rounding down in the process.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to convert.\\n    /// @return result The same number in basic integer form.\\n    function toUint(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            result = x / SCALE;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0c51a3408fc3bdf8746accf35e56f7844b3e0b05083be38545baecdf3f083e4f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":899,"contract":"src/PriceModel.sol:PriceModel","label":"dailyPercent","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"errors":{"PRBMath__MulDivFixedPointOverflow(uint256)":[{"notice":"Emitted when the result overflows uint256."}]},"kind":"user","methods":{},"version":1}}},"src/USDC.sol":{"USDC":{"abi":[{"inputs":[{"internalType":"address[]","name":"_holders","type":"address[]"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3666":{"entryPoint":null,"id":3666,"parameterSlots":3,"returnSlots":0},"@_981":{"entryPoint":null,"id":981,"parameterSlots":1,"returnSlots":0},"@_mint_3948":{"entryPoint":499,"id":3948,"parameterSlots":2,"returnSlots":0},"@computeDomainSeparator_3920":{"entryPoint":355,"id":3920,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":1038,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1015,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":1154,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":1205,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2519,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2485,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2307,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2502,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2450,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":2536,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2688,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":854,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":711,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":885,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":2286,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1397,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1286,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2275,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2629,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1718,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":969,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2475,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":937,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1533,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1679,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1553,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1873,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1418,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1344,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1843,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":800,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1543,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":2198,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1811,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2151,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1297,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2104,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":753,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1593,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":731,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":932,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":726,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":721,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":736,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1434,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1798,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1651,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1447,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1603,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":989,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1646,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12534:15","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:15","statements":[{"nodeType":"YulAssignment","src":"57:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:15"},"nodeType":"YulFunctionCall","src":"67:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:15","type":""}],"src":"7:75:15"},{"body":{"nodeType":"YulBlock","src":"177:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:15"},"nodeType":"YulFunctionCall","src":"187:12:15"},"nodeType":"YulExpressionStatement","src":"187:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:15"},{"body":{"nodeType":"YulBlock","src":"300:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:15"},"nodeType":"YulFunctionCall","src":"310:12:15"},"nodeType":"YulExpressionStatement","src":"310:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:15"},{"body":{"nodeType":"YulBlock","src":"423:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:15"},"nodeType":"YulFunctionCall","src":"433:12:15"},"nodeType":"YulExpressionStatement","src":"433:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:15"},{"body":{"nodeType":"YulBlock","src":"505:54:15","statements":[{"nodeType":"YulAssignment","src":"515:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"533:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"540:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"529:3:15"},"nodeType":"YulFunctionCall","src":"529:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"549:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"545:3:15"},"nodeType":"YulFunctionCall","src":"545:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"525:3:15"},"nodeType":"YulFunctionCall","src":"525:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"515:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"488:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"498:6:15","type":""}],"src":"457:102:15"},{"body":{"nodeType":"YulBlock","src":"593:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"610:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"613:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"603:6:15"},"nodeType":"YulFunctionCall","src":"603:88:15"},"nodeType":"YulExpressionStatement","src":"603:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"707:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"710:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"700:6:15"},"nodeType":"YulFunctionCall","src":"700:15:15"},"nodeType":"YulExpressionStatement","src":"700:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"731:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"734:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"724:6:15"},"nodeType":"YulFunctionCall","src":"724:15:15"},"nodeType":"YulExpressionStatement","src":"724:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"565:180:15"},{"body":{"nodeType":"YulBlock","src":"794:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"804:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"826:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"856:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"834:21:15"},"nodeType":"YulFunctionCall","src":"834:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"822:3:15"},"nodeType":"YulFunctionCall","src":"822:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"808:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"973:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"975:16:15"},"nodeType":"YulFunctionCall","src":"975:18:15"},"nodeType":"YulExpressionStatement","src":"975:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"916:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"928:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"913:2:15"},"nodeType":"YulFunctionCall","src":"913:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"952:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"964:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"949:2:15"},"nodeType":"YulFunctionCall","src":"949:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"910:2:15"},"nodeType":"YulFunctionCall","src":"910:62:15"},"nodeType":"YulIf","src":"907:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1011:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1015:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1004:6:15"},"nodeType":"YulFunctionCall","src":"1004:22:15"},"nodeType":"YulExpressionStatement","src":"1004:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"780:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"788:4:15","type":""}],"src":"751:281:15"},{"body":{"nodeType":"YulBlock","src":"1079:88:15","statements":[{"nodeType":"YulAssignment","src":"1089:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1099:18:15"},"nodeType":"YulFunctionCall","src":"1099:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1089:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1148:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"1156:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1128:19:15"},"nodeType":"YulFunctionCall","src":"1128:33:15"},"nodeType":"YulExpressionStatement","src":"1128:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1063:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1072:6:15","type":""}],"src":"1038:129:15"},{"body":{"nodeType":"YulBlock","src":"1255:229:15","statements":[{"body":{"nodeType":"YulBlock","src":"1360:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1362:16:15"},"nodeType":"YulFunctionCall","src":"1362:18:15"},"nodeType":"YulExpressionStatement","src":"1362:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1332:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1340:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1329:2:15"},"nodeType":"YulFunctionCall","src":"1329:30:15"},"nodeType":"YulIf","src":"1326:56:15"},{"nodeType":"YulAssignment","src":"1392:25:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1404:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1412:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1400:3:15"},"nodeType":"YulFunctionCall","src":"1400:17:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1392:4:15"}]},{"nodeType":"YulAssignment","src":"1454:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1466:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"1472:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1462:3:15"},"nodeType":"YulFunctionCall","src":"1462:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1454:4:15"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1239:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1250:4:15","type":""}],"src":"1173:311:15"},{"body":{"nodeType":"YulBlock","src":"1579:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1596:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1599:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1589:6:15"},"nodeType":"YulFunctionCall","src":"1589:12:15"},"nodeType":"YulExpressionStatement","src":"1589:12:15"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1490:117:15"},{"body":{"nodeType":"YulBlock","src":"1658:81:15","statements":[{"nodeType":"YulAssignment","src":"1668:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1683:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1690:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1679:3:15"},"nodeType":"YulFunctionCall","src":"1679:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1668:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1640:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1650:7:15","type":""}],"src":"1613:126:15"},{"body":{"nodeType":"YulBlock","src":"1790:51:15","statements":[{"nodeType":"YulAssignment","src":"1800:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1829:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1811:17:15"},"nodeType":"YulFunctionCall","src":"1811:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1800:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1772:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1782:7:15","type":""}],"src":"1745:96:15"},{"body":{"nodeType":"YulBlock","src":"1890:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"1947:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1956:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1959:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1949:6:15"},"nodeType":"YulFunctionCall","src":"1949:12:15"},"nodeType":"YulExpressionStatement","src":"1949:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1913:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1938:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1920:17:15"},"nodeType":"YulFunctionCall","src":"1920:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1910:2:15"},"nodeType":"YulFunctionCall","src":"1910:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1903:6:15"},"nodeType":"YulFunctionCall","src":"1903:43:15"},"nodeType":"YulIf","src":"1900:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:15","type":""}],"src":"1847:122:15"},{"body":{"nodeType":"YulBlock","src":"2038:80:15","statements":[{"nodeType":"YulAssignment","src":"2048:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2063:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2057:5:15"},"nodeType":"YulFunctionCall","src":"2057:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2048:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2106:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2079:26:15"},"nodeType":"YulFunctionCall","src":"2079:33:15"},"nodeType":"YulExpressionStatement","src":"2079:33:15"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2016:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2024:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2032:5:15","type":""}],"src":"1975:143:15"},{"body":{"nodeType":"YulBlock","src":"2254:619:15","statements":[{"nodeType":"YulAssignment","src":"2264:90:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2346:6:15"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2289:56:15"},"nodeType":"YulFunctionCall","src":"2289:64:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2273:15:15"},"nodeType":"YulFunctionCall","src":"2273:81:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2264:5:15"}]},{"nodeType":"YulVariableDeclaration","src":"2363:16:15","value":{"name":"array","nodeType":"YulIdentifier","src":"2374:5:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2367:3:15","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2396:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"2403:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2389:6:15"},"nodeType":"YulFunctionCall","src":"2389:21:15"},"nodeType":"YulExpressionStatement","src":"2389:21:15"},{"nodeType":"YulAssignment","src":"2419:23:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2430:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2437:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2426:3:15"},"nodeType":"YulFunctionCall","src":"2426:16:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2419:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"2452:44:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2470:6:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2482:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2490:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2478:3:15"},"nodeType":"YulFunctionCall","src":"2478:17:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2466:3:15"},"nodeType":"YulFunctionCall","src":"2466:30:15"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"2456:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2524:103:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2538:77:15"},"nodeType":"YulFunctionCall","src":"2538:79:15"},"nodeType":"YulExpressionStatement","src":"2538:79:15"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"2511:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"2519:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2508:2:15"},"nodeType":"YulFunctionCall","src":"2508:15:15"},"nodeType":"YulIf","src":"2505:122:15"},{"body":{"nodeType":"YulBlock","src":"2712:155:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2727:21:15","value":{"name":"src","nodeType":"YulIdentifier","src":"2745:3:15"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"2731:10:15","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2769:3:15"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"2806:10:15"},{"name":"end","nodeType":"YulIdentifier","src":"2818:3:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2774:31:15"},"nodeType":"YulFunctionCall","src":"2774:48:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2762:6:15"},"nodeType":"YulFunctionCall","src":"2762:61:15"},"nodeType":"YulExpressionStatement","src":"2762:61:15"},{"nodeType":"YulAssignment","src":"2836:21:15","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2847:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2852:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2843:3:15"},"nodeType":"YulFunctionCall","src":"2843:14:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2836:3:15"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2665:3:15"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"2670:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2662:2:15"},"nodeType":"YulFunctionCall","src":"2662:15:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2678:25:15","statements":[{"nodeType":"YulAssignment","src":"2680:21:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2691:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2696:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2687:3:15"},"nodeType":"YulFunctionCall","src":"2687:14:15"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2680:3:15"}]}]},"pre":{"nodeType":"YulBlock","src":"2640:21:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2642:17:15","value":{"name":"offset","nodeType":"YulIdentifier","src":"2653:6:15"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"2646:3:15","type":""}]}]},"src":"2636:231:15"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2224:6:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"2232:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2240:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2248:5:15","type":""}],"src":"2141:732:15"},{"body":{"nodeType":"YulBlock","src":"2984:297:15","statements":[{"body":{"nodeType":"YulBlock","src":"3033:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3035:77:15"},"nodeType":"YulFunctionCall","src":"3035:79:15"},"nodeType":"YulExpressionStatement","src":"3035:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3012:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3020:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3008:3:15"},"nodeType":"YulFunctionCall","src":"3008:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"3027:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3004:3:15"},"nodeType":"YulFunctionCall","src":"3004:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2997:6:15"},"nodeType":"YulFunctionCall","src":"2997:35:15"},"nodeType":"YulIf","src":"2994:122:15"},{"nodeType":"YulVariableDeclaration","src":"3125:27:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3145:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3139:5:15"},"nodeType":"YulFunctionCall","src":"3139:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3129:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3161:114:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3248:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3256:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3244:3:15"},"nodeType":"YulFunctionCall","src":"3244:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"3263:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"3271:3:15"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3170:73:15"},"nodeType":"YulFunctionCall","src":"3170:105:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3161:5:15"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2962:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2970:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2978:5:15","type":""}],"src":"2896:385:15"},{"body":{"nodeType":"YulBlock","src":"3389:452:15","statements":[{"body":{"nodeType":"YulBlock","src":"3435:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3437:77:15"},"nodeType":"YulFunctionCall","src":"3437:79:15"},"nodeType":"YulExpressionStatement","src":"3437:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3410:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3406:3:15"},"nodeType":"YulFunctionCall","src":"3406:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3431:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3402:3:15"},"nodeType":"YulFunctionCall","src":"3402:32:15"},"nodeType":"YulIf","src":"3399:119:15"},{"nodeType":"YulBlock","src":"3528:306:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3543:38:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3567:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3578:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3563:3:15"},"nodeType":"YulFunctionCall","src":"3563:17:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3557:5:15"},"nodeType":"YulFunctionCall","src":"3557:24:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3547:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3628:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3630:77:15"},"nodeType":"YulFunctionCall","src":"3630:79:15"},"nodeType":"YulExpressionStatement","src":"3630:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3600:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3608:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3597:2:15"},"nodeType":"YulFunctionCall","src":"3597:30:15"},"nodeType":"YulIf","src":"3594:117:15"},{"nodeType":"YulAssignment","src":"3725:99:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3796:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3807:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3792:3:15"},"nodeType":"YulFunctionCall","src":"3792:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3816:7:15"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3735:56:15"},"nodeType":"YulFunctionCall","src":"3735:89:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3725:6:15"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3359:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3370:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3382:6:15","type":""}],"src":"3287:554:15"},{"body":{"nodeType":"YulBlock","src":"3906:40:15","statements":[{"nodeType":"YulAssignment","src":"3917:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3933:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3927:5:15"},"nodeType":"YulFunctionCall","src":"3927:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3917:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3889:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3899:6:15","type":""}],"src":"3847:99:15"},{"body":{"nodeType":"YulBlock","src":"3980:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3997:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4000:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3990:6:15"},"nodeType":"YulFunctionCall","src":"3990:88:15"},"nodeType":"YulExpressionStatement","src":"3990:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4094:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4097:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4087:6:15"},"nodeType":"YulFunctionCall","src":"4087:15:15"},"nodeType":"YulExpressionStatement","src":"4087:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4118:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4121:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4111:6:15"},"nodeType":"YulFunctionCall","src":"4111:15:15"},"nodeType":"YulExpressionStatement","src":"4111:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3952:180:15"},{"body":{"nodeType":"YulBlock","src":"4189:269:15","statements":[{"nodeType":"YulAssignment","src":"4199:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4213:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"4219:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4209:3:15"},"nodeType":"YulFunctionCall","src":"4209:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4199:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"4230:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4260:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"4266:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4256:3:15"},"nodeType":"YulFunctionCall","src":"4256:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4234:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4307:51:15","statements":[{"nodeType":"YulAssignment","src":"4321:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4335:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4343:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4331:3:15"},"nodeType":"YulFunctionCall","src":"4331:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4321:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4287:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4280:6:15"},"nodeType":"YulFunctionCall","src":"4280:26:15"},"nodeType":"YulIf","src":"4277:81:15"},{"body":{"nodeType":"YulBlock","src":"4410:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4424:16:15"},"nodeType":"YulFunctionCall","src":"4424:18:15"},"nodeType":"YulExpressionStatement","src":"4424:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4374:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4397:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4405:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4394:2:15"},"nodeType":"YulFunctionCall","src":"4394:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4371:2:15"},"nodeType":"YulFunctionCall","src":"4371:38:15"},"nodeType":"YulIf","src":"4368:84:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4173:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4182:6:15","type":""}],"src":"4138:320:15"},{"body":{"nodeType":"YulBlock","src":"4518:87:15","statements":[{"nodeType":"YulAssignment","src":"4528:11:15","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4536:3:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4528:4:15"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4556:1:15","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4559:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4549:6:15"},"nodeType":"YulFunctionCall","src":"4549:14:15"},"nodeType":"YulExpressionStatement","src":"4549:14:15"},{"nodeType":"YulAssignment","src":"4572:26:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4590:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4593:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4580:9:15"},"nodeType":"YulFunctionCall","src":"4580:18:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4572:4:15"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4505:3:15","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4513:4:15","type":""}],"src":"4464:141:15"},{"body":{"nodeType":"YulBlock","src":"4655:49:15","statements":[{"nodeType":"YulAssignment","src":"4665:33:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4683:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4690:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4679:3:15"},"nodeType":"YulFunctionCall","src":"4679:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"4695:2:15","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4675:3:15"},"nodeType":"YulFunctionCall","src":"4675:23:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4665:6:15"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4638:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4648:6:15","type":""}],"src":"4611:93:15"},{"body":{"nodeType":"YulBlock","src":"4763:54:15","statements":[{"nodeType":"YulAssignment","src":"4773:37:15","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4798:4:15"},{"name":"value","nodeType":"YulIdentifier","src":"4804:5:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4794:3:15"},"nodeType":"YulFunctionCall","src":"4794:16:15"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4773:8:15"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4738:4:15","type":""},{"name":"value","nodeType":"YulTypedName","src":"4744:5:15","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4754:8:15","type":""}],"src":"4710:107:15"},{"body":{"nodeType":"YulBlock","src":"4899:317:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4909:35:15","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4930:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"4942:1:15","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4926:3:15"},"nodeType":"YulFunctionCall","src":"4926:18:15"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4913:9:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4953:109:15","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4984:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4995:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4965:18:15"},"nodeType":"YulFunctionCall","src":"4965:97:15"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4957:4:15","type":""}]},{"nodeType":"YulAssignment","src":"5071:51:15","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5102:9:15"},{"name":"toInsert","nodeType":"YulIdentifier","src":"5113:8:15"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5083:18:15"},"nodeType":"YulFunctionCall","src":"5083:39:15"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5071:8:15"}]},{"nodeType":"YulAssignment","src":"5131:30:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5144:5:15"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"5155:4:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5151:3:15"},"nodeType":"YulFunctionCall","src":"5151:9:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5140:3:15"},"nodeType":"YulFunctionCall","src":"5140:21:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5131:5:15"}]},{"nodeType":"YulAssignment","src":"5170:40:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5183:5:15"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5194:8:15"},{"name":"mask","nodeType":"YulIdentifier","src":"5204:4:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5190:3:15"},"nodeType":"YulFunctionCall","src":"5190:19:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5180:2:15"},"nodeType":"YulFunctionCall","src":"5180:30:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5170:6:15"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4860:5:15","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4867:10:15","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4879:8:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4892:6:15","type":""}],"src":"4823:393:15"},{"body":{"nodeType":"YulBlock","src":"5267:32:15","statements":[{"nodeType":"YulAssignment","src":"5277:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"5288:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5277:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5249:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5259:7:15","type":""}],"src":"5222:77:15"},{"body":{"nodeType":"YulBlock","src":"5337:28:15","statements":[{"nodeType":"YulAssignment","src":"5347:12:15","value":{"name":"value","nodeType":"YulIdentifier","src":"5354:5:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5347:3:15"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5323:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5333:3:15","type":""}],"src":"5305:60:15"},{"body":{"nodeType":"YulBlock","src":"5431:82:15","statements":[{"nodeType":"YulAssignment","src":"5441:66:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5499:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5481:17:15"},"nodeType":"YulFunctionCall","src":"5481:24:15"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5472:8:15"},"nodeType":"YulFunctionCall","src":"5472:34:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5454:17:15"},"nodeType":"YulFunctionCall","src":"5454:53:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5441:9:15"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5411:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5421:9:15","type":""}],"src":"5371:142:15"},{"body":{"nodeType":"YulBlock","src":"5566:28:15","statements":[{"nodeType":"YulAssignment","src":"5576:12:15","value":{"name":"value","nodeType":"YulIdentifier","src":"5583:5:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5576:3:15"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5552:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5562:3:15","type":""}],"src":"5519:75:15"},{"body":{"nodeType":"YulBlock","src":"5676:193:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5686:63:15","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5741:7:15"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5710:30:15"},"nodeType":"YulFunctionCall","src":"5710:39:15"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5690:16:15","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5765:4:15"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5799:5:15"},"nodeType":"YulFunctionCall","src":"5799:11:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5812:6:15"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5844:16:15"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5820:23:15"},"nodeType":"YulFunctionCall","src":"5820:41:15"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5771:27:15"},"nodeType":"YulFunctionCall","src":"5771:91:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5758:6:15"},"nodeType":"YulFunctionCall","src":"5758:105:15"},"nodeType":"YulExpressionStatement","src":"5758:105:15"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5653:4:15","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5659:6:15","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5667:7:15","type":""}],"src":"5600:269:15"},{"body":{"nodeType":"YulBlock","src":"5924:24:15","statements":[{"nodeType":"YulAssignment","src":"5934:8:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5941:1:15","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5934:3:15"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5920:3:15","type":""}],"src":"5875:73:15"},{"body":{"nodeType":"YulBlock","src":"6007:136:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6017:46:15","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"6031:30:15"},"nodeType":"YulFunctionCall","src":"6031:32:15"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"6021:6:15","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6116:4:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6122:6:15"},{"name":"zero_0","nodeType":"YulIdentifier","src":"6130:6:15"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6072:43:15"},"nodeType":"YulFunctionCall","src":"6072:65:15"},"nodeType":"YulExpressionStatement","src":"6072:65:15"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5993:4:15","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5999:6:15","type":""}],"src":"5954:189:15"},{"body":{"nodeType":"YulBlock","src":"6199:136:15","statements":[{"body":{"nodeType":"YulBlock","src":"6266:63:15","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6310:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"6317:1:15","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"6280:29:15"},"nodeType":"YulFunctionCall","src":"6280:39:15"},"nodeType":"YulExpressionStatement","src":"6280:39:15"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6219:5:15"},{"name":"end","nodeType":"YulIdentifier","src":"6226:3:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6216:2:15"},"nodeType":"YulFunctionCall","src":"6216:14:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6231:26:15","statements":[{"nodeType":"YulAssignment","src":"6233:22:15","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6246:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"6253:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6242:3:15"},"nodeType":"YulFunctionCall","src":"6242:13:15"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"6233:5:15"}]}]},"pre":{"nodeType":"YulBlock","src":"6213:2:15","statements":[]},"src":"6209:120:15"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"6187:5:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"6194:3:15","type":""}],"src":"6149:186:15"},{"body":{"nodeType":"YulBlock","src":"6420:464:15","statements":[{"body":{"nodeType":"YulBlock","src":"6446:431:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6460:54:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6508:5:15"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6476:31:15"},"nodeType":"YulFunctionCall","src":"6476:38:15"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6464:8:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6527:63:15","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6550:8:15"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6578:10:15"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6560:17:15"},"nodeType":"YulFunctionCall","src":"6560:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6546:3:15"},"nodeType":"YulFunctionCall","src":"6546:44:15"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6531:11:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"6747:27:15","statements":[{"nodeType":"YulAssignment","src":"6749:23:15","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6764:8:15"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6749:11:15"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6731:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"6743:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6728:2:15"},"nodeType":"YulFunctionCall","src":"6728:18:15"},"nodeType":"YulIf","src":"6725:49:15"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6816:11:15"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6833:8:15"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6861:3:15"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6843:17:15"},"nodeType":"YulFunctionCall","src":"6843:22:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6829:3:15"},"nodeType":"YulFunctionCall","src":"6829:37:15"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6787:28:15"},"nodeType":"YulFunctionCall","src":"6787:80:15"},"nodeType":"YulExpressionStatement","src":"6787:80:15"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6437:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6442:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6434:2:15"},"nodeType":"YulFunctionCall","src":"6434:11:15"},"nodeType":"YulIf","src":"6431:446:15"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6396:5:15","type":""},{"name":"len","nodeType":"YulTypedName","src":"6403:3:15","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6408:10:15","type":""}],"src":"6341:543:15"},{"body":{"nodeType":"YulBlock","src":"6953:54:15","statements":[{"nodeType":"YulAssignment","src":"6963:37:15","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6988:4:15"},{"name":"value","nodeType":"YulIdentifier","src":"6994:5:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6984:3:15"},"nodeType":"YulFunctionCall","src":"6984:16:15"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6963:8:15"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6928:4:15","type":""},{"name":"value","nodeType":"YulTypedName","src":"6934:5:15","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6944:8:15","type":""}],"src":"6890:117:15"},{"body":{"nodeType":"YulBlock","src":"7064:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7074:68:15","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7123:1:15","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"7126:5:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7119:3:15"},"nodeType":"YulFunctionCall","src":"7119:13:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7138:1:15","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7134:3:15"},"nodeType":"YulFunctionCall","src":"7134:6:15"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"7090:28:15"},"nodeType":"YulFunctionCall","src":"7090:51:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7086:3:15"},"nodeType":"YulFunctionCall","src":"7086:56:15"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7078:4:15","type":""}]},{"nodeType":"YulAssignment","src":"7151:25:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7165:4:15"},{"name":"mask","nodeType":"YulIdentifier","src":"7171:4:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7161:3:15"},"nodeType":"YulFunctionCall","src":"7161:15:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7151:6:15"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7041:4:15","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"7047:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7057:6:15","type":""}],"src":"7013:169:15"},{"body":{"nodeType":"YulBlock","src":"7268:214:15","statements":[{"nodeType":"YulAssignment","src":"7401:37:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7428:4:15"},{"name":"len","nodeType":"YulIdentifier","src":"7434:3:15"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7409:18:15"},"nodeType":"YulFunctionCall","src":"7409:29:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7401:4:15"}]},{"nodeType":"YulAssignment","src":"7447:29:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7458:4:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7468:1:15","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7471:3:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7464:3:15"},"nodeType":"YulFunctionCall","src":"7464:11:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7455:2:15"},"nodeType":"YulFunctionCall","src":"7455:21:15"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7447:4:15"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7249:4:15","type":""},{"name":"len","nodeType":"YulTypedName","src":"7255:3:15","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"7263:4:15","type":""}],"src":"7187:295:15"},{"body":{"nodeType":"YulBlock","src":"7579:1303:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7590:51:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7637:3:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7604:32:15"},"nodeType":"YulFunctionCall","src":"7604:37:15"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7594:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"7726:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7728:16:15"},"nodeType":"YulFunctionCall","src":"7728:18:15"},"nodeType":"YulExpressionStatement","src":"7728:18:15"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7698:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"7706:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7695:2:15"},"nodeType":"YulFunctionCall","src":"7695:30:15"},"nodeType":"YulIf","src":"7692:56:15"},{"nodeType":"YulVariableDeclaration","src":"7758:52:15","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7804:4:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7798:5:15"},"nodeType":"YulFunctionCall","src":"7798:11:15"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7772:25:15"},"nodeType":"YulFunctionCall","src":"7772:38:15"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7762:6:15","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7903:4:15"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7909:6:15"},{"name":"newLen","nodeType":"YulIdentifier","src":"7917:6:15"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7857:45:15"},"nodeType":"YulFunctionCall","src":"7857:67:15"},"nodeType":"YulExpressionStatement","src":"7857:67:15"},{"nodeType":"YulVariableDeclaration","src":"7934:18:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7951:1:15","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7938:9:15","type":""}]},{"nodeType":"YulAssignment","src":"7962:17:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7975:4:15","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7962:9:15"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8026:611:15","statements":[{"nodeType":"YulVariableDeclaration","src":"8040:37:15","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8059:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8071:4:15","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8067:3:15"},"nodeType":"YulFunctionCall","src":"8067:9:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8055:3:15"},"nodeType":"YulFunctionCall","src":"8055:22:15"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"8044:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8091:51:15","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8137:4:15"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8105:31:15"},"nodeType":"YulFunctionCall","src":"8105:37:15"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"8095:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8155:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"8164:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8159:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"8223:163:15","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8248:6:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8266:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8271:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8262:3:15"},"nodeType":"YulFunctionCall","src":"8262:19:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8256:5:15"},"nodeType":"YulFunctionCall","src":"8256:26:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8241:6:15"},"nodeType":"YulFunctionCall","src":"8241:42:15"},"nodeType":"YulExpressionStatement","src":"8241:42:15"},{"nodeType":"YulAssignment","src":"8300:24:15","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8314:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8322:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8310:3:15"},"nodeType":"YulFunctionCall","src":"8310:14:15"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8300:6:15"}]},{"nodeType":"YulAssignment","src":"8341:31:15","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8358:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8369:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8354:3:15"},"nodeType":"YulFunctionCall","src":"8354:18:15"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8341:9:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8189:1:15"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"8192:7:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8186:2:15"},"nodeType":"YulFunctionCall","src":"8186:14:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8201:21:15","statements":[{"nodeType":"YulAssignment","src":"8203:17:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8212:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"8215:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8208:3:15"},"nodeType":"YulFunctionCall","src":"8208:12:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8203:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"8182:3:15","statements":[]},"src":"8178:208:15"},{"body":{"nodeType":"YulBlock","src":"8422:156:15","statements":[{"nodeType":"YulVariableDeclaration","src":"8440:43:15","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8467:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8472:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8463:3:15"},"nodeType":"YulFunctionCall","src":"8463:19:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8457:5:15"},"nodeType":"YulFunctionCall","src":"8457:26:15"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8444:9:15","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8507:6:15"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8534:9:15"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8549:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8557:4:15","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8545:3:15"},"nodeType":"YulFunctionCall","src":"8545:17:15"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8515:18:15"},"nodeType":"YulFunctionCall","src":"8515:48:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8500:6:15"},"nodeType":"YulFunctionCall","src":"8500:64:15"},"nodeType":"YulExpressionStatement","src":"8500:64:15"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8405:7:15"},{"name":"newLen","nodeType":"YulIdentifier","src":"8414:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8402:2:15"},"nodeType":"YulFunctionCall","src":"8402:19:15"},"nodeType":"YulIf","src":"8399:179:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8598:4:15"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8612:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8620:1:15","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8608:3:15"},"nodeType":"YulFunctionCall","src":"8608:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"8624:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8604:3:15"},"nodeType":"YulFunctionCall","src":"8604:22:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8591:6:15"},"nodeType":"YulFunctionCall","src":"8591:36:15"},"nodeType":"YulExpressionStatement","src":"8591:36:15"}]},"nodeType":"YulCase","src":"8019:618:15","value":{"kind":"number","nodeType":"YulLiteral","src":"8024:1:15","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8654:222:15","statements":[{"nodeType":"YulVariableDeclaration","src":"8668:14:15","value":{"kind":"number","nodeType":"YulLiteral","src":"8681:1:15","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8672:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"8705:67:15","statements":[{"nodeType":"YulAssignment","src":"8723:35:15","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8742:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8747:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8738:3:15"},"nodeType":"YulFunctionCall","src":"8738:19:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8732:5:15"},"nodeType":"YulFunctionCall","src":"8732:26:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8723:5:15"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8698:6:15"},"nodeType":"YulIf","src":"8695:77:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8792:4:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8851:5:15"},{"name":"newLen","nodeType":"YulIdentifier","src":"8858:6:15"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8798:52:15"},"nodeType":"YulFunctionCall","src":"8798:67:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8785:6:15"},"nodeType":"YulFunctionCall","src":"8785:81:15"},"nodeType":"YulExpressionStatement","src":"8785:81:15"}]},"nodeType":"YulCase","src":"8646:230:15","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7999:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8007:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7996:2:15"},"nodeType":"YulFunctionCall","src":"7996:14:15"},"nodeType":"YulSwitch","src":"7989:887:15"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7568:4:15","type":""},{"name":"src","nodeType":"YulTypedName","src":"7574:3:15","type":""}],"src":"7487:1395:15"},{"body":{"nodeType":"YulBlock","src":"8916:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8933:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8936:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8926:6:15"},"nodeType":"YulFunctionCall","src":"8926:88:15"},"nodeType":"YulExpressionStatement","src":"8926:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9030:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9033:4:15","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9023:6:15"},"nodeType":"YulFunctionCall","src":"9023:15:15"},"nodeType":"YulExpressionStatement","src":"9023:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9054:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9057:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9047:6:15"},"nodeType":"YulFunctionCall","src":"9047:15:15"},"nodeType":"YulExpressionStatement","src":"9047:15:15"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"8888:180:15"},{"body":{"nodeType":"YulBlock","src":"9102:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9119:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9122:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9112:6:15"},"nodeType":"YulFunctionCall","src":"9112:88:15"},"nodeType":"YulExpressionStatement","src":"9112:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9216:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9219:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9209:6:15"},"nodeType":"YulFunctionCall","src":"9209:15:15"},"nodeType":"YulExpressionStatement","src":"9209:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9240:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9243:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9233:6:15"},"nodeType":"YulFunctionCall","src":"9233:15:15"},"nodeType":"YulExpressionStatement","src":"9233:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9074:180:15"},{"body":{"nodeType":"YulBlock","src":"9303:190:15","statements":[{"nodeType":"YulAssignment","src":"9313:33:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9340:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9322:17:15"},"nodeType":"YulFunctionCall","src":"9322:24:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9313:5:15"}]},{"body":{"nodeType":"YulBlock","src":"9436:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9438:16:15"},"nodeType":"YulFunctionCall","src":"9438:18:15"},"nodeType":"YulExpressionStatement","src":"9438:18:15"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9361:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"9368:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9358:2:15"},"nodeType":"YulFunctionCall","src":"9358:77:15"},"nodeType":"YulIf","src":"9355:103:15"},{"nodeType":"YulAssignment","src":"9467:20:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9478:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"9485:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9474:3:15"},"nodeType":"YulFunctionCall","src":"9474:13:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9467:3:15"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9289:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9299:3:15","type":""}],"src":"9260:233:15"},{"body":{"nodeType":"YulBlock","src":"9612:34:15","statements":[{"nodeType":"YulAssignment","src":"9622:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"9637:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9622:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9584:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"9589:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9600:11:15","type":""}],"src":"9499:147:15"},{"body":{"nodeType":"YulBlock","src":"9709:87:15","statements":[{"nodeType":"YulAssignment","src":"9719:11:15","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9727:3:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9719:4:15"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9747:1:15","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"9750:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9740:6:15"},"nodeType":"YulFunctionCall","src":"9740:14:15"},"nodeType":"YulExpressionStatement","src":"9740:14:15"},{"nodeType":"YulAssignment","src":"9763:26:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9781:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9784:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9771:9:15"},"nodeType":"YulFunctionCall","src":"9771:18:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9763:4:15"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9696:3:15","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9704:4:15","type":""}],"src":"9652:144:15"},{"body":{"nodeType":"YulBlock","src":"9933:769:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9943:29:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9966:5:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9960:5:15"},"nodeType":"YulFunctionCall","src":"9960:12:15"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"9947:9:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9981:50:15","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10021:9:15"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"9995:25:15"},"nodeType":"YulFunctionCall","src":"9995:36:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9985:6:15","type":""}]},{"nodeType":"YulAssignment","src":"10040:95:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10123:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"10128:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10047:75:15"},"nodeType":"YulFunctionCall","src":"10047:88:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10040:3:15"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"10184:159:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10237:3:15"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10246:9:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10261:4:15","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10257:3:15"},"nodeType":"YulFunctionCall","src":"10257:9:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10242:3:15"},"nodeType":"YulFunctionCall","src":"10242:25:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10230:6:15"},"nodeType":"YulFunctionCall","src":"10230:38:15"},"nodeType":"YulExpressionStatement","src":"10230:38:15"},{"nodeType":"YulAssignment","src":"10281:52:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10292:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10301:6:15"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10323:6:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10316:6:15"},"nodeType":"YulFunctionCall","src":"10316:14:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10309:6:15"},"nodeType":"YulFunctionCall","src":"10309:22:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10297:3:15"},"nodeType":"YulFunctionCall","src":"10297:35:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10288:3:15"},"nodeType":"YulFunctionCall","src":"10288:45:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10281:3:15"}]}]},"nodeType":"YulCase","src":"10177:166:15","value":{"kind":"number","nodeType":"YulLiteral","src":"10182:1:15","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"10359:337:15","statements":[{"nodeType":"YulVariableDeclaration","src":"10404:56:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10454:5:15"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"10419:34:15"},"nodeType":"YulFunctionCall","src":"10419:41:15"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"10408:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10473:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"10482:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10477:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"10540:110:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10569:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"10574:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10565:3:15"},"nodeType":"YulFunctionCall","src":"10565:11:15"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"10584:7:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"10578:5:15"},"nodeType":"YulFunctionCall","src":"10578:14:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10558:6:15"},"nodeType":"YulFunctionCall","src":"10558:35:15"},"nodeType":"YulExpressionStatement","src":"10558:35:15"},{"nodeType":"YulAssignment","src":"10610:26:15","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"10625:7:15"},{"kind":"number","nodeType":"YulLiteral","src":"10634:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10621:3:15"},"nodeType":"YulFunctionCall","src":"10621:15:15"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"10610:7:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10507:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"10510:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10504:2:15"},"nodeType":"YulFunctionCall","src":"10504:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10518:21:15","statements":[{"nodeType":"YulAssignment","src":"10520:17:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10529:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"10532:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10525:3:15"},"nodeType":"YulFunctionCall","src":"10525:12:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10520:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"10500:3:15","statements":[]},"src":"10496:154:15"},{"nodeType":"YulAssignment","src":"10663:23:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10674:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"10679:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10670:3:15"},"nodeType":"YulFunctionCall","src":"10670:16:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10663:3:15"}]}]},"nodeType":"YulCase","src":"10352:344:15","value":{"kind":"number","nodeType":"YulLiteral","src":"10357:1:15","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10155:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10166:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10151:3:15"},"nodeType":"YulFunctionCall","src":"10151:17:15"},"nodeType":"YulSwitch","src":"10144:552:15"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9914:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9921:3:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9929:3:15","type":""}],"src":"9824:878:15"},{"body":{"nodeType":"YulBlock","src":"10843:138:15","statements":[{"nodeType":"YulAssignment","src":"10854:101:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10942:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"10951:3:15"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10861:80:15"},"nodeType":"YulFunctionCall","src":"10861:94:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10854:3:15"}]},{"nodeType":"YulAssignment","src":"10965:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"10972:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10965:3:15"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10822:3:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10828:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10839:3:15","type":""}],"src":"10708:273:15"},{"body":{"nodeType":"YulBlock","src":"11032:32:15","statements":[{"nodeType":"YulAssignment","src":"11042:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"11053:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11042:7:15"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11014:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11024:7:15","type":""}],"src":"10987:77:15"},{"body":{"nodeType":"YulBlock","src":"11135:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11152:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11175:5:15"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"11157:17:15"},"nodeType":"YulFunctionCall","src":"11157:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11145:6:15"},"nodeType":"YulFunctionCall","src":"11145:37:15"},"nodeType":"YulExpressionStatement","src":"11145:37:15"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11123:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11130:3:15","type":""}],"src":"11070:118:15"},{"body":{"nodeType":"YulBlock","src":"11259:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11276:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11299:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11281:17:15"},"nodeType":"YulFunctionCall","src":"11281:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11269:6:15"},"nodeType":"YulFunctionCall","src":"11269:37:15"},"nodeType":"YulExpressionStatement","src":"11269:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11247:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11254:3:15","type":""}],"src":"11194:118:15"},{"body":{"nodeType":"YulBlock","src":"11383:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11400:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11423:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11405:17:15"},"nodeType":"YulFunctionCall","src":"11405:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11393:6:15"},"nodeType":"YulFunctionCall","src":"11393:37:15"},"nodeType":"YulExpressionStatement","src":"11393:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11371:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11378:3:15","type":""}],"src":"11318:118:15"},{"body":{"nodeType":"YulBlock","src":"11652:454:15","statements":[{"nodeType":"YulAssignment","src":"11662:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11674:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11685:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11670:3:15"},"nodeType":"YulFunctionCall","src":"11670:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11662:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11743:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11756:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11767:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11752:3:15"},"nodeType":"YulFunctionCall","src":"11752:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11699:43:15"},"nodeType":"YulFunctionCall","src":"11699:71:15"},"nodeType":"YulExpressionStatement","src":"11699:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11824:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11837:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11848:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11833:3:15"},"nodeType":"YulFunctionCall","src":"11833:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11780:43:15"},"nodeType":"YulFunctionCall","src":"11780:72:15"},"nodeType":"YulExpressionStatement","src":"11780:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11906:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11919:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11930:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11915:3:15"},"nodeType":"YulFunctionCall","src":"11915:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11862:43:15"},"nodeType":"YulFunctionCall","src":"11862:72:15"},"nodeType":"YulExpressionStatement","src":"11862:72:15"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11988:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12001:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12012:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11997:3:15"},"nodeType":"YulFunctionCall","src":"11997:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11944:43:15"},"nodeType":"YulFunctionCall","src":"11944:72:15"},"nodeType":"YulExpressionStatement","src":"11944:72:15"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12070:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12083:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12094:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12079:3:15"},"nodeType":"YulFunctionCall","src":"12079:19:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12026:43:15"},"nodeType":"YulFunctionCall","src":"12026:73:15"},"nodeType":"YulExpressionStatement","src":"12026:73:15"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11592:9:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11604:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11612:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11620:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11628:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11636:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11647:4:15","type":""}],"src":"11442:664:15"},{"body":{"nodeType":"YulBlock","src":"12156:147:15","statements":[{"nodeType":"YulAssignment","src":"12166:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12189:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12171:17:15"},"nodeType":"YulFunctionCall","src":"12171:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12166:1:15"}]},{"nodeType":"YulAssignment","src":"12200:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12223:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12205:17:15"},"nodeType":"YulFunctionCall","src":"12205:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12200:1:15"}]},{"nodeType":"YulAssignment","src":"12234:16:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12245:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"12248:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12241:3:15"},"nodeType":"YulFunctionCall","src":"12241:9:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12234:3:15"}]},{"body":{"nodeType":"YulBlock","src":"12274:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12276:16:15"},"nodeType":"YulFunctionCall","src":"12276:18:15"},"nodeType":"YulExpressionStatement","src":"12276:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12266:1:15"},{"name":"sum","nodeType":"YulIdentifier","src":"12269:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12263:2:15"},"nodeType":"YulFunctionCall","src":"12263:10:15"},"nodeType":"YulIf","src":"12260:36:15"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12143:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"12146:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12152:3:15","type":""}],"src":"12112:191:15"},{"body":{"nodeType":"YulBlock","src":"12407:124:15","statements":[{"nodeType":"YulAssignment","src":"12417:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12429:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12440:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12425:3:15"},"nodeType":"YulFunctionCall","src":"12425:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12417:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12497:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12510:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12521:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12506:3:15"},"nodeType":"YulFunctionCall","src":"12506:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12453:43:15"},"nodeType":"YulFunctionCall","src":"12453:71:15"},"nodeType":"YulExpressionStatement","src":"12453:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12379:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12391:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12402:4:15","type":""}],"src":"12309:222:15"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e06040523480156200001157600080fd5b5060405162001f7738038062001f778339818101604052810190620000379190620004b5565b6040518060400160405280600481526020017f55534443000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f555344430000000000000000000000000000000000000000000000000000000081525060128260009081620000b6919062000751565b508160019081620000c8919062000751565b508060ff1660808160ff16815250504660a08181525050620000ef6200016360201b60201c565b60c0818152505050505060008151905060005b818110156200015a576200014483828151811062000125576200012462000838565b5b602002602001015169152d02c7e14af6800000620001f360201b60201c565b8080620001519062000896565b91505062000102565b50505062000a9d565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405162000197919062000992565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001620001d8959493929190620009e8565b60405160208183030381529060405280519060200120905090565b806002600082825462000207919062000a45565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002bb919062000a80565b60405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200032b82620002e0565b810181811067ffffffffffffffff821117156200034d576200034c620002f1565b5b80604052505050565b600062000362620002c7565b905062000370828262000320565b919050565b600067ffffffffffffffff821115620003935762000392620002f1565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003d682620003a9565b9050919050565b620003e881620003c9565b8114620003f457600080fd5b50565b6000815190506200040881620003dd565b92915050565b6000620004256200041f8462000375565b62000356565b905080838252602082019050602084028301858111156200044b576200044a620003a4565b5b835b81811015620004785780620004638882620003f7565b8452602084019350506020810190506200044d565b5050509392505050565b600082601f8301126200049a5762000499620002db565b5b8151620004ac8482602086016200040e565b91505092915050565b600060208284031215620004ce57620004cd620002d1565b5b600082015167ffffffffffffffff811115620004ef57620004ee620002d6565b5b620004fd8482850162000482565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200055957607f821691505b6020821081036200056f576200056e62000511565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005d97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200059a565b620005e586836200059a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620006326200062c6200062684620005fd565b62000607565b620005fd565b9050919050565b6000819050919050565b6200064e8362000611565b620006666200065d8262000639565b848454620005a7565b825550505050565b600090565b6200067d6200066e565b6200068a81848462000643565b505050565b5b81811015620006b257620006a660008262000673565b60018101905062000690565b5050565b601f8211156200070157620006cb8162000575565b620006d6846200058a565b81016020851015620006e6578190505b620006fe620006f5856200058a565b8301826200068f565b50505b505050565b600082821c905092915050565b6000620007266000198460080262000706565b1980831691505092915050565b600062000741838362000713565b9150826002028217905092915050565b6200075c8262000506565b67ffffffffffffffff811115620007785762000777620002f1565b5b62000784825462000540565b62000791828285620006b6565b600060209050601f831160018114620007c95760008415620007b4578287015190505b620007c0858262000733565b86555062000830565b601f198416620007d98662000575565b60005b828110156200080357848901518255600182019150602085019450602081019050620007dc565b868310156200082357848901516200081f601f89168262000713565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620008a382620005fd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620008d857620008d762000867565b5b600182019050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154620009128162000540565b6200091e8186620008e3565b945060018216600081146200093c5760018114620009525762000989565b60ff198316865281151582028601935062000989565b6200095d85620008ee565b60005b83811015620009815781548189015260018201915060208101905062000960565b838801955050505b50505092915050565b6000620009a0828462000903565b915081905092915050565b6000819050919050565b620009c081620009ab565b82525050565b620009d181620005fd565b82525050565b620009e281620003c9565b82525050565b600060a082019050620009ff6000830188620009b5565b62000a0e6020830187620009b5565b62000a1d6040830186620009b5565b62000a2c6060830185620009c6565b62000a3b6080830184620009d7565b9695505050505050565b600062000a5282620005fd565b915062000a5f83620005fd565b925082820190508082111562000a7a5762000a7962000867565b5b92915050565b600060208201905062000a976000830184620009c6565b92915050565b60805160a05160c0516114aa62000acd60003960006106b7015260006106830152600061065d01526114aa6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101915780637ecebe00146101c157806395d89b41146101f1578063a9059cbb1461020f578063d505accf1461023f578063dd62ed3e1461025b576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633644e51514610173575b600080fd5b6100c161028b565b6040516100ce9190610ce8565b60405180910390f35b6100f160048036038101906100ec9190610da3565b610319565b6040516100fe9190610dfe565b60405180910390f35b61010f61040b565b60405161011c9190610e28565b60405180910390f35b61013f600480360381019061013a9190610e43565b610411565b60405161014c9190610dfe565b60405180910390f35b61015d61065b565b60405161016a9190610eb2565b60405180910390f35b61017b61067f565b6040516101889190610ee6565b60405180910390f35b6101ab60048036038101906101a69190610f01565b6106dc565b6040516101b89190610e28565b60405180910390f35b6101db60048036038101906101d69190610f01565b6106f4565b6040516101e89190610e28565b60405180910390f35b6101f961070c565b6040516102069190610ce8565b60405180910390f35b61022960048036038101906102249190610da3565b61079a565b6040516102369190610dfe565b60405180910390f35b61025960048036038101906102549190610f86565b6108ae565b005b61027560048036038101906102709190611028565b610ba7565b6040516102829190610e28565b60405180910390f35b6000805461029890611097565b80601f01602080910402602001604051908101604052809291908181526020018280546102c490611097565b80156103115780601f106102e657610100808354040283529160200191610311565b820191906000526020600020905b8154815290600101906020018083116102f457829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103f99190610e28565b60405180910390a36001905092915050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105475782816104c691906110f7565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461059691906110f7565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516106479190610e28565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146106b5576106b0610bcc565b6106d7565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6001805461071990611097565b80601f016020809104026020016040519081016040528092919081815260200182805461074590611097565b80156107925780601f1061076757610100808354040283529160200191610792565b820191906000526020600020905b81548152906001019060200180831161077557829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107eb91906110f7565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089c9190610e28565b60405180910390a36001905092915050565b428410156108f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e890611177565b60405180910390fd5b600060016108fd61067f565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b604051602001610985969594939291906111a6565b604051602081830303815290604052805190602001206040516020016109ac92919061127f565b60405160208183030381529060405280519060200120858585604051600081526020016040526040516109e294939291906112b6565b6020604051602081039080840390855afa158015610a04573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610a7857508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae90611347565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610b969190610e28565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610bfe919061140a565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001610c3d959493929190611421565b60405160208183030381529060405280519060200120905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c92578082015181840152602081019050610c77565b60008484015250505050565b6000601f19601f8301169050919050565b6000610cba82610c58565b610cc48185610c63565b9350610cd4818560208601610c74565b610cdd81610c9e565b840191505092915050565b60006020820190508181036000830152610d028184610caf565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d3a82610d0f565b9050919050565b610d4a81610d2f565b8114610d5557600080fd5b50565b600081359050610d6781610d41565b92915050565b6000819050919050565b610d8081610d6d565b8114610d8b57600080fd5b50565b600081359050610d9d81610d77565b92915050565b60008060408385031215610dba57610db9610d0a565b5b6000610dc885828601610d58565b9250506020610dd985828601610d8e565b9150509250929050565b60008115159050919050565b610df881610de3565b82525050565b6000602082019050610e136000830184610def565b92915050565b610e2281610d6d565b82525050565b6000602082019050610e3d6000830184610e19565b92915050565b600080600060608486031215610e5c57610e5b610d0a565b5b6000610e6a86828701610d58565b9350506020610e7b86828701610d58565b9250506040610e8c86828701610d8e565b9150509250925092565b600060ff82169050919050565b610eac81610e96565b82525050565b6000602082019050610ec76000830184610ea3565b92915050565b6000819050919050565b610ee081610ecd565b82525050565b6000602082019050610efb6000830184610ed7565b92915050565b600060208284031215610f1757610f16610d0a565b5b6000610f2584828501610d58565b91505092915050565b610f3781610e96565b8114610f4257600080fd5b50565b600081359050610f5481610f2e565b92915050565b610f6381610ecd565b8114610f6e57600080fd5b50565b600081359050610f8081610f5a565b92915050565b600080600080600080600060e0888a031215610fa557610fa4610d0a565b5b6000610fb38a828b01610d58565b9750506020610fc48a828b01610d58565b9650506040610fd58a828b01610d8e565b9550506060610fe68a828b01610d8e565b9450506080610ff78a828b01610f45565b93505060a06110088a828b01610f71565b92505060c06110198a828b01610f71565b91505092959891949750929550565b6000806040838503121561103f5761103e610d0a565b5b600061104d85828601610d58565b925050602061105e85828601610d58565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110af57607f821691505b6020821081036110c2576110c1611068565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061110282610d6d565b915061110d83610d6d565b9250828203905081811115611125576111246110c8565b5b92915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b6000611161601783610c63565b915061116c8261112b565b602082019050919050565b6000602082019050818103600083015261119081611154565b9050919050565b6111a081610d2f565b82525050565b600060c0820190506111bb6000830189610ed7565b6111c86020830188611197565b6111d56040830187611197565b6111e26060830186610e19565b6111ef6080830185610e19565b6111fc60a0830184610e19565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611248600283611207565b915061125382611212565b600282019050919050565b6000819050919050565b61127961127482610ecd565b61125e565b82525050565b600061128a8261123b565b91506112968285611268565b6020820191506112a68284611268565b6020820191508190509392505050565b60006080820190506112cb6000830187610ed7565b6112d86020830186610ea3565b6112e56040830185610ed7565b6112f26060830184610ed7565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000611331600e83610c63565b915061133c826112fb565b602082019050919050565b6000602082019050818103600083015261136081611324565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461139481611097565b61139e8186611367565b945060018216600081146113b957600181146113ce57611401565b60ff1983168652811515820286019350611401565b6113d785611372565b60005b838110156113f9578154818901526001820191506020810190506113da565b838801955050505b50505092915050565b60006114168284611387565b915081905092915050565b600060a0820190506114366000830188610ed7565b6114436020830187610ed7565b6114506040830186610ed7565b61145d6060830185610e19565b61146a6080830184611197565b969550505050505056fea2646970667358221220721af9bf73f5221756cd1ef00c3a223c59029166084d28a949ca13424b59b00864736f6c63430008110033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F77 CODESIZE SUB DUP1 PUSH3 0x1F77 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553444300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553444300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x12 DUP3 PUSH1 0x0 SWAP1 DUP2 PUSH3 0xB6 SWAP2 SWAP1 PUSH3 0x751 JUMP JUMPDEST POP DUP2 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC8 SWAP2 SWAP1 PUSH3 0x751 JUMP JUMPDEST POP DUP1 PUSH1 0xFF AND PUSH1 0x80 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0xEF PUSH3 0x163 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP POP POP POP PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x15A JUMPI PUSH3 0x144 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x125 JUMPI PUSH3 0x124 PUSH3 0x838 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH10 0x152D02C7E14AF6800000 PUSH3 0x1F3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 DUP1 PUSH3 0x151 SWAP1 PUSH3 0x896 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x102 JUMP JUMPDEST POP POP POP PUSH3 0xA9D JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH3 0x197 SWAP2 SWAP1 PUSH3 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1D8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x207 SWAP2 SWAP1 PUSH3 0xA45 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x2BB SWAP2 SWAP1 PUSH3 0xA80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x32B DUP3 PUSH3 0x2E0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x34D JUMPI PUSH3 0x34C PUSH3 0x2F1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x362 PUSH3 0x2C7 JUMP JUMPDEST SWAP1 POP PUSH3 0x370 DUP3 DUP3 PUSH3 0x320 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x393 JUMPI PUSH3 0x392 PUSH3 0x2F1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3D6 DUP3 PUSH3 0x3A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3E8 DUP2 PUSH3 0x3C9 JUMP JUMPDEST DUP2 EQ PUSH3 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x408 DUP2 PUSH3 0x3DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x425 PUSH3 0x41F DUP5 PUSH3 0x375 JUMP JUMPDEST PUSH3 0x356 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x44B JUMPI PUSH3 0x44A PUSH3 0x3A4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x478 JUMPI DUP1 PUSH3 0x463 DUP9 DUP3 PUSH3 0x3F7 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x44D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x49A JUMPI PUSH3 0x499 PUSH3 0x2DB JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x4AC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x40E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x4CE JUMPI PUSH3 0x4CD PUSH3 0x2D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4EF JUMPI PUSH3 0x4EE PUSH3 0x2D6 JUMP JUMPDEST JUMPDEST PUSH3 0x4FD DUP5 DUP3 DUP6 ADD PUSH3 0x482 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x559 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x56F JUMPI PUSH3 0x56E PUSH3 0x511 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x5D9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x59A JUMP JUMPDEST PUSH3 0x5E5 DUP7 DUP4 PUSH3 0x59A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x632 PUSH3 0x62C PUSH3 0x626 DUP5 PUSH3 0x5FD JUMP JUMPDEST PUSH3 0x607 JUMP JUMPDEST PUSH3 0x5FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x64E DUP4 PUSH3 0x611 JUMP JUMPDEST PUSH3 0x666 PUSH3 0x65D DUP3 PUSH3 0x639 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x5A7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x67D PUSH3 0x66E JUMP JUMPDEST PUSH3 0x68A DUP2 DUP5 DUP5 PUSH3 0x643 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x6B2 JUMPI PUSH3 0x6A6 PUSH1 0x0 DUP3 PUSH3 0x673 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x690 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x701 JUMPI PUSH3 0x6CB DUP2 PUSH3 0x575 JUMP JUMPDEST PUSH3 0x6D6 DUP5 PUSH3 0x58A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x6E6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x6FE PUSH3 0x6F5 DUP6 PUSH3 0x58A JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x68F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x726 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x706 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x741 DUP4 DUP4 PUSH3 0x713 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x75C DUP3 PUSH3 0x506 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x778 JUMPI PUSH3 0x777 PUSH3 0x2F1 JUMP JUMPDEST JUMPDEST PUSH3 0x784 DUP3 SLOAD PUSH3 0x540 JUMP JUMPDEST PUSH3 0x791 DUP3 DUP3 DUP6 PUSH3 0x6B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x7C9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x7B4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x7C0 DUP6 DUP3 PUSH3 0x733 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x830 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x7D9 DUP7 PUSH3 0x575 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x803 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x7DC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x823 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x81F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x713 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x8A3 DUP3 PUSH3 0x5FD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x8D8 JUMPI PUSH3 0x8D7 PUSH3 0x867 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH3 0x912 DUP2 PUSH3 0x540 JUMP JUMPDEST PUSH3 0x91E DUP2 DUP7 PUSH3 0x8E3 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH3 0x93C JUMPI PUSH1 0x1 DUP2 EQ PUSH3 0x952 JUMPI PUSH3 0x989 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH3 0x989 JUMP JUMPDEST PUSH3 0x95D DUP6 PUSH3 0x8EE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x981 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x960 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9A0 DUP3 DUP5 PUSH3 0x903 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x9C0 DUP2 PUSH3 0x9AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x9D1 DUP2 PUSH3 0x5FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x9E2 DUP2 PUSH3 0x3C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x9FF PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x9B5 JUMP JUMPDEST PUSH3 0xA0E PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x9B5 JUMP JUMPDEST PUSH3 0xA1D PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x9B5 JUMP JUMPDEST PUSH3 0xA2C PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x9C6 JUMP JUMPDEST PUSH3 0xA3B PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x9D7 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA52 DUP3 PUSH3 0x5FD JUMP JUMPDEST SWAP2 POP PUSH3 0xA5F DUP4 PUSH3 0x5FD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xA7A JUMPI PUSH3 0xA79 PUSH3 0x867 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA97 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x9C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x14AA PUSH3 0xACD PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x6B7 ADD MSTORE PUSH1 0x0 PUSH2 0x683 ADD MSTORE PUSH1 0x0 PUSH2 0x65D ADD MSTORE PUSH2 0x14AA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x25B JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x298 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C4 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x311 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x311 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x547 JUMPI DUP3 DUP2 PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0x647 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0x6B5 JUMPI PUSH2 0x6B0 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x719 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x745 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x792 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x767 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x792 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x775 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x89C SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E8 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x8FD PUSH2 0x67F JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP11 DUP11 DUP11 PUSH1 0x5 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x985 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9AC SWAP3 SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x9E2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xAB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAE SWAP1 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x140A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC3D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC92 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP3 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xCC4 DUP2 DUP6 PUSH2 0xC63 JUMP JUMPDEST SWAP4 POP PUSH2 0xCD4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC74 JUMP JUMPDEST PUSH2 0xCDD DUP2 PUSH2 0xC9E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD02 DUP2 DUP5 PUSH2 0xCAF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3A DUP3 PUSH2 0xD0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4A DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP2 EQ PUSH2 0xD55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD67 DUP2 PUSH2 0xD41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD80 DUP2 PUSH2 0xD6D JUMP JUMPDEST DUP2 EQ PUSH2 0xD8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9D DUP2 PUSH2 0xD77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDBA JUMPI PUSH2 0xDB9 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDC8 DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDD9 DUP6 DUP3 DUP7 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF8 DUP2 PUSH2 0xDE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE22 DUP2 PUSH2 0xD6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE3D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH2 0xE5B PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE6A DUP7 DUP3 DUP8 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE7B DUP7 DUP3 DUP8 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE8C DUP7 DUP3 DUP8 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAC DUP2 PUSH2 0xE96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE0 DUP2 PUSH2 0xECD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEFB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xED7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF17 JUMPI PUSH2 0xF16 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF25 DUP5 DUP3 DUP6 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF37 DUP2 PUSH2 0xE96 JUMP JUMPDEST DUP2 EQ PUSH2 0xF42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF54 DUP2 PUSH2 0xF2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF63 DUP2 PUSH2 0xECD JUMP JUMPDEST DUP2 EQ PUSH2 0xF6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF80 DUP2 PUSH2 0xF5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xFA5 JUMPI PUSH2 0xFA4 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB3 DUP11 DUP3 DUP12 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xFC4 DUP11 DUP3 DUP12 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0xFD5 DUP11 DUP3 DUP12 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xFE6 DUP11 DUP3 DUP12 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xFF7 DUP11 DUP3 DUP12 ADD PUSH2 0xF45 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1008 DUP11 DUP3 DUP12 ADD PUSH2 0xF71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1019 DUP11 DUP3 DUP12 ADD PUSH2 0xF71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x103F JUMPI PUSH2 0x103E PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x104D DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x105E DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10AF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C2 JUMPI PUSH2 0x10C1 PUSH2 0x1068 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1102 DUP3 PUSH2 0xD6D JUMP JUMPDEST SWAP2 POP PUSH2 0x110D DUP4 PUSH2 0xD6D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1125 JUMPI PUSH2 0x1124 PUSH2 0x10C8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5045524D49545F444541444C494E455F45585049524544000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 PUSH1 0x17 DUP4 PUSH2 0xC63 JUMP JUMPDEST SWAP2 POP PUSH2 0x116C DUP3 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1190 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A0 DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x11BB PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x11C8 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x11D5 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x11E2 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x11EF PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x11FC PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xE19 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1248 PUSH1 0x2 DUP4 PUSH2 0x1207 JUMP JUMPDEST SWAP2 POP PUSH2 0x1253 DUP3 PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1279 PUSH2 0x1274 DUP3 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x125E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128A DUP3 PUSH2 0x123B JUMP JUMPDEST SWAP2 POP PUSH2 0x1296 DUP3 DUP6 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x12A6 DUP3 DUP5 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x12CB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x12D8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x12E5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x12F2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xED7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x494E56414C49445F5349474E4552000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1331 PUSH1 0xE DUP4 PUSH2 0xC63 JUMP JUMPDEST SWAP2 POP PUSH2 0x133C DUP3 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1360 DUP2 PUSH2 0x1324 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1394 DUP2 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x139E DUP2 DUP7 PUSH2 0x1367 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x13B9 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x13CE JUMPI PUSH2 0x1401 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x1401 JUMP JUMPDEST PUSH2 0x13D7 DUP6 PUSH2 0x1372 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13F9 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13DA JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1416 DUP3 DUP5 PUSH2 0x1387 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1436 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x1443 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x1450 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x145D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x146A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1197 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x1AF9BF73F5221756CD1EF00C3A223C59029166 ADDMOD 0x4D 0x28 0xA9 0x49 0xCA SGT TIMESTAMP 0x4B MSIZE 0xB0 ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"102:265:4:-:0;;;131:234;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1981:292:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;192:2:4;2101:5:10;2094:4;:12;;;;;;:::i;:::-;;2125:7;2116:6;:16;;;;;;:::i;:::-;;2153:9;2142:20;;;;;;;;;;2192:13;2173:32;;;;;;2242:24;:22;;;:24;;:::i;:::-;2215:51;;;;;;1981:292;;;206:21:4::1;230:8;:15;206:39;;261:9;256:103;280:13;276:1;:17;256:103;;;314:34;320:8;329:1;320:11;;;;;;;;:::i;:::-;;;;;;;;333:14;314:5;;;:34;;:::i;:::-;295:3;;;;;:::i;:::-;;;;256:103;;;;196:169;131:234:::0;102:265;;5510:446:10;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;5833:14;5869:13;5912:4;5640:295;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;6150:325::-;6235:6;6220:11;;:21;;;;;;;:::i;:::-;;;;;;;;6404:6;6387:9;:13;6397:2;6387:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;6457:2;6436:32;;6453:1;6436:32;;;6461:6;6436:32;;;;;;:::i;:::-;;;;;;;;6150:325;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:126;1650:7;1690:42;1683:5;1679:54;1668:65;;1613:126;;;:::o;1745:96::-;1782:7;1811:24;1829:5;1811:24;:::i;:::-;1800:35;;1745:96;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:143::-;2032:5;2063:6;2057:13;2048:22;;2079:33;2106:5;2079:33;:::i;:::-;1975:143;;;;:::o;2141:732::-;2248:5;2273:81;2289:64;2346:6;2289:64;:::i;:::-;2273:81;:::i;:::-;2264:90;;2374:5;2403:6;2396:5;2389:21;2437:4;2430:5;2426:16;2419:23;;2490:4;2482:6;2478:17;2470:6;2466:30;2519:3;2511:6;2508:15;2505:122;;;2538:79;;:::i;:::-;2505:122;2653:6;2636:231;2670:6;2665:3;2662:15;2636:231;;;2745:3;2774:48;2818:3;2806:10;2774:48;:::i;:::-;2769:3;2762:61;2852:4;2847:3;2843:14;2836:21;;2712:155;2696:4;2691:3;2687:14;2680:21;;2636:231;;;2640:21;2254:619;;2141:732;;;;;:::o;2896:385::-;2978:5;3027:3;3020:4;3012:6;3008:17;3004:27;2994:122;;3035:79;;:::i;:::-;2994:122;3145:6;3139:13;3170:105;3271:3;3263:6;3256:4;3248:6;3244:17;3170:105;:::i;:::-;3161:114;;2984:297;2896:385;;;;:::o;3287:554::-;3382:6;3431:2;3419:9;3410:7;3406:23;3402:32;3399:119;;;3437:79;;:::i;:::-;3399:119;3578:1;3567:9;3563:17;3557:24;3608:18;3600:6;3597:30;3594:117;;;3630:79;;:::i;:::-;3594:117;3735:89;3816:7;3807:6;3796:9;3792:22;3735:89;:::i;:::-;3725:99;;3528:306;3287:554;;;;:::o;3847:99::-;3899:6;3933:5;3927:12;3917:22;;3847:99;;;:::o;3952:180::-;4000:77;3997:1;3990:88;4097:4;4094:1;4087:15;4121:4;4118:1;4111:15;4138:320;4182:6;4219:1;4213:4;4209:12;4199:22;;4266:1;4260:4;4256:12;4287:18;4277:81;;4343:4;4335:6;4331:17;4321:27;;4277:81;4405:2;4397:6;4394:14;4374:18;4371:38;4368:84;;4424:18;;:::i;:::-;4368:84;4189:269;4138:320;;;:::o;4464:141::-;4513:4;4536:3;4528:11;;4559:3;4556:1;4549:14;4593:4;4590:1;4580:18;4572:26;;4464:141;;;:::o;4611:93::-;4648:6;4695:2;4690;4683:5;4679:14;4675:23;4665:33;;4611:93;;;:::o;4710:107::-;4754:8;4804:5;4798:4;4794:16;4773:37;;4710:107;;;;:::o;4823:393::-;4892:6;4942:1;4930:10;4926:18;4965:97;4995:66;4984:9;4965:97;:::i;:::-;5083:39;5113:8;5102:9;5083:39;:::i;:::-;5071:51;;5155:4;5151:9;5144:5;5140:21;5131:30;;5204:4;5194:8;5190:19;5183:5;5180:30;5170:40;;4899:317;;4823:393;;;;;:::o;5222:77::-;5259:7;5288:5;5277:16;;5222:77;;;:::o;5305:60::-;5333:3;5354:5;5347:12;;5305:60;;;:::o;5371:142::-;5421:9;5454:53;5472:34;5481:24;5499:5;5481:24;:::i;:::-;5472:34;:::i;:::-;5454:53;:::i;:::-;5441:66;;5371:142;;;:::o;5519:75::-;5562:3;5583:5;5576:12;;5519:75;;;:::o;5600:269::-;5710:39;5741:7;5710:39;:::i;:::-;5771:91;5820:41;5844:16;5820:41;:::i;:::-;5812:6;5805:4;5799:11;5771:91;:::i;:::-;5765:4;5758:105;5676:193;5600:269;;;:::o;5875:73::-;5920:3;5875:73;:::o;5954:189::-;6031:32;;:::i;:::-;6072:65;6130:6;6122;6116:4;6072:65;:::i;:::-;6007:136;5954:189;;:::o;6149:186::-;6209:120;6226:3;6219:5;6216:14;6209:120;;;6280:39;6317:1;6310:5;6280:39;:::i;:::-;6253:1;6246:5;6242:13;6233:22;;6209:120;;;6149:186;;:::o;6341:543::-;6442:2;6437:3;6434:11;6431:446;;;6476:38;6508:5;6476:38;:::i;:::-;6560:29;6578:10;6560:29;:::i;:::-;6550:8;6546:44;6743:2;6731:10;6728:18;6725:49;;;6764:8;6749:23;;6725:49;6787:80;6843:22;6861:3;6843:22;:::i;:::-;6833:8;6829:37;6816:11;6787:80;:::i;:::-;6446:431;;6431:446;6341:543;;;:::o;6890:117::-;6944:8;6994:5;6988:4;6984:16;6963:37;;6890:117;;;;:::o;7013:169::-;7057:6;7090:51;7138:1;7134:6;7126:5;7123:1;7119:13;7090:51;:::i;:::-;7086:56;7171:4;7165;7161:15;7151:25;;7064:118;7013:169;;;;:::o;7187:295::-;7263:4;7409:29;7434:3;7428:4;7409:29;:::i;:::-;7401:37;;7471:3;7468:1;7464:11;7458:4;7455:21;7447:29;;7187:295;;;;:::o;7487:1395::-;7604:37;7637:3;7604:37;:::i;:::-;7706:18;7698:6;7695:30;7692:56;;;7728:18;;:::i;:::-;7692:56;7772:38;7804:4;7798:11;7772:38;:::i;:::-;7857:67;7917:6;7909;7903:4;7857:67;:::i;:::-;7951:1;7975:4;7962:17;;8007:2;7999:6;7996:14;8024:1;8019:618;;;;8681:1;8698:6;8695:77;;;8747:9;8742:3;8738:19;8732:26;8723:35;;8695:77;8798:67;8858:6;8851:5;8798:67;:::i;:::-;8792:4;8785:81;8654:222;7989:887;;8019:618;8071:4;8067:9;8059:6;8055:22;8105:37;8137:4;8105:37;:::i;:::-;8164:1;8178:208;8192:7;8189:1;8186:14;8178:208;;;8271:9;8266:3;8262:19;8256:26;8248:6;8241:42;8322:1;8314:6;8310:14;8300:24;;8369:2;8358:9;8354:18;8341:31;;8215:4;8212:1;8208:12;8203:17;;8178:208;;;8414:6;8405:7;8402:19;8399:179;;;8472:9;8467:3;8463:19;8457:26;8515:48;8557:4;8549:6;8545:17;8534:9;8515:48;:::i;:::-;8507:6;8500:64;8422:156;8399:179;8624:1;8620;8612:6;8608:14;8604:22;8598:4;8591:36;8026:611;;;7989:887;;7579:1303;;;7487:1395;;:::o;8888:180::-;8936:77;8933:1;8926:88;9033:4;9030:1;9023:15;9057:4;9054:1;9047:15;9074:180;9122:77;9119:1;9112:88;9219:4;9216:1;9209:15;9243:4;9240:1;9233:15;9260:233;9299:3;9322:24;9340:5;9322:24;:::i;:::-;9313:33;;9368:66;9361:5;9358:77;9355:103;;9438:18;;:::i;:::-;9355:103;9485:1;9478:5;9474:13;9467:20;;9260:233;;;:::o;9499:147::-;9600:11;9637:3;9622:18;;9499:147;;;;:::o;9652:144::-;9704:4;9727:3;9719:11;;9750:3;9747:1;9740:14;9784:4;9781:1;9771:18;9763:26;;9652:144;;;:::o;9824:878::-;9929:3;9966:5;9960:12;9995:36;10021:9;9995:36;:::i;:::-;10047:88;10128:6;10123:3;10047:88;:::i;:::-;10040:95;;10166:1;10155:9;10151:17;10182:1;10177:166;;;;10357:1;10352:344;;;;10144:552;;10177:166;10261:4;10257:9;10246;10242:25;10237:3;10230:38;10323:6;10316:14;10309:22;10301:6;10297:35;10292:3;10288:45;10281:52;;10177:166;;10352:344;10419:41;10454:5;10419:41;:::i;:::-;10482:1;10496:154;10510:6;10507:1;10504:13;10496:154;;;10584:7;10578:14;10574:1;10569:3;10565:11;10558:35;10634:1;10625:7;10621:15;10610:26;;10532:4;10529:1;10525:12;10520:17;;10496:154;;;10679:6;10674:3;10670:16;10663:23;;10359:337;;10144:552;;9933:769;;9824:878;;;;:::o;10708:273::-;10839:3;10861:94;10951:3;10942:6;10861:94;:::i;:::-;10854:101;;10972:3;10965:10;;10708:273;;;;:::o;10987:77::-;11024:7;11053:5;11042:16;;10987:77;;;:::o;11070:118::-;11157:24;11175:5;11157:24;:::i;:::-;11152:3;11145:37;11070:118;;:::o;11194:::-;11281:24;11299:5;11281:24;:::i;:::-;11276:3;11269:37;11194:118;;:::o;11318:::-;11405:24;11423:5;11405:24;:::i;:::-;11400:3;11393:37;11318:118;;:::o;11442:664::-;11647:4;11685:3;11674:9;11670:19;11662:27;;11699:71;11767:1;11756:9;11752:17;11743:6;11699:71;:::i;:::-;11780:72;11848:2;11837:9;11833:18;11824:6;11780:72;:::i;:::-;11862;11930:2;11919:9;11915:18;11906:6;11862:72;:::i;:::-;11944;12012:2;12001:9;11997:18;11988:6;11944:72;:::i;:::-;12026:73;12094:3;12083:9;12079:19;12070:6;12026:73;:::i;:::-;11442:664;;;;;;;;:::o;12112:191::-;12152:3;12171:20;12189:1;12171:20;:::i;:::-;12166:25;;12205:20;12223:1;12205:20;:::i;:::-;12200:25;;12248:1;12245;12241:9;12234:16;;12269:3;12266:1;12263:10;12260:36;;;12276:18;;:::i;:::-;12260:36;12112:191;;;;:::o;12309:222::-;12402:4;12440:2;12429:9;12425:18;12417:26;;12453:71;12521:1;12510:9;12506:17;12497:6;12453:71;:::i;:::-;12309:222;;;;:::o;102:265:4:-;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_3890":{"entryPoint":1663,"id":3890,"parameterSlots":0,"returnSlots":1},"@allowance_3626":{"entryPoint":2983,"id":3626,"parameterSlots":0,"returnSlots":0},"@approve_3694":{"entryPoint":793,"id":3694,"parameterSlots":2,"returnSlots":1},"@balanceOf_3620":{"entryPoint":1756,"id":3620,"parameterSlots":0,"returnSlots":0},"@computeDomainSeparator_3920":{"entryPoint":3020,"id":3920,"parameterSlots":0,"returnSlots":1},"@decimals_3614":{"entryPoint":1627,"id":3614,"parameterSlots":0,"returnSlots":0},"@name_3610":{"entryPoint":651,"id":3610,"parameterSlots":0,"returnSlots":0},"@nonces_3634":{"entryPoint":1780,"id":3634,"parameterSlots":0,"returnSlots":0},"@permit_3875":{"entryPoint":2222,"id":3875,"parameterSlots":7,"returnSlots":0},"@symbol_3612":{"entryPoint":1804,"id":3612,"parameterSlots":0,"returnSlots":0},"@totalSupply_3616":{"entryPoint":1035,"id":3616,"parameterSlots":0,"returnSlots":0},"@transferFrom_3788":{"entryPoint":1041,"id":3788,"parameterSlots":3,"returnSlots":1},"@transfer_3727":{"entryPoint":1946,"id":3727,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3416,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":3953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3470,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":3909,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4136,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3651,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":3974,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3491,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4503,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3567,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3799,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":4712,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3247,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4667,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c_to_t_string_memory_ptr_fromStack":{"entryPoint":4900,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e_to_t_string_memory_ptr_fromStack":{"entryPoint":4436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3609,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3747,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5130,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":4735,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3582,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":3814,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4518,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":5153,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":4790,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3304,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4935,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4471,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3624,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3762,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":4978,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3160,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4967,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3171,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4615,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4343,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3375,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3555,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3789,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3343,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3437,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3734,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3188,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4247,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":4702,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4296,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4200,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3338,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3230,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541":{"entryPoint":4626,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c":{"entryPoint":4859,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e":{"entryPoint":4395,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3393,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":3930,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3447,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":3886,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15995:15","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:15","statements":[{"nodeType":"YulAssignment","src":"77:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:15"},"nodeType":"YulFunctionCall","src":"87:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:15","type":""}],"src":"7:99:15"},{"body":{"nodeType":"YulBlock","src":"208:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:15"},"nodeType":"YulFunctionCall","src":"218:19:15"},"nodeType":"YulExpressionStatement","src":"218:19:15"},{"nodeType":"YulAssignment","src":"246:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:15"},"nodeType":"YulFunctionCall","src":"261:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:15","type":""}],"src":"112:169:15"},{"body":{"nodeType":"YulBlock","src":"349:184:15","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:15"},"nodeType":"YulFunctionCall","src":"449:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:15"},"nodeType":"YulFunctionCall","src":"468:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:15"},"nodeType":"YulFunctionCall","src":"462:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:15"},"nodeType":"YulFunctionCall","src":"442:39:15"},"nodeType":"YulExpressionStatement","src":"442:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:15"},"nodeType":"YulFunctionCall","src":"386:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:15","statements":[{"nodeType":"YulAssignment","src":"402:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:15"},"nodeType":"YulFunctionCall","src":"407:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:15","statements":[]},"src":"378:113:15"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:15"},"nodeType":"YulFunctionCall","src":"507:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:15"},"nodeType":"YulFunctionCall","src":"500:27:15"},"nodeType":"YulExpressionStatement","src":"500:27:15"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:15","type":""}],"src":"287:246:15"},{"body":{"nodeType":"YulBlock","src":"587:54:15","statements":[{"nodeType":"YulAssignment","src":"597:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:15"},"nodeType":"YulFunctionCall","src":"611:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:15"},"nodeType":"YulFunctionCall","src":"627:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:15"},"nodeType":"YulFunctionCall","src":"607:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:15","type":""}],"src":"539:102:15"},{"body":{"nodeType":"YulBlock","src":"739:285:15","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:15"},"nodeType":"YulFunctionCall","src":"763:39:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:15","type":""}]},{"nodeType":"YulAssignment","src":"811:78:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:15"},"nodeType":"YulFunctionCall","src":"818:71:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:15"},"nodeType":"YulFunctionCall","src":"933:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:15"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:15"},"nodeType":"YulFunctionCall","src":"898:65:15"},"nodeType":"YulExpressionStatement","src":"898:65:15"},{"nodeType":"YulAssignment","src":"972:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:15"},"nodeType":"YulFunctionCall","src":"988:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:15"},"nodeType":"YulFunctionCall","src":"979:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:15","type":""}],"src":"647:377:15"},{"body":{"nodeType":"YulBlock","src":"1148:195:15","statements":[{"nodeType":"YulAssignment","src":"1158:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:15"},"nodeType":"YulFunctionCall","src":"1166:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:15"},"nodeType":"YulFunctionCall","src":"1201:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:15"},"nodeType":"YulFunctionCall","src":"1220:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:15"},"nodeType":"YulFunctionCall","src":"1194:47:15"},"nodeType":"YulExpressionStatement","src":"1194:47:15"},{"nodeType":"YulAssignment","src":"1250:86:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:15"},"nodeType":"YulFunctionCall","src":"1258:78:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:15","type":""}],"src":"1030:313:15"},{"body":{"nodeType":"YulBlock","src":"1389:35:15","statements":[{"nodeType":"YulAssignment","src":"1399:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:15"},"nodeType":"YulFunctionCall","src":"1409:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:15","type":""}],"src":"1349:75:15"},{"body":{"nodeType":"YulBlock","src":"1519:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:15"},"nodeType":"YulFunctionCall","src":"1529:12:15"},"nodeType":"YulExpressionStatement","src":"1529:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:15"},{"body":{"nodeType":"YulBlock","src":"1642:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:15"},"nodeType":"YulFunctionCall","src":"1652:12:15"},"nodeType":"YulExpressionStatement","src":"1652:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:15"},{"body":{"nodeType":"YulBlock","src":"1721:81:15","statements":[{"nodeType":"YulAssignment","src":"1731:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:15"},"nodeType":"YulFunctionCall","src":"1742:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:15","type":""}],"src":"1676:126:15"},{"body":{"nodeType":"YulBlock","src":"1853:51:15","statements":[{"nodeType":"YulAssignment","src":"1863:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:15"},"nodeType":"YulFunctionCall","src":"1874:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:15","type":""}],"src":"1808:96:15"},{"body":{"nodeType":"YulBlock","src":"1953:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:15"},"nodeType":"YulFunctionCall","src":"2012:12:15"},"nodeType":"YulExpressionStatement","src":"2012:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:15"},"nodeType":"YulFunctionCall","src":"1983:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:15"},"nodeType":"YulFunctionCall","src":"1973:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:15"},"nodeType":"YulFunctionCall","src":"1966:43:15"},"nodeType":"YulIf","src":"1963:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:15","type":""}],"src":"1910:122:15"},{"body":{"nodeType":"YulBlock","src":"2090:87:15","statements":[{"nodeType":"YulAssignment","src":"2100:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:15"},"nodeType":"YulFunctionCall","src":"2109:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:15"},"nodeType":"YulFunctionCall","src":"2138:33:15"},"nodeType":"YulExpressionStatement","src":"2138:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:15","type":""}],"src":"2038:139:15"},{"body":{"nodeType":"YulBlock","src":"2228:32:15","statements":[{"nodeType":"YulAssignment","src":"2238:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:15","type":""}],"src":"2183:77:15"},{"body":{"nodeType":"YulBlock","src":"2309:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:15"},"nodeType":"YulFunctionCall","src":"2368:12:15"},"nodeType":"YulExpressionStatement","src":"2368:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:15"},"nodeType":"YulFunctionCall","src":"2339:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:15"},"nodeType":"YulFunctionCall","src":"2329:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:15"},"nodeType":"YulFunctionCall","src":"2322:43:15"},"nodeType":"YulIf","src":"2319:63:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:15","type":""}],"src":"2266:122:15"},{"body":{"nodeType":"YulBlock","src":"2446:87:15","statements":[{"nodeType":"YulAssignment","src":"2456:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:15"},"nodeType":"YulFunctionCall","src":"2465:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:15"},"nodeType":"YulFunctionCall","src":"2494:33:15"},"nodeType":"YulExpressionStatement","src":"2494:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:15","type":""}],"src":"2394:139:15"},{"body":{"nodeType":"YulBlock","src":"2622:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:15"},"nodeType":"YulFunctionCall","src":"2670:79:15"},"nodeType":"YulExpressionStatement","src":"2670:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:15"},"nodeType":"YulFunctionCall","src":"2639:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:15"},"nodeType":"YulFunctionCall","src":"2635:32:15"},"nodeType":"YulIf","src":"2632:119:15"},{"nodeType":"YulBlock","src":"2761:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:15"},"nodeType":"YulFunctionCall","src":"2836:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:15"},"nodeType":"YulFunctionCall","src":"2815:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:15"}]}]},{"nodeType":"YulBlock","src":"2888:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:15"},"nodeType":"YulFunctionCall","src":"2964:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:15"},"nodeType":"YulFunctionCall","src":"2943:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:15","type":""}],"src":"2539:474:15"},{"body":{"nodeType":"YulBlock","src":"3061:48:15","statements":[{"nodeType":"YulAssignment","src":"3071:32:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:15"},"nodeType":"YulFunctionCall","src":"3089:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:15"},"nodeType":"YulFunctionCall","src":"3082:21:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:15"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:15","type":""}],"src":"3019:90:15"},{"body":{"nodeType":"YulBlock","src":"3174:50:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:15"},"nodeType":"YulFunctionCall","src":"3196:21:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:15"},"nodeType":"YulFunctionCall","src":"3184:34:15"},"nodeType":"YulExpressionStatement","src":"3184:34:15"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:15","type":""}],"src":"3115:109:15"},{"body":{"nodeType":"YulBlock","src":"3322:118:15","statements":[{"nodeType":"YulAssignment","src":"3332:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:15"},"nodeType":"YulFunctionCall","src":"3340:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:15"},"nodeType":"YulFunctionCall","src":"3415:17:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:15"},"nodeType":"YulFunctionCall","src":"3368:65:15"},"nodeType":"YulExpressionStatement","src":"3368:65:15"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:15","type":""}],"src":"3230:210:15"},{"body":{"nodeType":"YulBlock","src":"3511:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:15"},"nodeType":"YulFunctionCall","src":"3533:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:15"},"nodeType":"YulFunctionCall","src":"3521:37:15"},"nodeType":"YulExpressionStatement","src":"3521:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:15","type":""}],"src":"3446:118:15"},{"body":{"nodeType":"YulBlock","src":"3668:124:15","statements":[{"nodeType":"YulAssignment","src":"3678:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:15"},"nodeType":"YulFunctionCall","src":"3686:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:15"},"nodeType":"YulFunctionCall","src":"3767:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:15"},"nodeType":"YulFunctionCall","src":"3714:71:15"},"nodeType":"YulExpressionStatement","src":"3714:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:15","type":""}],"src":"3570:222:15"},{"body":{"nodeType":"YulBlock","src":"3898:519:15","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:15"},"nodeType":"YulFunctionCall","src":"3946:79:15"},"nodeType":"YulExpressionStatement","src":"3946:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:15"},"nodeType":"YulFunctionCall","src":"3915:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:15"},"nodeType":"YulFunctionCall","src":"3911:32:15"},"nodeType":"YulIf","src":"3908:119:15"},{"nodeType":"YulBlock","src":"4037:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:15"},"nodeType":"YulFunctionCall","src":"4112:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:15"},"nodeType":"YulFunctionCall","src":"4091:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:15"}]}]},{"nodeType":"YulBlock","src":"4164:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:15"},"nodeType":"YulFunctionCall","src":"4240:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:15"},"nodeType":"YulFunctionCall","src":"4219:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:15"}]}]},{"nodeType":"YulBlock","src":"4292:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:15"},"nodeType":"YulFunctionCall","src":"4368:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:15"},"nodeType":"YulFunctionCall","src":"4347:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:15","type":""}],"src":"3798:619:15"},{"body":{"nodeType":"YulBlock","src":"4466:43:15","statements":[{"nodeType":"YulAssignment","src":"4476:27:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:15","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:15"},"nodeType":"YulFunctionCall","src":"4487:16:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:15"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:15","type":""}],"src":"4423:86:15"},{"body":{"nodeType":"YulBlock","src":"4576:51:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:15"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:15"},"nodeType":"YulFunctionCall","src":"4598:22:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:15"},"nodeType":"YulFunctionCall","src":"4586:35:15"},"nodeType":"YulExpressionStatement","src":"4586:35:15"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:15","type":""}],"src":"4515:112:15"},{"body":{"nodeType":"YulBlock","src":"4727:120:15","statements":[{"nodeType":"YulAssignment","src":"4737:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:15"},"nodeType":"YulFunctionCall","src":"4745:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:15"},"nodeType":"YulFunctionCall","src":"4822:17:15"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:15"},"nodeType":"YulFunctionCall","src":"4773:67:15"},"nodeType":"YulExpressionStatement","src":"4773:67:15"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:15","type":""}],"src":"4633:214:15"},{"body":{"nodeType":"YulBlock","src":"4898:32:15","statements":[{"nodeType":"YulAssignment","src":"4908:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"4919:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4908:7:15"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4880:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4890:7:15","type":""}],"src":"4853:77:15"},{"body":{"nodeType":"YulBlock","src":"5001:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5018:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5041:5:15"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5023:17:15"},"nodeType":"YulFunctionCall","src":"5023:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5011:6:15"},"nodeType":"YulFunctionCall","src":"5011:37:15"},"nodeType":"YulExpressionStatement","src":"5011:37:15"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4989:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4996:3:15","type":""}],"src":"4936:118:15"},{"body":{"nodeType":"YulBlock","src":"5158:124:15","statements":[{"nodeType":"YulAssignment","src":"5168:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5191:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:15"},"nodeType":"YulFunctionCall","src":"5176:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5168:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5248:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5261:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5272:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5257:3:15"},"nodeType":"YulFunctionCall","src":"5257:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5204:43:15"},"nodeType":"YulFunctionCall","src":"5204:71:15"},"nodeType":"YulExpressionStatement","src":"5204:71:15"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5130:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5142:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5153:4:15","type":""}],"src":"5060:222:15"},{"body":{"nodeType":"YulBlock","src":"5354:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"5400:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5402:77:15"},"nodeType":"YulFunctionCall","src":"5402:79:15"},"nodeType":"YulExpressionStatement","src":"5402:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5375:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5371:3:15"},"nodeType":"YulFunctionCall","src":"5371:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"5396:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5367:3:15"},"nodeType":"YulFunctionCall","src":"5367:32:15"},"nodeType":"YulIf","src":"5364:119:15"},{"nodeType":"YulBlock","src":"5493:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5508:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5522:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5512:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5537:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5572:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5583:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:15"},"nodeType":"YulFunctionCall","src":"5568:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5592:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5547:20:15"},"nodeType":"YulFunctionCall","src":"5547:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5537:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5324:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5335:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5347:6:15","type":""}],"src":"5288:329:15"},{"body":{"nodeType":"YulBlock","src":"5664:77:15","statements":[{"body":{"nodeType":"YulBlock","src":"5719:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5728:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5731:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5721:6:15"},"nodeType":"YulFunctionCall","src":"5721:12:15"},"nodeType":"YulExpressionStatement","src":"5721:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5687:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5710:5:15"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"5694:15:15"},"nodeType":"YulFunctionCall","src":"5694:22:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5684:2:15"},"nodeType":"YulFunctionCall","src":"5684:33:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5677:6:15"},"nodeType":"YulFunctionCall","src":"5677:41:15"},"nodeType":"YulIf","src":"5674:61:15"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5657:5:15","type":""}],"src":"5623:118:15"},{"body":{"nodeType":"YulBlock","src":"5797:85:15","statements":[{"nodeType":"YulAssignment","src":"5807:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5829:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5816:12:15"},"nodeType":"YulFunctionCall","src":"5816:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5807:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5870:5:15"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"5845:24:15"},"nodeType":"YulFunctionCall","src":"5845:31:15"},"nodeType":"YulExpressionStatement","src":"5845:31:15"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5775:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"5783:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5791:5:15","type":""}],"src":"5747:135:15"},{"body":{"nodeType":"YulBlock","src":"5931:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"5988:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5997:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6000:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5990:6:15"},"nodeType":"YulFunctionCall","src":"5990:12:15"},"nodeType":"YulExpressionStatement","src":"5990:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5954:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5979:5:15"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5961:17:15"},"nodeType":"YulFunctionCall","src":"5961:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5951:2:15"},"nodeType":"YulFunctionCall","src":"5951:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5944:6:15"},"nodeType":"YulFunctionCall","src":"5944:43:15"},"nodeType":"YulIf","src":"5941:63:15"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5924:5:15","type":""}],"src":"5888:122:15"},{"body":{"nodeType":"YulBlock","src":"6068:87:15","statements":[{"nodeType":"YulAssignment","src":"6078:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6100:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6087:12:15"},"nodeType":"YulFunctionCall","src":"6087:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6078:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6143:5:15"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"6116:26:15"},"nodeType":"YulFunctionCall","src":"6116:33:15"},"nodeType":"YulExpressionStatement","src":"6116:33:15"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6046:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"6054:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6062:5:15","type":""}],"src":"6016:139:15"},{"body":{"nodeType":"YulBlock","src":"6327:1033:15","statements":[{"body":{"nodeType":"YulBlock","src":"6374:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6376:77:15"},"nodeType":"YulFunctionCall","src":"6376:79:15"},"nodeType":"YulExpressionStatement","src":"6376:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6348:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"6357:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6344:3:15"},"nodeType":"YulFunctionCall","src":"6344:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"6369:3:15","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6340:3:15"},"nodeType":"YulFunctionCall","src":"6340:33:15"},"nodeType":"YulIf","src":"6337:120:15"},{"nodeType":"YulBlock","src":"6467:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6482:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6496:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6486:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6511:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6546:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6557:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6542:3:15"},"nodeType":"YulFunctionCall","src":"6542:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6566:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6521:20:15"},"nodeType":"YulFunctionCall","src":"6521:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6511:6:15"}]}]},{"nodeType":"YulBlock","src":"6594:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6609:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6623:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6613:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6639:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6674:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6685:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6670:3:15"},"nodeType":"YulFunctionCall","src":"6670:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6694:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6649:20:15"},"nodeType":"YulFunctionCall","src":"6649:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6639:6:15"}]}]},{"nodeType":"YulBlock","src":"6722:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6737:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6751:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6741:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6767:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6802:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6813:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6798:3:15"},"nodeType":"YulFunctionCall","src":"6798:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6822:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6777:20:15"},"nodeType":"YulFunctionCall","src":"6777:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6767:6:15"}]}]},{"nodeType":"YulBlock","src":"6850:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6865:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6879:2:15","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6869:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6895:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6930:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6941:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6926:3:15"},"nodeType":"YulFunctionCall","src":"6926:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6950:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6905:20:15"},"nodeType":"YulFunctionCall","src":"6905:53:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6895:6:15"}]}]},{"nodeType":"YulBlock","src":"6978:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6993:17:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7007:3:15","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6997:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7024:61:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7057:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7068:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7053:3:15"},"nodeType":"YulFunctionCall","src":"7053:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7077:7:15"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"7034:18:15"},"nodeType":"YulFunctionCall","src":"7034:51:15"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7024:6:15"}]}]},{"nodeType":"YulBlock","src":"7105:119:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7120:17:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7134:3:15","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7124:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7151:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7186:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7197:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7182:3:15"},"nodeType":"YulFunctionCall","src":"7182:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7206:7:15"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7161:20:15"},"nodeType":"YulFunctionCall","src":"7161:53:15"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7151:6:15"}]}]},{"nodeType":"YulBlock","src":"7234:119:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7249:17:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7263:3:15","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7253:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7280:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7315:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7326:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7311:3:15"},"nodeType":"YulFunctionCall","src":"7311:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7335:7:15"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7290:20:15"},"nodeType":"YulFunctionCall","src":"7290:53:15"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7280:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6249:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6260:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6272:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6280:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6288:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6296:6:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6304:6:15","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6312:6:15","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6320:6:15","type":""}],"src":"6161:1199:15"},{"body":{"nodeType":"YulBlock","src":"7449:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"7495:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7497:77:15"},"nodeType":"YulFunctionCall","src":"7497:79:15"},"nodeType":"YulExpressionStatement","src":"7497:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7470:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7479:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7466:3:15"},"nodeType":"YulFunctionCall","src":"7466:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"7491:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7462:3:15"},"nodeType":"YulFunctionCall","src":"7462:32:15"},"nodeType":"YulIf","src":"7459:119:15"},{"nodeType":"YulBlock","src":"7588:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7603:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7617:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7607:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7632:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7667:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7678:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7663:3:15"},"nodeType":"YulFunctionCall","src":"7663:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7687:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7642:20:15"},"nodeType":"YulFunctionCall","src":"7642:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7632:6:15"}]}]},{"nodeType":"YulBlock","src":"7715:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7730:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7744:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7734:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7760:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7795:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7806:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7791:3:15"},"nodeType":"YulFunctionCall","src":"7791:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7815:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7770:20:15"},"nodeType":"YulFunctionCall","src":"7770:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7760:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7411:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7422:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7434:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7442:6:15","type":""}],"src":"7366:474:15"},{"body":{"nodeType":"YulBlock","src":"7874:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7891:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7894:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7884:6:15"},"nodeType":"YulFunctionCall","src":"7884:88:15"},"nodeType":"YulExpressionStatement","src":"7884:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7988:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7991:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7981:6:15"},"nodeType":"YulFunctionCall","src":"7981:15:15"},"nodeType":"YulExpressionStatement","src":"7981:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8012:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8015:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8005:6:15"},"nodeType":"YulFunctionCall","src":"8005:15:15"},"nodeType":"YulExpressionStatement","src":"8005:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7846:180:15"},{"body":{"nodeType":"YulBlock","src":"8083:269:15","statements":[{"nodeType":"YulAssignment","src":"8093:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8107:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"8113:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8103:3:15"},"nodeType":"YulFunctionCall","src":"8103:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8093:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"8124:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8154:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"8160:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8150:3:15"},"nodeType":"YulFunctionCall","src":"8150:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8128:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"8201:51:15","statements":[{"nodeType":"YulAssignment","src":"8215:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8229:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8237:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8225:3:15"},"nodeType":"YulFunctionCall","src":"8225:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8215:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8181:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8174:6:15"},"nodeType":"YulFunctionCall","src":"8174:26:15"},"nodeType":"YulIf","src":"8171:81:15"},{"body":{"nodeType":"YulBlock","src":"8304:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8318:16:15"},"nodeType":"YulFunctionCall","src":"8318:18:15"},"nodeType":"YulExpressionStatement","src":"8318:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8268:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8291:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8299:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8288:2:15"},"nodeType":"YulFunctionCall","src":"8288:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8265:2:15"},"nodeType":"YulFunctionCall","src":"8265:38:15"},"nodeType":"YulIf","src":"8262:84:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8067:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8076:6:15","type":""}],"src":"8032:320:15"},{"body":{"nodeType":"YulBlock","src":"8386:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8403:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8406:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8396:6:15"},"nodeType":"YulFunctionCall","src":"8396:88:15"},"nodeType":"YulExpressionStatement","src":"8396:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8500:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8503:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8493:6:15"},"nodeType":"YulFunctionCall","src":"8493:15:15"},"nodeType":"YulExpressionStatement","src":"8493:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8524:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8527:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8517:6:15"},"nodeType":"YulFunctionCall","src":"8517:15:15"},"nodeType":"YulExpressionStatement","src":"8517:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8358:180:15"},{"body":{"nodeType":"YulBlock","src":"8589:149:15","statements":[{"nodeType":"YulAssignment","src":"8599:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8622:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8604:17:15"},"nodeType":"YulFunctionCall","src":"8604:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8599:1:15"}]},{"nodeType":"YulAssignment","src":"8633:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8656:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8638:17:15"},"nodeType":"YulFunctionCall","src":"8638:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8633:1:15"}]},{"nodeType":"YulAssignment","src":"8667:17:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8679:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"8682:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8675:3:15"},"nodeType":"YulFunctionCall","src":"8675:9:15"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8667:4:15"}]},{"body":{"nodeType":"YulBlock","src":"8709:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8711:16:15"},"nodeType":"YulFunctionCall","src":"8711:18:15"},"nodeType":"YulExpressionStatement","src":"8711:18:15"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"8700:4:15"},{"name":"x","nodeType":"YulIdentifier","src":"8706:1:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8697:2:15"},"nodeType":"YulFunctionCall","src":"8697:11:15"},"nodeType":"YulIf","src":"8694:37:15"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8575:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"8578:1:15","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8584:4:15","type":""}],"src":"8544:194:15"},{"body":{"nodeType":"YulBlock","src":"8850:67:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8872:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8880:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8868:3:15"},"nodeType":"YulFunctionCall","src":"8868:14:15"},{"hexValue":"5045524d49545f444541444c494e455f45585049524544","kind":"string","nodeType":"YulLiteral","src":"8884:25:15","type":"","value":"PERMIT_DEADLINE_EXPIRED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8861:6:15"},"nodeType":"YulFunctionCall","src":"8861:49:15"},"nodeType":"YulExpressionStatement","src":"8861:49:15"}]},"name":"store_literal_in_memory_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8842:6:15","type":""}],"src":"8744:173:15"},{"body":{"nodeType":"YulBlock","src":"9069:220:15","statements":[{"nodeType":"YulAssignment","src":"9079:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9145:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9150:2:15","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9086:58:15"},"nodeType":"YulFunctionCall","src":"9086:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9079:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9251:3:15"}],"functionName":{"name":"store_literal_in_memory_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e","nodeType":"YulIdentifier","src":"9162:88:15"},"nodeType":"YulFunctionCall","src":"9162:93:15"},"nodeType":"YulExpressionStatement","src":"9162:93:15"},{"nodeType":"YulAssignment","src":"9264:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9275:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9280:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9271:3:15"},"nodeType":"YulFunctionCall","src":"9271:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9264:3:15"}]}]},"name":"abi_encode_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9057:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9065:3:15","type":""}],"src":"8923:366:15"},{"body":{"nodeType":"YulBlock","src":"9466:248:15","statements":[{"nodeType":"YulAssignment","src":"9476:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9488:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9499:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9484:3:15"},"nodeType":"YulFunctionCall","src":"9484:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9476:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9523:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9534:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9519:3:15"},"nodeType":"YulFunctionCall","src":"9519:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9542:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"9548:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9538:3:15"},"nodeType":"YulFunctionCall","src":"9538:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9512:6:15"},"nodeType":"YulFunctionCall","src":"9512:47:15"},"nodeType":"YulExpressionStatement","src":"9512:47:15"},{"nodeType":"YulAssignment","src":"9568:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9702:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9576:124:15"},"nodeType":"YulFunctionCall","src":"9576:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9568:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9446:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9461:4:15","type":""}],"src":"9295:419:15"},{"body":{"nodeType":"YulBlock","src":"9785:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9802:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9825:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9807:17:15"},"nodeType":"YulFunctionCall","src":"9807:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9795:6:15"},"nodeType":"YulFunctionCall","src":"9795:37:15"},"nodeType":"YulExpressionStatement","src":"9795:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9773:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9780:3:15","type":""}],"src":"9720:118:15"},{"body":{"nodeType":"YulBlock","src":"10082:537:15","statements":[{"nodeType":"YulAssignment","src":"10092:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10104:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10115:3:15","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10100:3:15"},"nodeType":"YulFunctionCall","src":"10100:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10092:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10173:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10186:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10197:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10182:3:15"},"nodeType":"YulFunctionCall","src":"10182:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"10129:43:15"},"nodeType":"YulFunctionCall","src":"10129:71:15"},"nodeType":"YulExpressionStatement","src":"10129:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10254:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10267:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10278:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10263:3:15"},"nodeType":"YulFunctionCall","src":"10263:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10210:43:15"},"nodeType":"YulFunctionCall","src":"10210:72:15"},"nodeType":"YulExpressionStatement","src":"10210:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10336:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10349:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10360:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10345:3:15"},"nodeType":"YulFunctionCall","src":"10345:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10292:43:15"},"nodeType":"YulFunctionCall","src":"10292:72:15"},"nodeType":"YulExpressionStatement","src":"10292:72:15"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10418:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10431:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10442:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10427:3:15"},"nodeType":"YulFunctionCall","src":"10427:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10374:43:15"},"nodeType":"YulFunctionCall","src":"10374:72:15"},"nodeType":"YulExpressionStatement","src":"10374:72:15"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10500:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10513:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10524:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10509:3:15"},"nodeType":"YulFunctionCall","src":"10509:19:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10456:43:15"},"nodeType":"YulFunctionCall","src":"10456:73:15"},"nodeType":"YulExpressionStatement","src":"10456:73:15"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"10583:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10596:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10607:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10592:3:15"},"nodeType":"YulFunctionCall","src":"10592:19:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10539:43:15"},"nodeType":"YulFunctionCall","src":"10539:73:15"},"nodeType":"YulExpressionStatement","src":"10539:73:15"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10014:9:15","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10026:6:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10034:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10042:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10050:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10058:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10066:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10077:4:15","type":""}],"src":"9844:775:15"},{"body":{"nodeType":"YulBlock","src":"10739:34:15","statements":[{"nodeType":"YulAssignment","src":"10749:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"10764:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10749:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10711:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"10716:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10727:11:15","type":""}],"src":"10625:148:15"},{"body":{"nodeType":"YulBlock","src":"10885:108:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10907:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"10915:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10903:3:15"},"nodeType":"YulFunctionCall","src":"10903:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"10919:66:15","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10896:6:15"},"nodeType":"YulFunctionCall","src":"10896:90:15"},"nodeType":"YulExpressionStatement","src":"10896:90:15"}]},"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10877:6:15","type":""}],"src":"10779:214:15"},{"body":{"nodeType":"YulBlock","src":"11163:236:15","statements":[{"nodeType":"YulAssignment","src":"11173:91:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11257:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11262:1:15","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11180:76:15"},"nodeType":"YulFunctionCall","src":"11180:84:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11173:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11362:3:15"}],"functionName":{"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulIdentifier","src":"11273:88:15"},"nodeType":"YulFunctionCall","src":"11273:93:15"},"nodeType":"YulExpressionStatement","src":"11273:93:15"},{"nodeType":"YulAssignment","src":"11375:18:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11386:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11391:1:15","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11382:3:15"},"nodeType":"YulFunctionCall","src":"11382:11:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11375:3:15"}]}]},"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11151:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11159:3:15","type":""}],"src":"10999:400:15"},{"body":{"nodeType":"YulBlock","src":"11452:32:15","statements":[{"nodeType":"YulAssignment","src":"11462:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"11473:5:15"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"11462:7:15"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11434:5:15","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"11444:7:15","type":""}],"src":"11405:79:15"},{"body":{"nodeType":"YulBlock","src":"11573:74:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11590:3:15"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11633:5:15"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"11615:17:15"},"nodeType":"YulFunctionCall","src":"11615:24:15"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"11595:19:15"},"nodeType":"YulFunctionCall","src":"11595:45:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11583:6:15"},"nodeType":"YulFunctionCall","src":"11583:58:15"},"nodeType":"YulExpressionStatement","src":"11583:58:15"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11561:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11568:3:15","type":""}],"src":"11490:157:15"},{"body":{"nodeType":"YulBlock","src":"11898:418:15","statements":[{"nodeType":"YulAssignment","src":"11909:155:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12060:3:15"}],"functionName":{"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11916:142:15"},"nodeType":"YulFunctionCall","src":"11916:148:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11909:3:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12136:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"12145:3:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12074:61:15"},"nodeType":"YulFunctionCall","src":"12074:75:15"},"nodeType":"YulExpressionStatement","src":"12074:75:15"},{"nodeType":"YulAssignment","src":"12158:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12169:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"12174:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12165:3:15"},"nodeType":"YulFunctionCall","src":"12165:12:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12158:3:15"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12249:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"12258:3:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12187:61:15"},"nodeType":"YulFunctionCall","src":"12187:75:15"},"nodeType":"YulExpressionStatement","src":"12187:75:15"},{"nodeType":"YulAssignment","src":"12271:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12282:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"12287:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12278:3:15"},"nodeType":"YulFunctionCall","src":"12278:12:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12271:3:15"}]},{"nodeType":"YulAssignment","src":"12300:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"12307:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12300:3:15"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11869:3:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11875:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11883:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11894:3:15","type":""}],"src":"11653:663:15"},{"body":{"nodeType":"YulBlock","src":"12500:367:15","statements":[{"nodeType":"YulAssignment","src":"12510:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12522:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12533:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12518:3:15"},"nodeType":"YulFunctionCall","src":"12518:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12510:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12591:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12604:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12615:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12600:3:15"},"nodeType":"YulFunctionCall","src":"12600:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12547:43:15"},"nodeType":"YulFunctionCall","src":"12547:71:15"},"nodeType":"YulExpressionStatement","src":"12547:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12668:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12681:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12692:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12677:3:15"},"nodeType":"YulFunctionCall","src":"12677:18:15"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"12628:39:15"},"nodeType":"YulFunctionCall","src":"12628:68:15"},"nodeType":"YulExpressionStatement","src":"12628:68:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12750:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12763:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12774:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12759:3:15"},"nodeType":"YulFunctionCall","src":"12759:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12706:43:15"},"nodeType":"YulFunctionCall","src":"12706:72:15"},"nodeType":"YulExpressionStatement","src":"12706:72:15"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12832:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12845:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12856:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12841:3:15"},"nodeType":"YulFunctionCall","src":"12841:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12788:43:15"},"nodeType":"YulFunctionCall","src":"12788:72:15"},"nodeType":"YulExpressionStatement","src":"12788:72:15"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12448:9:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12460:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12468:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12476:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12484:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12495:4:15","type":""}],"src":"12322:545:15"},{"body":{"nodeType":"YulBlock","src":"12979:58:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13001:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"13009:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12997:3:15"},"nodeType":"YulFunctionCall","src":"12997:14:15"},{"hexValue":"494e56414c49445f5349474e4552","kind":"string","nodeType":"YulLiteral","src":"13013:16:15","type":"","value":"INVALID_SIGNER"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12990:6:15"},"nodeType":"YulFunctionCall","src":"12990:40:15"},"nodeType":"YulExpressionStatement","src":"12990:40:15"}]},"name":"store_literal_in_memory_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12971:6:15","type":""}],"src":"12873:164:15"},{"body":{"nodeType":"YulBlock","src":"13189:220:15","statements":[{"nodeType":"YulAssignment","src":"13199:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13265:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"13270:2:15","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13206:58:15"},"nodeType":"YulFunctionCall","src":"13206:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13199:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13371:3:15"}],"functionName":{"name":"store_literal_in_memory_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c","nodeType":"YulIdentifier","src":"13282:88:15"},"nodeType":"YulFunctionCall","src":"13282:93:15"},"nodeType":"YulExpressionStatement","src":"13282:93:15"},{"nodeType":"YulAssignment","src":"13384:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13395:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"13400:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13391:3:15"},"nodeType":"YulFunctionCall","src":"13391:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13384:3:15"}]}]},"name":"abi_encode_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13177:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13185:3:15","type":""}],"src":"13043:366:15"},{"body":{"nodeType":"YulBlock","src":"13586:248:15","statements":[{"nodeType":"YulAssignment","src":"13596:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13608:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13619:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13604:3:15"},"nodeType":"YulFunctionCall","src":"13604:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13596:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13643:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13654:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13639:3:15"},"nodeType":"YulFunctionCall","src":"13639:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13662:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13668:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13658:3:15"},"nodeType":"YulFunctionCall","src":"13658:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13632:6:15"},"nodeType":"YulFunctionCall","src":"13632:47:15"},"nodeType":"YulExpressionStatement","src":"13632:47:15"},{"nodeType":"YulAssignment","src":"13688:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13822:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13696:124:15"},"nodeType":"YulFunctionCall","src":"13696:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13688:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13566:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13581:4:15","type":""}],"src":"13415:419:15"},{"body":{"nodeType":"YulBlock","src":"13953:34:15","statements":[{"nodeType":"YulAssignment","src":"13963:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"13978:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13963:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13925:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"13930:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13941:11:15","type":""}],"src":"13840:147:15"},{"body":{"nodeType":"YulBlock","src":"14050:87:15","statements":[{"nodeType":"YulAssignment","src":"14060:11:15","value":{"name":"ptr","nodeType":"YulIdentifier","src":"14068:3:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14060:4:15"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14088:1:15","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"14091:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14081:6:15"},"nodeType":"YulFunctionCall","src":"14081:14:15"},"nodeType":"YulExpressionStatement","src":"14081:14:15"},{"nodeType":"YulAssignment","src":"14104:26:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14122:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14125:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"14112:9:15"},"nodeType":"YulFunctionCall","src":"14112:18:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14104:4:15"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14037:3:15","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"14045:4:15","type":""}],"src":"13993:144:15"},{"body":{"nodeType":"YulBlock","src":"14274:769:15","statements":[{"nodeType":"YulVariableDeclaration","src":"14284:29:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14307:5:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14301:5:15"},"nodeType":"YulFunctionCall","src":"14301:12:15"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"14288:9:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14322:50:15","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"14362:9:15"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"14336:25:15"},"nodeType":"YulFunctionCall","src":"14336:36:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14326:6:15","type":""}]},{"nodeType":"YulAssignment","src":"14381:95:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14464:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"14469:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14388:75:15"},"nodeType":"YulFunctionCall","src":"14388:88:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14381:3:15"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"14525:159:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14578:3:15"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"14587:9:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14602:4:15","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14598:3:15"},"nodeType":"YulFunctionCall","src":"14598:9:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14583:3:15"},"nodeType":"YulFunctionCall","src":"14583:25:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14571:6:15"},"nodeType":"YulFunctionCall","src":"14571:38:15"},"nodeType":"YulExpressionStatement","src":"14571:38:15"},{"nodeType":"YulAssignment","src":"14622:52:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14633:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14642:6:15"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14664:6:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14657:6:15"},"nodeType":"YulFunctionCall","src":"14657:14:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14650:6:15"},"nodeType":"YulFunctionCall","src":"14650:22:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14638:3:15"},"nodeType":"YulFunctionCall","src":"14638:35:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14629:3:15"},"nodeType":"YulFunctionCall","src":"14629:45:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14622:3:15"}]}]},"nodeType":"YulCase","src":"14518:166:15","value":{"kind":"number","nodeType":"YulLiteral","src":"14523:1:15","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"14700:337:15","statements":[{"nodeType":"YulVariableDeclaration","src":"14745:56:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14795:5:15"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"14760:34:15"},"nodeType":"YulFunctionCall","src":"14760:41:15"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"14749:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14814:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"14823:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14818:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"14881:110:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14910:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"14915:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14906:3:15"},"nodeType":"YulFunctionCall","src":"14906:11:15"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"14925:7:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14919:5:15"},"nodeType":"YulFunctionCall","src":"14919:14:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14899:6:15"},"nodeType":"YulFunctionCall","src":"14899:35:15"},"nodeType":"YulExpressionStatement","src":"14899:35:15"},{"nodeType":"YulAssignment","src":"14951:26:15","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"14966:7:15"},{"kind":"number","nodeType":"YulLiteral","src":"14975:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14962:3:15"},"nodeType":"YulFunctionCall","src":"14962:15:15"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"14951:7:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14848:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"14851:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14845:2:15"},"nodeType":"YulFunctionCall","src":"14845:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14859:21:15","statements":[{"nodeType":"YulAssignment","src":"14861:17:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14870:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"14873:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14866:3:15"},"nodeType":"YulFunctionCall","src":"14866:12:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14861:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"14841:3:15","statements":[]},"src":"14837:154:15"},{"nodeType":"YulAssignment","src":"15004:23:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15015:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"15020:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15011:3:15"},"nodeType":"YulFunctionCall","src":"15011:16:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15004:3:15"}]}]},"nodeType":"YulCase","src":"14693:344:15","value":{"kind":"number","nodeType":"YulLiteral","src":"14698:1:15","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"14496:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14507:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14492:3:15"},"nodeType":"YulFunctionCall","src":"14492:17:15"},"nodeType":"YulSwitch","src":"14485:552:15"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14255:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14262:3:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"14270:3:15","type":""}],"src":"14165:878:15"},{"body":{"nodeType":"YulBlock","src":"15184:138:15","statements":[{"nodeType":"YulAssignment","src":"15195:101:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15283:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"15292:3:15"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15202:80:15"},"nodeType":"YulFunctionCall","src":"15202:94:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15195:3:15"}]},{"nodeType":"YulAssignment","src":"15306:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"15313:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15306:3:15"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15163:3:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15169:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15180:3:15","type":""}],"src":"15049:273:15"},{"body":{"nodeType":"YulBlock","src":"15538:454:15","statements":[{"nodeType":"YulAssignment","src":"15548:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15560:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15571:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15556:3:15"},"nodeType":"YulFunctionCall","src":"15556:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15548:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15629:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15642:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15653:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15638:3:15"},"nodeType":"YulFunctionCall","src":"15638:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15585:43:15"},"nodeType":"YulFunctionCall","src":"15585:71:15"},"nodeType":"YulExpressionStatement","src":"15585:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15710:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15723:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15734:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15719:3:15"},"nodeType":"YulFunctionCall","src":"15719:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15666:43:15"},"nodeType":"YulFunctionCall","src":"15666:72:15"},"nodeType":"YulExpressionStatement","src":"15666:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15792:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15805:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15816:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15801:3:15"},"nodeType":"YulFunctionCall","src":"15801:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15748:43:15"},"nodeType":"YulFunctionCall","src":"15748:72:15"},"nodeType":"YulExpressionStatement","src":"15748:72:15"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15874:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15887:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15898:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15883:3:15"},"nodeType":"YulFunctionCall","src":"15883:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15830:43:15"},"nodeType":"YulFunctionCall","src":"15830:72:15"},"nodeType":"YulExpressionStatement","src":"15830:72:15"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"15956:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15969:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15980:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15965:3:15"},"nodeType":"YulFunctionCall","src":"15965:19:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15912:43:15"},"nodeType":"YulFunctionCall","src":"15912:73:15"},"nodeType":"YulExpressionStatement","src":"15912:73:15"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15478:9:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15490:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15498:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15506:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15514:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15522:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15533:4:15","type":""}],"src":"15328:664:15"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e(memPtr) {\n\n        mstore(add(memPtr, 0), \"PERMIT_DEADLINE_EXPIRED\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(memPtr) {\n\n        mstore(add(memPtr, 0), 0x1901000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(pos)\n        end := add(pos, 2)\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c(memPtr) {\n\n        mstore(add(memPtr, 0), \"INVALID_SIGNER\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3614":[{"length":32,"start":1629}],"3628":[{"length":32,"start":1667}],"3630":[{"length":32,"start":1719}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101915780637ecebe00146101c157806395d89b41146101f1578063a9059cbb1461020f578063d505accf1461023f578063dd62ed3e1461025b576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633644e51514610173575b600080fd5b6100c161028b565b6040516100ce9190610ce8565b60405180910390f35b6100f160048036038101906100ec9190610da3565b610319565b6040516100fe9190610dfe565b60405180910390f35b61010f61040b565b60405161011c9190610e28565b60405180910390f35b61013f600480360381019061013a9190610e43565b610411565b60405161014c9190610dfe565b60405180910390f35b61015d61065b565b60405161016a9190610eb2565b60405180910390f35b61017b61067f565b6040516101889190610ee6565b60405180910390f35b6101ab60048036038101906101a69190610f01565b6106dc565b6040516101b89190610e28565b60405180910390f35b6101db60048036038101906101d69190610f01565b6106f4565b6040516101e89190610e28565b60405180910390f35b6101f961070c565b6040516102069190610ce8565b60405180910390f35b61022960048036038101906102249190610da3565b61079a565b6040516102369190610dfe565b60405180910390f35b61025960048036038101906102549190610f86565b6108ae565b005b61027560048036038101906102709190611028565b610ba7565b6040516102829190610e28565b60405180910390f35b6000805461029890611097565b80601f01602080910402602001604051908101604052809291908181526020018280546102c490611097565b80156103115780601f106102e657610100808354040283529160200191610311565b820191906000526020600020905b8154815290600101906020018083116102f457829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103f99190610e28565b60405180910390a36001905092915050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105475782816104c691906110f7565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461059691906110f7565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516106479190610e28565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146106b5576106b0610bcc565b6106d7565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6001805461071990611097565b80601f016020809104026020016040519081016040528092919081815260200182805461074590611097565b80156107925780601f1061076757610100808354040283529160200191610792565b820191906000526020600020905b81548152906001019060200180831161077557829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107eb91906110f7565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089c9190610e28565b60405180910390a36001905092915050565b428410156108f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e890611177565b60405180910390fd5b600060016108fd61067f565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b604051602001610985969594939291906111a6565b604051602081830303815290604052805190602001206040516020016109ac92919061127f565b60405160208183030381529060405280519060200120858585604051600081526020016040526040516109e294939291906112b6565b6020604051602081039080840390855afa158015610a04573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610a7857508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae90611347565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610b969190610e28565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610bfe919061140a565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001610c3d959493929190611421565b60405160208183030381529060405280519060200120905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c92578082015181840152602081019050610c77565b60008484015250505050565b6000601f19601f8301169050919050565b6000610cba82610c58565b610cc48185610c63565b9350610cd4818560208601610c74565b610cdd81610c9e565b840191505092915050565b60006020820190508181036000830152610d028184610caf565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d3a82610d0f565b9050919050565b610d4a81610d2f565b8114610d5557600080fd5b50565b600081359050610d6781610d41565b92915050565b6000819050919050565b610d8081610d6d565b8114610d8b57600080fd5b50565b600081359050610d9d81610d77565b92915050565b60008060408385031215610dba57610db9610d0a565b5b6000610dc885828601610d58565b9250506020610dd985828601610d8e565b9150509250929050565b60008115159050919050565b610df881610de3565b82525050565b6000602082019050610e136000830184610def565b92915050565b610e2281610d6d565b82525050565b6000602082019050610e3d6000830184610e19565b92915050565b600080600060608486031215610e5c57610e5b610d0a565b5b6000610e6a86828701610d58565b9350506020610e7b86828701610d58565b9250506040610e8c86828701610d8e565b9150509250925092565b600060ff82169050919050565b610eac81610e96565b82525050565b6000602082019050610ec76000830184610ea3565b92915050565b6000819050919050565b610ee081610ecd565b82525050565b6000602082019050610efb6000830184610ed7565b92915050565b600060208284031215610f1757610f16610d0a565b5b6000610f2584828501610d58565b91505092915050565b610f3781610e96565b8114610f4257600080fd5b50565b600081359050610f5481610f2e565b92915050565b610f6381610ecd565b8114610f6e57600080fd5b50565b600081359050610f8081610f5a565b92915050565b600080600080600080600060e0888a031215610fa557610fa4610d0a565b5b6000610fb38a828b01610d58565b9750506020610fc48a828b01610d58565b9650506040610fd58a828b01610d8e565b9550506060610fe68a828b01610d8e565b9450506080610ff78a828b01610f45565b93505060a06110088a828b01610f71565b92505060c06110198a828b01610f71565b91505092959891949750929550565b6000806040838503121561103f5761103e610d0a565b5b600061104d85828601610d58565b925050602061105e85828601610d58565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110af57607f821691505b6020821081036110c2576110c1611068565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061110282610d6d565b915061110d83610d6d565b9250828203905081811115611125576111246110c8565b5b92915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b6000611161601783610c63565b915061116c8261112b565b602082019050919050565b6000602082019050818103600083015261119081611154565b9050919050565b6111a081610d2f565b82525050565b600060c0820190506111bb6000830189610ed7565b6111c86020830188611197565b6111d56040830187611197565b6111e26060830186610e19565b6111ef6080830185610e19565b6111fc60a0830184610e19565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611248600283611207565b915061125382611212565b600282019050919050565b6000819050919050565b61127961127482610ecd565b61125e565b82525050565b600061128a8261123b565b91506112968285611268565b6020820191506112a68284611268565b6020820191508190509392505050565b60006080820190506112cb6000830187610ed7565b6112d86020830186610ea3565b6112e56040830185610ed7565b6112f26060830184610ed7565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000611331600e83610c63565b915061133c826112fb565b602082019050919050565b6000602082019050818103600083015261136081611324565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461139481611097565b61139e8186611367565b945060018216600081146113b957600181146113ce57611401565b60ff1983168652811515820286019350611401565b6113d785611372565b60005b838110156113f9578154818901526001820191506020810190506113da565b838801955050505b50505092915050565b60006114168284611387565b915081905092915050565b600060a0820190506114366000830188610ed7565b6114436020830187610ed7565b6114506040830186610ed7565b61145d6060830185610e19565b61146a6080830184611197565b969550505050505056fea2646970667358221220721af9bf73f5221756cd1ef00c3a223c59029166084d28a949ca13424b59b00864736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x25B JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x298 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C4 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x311 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x311 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x547 JUMPI DUP3 DUP2 PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0x647 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0x6B5 JUMPI PUSH2 0x6B0 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x719 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x745 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x792 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x767 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x792 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x775 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x89C SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E8 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x8FD PUSH2 0x67F JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP11 DUP11 DUP11 PUSH1 0x5 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x985 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9AC SWAP3 SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x9E2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xAB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAE SWAP1 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x140A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC3D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC92 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP3 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xCC4 DUP2 DUP6 PUSH2 0xC63 JUMP JUMPDEST SWAP4 POP PUSH2 0xCD4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC74 JUMP JUMPDEST PUSH2 0xCDD DUP2 PUSH2 0xC9E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD02 DUP2 DUP5 PUSH2 0xCAF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3A DUP3 PUSH2 0xD0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4A DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP2 EQ PUSH2 0xD55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD67 DUP2 PUSH2 0xD41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD80 DUP2 PUSH2 0xD6D JUMP JUMPDEST DUP2 EQ PUSH2 0xD8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9D DUP2 PUSH2 0xD77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDBA JUMPI PUSH2 0xDB9 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDC8 DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDD9 DUP6 DUP3 DUP7 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF8 DUP2 PUSH2 0xDE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE22 DUP2 PUSH2 0xD6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE3D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH2 0xE5B PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE6A DUP7 DUP3 DUP8 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE7B DUP7 DUP3 DUP8 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE8C DUP7 DUP3 DUP8 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAC DUP2 PUSH2 0xE96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE0 DUP2 PUSH2 0xECD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEFB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xED7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF17 JUMPI PUSH2 0xF16 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF25 DUP5 DUP3 DUP6 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF37 DUP2 PUSH2 0xE96 JUMP JUMPDEST DUP2 EQ PUSH2 0xF42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF54 DUP2 PUSH2 0xF2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF63 DUP2 PUSH2 0xECD JUMP JUMPDEST DUP2 EQ PUSH2 0xF6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF80 DUP2 PUSH2 0xF5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xFA5 JUMPI PUSH2 0xFA4 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB3 DUP11 DUP3 DUP12 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xFC4 DUP11 DUP3 DUP12 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0xFD5 DUP11 DUP3 DUP12 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xFE6 DUP11 DUP3 DUP12 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xFF7 DUP11 DUP3 DUP12 ADD PUSH2 0xF45 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1008 DUP11 DUP3 DUP12 ADD PUSH2 0xF71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1019 DUP11 DUP3 DUP12 ADD PUSH2 0xF71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x103F JUMPI PUSH2 0x103E PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x104D DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x105E DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10AF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C2 JUMPI PUSH2 0x10C1 PUSH2 0x1068 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1102 DUP3 PUSH2 0xD6D JUMP JUMPDEST SWAP2 POP PUSH2 0x110D DUP4 PUSH2 0xD6D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1125 JUMPI PUSH2 0x1124 PUSH2 0x10C8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5045524D49545F444541444C494E455F45585049524544000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 PUSH1 0x17 DUP4 PUSH2 0xC63 JUMP JUMPDEST SWAP2 POP PUSH2 0x116C DUP3 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1190 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A0 DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x11BB PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x11C8 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x11D5 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x11E2 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x11EF PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x11FC PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xE19 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1248 PUSH1 0x2 DUP4 PUSH2 0x1207 JUMP JUMPDEST SWAP2 POP PUSH2 0x1253 DUP3 PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1279 PUSH2 0x1274 DUP3 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x125E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128A DUP3 PUSH2 0x123B JUMP JUMPDEST SWAP2 POP PUSH2 0x1296 DUP3 DUP6 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x12A6 DUP3 DUP5 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x12CB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x12D8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x12E5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x12F2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xED7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x494E56414C49445F5349474E4552000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1331 PUSH1 0xE DUP4 PUSH2 0xC63 JUMP JUMPDEST SWAP2 POP PUSH2 0x133C DUP3 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1360 DUP2 PUSH2 0x1324 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1394 DUP2 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x139E DUP2 DUP7 PUSH2 0x1367 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x13B9 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x13CE JUMPI PUSH2 0x1401 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x1401 JUMP JUMPDEST PUSH2 0x13D7 DUP6 PUSH2 0x1372 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13F9 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13DA JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1416 DUP3 DUP5 PUSH2 0x1387 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1436 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x1443 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x1450 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x145D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x146A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1197 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x1AF9BF73F5221756CD1EF00C3A223C59029166 ADDMOD 0x4D 0x28 0xA9 0x49 0xCA SGT TIMESTAMP 0x4B MSIZE 0xB0 ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"102:265:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:18:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2461:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1304:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3057:592;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1083:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5327:177;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1337:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1751:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1056:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2678:373;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3838:1483;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1388:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1031:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2461:211::-;2535:4;2584:6;2551:9;:21;2561:10;2551:21;;;;;;;;;;;;;;;:30;2573:7;2551:30;;;;;;;;;;;;;;;:39;;;;2627:7;2606:37;;2615:10;2606:37;;;2636:6;2606:37;;;;;;:::i;:::-;;;;;;;;2661:4;2654:11;;2461:211;;;;:::o;1304:26::-;;;;:::o;3057:592::-;3175:4;3191:15;3209:9;:15;3219:4;3209:15;;;;;;;;;;;;;;;:27;3225:10;3209:27;;;;;;;;;;;;;;;;3191:45;;3298:17;3287:7;:28;3283:80;;3357:6;3347:7;:16;;;;:::i;:::-;3317:9;:15;3327:4;3317:15;;;;;;;;;;;;;;;:27;3333:10;3317:27;;;;;;;;;;;;;;;:46;;;;3283:80;3393:6;3374:9;:15;3384:4;3374:15;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;3562:6;3545:9;:13;3555:2;3545:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;3609:2;3594:26;;3603:4;3594:26;;;3613:6;3594:26;;;;;;:::i;:::-;;;;;;;;3638:4;3631:11;;;3057:592;;;;;:::o;1083:31::-;;;:::o;5327:177::-;5384:7;5427:16;5410:13;:33;:87;;5473:24;:22;:24::i;:::-;5410:87;;;5446:24;5410:87;5403:94;;5327:177;:::o;1337:44::-;;;;;;;;;;;;;;;;;:::o;1751:41::-;;;;;;;;;;;;;;;;;:::o;1056:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2678:373::-;2748:4;2789:6;2764:9;:21;2774:10;2764:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;2958:6;2941:9;:13;2951:2;2941:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;3011:2;2990:32;;2999:10;2990:32;;;3015:6;2990:32;;;;;;:::i;:::-;;;;;;;;3040:4;3033:11;;2678:373;;;;:::o;3838:1483::-;4057:15;4045:8;:27;;4037:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4265:24;4292:805;4428:18;:16;:18::i;:::-;4555:165;4754:5;4793:7;4834:5;4873:6;:13;4880:5;4873:13;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;4922:8;4511:449;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4472:514;;;;;;4350:658;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4319:707;;;;;;5044:1;5063;5082;4292:805;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4265:832;;5148:1;5120:30;;:16;:30;;;;:59;;;;;5174:5;5154:25;;:16;:25;;;5120:59;5112:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;5252:5;5213:9;:27;5223:16;5213:27;;;;;;;;;;;;;;;:36;5241:7;5213:36;;;;;;;;;;;;;;;:44;;;;4241:1027;5299:7;5283:31;;5292:5;5283:31;;;5308:5;5283:31;;;;;;:::i;:::-;;;;;;;;3838:1483;;;;;;;:::o;1388:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5510:446::-;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;5833:14;5869:13;5912:4;5640:295;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;7:99:15:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:118::-;5694:22;5710:5;5694:22;:::i;:::-;5687:5;5684:33;5674:61;;5731:1;5728;5721:12;5674:61;5623:118;:::o;5747:135::-;5791:5;5829:6;5816:20;5807:29;;5845:31;5870:5;5845:31;:::i;:::-;5747:135;;;;:::o;5888:122::-;5961:24;5979:5;5961:24;:::i;:::-;5954:5;5951:35;5941:63;;6000:1;5997;5990:12;5941:63;5888:122;:::o;6016:139::-;6062:5;6100:6;6087:20;6078:29;;6116:33;6143:5;6116:33;:::i;:::-;6016:139;;;;:::o;6161:1199::-;6272:6;6280;6288;6296;6304;6312;6320;6369:3;6357:9;6348:7;6344:23;6340:33;6337:120;;;6376:79;;:::i;:::-;6337:120;6496:1;6521:53;6566:7;6557:6;6546:9;6542:22;6521:53;:::i;:::-;6511:63;;6467:117;6623:2;6649:53;6694:7;6685:6;6674:9;6670:22;6649:53;:::i;:::-;6639:63;;6594:118;6751:2;6777:53;6822:7;6813:6;6802:9;6798:22;6777:53;:::i;:::-;6767:63;;6722:118;6879:2;6905:53;6950:7;6941:6;6930:9;6926:22;6905:53;:::i;:::-;6895:63;;6850:118;7007:3;7034:51;7077:7;7068:6;7057:9;7053:22;7034:51;:::i;:::-;7024:61;;6978:117;7134:3;7161:53;7206:7;7197:6;7186:9;7182:22;7161:53;:::i;:::-;7151:63;;7105:119;7263:3;7290:53;7335:7;7326:6;7315:9;7311:22;7290:53;:::i;:::-;7280:63;;7234:119;6161:1199;;;;;;;;;;:::o;7366:474::-;7434:6;7442;7491:2;7479:9;7470:7;7466:23;7462:32;7459:119;;;7497:79;;:::i;:::-;7459:119;7617:1;7642:53;7687:7;7678:6;7667:9;7663:22;7642:53;:::i;:::-;7632:63;;7588:117;7744:2;7770:53;7815:7;7806:6;7795:9;7791:22;7770:53;:::i;:::-;7760:63;;7715:118;7366:474;;;;;:::o;7846:180::-;7894:77;7891:1;7884:88;7991:4;7988:1;7981:15;8015:4;8012:1;8005:15;8032:320;8076:6;8113:1;8107:4;8103:12;8093:22;;8160:1;8154:4;8150:12;8181:18;8171:81;;8237:4;8229:6;8225:17;8215:27;;8171:81;8299:2;8291:6;8288:14;8268:18;8265:38;8262:84;;8318:18;;:::i;:::-;8262:84;8083:269;8032:320;;;:::o;8358:180::-;8406:77;8403:1;8396:88;8503:4;8500:1;8493:15;8527:4;8524:1;8517:15;8544:194;8584:4;8604:20;8622:1;8604:20;:::i;:::-;8599:25;;8638:20;8656:1;8638:20;:::i;:::-;8633:25;;8682:1;8679;8675:9;8667:17;;8706:1;8700:4;8697:11;8694:37;;;8711:18;;:::i;:::-;8694:37;8544:194;;;;:::o;8744:173::-;8884:25;8880:1;8872:6;8868:14;8861:49;8744:173;:::o;8923:366::-;9065:3;9086:67;9150:2;9145:3;9086:67;:::i;:::-;9079:74;;9162:93;9251:3;9162:93;:::i;:::-;9280:2;9275:3;9271:12;9264:19;;8923:366;;;:::o;9295:419::-;9461:4;9499:2;9488:9;9484:18;9476:26;;9548:9;9542:4;9538:20;9534:1;9523:9;9519:17;9512:47;9576:131;9702:4;9576:131;:::i;:::-;9568:139;;9295:419;;;:::o;9720:118::-;9807:24;9825:5;9807:24;:::i;:::-;9802:3;9795:37;9720:118;;:::o;9844:775::-;10077:4;10115:3;10104:9;10100:19;10092:27;;10129:71;10197:1;10186:9;10182:17;10173:6;10129:71;:::i;:::-;10210:72;10278:2;10267:9;10263:18;10254:6;10210:72;:::i;:::-;10292;10360:2;10349:9;10345:18;10336:6;10292:72;:::i;:::-;10374;10442:2;10431:9;10427:18;10418:6;10374:72;:::i;:::-;10456:73;10524:3;10513:9;10509:19;10500:6;10456:73;:::i;:::-;10539;10607:3;10596:9;10592:19;10583:6;10539:73;:::i;:::-;9844:775;;;;;;;;;:::o;10625:148::-;10727:11;10764:3;10749:18;;10625:148;;;;:::o;10779:214::-;10919:66;10915:1;10907:6;10903:14;10896:90;10779:214;:::o;10999:400::-;11159:3;11180:84;11262:1;11257:3;11180:84;:::i;:::-;11173:91;;11273:93;11362:3;11273:93;:::i;:::-;11391:1;11386:3;11382:11;11375:18;;10999:400;;;:::o;11405:79::-;11444:7;11473:5;11462:16;;11405:79;;;:::o;11490:157::-;11595:45;11615:24;11633:5;11615:24;:::i;:::-;11595:45;:::i;:::-;11590:3;11583:58;11490:157;;:::o;11653:663::-;11894:3;11916:148;12060:3;11916:148;:::i;:::-;11909:155;;12074:75;12145:3;12136:6;12074:75;:::i;:::-;12174:2;12169:3;12165:12;12158:19;;12187:75;12258:3;12249:6;12187:75;:::i;:::-;12287:2;12282:3;12278:12;12271:19;;12307:3;12300:10;;11653:663;;;;;:::o;12322:545::-;12495:4;12533:3;12522:9;12518:19;12510:27;;12547:71;12615:1;12604:9;12600:17;12591:6;12547:71;:::i;:::-;12628:68;12692:2;12681:9;12677:18;12668:6;12628:68;:::i;:::-;12706:72;12774:2;12763:9;12759:18;12750:6;12706:72;:::i;:::-;12788;12856:2;12845:9;12841:18;12832:6;12788:72;:::i;:::-;12322:545;;;;;;;:::o;12873:164::-;13013:16;13009:1;13001:6;12997:14;12990:40;12873:164;:::o;13043:366::-;13185:3;13206:67;13270:2;13265:3;13206:67;:::i;:::-;13199:74;;13282:93;13371:3;13282:93;:::i;:::-;13400:2;13395:3;13391:12;13384:19;;13043:366;;;:::o;13415:419::-;13581:4;13619:2;13608:9;13604:18;13596:26;;13668:9;13662:4;13658:20;13654:1;13643:9;13639:17;13632:47;13696:131;13822:4;13696:131;:::i;:::-;13688:139;;13415:419;;;:::o;13840:147::-;13941:11;13978:3;13963:18;;13840:147;;;;:::o;13993:144::-;14045:4;14068:3;14060:11;;14091:3;14088:1;14081:14;14125:4;14122:1;14112:18;14104:26;;13993:144;;;:::o;14165:878::-;14270:3;14307:5;14301:12;14336:36;14362:9;14336:36;:::i;:::-;14388:88;14469:6;14464:3;14388:88;:::i;:::-;14381:95;;14507:1;14496:9;14492:17;14523:1;14518:166;;;;14698:1;14693:344;;;;14485:552;;14518:166;14602:4;14598:9;14587;14583:25;14578:3;14571:38;14664:6;14657:14;14650:22;14642:6;14638:35;14633:3;14629:45;14622:52;;14518:166;;14693:344;14760:41;14795:5;14760:41;:::i;:::-;14823:1;14837:154;14851:6;14848:1;14845:13;14837:154;;;14925:7;14919:14;14915:1;14910:3;14906:11;14899:35;14975:1;14966:7;14962:15;14951:26;;14873:4;14870:1;14866:12;14861:17;;14837:154;;;15020:6;15015:3;15011:16;15004:23;;14700:337;;14485:552;;14274:769;;14165:878;;;;:::o;15049:273::-;15180:3;15202:94;15292:3;15283:6;15202:94;:::i;:::-;15195:101;;15313:3;15306:10;;15049:273;;;;:::o;15328:664::-;15533:4;15571:3;15560:9;15556:19;15548:27;;15585:71;15653:1;15642:9;15638:17;15629:6;15585:71;:::i;:::-;15666:72;15734:2;15723:9;15719:18;15710:6;15666:72;:::i;:::-;15748;15816:2;15805:9;15801:18;15792:6;15748:72;:::i;:::-;15830;15898:2;15887:9;15883:18;15874:6;15830:72;:::i;:::-;15912:73;15980:3;15969:9;15965:19;15956:6;15912:73;:::i;:::-;15328:664;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1058000","executionCost":"infinite","totalCost":"infinite"},"external":{"DOMAIN_SEPARATOR()":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2814","decimals()":"infinite","name()":"infinite","nonces(address)":"2836","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","symbol()":"infinite","totalSupply()":"2474","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_holders\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/USDC.sol\":\"USDC\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/USDC.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./dependencies/solmate/ERC20.sol\\\";\\n\\ncontract USDC is ERC20 {\\n    constructor(address[] memory _holders) ERC20(\\\"USDC\\\", \\\"USDC\\\", 18) {\\n        uint256 holdersLength = _holders.length;\\n\\n        for (uint256 i = 0; i < holdersLength; i++) {\\n            _mint(_holders[i], 100_000 * 1e18);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1e53350439d14abc7f1ef812a95e948b900aa52c6de530dbb6059ab594d4715d\",\"license\":\"MIT\"},\"src/dependencies/solmate/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3610,"contract":"src/USDC.sol:USDC","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":3612,"contract":"src/USDC.sol:USDC","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":3616,"contract":"src/USDC.sol:USDC","label":"totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":3620,"contract":"src/USDC.sol:USDC","label":"balanceOf","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":3626,"contract":"src/USDC.sol:USDC","label":"allowance","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":3634,"contract":"src/USDC.sol:USDC","label":"nonces","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/dependencies/flux/CLInterface.sol":{"CLInterface":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"int256","name":"current","type":"int256"},{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"updatedAt","type":"uint256"}],"name":"AnswerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":true,"internalType":"address","name":"startedBy","type":"address"},{"indexed":false,"internalType":"uint256","name":"startedAt","type":"uint256"}],"name":"NewRound","type":"event"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAnswer(uint256)":"b5ab58dc","getTimestamp(uint256)":"b633620c","latestAnswer()":"50d25bcd","latestRound()":"668a0f02","latestTimestamp()":"8205bf6a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/dependencies/flux/CLInterface.sol\":\"CLInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/dependencies/flux/CLInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\ninterface CLInterface {\\n    function latestAnswer() external view returns (int256);\\n\\n    function latestTimestamp() external view returns (uint256);\\n\\n    function latestRound() external view returns (uint256);\\n\\n    function getAnswer(uint256 roundId) external view returns (int256);\\n\\n    function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n    event AnswerUpdated(\\n        int256 indexed current,\\n        uint256 indexed roundId,\\n        uint256 updatedAt\\n    );\\n    event NewRound(\\n        uint256 indexed roundId,\\n        address indexed startedBy,\\n        uint256 startedAt\\n    );\\n}\\n\",\"keccak256\":\"0x9baff0f8ebee0f9061976d6e23535ad91a364ecbf82e4a0e1c9623be2dada605\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/dependencies/flux/CLV2V3Interface.sol":{"CLV2V3Interface":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"int256","name":"current","type":"int256"},{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"updatedAt","type":"uint256"}],"name":"AnswerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":true,"internalType":"address","name":"startedBy","type":"address"},{"indexed":false,"internalType":"uint256","name":"startedAt","type":"uint256"}],"name":"NewRound","type":"event"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getAnswer(uint256)":"b5ab58dc","getRoundData(uint80)":"9a6fc8f5","getTimestamp(uint256)":"b633620c","latestAnswer()":"50d25bcd","latestRound()":"668a0f02","latestRoundData()":"feaf968c","latestTimestamp()":"8205bf6a","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/dependencies/flux/CLV2V3Interface.sol\":\"CLV2V3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/dependencies/flux/CLInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\ninterface CLInterface {\\n    function latestAnswer() external view returns (int256);\\n\\n    function latestTimestamp() external view returns (uint256);\\n\\n    function latestRound() external view returns (uint256);\\n\\n    function getAnswer(uint256 roundId) external view returns (int256);\\n\\n    function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n    event AnswerUpdated(\\n        int256 indexed current,\\n        uint256 indexed roundId,\\n        uint256 updatedAt\\n    );\\n    event NewRound(\\n        uint256 indexed roundId,\\n        address indexed startedBy,\\n        uint256 startedAt\\n    );\\n}\\n\",\"keccak256\":\"0x9baff0f8ebee0f9061976d6e23535ad91a364ecbf82e4a0e1c9623be2dada605\",\"license\":\"MIT\"},\"src/dependencies/flux/CLV2V3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./CLInterface.sol\\\";\\nimport \\\"./CLV3Interface.sol\\\";\\n\\n/* solhint-disable-next-line no-empty-blocks */\\ninterface CLV2V3Interface is CLInterface, CLV3Interface {\\n\\n}\\n\",\"keccak256\":\"0x9ce7d6c594ce0f86b27e3d0eaea94999e04b443d95fa9a8c9dd5c7b94032e6c6\",\"license\":\"MIT\"},\"src/dependencies/flux/CLV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\ninterface CLV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n    // if they do not have data to report, instead of returning unset values\\n    // which could be misinterpreted as actual reported values.\\n    function getRoundData(uint80 _roundId)\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x678f3a63ba7a7d8b37a6333cac5ee1c79d3ae42e541180da59a3156385d53482\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/dependencies/flux/CLV3Interface.sol":{"CLV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/dependencies/flux/CLV3Interface.sol\":\"CLV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/dependencies/flux/CLV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\ninterface CLV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n    // if they do not have data to report, instead of returning unset values\\n    // which could be misinterpreted as actual reported values.\\n    function getRoundData(uint80 _roundId)\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x678f3a63ba7a7d8b37a6333cac5ee1c79d3ae42e541180da59a3156385d53482\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/dependencies/prb-math/PRBMath.sol":{"PRBMath":{"abi":[],"devdoc":{"details":"Common mathematical functions used in both PRBMathSD59x18 and PRBMathUD60x18. Note that this shared library does not always assume the signed 59.18-decimal fixed-point or the unsigned 60.18-decimal fixed-point representation. When it does not, it is explicitly mentioned in the NatSpec documentation.","kind":"dev","methods":{},"stateVariables":{"SCALE":{"details":"How many trailing decimals can be represented."},"SCALE_INVERSE":{"details":"SCALE inverted mod 2^256."},"SCALE_LPOTD":{"details":"Largest power of two divisor of SCALE."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa3b7fc1ab1b12cf3513cd1f5f4f64749bb9be3f09ab225a048b3e8c7e78574164736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA EXTCODESIZE PUSH32 0xC1AB1B12CF3513CD1F5F4F64749BB9BE3F09AB225A048B3E8C7E78574164736F PUSH13 0x63430008110033000000000000 ","sourceMap":"3945:21479:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa3b7fc1ab1b12cf3513cd1f5f4f64749bb9be3f09ab225a048b3e8c7e78574164736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA EXTCODESIZE PUSH32 0xC1AB1B12CF3513CD1F5F4F64749BB9BE3F09AB225A048B3E8C7E78574164736F PUSH13 0x63430008110033000000000000 ","sourceMap":"3945:21479:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"exp2(uint256)":"infinite","mostSignificantBit(uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDivFixedPoint(uint256,uint256)":"infinite","mulDivSigned(int256,int256,int256)":"infinite","sqrt(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Common mathematical functions used in both PRBMathSD59x18 and PRBMathUD60x18. Note that this shared library does not always assume the signed 59.18-decimal fixed-point or the unsigned 60.18-decimal fixed-point representation. When it does not, it is explicitly mentioned in the NatSpec documentation.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"SCALE\":{\"details\":\"How many trailing decimals can be represented.\"},\"SCALE_INVERSE\":{\"details\":\"SCALE inverted mod 2^256.\"},\"SCALE_LPOTD\":{\"details\":\"Largest power of two divisor of SCALE.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/dependencies/prb-math/PRBMath.sol\":\"PRBMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/dependencies/prb-math/PRBMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\n/// @notice Emitted when the result overflows uint256.\\nerror PRBMath__MulDivFixedPointOverflow(uint256 prod1);\\n\\n/// @notice Emitted when the result overflows uint256.\\nerror PRBMath__MulDivOverflow(uint256 prod1, uint256 denominator);\\n\\n/// @notice Emitted when one of the inputs is type(int256).min.\\nerror PRBMath__MulDivSignedInputTooSmall();\\n\\n/// @notice Emitted when the intermediary absolute result overflows int256.\\nerror PRBMath__MulDivSignedOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is MIN_SD59x18.\\nerror PRBMathSD59x18__AbsInputTooSmall();\\n\\n/// @notice Emitted when ceiling a number overflows SD59x18.\\nerror PRBMathSD59x18__CeilOverflow(int256 x);\\n\\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\\nerror PRBMathSD59x18__DivInputTooSmall();\\n\\n/// @notice Emitted when one of the intermediary unsigned results overflows SD59x18.\\nerror PRBMathSD59x18__DivOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is greater than 133.084258667509499441.\\nerror PRBMathSD59x18__ExpInputTooBig(int256 x);\\n\\n/// @notice Emitted when the input is greater than 192.\\nerror PRBMathSD59x18__Exp2InputTooBig(int256 x);\\n\\n/// @notice Emitted when flooring a number underflows SD59x18.\\nerror PRBMathSD59x18__FloorUnderflow(int256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format overflows SD59x18.\\nerror PRBMathSD59x18__FromIntOverflow(int256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format underflows SD59x18.\\nerror PRBMathSD59x18__FromIntUnderflow(int256 x);\\n\\n/// @notice Emitted when the product of the inputs is negative.\\nerror PRBMathSD59x18__GmNegativeProduct(int256 x, int256 y);\\n\\n/// @notice Emitted when multiplying the inputs overflows SD59x18.\\nerror PRBMathSD59x18__GmOverflow(int256 x, int256 y);\\n\\n/// @notice Emitted when the input is less than or equal to zero.\\nerror PRBMathSD59x18__LogInputTooSmall(int256 x);\\n\\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\\nerror PRBMathSD59x18__MulInputTooSmall();\\n\\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\\nerror PRBMathSD59x18__MulOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\\nerror PRBMathSD59x18__PowuOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is negative.\\nerror PRBMathSD59x18__SqrtNegativeInput(int256 x);\\n\\n/// @notice Emitted when the calculating the square root overflows SD59x18.\\nerror PRBMathSD59x18__SqrtOverflow(int256 x);\\n\\n/// @notice Emitted when addition overflows UD60x18.\\nerror PRBMathUD60x18__AddOverflow(uint256 x, uint256 y);\\n\\n/// @notice Emitted when ceiling a number overflows UD60x18.\\nerror PRBMathUD60x18__CeilOverflow(uint256 x);\\n\\n/// @notice Emitted when the input is greater than 133.084258667509499441.\\nerror PRBMathUD60x18__ExpInputTooBig(uint256 x);\\n\\n/// @notice Emitted when the input is greater than 192.\\nerror PRBMathUD60x18__Exp2InputTooBig(uint256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format format overflows UD60x18.\\nerror PRBMathUD60x18__FromUintOverflow(uint256 x);\\n\\n/// @notice Emitted when multiplying the inputs overflows UD60x18.\\nerror PRBMathUD60x18__GmOverflow(uint256 x, uint256 y);\\n\\n/// @notice Emitted when the input is less than 1.\\nerror PRBMathUD60x18__LogInputTooSmall(uint256 x);\\n\\n/// @notice Emitted when the calculating the square root overflows UD60x18.\\nerror PRBMathUD60x18__SqrtOverflow(uint256 x);\\n\\n/// @notice Emitted when subtraction underflows UD60x18.\\nerror PRBMathUD60x18__SubUnderflow(uint256 x, uint256 y);\\n\\n/// @dev Common mathematical functions used in both PRBMathSD59x18 and PRBMathUD60x18. Note that this shared library\\n/// does not always assume the signed 59.18-decimal fixed-point or the unsigned 60.18-decimal fixed-point\\n/// representation. When it does not, it is explicitly mentioned in the NatSpec documentation.\\nlibrary PRBMath {\\n    /// STRUCTS ///\\n\\n    struct SD59x18 {\\n        int256 value;\\n    }\\n\\n    struct UD60x18 {\\n        uint256 value;\\n    }\\n\\n    /// STORAGE ///\\n\\n    /// @dev How many trailing decimals can be represented.\\n    uint256 internal constant SCALE = 1e18;\\n\\n    /// @dev Largest power of two divisor of SCALE.\\n    uint256 internal constant SCALE_LPOTD = 262144;\\n\\n    /// @dev SCALE inverted mod 2^256.\\n    uint256 internal constant SCALE_INVERSE =\\n        78156646155174841979727994598816262306175212592076161876661_508869554232690281;\\n\\n    /// FUNCTIONS ///\\n\\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\\n    /// @dev Has to use 192.64-bit fixed-point numbers.\\n    /// See https://ethereum.stackexchange.com/a/96594/24693.\\n    /// @param x The exponent as an unsigned 192.64-bit fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp2(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            // Start from 0.5 in the 192.64-bit fixed-point format.\\n            result = 0x800000000000000000000000000000000000000000000000;\\n\\n            // Multiply the result by root(2, 2^-i) when the bit at position i is 1. None of the intermediary results overflows\\n            // because the initial result is 2^191 and all magic factors are less than 2^65.\\n            if (x & 0x8000000000000000 > 0) {\\n                result = (result * 0x16A09E667F3BCC909) >> 64;\\n            }\\n            if (x & 0x4000000000000000 > 0) {\\n                result = (result * 0x1306FE0A31B7152DF) >> 64;\\n            }\\n            if (x & 0x2000000000000000 > 0) {\\n                result = (result * 0x1172B83C7D517ADCE) >> 64;\\n            }\\n            if (x & 0x1000000000000000 > 0) {\\n                result = (result * 0x10B5586CF9890F62A) >> 64;\\n            }\\n            if (x & 0x800000000000000 > 0) {\\n                result = (result * 0x1059B0D31585743AE) >> 64;\\n            }\\n            if (x & 0x400000000000000 > 0) {\\n                result = (result * 0x102C9A3E778060EE7) >> 64;\\n            }\\n            if (x & 0x200000000000000 > 0) {\\n                result = (result * 0x10163DA9FB33356D8) >> 64;\\n            }\\n            if (x & 0x100000000000000 > 0) {\\n                result = (result * 0x100B1AFA5ABCBED61) >> 64;\\n            }\\n            if (x & 0x80000000000000 > 0) {\\n                result = (result * 0x10058C86DA1C09EA2) >> 64;\\n            }\\n            if (x & 0x40000000000000 > 0) {\\n                result = (result * 0x1002C605E2E8CEC50) >> 64;\\n            }\\n            if (x & 0x20000000000000 > 0) {\\n                result = (result * 0x100162F3904051FA1) >> 64;\\n            }\\n            if (x & 0x10000000000000 > 0) {\\n                result = (result * 0x1000B175EFFDC76BA) >> 64;\\n            }\\n            if (x & 0x8000000000000 > 0) {\\n                result = (result * 0x100058BA01FB9F96D) >> 64;\\n            }\\n            if (x & 0x4000000000000 > 0) {\\n                result = (result * 0x10002C5CC37DA9492) >> 64;\\n            }\\n            if (x & 0x2000000000000 > 0) {\\n                result = (result * 0x1000162E525EE0547) >> 64;\\n            }\\n            if (x & 0x1000000000000 > 0) {\\n                result = (result * 0x10000B17255775C04) >> 64;\\n            }\\n            if (x & 0x800000000000 > 0) {\\n                result = (result * 0x1000058B91B5BC9AE) >> 64;\\n            }\\n            if (x & 0x400000000000 > 0) {\\n                result = (result * 0x100002C5C89D5EC6D) >> 64;\\n            }\\n            if (x & 0x200000000000 > 0) {\\n                result = (result * 0x10000162E43F4F831) >> 64;\\n            }\\n            if (x & 0x100000000000 > 0) {\\n                result = (result * 0x100000B1721BCFC9A) >> 64;\\n            }\\n            if (x & 0x80000000000 > 0) {\\n                result = (result * 0x10000058B90CF1E6E) >> 64;\\n            }\\n            if (x & 0x40000000000 > 0) {\\n                result = (result * 0x1000002C5C863B73F) >> 64;\\n            }\\n            if (x & 0x20000000000 > 0) {\\n                result = (result * 0x100000162E430E5A2) >> 64;\\n            }\\n            if (x & 0x10000000000 > 0) {\\n                result = (result * 0x1000000B172183551) >> 64;\\n            }\\n            if (x & 0x8000000000 > 0) {\\n                result = (result * 0x100000058B90C0B49) >> 64;\\n            }\\n            if (x & 0x4000000000 > 0) {\\n                result = (result * 0x10000002C5C8601CC) >> 64;\\n            }\\n            if (x & 0x2000000000 > 0) {\\n                result = (result * 0x1000000162E42FFF0) >> 64;\\n            }\\n            if (x & 0x1000000000 > 0) {\\n                result = (result * 0x10000000B17217FBB) >> 64;\\n            }\\n            if (x & 0x800000000 > 0) {\\n                result = (result * 0x1000000058B90BFCE) >> 64;\\n            }\\n            if (x & 0x400000000 > 0) {\\n                result = (result * 0x100000002C5C85FE3) >> 64;\\n            }\\n            if (x & 0x200000000 > 0) {\\n                result = (result * 0x10000000162E42FF1) >> 64;\\n            }\\n            if (x & 0x100000000 > 0) {\\n                result = (result * 0x100000000B17217F8) >> 64;\\n            }\\n            if (x & 0x80000000 > 0) {\\n                result = (result * 0x10000000058B90BFC) >> 64;\\n            }\\n            if (x & 0x40000000 > 0) {\\n                result = (result * 0x1000000002C5C85FE) >> 64;\\n            }\\n            if (x & 0x20000000 > 0) {\\n                result = (result * 0x100000000162E42FF) >> 64;\\n            }\\n            if (x & 0x10000000 > 0) {\\n                result = (result * 0x1000000000B17217F) >> 64;\\n            }\\n            if (x & 0x8000000 > 0) {\\n                result = (result * 0x100000000058B90C0) >> 64;\\n            }\\n            if (x & 0x4000000 > 0) {\\n                result = (result * 0x10000000002C5C860) >> 64;\\n            }\\n            if (x & 0x2000000 > 0) {\\n                result = (result * 0x1000000000162E430) >> 64;\\n            }\\n            if (x & 0x1000000 > 0) {\\n                result = (result * 0x10000000000B17218) >> 64;\\n            }\\n            if (x & 0x800000 > 0) {\\n                result = (result * 0x1000000000058B90C) >> 64;\\n            }\\n            if (x & 0x400000 > 0) {\\n                result = (result * 0x100000000002C5C86) >> 64;\\n            }\\n            if (x & 0x200000 > 0) {\\n                result = (result * 0x10000000000162E43) >> 64;\\n            }\\n            if (x & 0x100000 > 0) {\\n                result = (result * 0x100000000000B1721) >> 64;\\n            }\\n            if (x & 0x80000 > 0) {\\n                result = (result * 0x10000000000058B91) >> 64;\\n            }\\n            if (x & 0x40000 > 0) {\\n                result = (result * 0x1000000000002C5C8) >> 64;\\n            }\\n            if (x & 0x20000 > 0) {\\n                result = (result * 0x100000000000162E4) >> 64;\\n            }\\n            if (x & 0x10000 > 0) {\\n                result = (result * 0x1000000000000B172) >> 64;\\n            }\\n            if (x & 0x8000 > 0) {\\n                result = (result * 0x100000000000058B9) >> 64;\\n            }\\n            if (x & 0x4000 > 0) {\\n                result = (result * 0x10000000000002C5D) >> 64;\\n            }\\n            if (x & 0x2000 > 0) {\\n                result = (result * 0x1000000000000162E) >> 64;\\n            }\\n            if (x & 0x1000 > 0) {\\n                result = (result * 0x10000000000000B17) >> 64;\\n            }\\n            if (x & 0x800 > 0) {\\n                result = (result * 0x1000000000000058C) >> 64;\\n            }\\n            if (x & 0x400 > 0) {\\n                result = (result * 0x100000000000002C6) >> 64;\\n            }\\n            if (x & 0x200 > 0) {\\n                result = (result * 0x10000000000000163) >> 64;\\n            }\\n            if (x & 0x100 > 0) {\\n                result = (result * 0x100000000000000B1) >> 64;\\n            }\\n            if (x & 0x80 > 0) {\\n                result = (result * 0x10000000000000059) >> 64;\\n            }\\n            if (x & 0x40 > 0) {\\n                result = (result * 0x1000000000000002C) >> 64;\\n            }\\n            if (x & 0x20 > 0) {\\n                result = (result * 0x10000000000000016) >> 64;\\n            }\\n            if (x & 0x10 > 0) {\\n                result = (result * 0x1000000000000000B) >> 64;\\n            }\\n            if (x & 0x8 > 0) {\\n                result = (result * 0x10000000000000006) >> 64;\\n            }\\n            if (x & 0x4 > 0) {\\n                result = (result * 0x10000000000000003) >> 64;\\n            }\\n            if (x & 0x2 > 0) {\\n                result = (result * 0x10000000000000001) >> 64;\\n            }\\n            if (x & 0x1 > 0) {\\n                result = (result * 0x10000000000000001) >> 64;\\n            }\\n\\n            // We're doing two things at the same time:\\n            //\\n            //   1. Multiply the result by 2^n + 1, where \\\"2^n\\\" is the integer part and the one is added to account for\\n            //      the fact that we initially set the result to 0.5. This is accomplished by subtracting from 191\\n            //      rather than 192.\\n            //   2. Convert the result to the unsigned 60.18-decimal fixed-point format.\\n            //\\n            // This works because 2^(191-ip) = 2^ip / 2^191, where \\\"ip\\\" is the integer part \\\"2^n\\\".\\n            result *= SCALE;\\n            result >>= (191 - (x >> 64));\\n        }\\n    }\\n\\n    /// @notice Finds the zero-based index of the first one in the binary representation of x.\\n    /// @dev See the note on msb in the \\\"Find First Set\\\" Wikipedia article https://en.wikipedia.org/wiki/Find_first_set\\n    /// @param x The uint256 number for which to find the index of the most significant bit.\\n    /// @return msb The index of the most significant bit as an uint256.\\n    function mostSignificantBit(uint256 x) internal pure returns (uint256 msb) {\\n        if (x >= 2**128) {\\n            x >>= 128;\\n            msb += 128;\\n        }\\n        if (x >= 2**64) {\\n            x >>= 64;\\n            msb += 64;\\n        }\\n        if (x >= 2**32) {\\n            x >>= 32;\\n            msb += 32;\\n        }\\n        if (x >= 2**16) {\\n            x >>= 16;\\n            msb += 16;\\n        }\\n        if (x >= 2**8) {\\n            x >>= 8;\\n            msb += 8;\\n        }\\n        if (x >= 2**4) {\\n            x >>= 4;\\n            msb += 4;\\n        }\\n        if (x >= 2**2) {\\n            x >>= 2;\\n            msb += 2;\\n        }\\n        if (x >= 2**1) {\\n            // No need to shift x any more.\\n            msb += 1;\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f7denominator) with full precision.\\n    ///\\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv.\\n    ///\\n    /// Requirements:\\n    /// - The denominator cannot be zero.\\n    /// - The result must fit within uint256.\\n    ///\\n    /// Caveats:\\n    /// - This function does not work with fixed-point numbers.\\n    ///\\n    /// @param x The multiplicand as an uint256.\\n    /// @param y The multiplier as an uint256.\\n    /// @param denominator The divisor as an uint256.\\n    /// @return result The result as an uint256.\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n        // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n        // variables such that product = prod1 * 2^256 + prod0.\\n        uint256 prod0; // Least significant 256 bits of the product\\n        uint256 prod1; // Most significant 256 bits of the product\\n        assembly {\\n            let mm := mulmod(x, y, not(0))\\n            prod0 := mul(x, y)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        // Handle non-overflow cases, 256 by 256 division.\\n        if (prod1 == 0) {\\n            unchecked {\\n                result = prod0 / denominator;\\n            }\\n            return result;\\n        }\\n\\n        // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n        if (prod1 >= denominator) {\\n            revert PRBMath__MulDivOverflow(prod1, denominator);\\n        }\\n\\n        ///////////////////////////////////////////////\\n        // 512 by 256 division.\\n        ///////////////////////////////////////////////\\n\\n        // Make division exact by subtracting the remainder from [prod1 prod0].\\n        uint256 remainder;\\n        assembly {\\n            // Compute remainder using mulmod.\\n            remainder := mulmod(x, y, denominator)\\n\\n            // Subtract 256 bit number from 512 bit number.\\n            prod1 := sub(prod1, gt(remainder, prod0))\\n            prod0 := sub(prod0, remainder)\\n        }\\n\\n        // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n        // See https://cs.stackexchange.com/q/138556/92363.\\n        unchecked {\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 lpotdod = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by lpotdod.\\n                denominator := div(denominator, lpotdod)\\n\\n                // Divide [prod1 prod0] by lpotdod.\\n                prod0 := div(prod0, lpotdod)\\n\\n                // Flip lpotdod such that it is 2^256 / lpotdod. If lpotdod is zero, then it becomes one.\\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * lpotdod;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f71e18) with full precision.\\n    ///\\n    /// @dev Variant of \\\"mulDiv\\\" with constant folding, i.e. in which the denominator is always 1e18. Before returning the\\n    /// final result, we add 1 if (x * y) % SCALE >= HALF_SCALE. Without this, 6.6e-19 would be truncated to 0 instead of\\n    /// being rounded to 1e-18.  See \\\"Listing 6\\\" and text above it at https://accu.org/index.php/journals/1717.\\n    ///\\n    /// Requirements:\\n    /// - The result must fit within uint256.\\n    ///\\n    /// Caveats:\\n    /// - The body is purposely left uncommented; see the NatSpec comments in \\\"PRBMath.mulDiv\\\" to understand how this works.\\n    /// - It is assumed that the result can never be type(uint256).max when x and y solve the following two equations:\\n    ///     1. x * y = type(uint256).max * SCALE\\n    ///     2. (x * y) % SCALE >= SCALE / 2\\n    ///\\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function mulDivFixedPoint(uint256 x, uint256 y)\\n        internal\\n        pure\\n        returns (uint256 result)\\n    {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(x, y, not(0))\\n            prod0 := mul(x, y)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= SCALE) {\\n            revert PRBMath__MulDivFixedPointOverflow(prod1);\\n        }\\n\\n        uint256 remainder;\\n        uint256 roundUpUnit;\\n        assembly {\\n            remainder := mulmod(x, y, SCALE)\\n            roundUpUnit := gt(remainder, 499999999999999999)\\n        }\\n\\n        if (prod1 == 0) {\\n            unchecked {\\n                result = (prod0 / SCALE) + roundUpUnit;\\n                return result;\\n            }\\n        }\\n\\n        assembly {\\n            result := add(\\n                mul(\\n                    or(\\n                        div(sub(prod0, remainder), SCALE_LPOTD),\\n                        mul(\\n                            sub(prod1, gt(remainder, prod0)),\\n                            add(div(sub(0, SCALE_LPOTD), SCALE_LPOTD), 1)\\n                        )\\n                    ),\\n                    SCALE_INVERSE\\n                ),\\n                roundUpUnit\\n            )\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f7denominator) with full precision.\\n    ///\\n    /// @dev An extension of \\\"mulDiv\\\" for signed numbers. Works by computing the signs and the absolute values separately.\\n    ///\\n    /// Requirements:\\n    /// - None of the inputs can be type(int256).min.\\n    /// - The result must fit within int256.\\n    ///\\n    /// @param x The multiplicand as an int256.\\n    /// @param y The multiplier as an int256.\\n    /// @param denominator The divisor as an int256.\\n    /// @return result The result as an int256.\\n    function mulDivSigned(\\n        int256 x,\\n        int256 y,\\n        int256 denominator\\n    ) internal pure returns (int256 result) {\\n        if (\\n            x == type(int256).min ||\\n            y == type(int256).min ||\\n            denominator == type(int256).min\\n        ) {\\n            revert PRBMath__MulDivSignedInputTooSmall();\\n        }\\n\\n        // Get hold of the absolute values of x, y and the denominator.\\n        uint256 ax;\\n        uint256 ay;\\n        uint256 ad;\\n        unchecked {\\n            ax = x < 0 ? uint256(-x) : uint256(x);\\n            ay = y < 0 ? uint256(-y) : uint256(y);\\n            ad = denominator < 0 ? uint256(-denominator) : uint256(denominator);\\n        }\\n\\n        // Compute the absolute value of (x*y)\\u00f7denominator. The result must fit within int256.\\n        uint256 rAbs = mulDiv(ax, ay, ad);\\n        if (rAbs > uint256(type(int256).max)) {\\n            revert PRBMath__MulDivSignedOverflow(rAbs);\\n        }\\n\\n        // Get the signs of x, y and the denominator.\\n        uint256 sx;\\n        uint256 sy;\\n        uint256 sd;\\n        assembly {\\n            sx := sgt(x, sub(0, 1))\\n            sy := sgt(y, sub(0, 1))\\n            sd := sgt(denominator, sub(0, 1))\\n        }\\n\\n        // XOR over sx, sy and sd. This is checking whether there are one or three negative signs in the inputs.\\n        // If yes, the result should be negative.\\n        result = sx ^ sy ^ sd == 0 ? -int256(rAbs) : int256(rAbs);\\n    }\\n\\n    /// @notice Calculates the square root of x, rounding down.\\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\\n    ///\\n    /// Caveats:\\n    /// - This function does not work with fixed-point numbers.\\n    ///\\n    /// @param x The uint256 number for which to calculate the square root.\\n    /// @return result The result as an uint256.\\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n\\n        // Set the initial guess to the least power of two that is greater than or equal to sqrt(x).\\n        uint256 xAux = uint256(x);\\n        result = 1;\\n        if (xAux >= 0x100000000000000000000000000000000) {\\n            xAux >>= 128;\\n            result <<= 64;\\n        }\\n        if (xAux >= 0x10000000000000000) {\\n            xAux >>= 64;\\n            result <<= 32;\\n        }\\n        if (xAux >= 0x100000000) {\\n            xAux >>= 32;\\n            result <<= 16;\\n        }\\n        if (xAux >= 0x10000) {\\n            xAux >>= 16;\\n            result <<= 8;\\n        }\\n        if (xAux >= 0x100) {\\n            xAux >>= 8;\\n            result <<= 4;\\n        }\\n        if (xAux >= 0x10) {\\n            xAux >>= 4;\\n            result <<= 2;\\n        }\\n        if (xAux >= 0x8) {\\n            result <<= 1;\\n        }\\n\\n        // The operations can never overflow because the result is max 2^127 when it enters this block.\\n        unchecked {\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1; // Seven iterations should be enough\\n            uint256 roundedDownResult = x / result;\\n            return result >= roundedDownResult ? roundedDownResult : result;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcd5f95a3a6928ddbcb79ad407252c276e52a47f9d262d64130979d59a3bd4cd9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/dependencies/prb-math/PRBMathUD60x18.sol":{"PRBMathUD60x18":{"abi":[],"devdoc":{"author":"Paul Razvan Berg","kind":"dev","methods":{},"stateVariables":{"HALF_SCALE":{"details":"Half the SCALE number."},"LOG2_E":{"details":"log2(e) as an unsigned 60.18-decimal fixed-point number."},"MAX_UD60x18":{"details":"The maximum value an unsigned 60.18-decimal fixed-point number can have."},"MAX_WHOLE_UD60x18":{"details":"The maximum whole value an unsigned 60.18-decimal fixed-point number can have."},"SCALE":{"details":"How many trailing decimals can be represented."}},"title":"PRBMathUD60x18","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a9e178e686767a55dcf2a52e0ab72c7ad82137357f4a81b8cc2ee8c62651ca0a64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xE1 PUSH25 0xE686767A55DCF2A52E0AB72C7AD82137357F4A81B8CC2EE8C6 0x26 MLOAD 0xCA EXP PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"560:24502:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a9e178e686767a55dcf2a52e0ab72c7ad82137357f4a81b8cc2ee8c62651ca0a64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xE1 PUSH25 0xE686767A55DCF2A52E0AB72C7AD82137357F4A81B8CC2EE8C6 0x26 MLOAD 0xCA EXP PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"560:24502:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"avg(uint256,uint256)":"infinite","ceil(uint256)":"infinite","div(uint256,uint256)":"infinite","e()":"infinite","exp(uint256)":"infinite","exp2(uint256)":"infinite","floor(uint256)":"infinite","frac(uint256)":"infinite","fromUint(uint256)":"infinite","gm(uint256,uint256)":"infinite","inv(uint256)":"infinite","ln(uint256)":"infinite","log10(uint256)":"infinite","log2(uint256)":"infinite","mul(uint256,uint256)":"infinite","pi()":"infinite","pow(uint256,uint256)":"infinite","powu(uint256,uint256)":"infinite","scale()":"infinite","sqrt(uint256)":"infinite","toUint(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"HALF_SCALE\":{\"details\":\"Half the SCALE number.\"},\"LOG2_E\":{\"details\":\"log2(e) as an unsigned 60.18-decimal fixed-point number.\"},\"MAX_UD60x18\":{\"details\":\"The maximum value an unsigned 60.18-decimal fixed-point number can have.\"},\"MAX_WHOLE_UD60x18\":{\"details\":\"The maximum whole value an unsigned 60.18-decimal fixed-point number can have.\"},\"SCALE\":{\"details\":\"How many trailing decimals can be represented.\"}},\"title\":\"PRBMathUD60x18\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Smart contract library for advanced fixed-point math that works with uint256 numbers considered to have 18 trailing decimals. We call this number representation unsigned 60.18-decimal fixed-point, since there can be up to 60 digits in the integer part and up to 18 decimals in the fractional part. The numbers are bound by the minimum and the maximum values permitted by the Solidity type uint256.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/dependencies/prb-math/PRBMathUD60x18.sol\":\"PRBMathUD60x18\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/dependencies/prb-math/PRBMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\n/// @notice Emitted when the result overflows uint256.\\nerror PRBMath__MulDivFixedPointOverflow(uint256 prod1);\\n\\n/// @notice Emitted when the result overflows uint256.\\nerror PRBMath__MulDivOverflow(uint256 prod1, uint256 denominator);\\n\\n/// @notice Emitted when one of the inputs is type(int256).min.\\nerror PRBMath__MulDivSignedInputTooSmall();\\n\\n/// @notice Emitted when the intermediary absolute result overflows int256.\\nerror PRBMath__MulDivSignedOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is MIN_SD59x18.\\nerror PRBMathSD59x18__AbsInputTooSmall();\\n\\n/// @notice Emitted when ceiling a number overflows SD59x18.\\nerror PRBMathSD59x18__CeilOverflow(int256 x);\\n\\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\\nerror PRBMathSD59x18__DivInputTooSmall();\\n\\n/// @notice Emitted when one of the intermediary unsigned results overflows SD59x18.\\nerror PRBMathSD59x18__DivOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is greater than 133.084258667509499441.\\nerror PRBMathSD59x18__ExpInputTooBig(int256 x);\\n\\n/// @notice Emitted when the input is greater than 192.\\nerror PRBMathSD59x18__Exp2InputTooBig(int256 x);\\n\\n/// @notice Emitted when flooring a number underflows SD59x18.\\nerror PRBMathSD59x18__FloorUnderflow(int256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format overflows SD59x18.\\nerror PRBMathSD59x18__FromIntOverflow(int256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format underflows SD59x18.\\nerror PRBMathSD59x18__FromIntUnderflow(int256 x);\\n\\n/// @notice Emitted when the product of the inputs is negative.\\nerror PRBMathSD59x18__GmNegativeProduct(int256 x, int256 y);\\n\\n/// @notice Emitted when multiplying the inputs overflows SD59x18.\\nerror PRBMathSD59x18__GmOverflow(int256 x, int256 y);\\n\\n/// @notice Emitted when the input is less than or equal to zero.\\nerror PRBMathSD59x18__LogInputTooSmall(int256 x);\\n\\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\\nerror PRBMathSD59x18__MulInputTooSmall();\\n\\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\\nerror PRBMathSD59x18__MulOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\\nerror PRBMathSD59x18__PowuOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is negative.\\nerror PRBMathSD59x18__SqrtNegativeInput(int256 x);\\n\\n/// @notice Emitted when the calculating the square root overflows SD59x18.\\nerror PRBMathSD59x18__SqrtOverflow(int256 x);\\n\\n/// @notice Emitted when addition overflows UD60x18.\\nerror PRBMathUD60x18__AddOverflow(uint256 x, uint256 y);\\n\\n/// @notice Emitted when ceiling a number overflows UD60x18.\\nerror PRBMathUD60x18__CeilOverflow(uint256 x);\\n\\n/// @notice Emitted when the input is greater than 133.084258667509499441.\\nerror PRBMathUD60x18__ExpInputTooBig(uint256 x);\\n\\n/// @notice Emitted when the input is greater than 192.\\nerror PRBMathUD60x18__Exp2InputTooBig(uint256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format format overflows UD60x18.\\nerror PRBMathUD60x18__FromUintOverflow(uint256 x);\\n\\n/// @notice Emitted when multiplying the inputs overflows UD60x18.\\nerror PRBMathUD60x18__GmOverflow(uint256 x, uint256 y);\\n\\n/// @notice Emitted when the input is less than 1.\\nerror PRBMathUD60x18__LogInputTooSmall(uint256 x);\\n\\n/// @notice Emitted when the calculating the square root overflows UD60x18.\\nerror PRBMathUD60x18__SqrtOverflow(uint256 x);\\n\\n/// @notice Emitted when subtraction underflows UD60x18.\\nerror PRBMathUD60x18__SubUnderflow(uint256 x, uint256 y);\\n\\n/// @dev Common mathematical functions used in both PRBMathSD59x18 and PRBMathUD60x18. Note that this shared library\\n/// does not always assume the signed 59.18-decimal fixed-point or the unsigned 60.18-decimal fixed-point\\n/// representation. When it does not, it is explicitly mentioned in the NatSpec documentation.\\nlibrary PRBMath {\\n    /// STRUCTS ///\\n\\n    struct SD59x18 {\\n        int256 value;\\n    }\\n\\n    struct UD60x18 {\\n        uint256 value;\\n    }\\n\\n    /// STORAGE ///\\n\\n    /// @dev How many trailing decimals can be represented.\\n    uint256 internal constant SCALE = 1e18;\\n\\n    /// @dev Largest power of two divisor of SCALE.\\n    uint256 internal constant SCALE_LPOTD = 262144;\\n\\n    /// @dev SCALE inverted mod 2^256.\\n    uint256 internal constant SCALE_INVERSE =\\n        78156646155174841979727994598816262306175212592076161876661_508869554232690281;\\n\\n    /// FUNCTIONS ///\\n\\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\\n    /// @dev Has to use 192.64-bit fixed-point numbers.\\n    /// See https://ethereum.stackexchange.com/a/96594/24693.\\n    /// @param x The exponent as an unsigned 192.64-bit fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp2(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            // Start from 0.5 in the 192.64-bit fixed-point format.\\n            result = 0x800000000000000000000000000000000000000000000000;\\n\\n            // Multiply the result by root(2, 2^-i) when the bit at position i is 1. None of the intermediary results overflows\\n            // because the initial result is 2^191 and all magic factors are less than 2^65.\\n            if (x & 0x8000000000000000 > 0) {\\n                result = (result * 0x16A09E667F3BCC909) >> 64;\\n            }\\n            if (x & 0x4000000000000000 > 0) {\\n                result = (result * 0x1306FE0A31B7152DF) >> 64;\\n            }\\n            if (x & 0x2000000000000000 > 0) {\\n                result = (result * 0x1172B83C7D517ADCE) >> 64;\\n            }\\n            if (x & 0x1000000000000000 > 0) {\\n                result = (result * 0x10B5586CF9890F62A) >> 64;\\n            }\\n            if (x & 0x800000000000000 > 0) {\\n                result = (result * 0x1059B0D31585743AE) >> 64;\\n            }\\n            if (x & 0x400000000000000 > 0) {\\n                result = (result * 0x102C9A3E778060EE7) >> 64;\\n            }\\n            if (x & 0x200000000000000 > 0) {\\n                result = (result * 0x10163DA9FB33356D8) >> 64;\\n            }\\n            if (x & 0x100000000000000 > 0) {\\n                result = (result * 0x100B1AFA5ABCBED61) >> 64;\\n            }\\n            if (x & 0x80000000000000 > 0) {\\n                result = (result * 0x10058C86DA1C09EA2) >> 64;\\n            }\\n            if (x & 0x40000000000000 > 0) {\\n                result = (result * 0x1002C605E2E8CEC50) >> 64;\\n            }\\n            if (x & 0x20000000000000 > 0) {\\n                result = (result * 0x100162F3904051FA1) >> 64;\\n            }\\n            if (x & 0x10000000000000 > 0) {\\n                result = (result * 0x1000B175EFFDC76BA) >> 64;\\n            }\\n            if (x & 0x8000000000000 > 0) {\\n                result = (result * 0x100058BA01FB9F96D) >> 64;\\n            }\\n            if (x & 0x4000000000000 > 0) {\\n                result = (result * 0x10002C5CC37DA9492) >> 64;\\n            }\\n            if (x & 0x2000000000000 > 0) {\\n                result = (result * 0x1000162E525EE0547) >> 64;\\n            }\\n            if (x & 0x1000000000000 > 0) {\\n                result = (result * 0x10000B17255775C04) >> 64;\\n            }\\n            if (x & 0x800000000000 > 0) {\\n                result = (result * 0x1000058B91B5BC9AE) >> 64;\\n            }\\n            if (x & 0x400000000000 > 0) {\\n                result = (result * 0x100002C5C89D5EC6D) >> 64;\\n            }\\n            if (x & 0x200000000000 > 0) {\\n                result = (result * 0x10000162E43F4F831) >> 64;\\n            }\\n            if (x & 0x100000000000 > 0) {\\n                result = (result * 0x100000B1721BCFC9A) >> 64;\\n            }\\n            if (x & 0x80000000000 > 0) {\\n                result = (result * 0x10000058B90CF1E6E) >> 64;\\n            }\\n            if (x & 0x40000000000 > 0) {\\n                result = (result * 0x1000002C5C863B73F) >> 64;\\n            }\\n            if (x & 0x20000000000 > 0) {\\n                result = (result * 0x100000162E430E5A2) >> 64;\\n            }\\n            if (x & 0x10000000000 > 0) {\\n                result = (result * 0x1000000B172183551) >> 64;\\n            }\\n            if (x & 0x8000000000 > 0) {\\n                result = (result * 0x100000058B90C0B49) >> 64;\\n            }\\n            if (x & 0x4000000000 > 0) {\\n                result = (result * 0x10000002C5C8601CC) >> 64;\\n            }\\n            if (x & 0x2000000000 > 0) {\\n                result = (result * 0x1000000162E42FFF0) >> 64;\\n            }\\n            if (x & 0x1000000000 > 0) {\\n                result = (result * 0x10000000B17217FBB) >> 64;\\n            }\\n            if (x & 0x800000000 > 0) {\\n                result = (result * 0x1000000058B90BFCE) >> 64;\\n            }\\n            if (x & 0x400000000 > 0) {\\n                result = (result * 0x100000002C5C85FE3) >> 64;\\n            }\\n            if (x & 0x200000000 > 0) {\\n                result = (result * 0x10000000162E42FF1) >> 64;\\n            }\\n            if (x & 0x100000000 > 0) {\\n                result = (result * 0x100000000B17217F8) >> 64;\\n            }\\n            if (x & 0x80000000 > 0) {\\n                result = (result * 0x10000000058B90BFC) >> 64;\\n            }\\n            if (x & 0x40000000 > 0) {\\n                result = (result * 0x1000000002C5C85FE) >> 64;\\n            }\\n            if (x & 0x20000000 > 0) {\\n                result = (result * 0x100000000162E42FF) >> 64;\\n            }\\n            if (x & 0x10000000 > 0) {\\n                result = (result * 0x1000000000B17217F) >> 64;\\n            }\\n            if (x & 0x8000000 > 0) {\\n                result = (result * 0x100000000058B90C0) >> 64;\\n            }\\n            if (x & 0x4000000 > 0) {\\n                result = (result * 0x10000000002C5C860) >> 64;\\n            }\\n            if (x & 0x2000000 > 0) {\\n                result = (result * 0x1000000000162E430) >> 64;\\n            }\\n            if (x & 0x1000000 > 0) {\\n                result = (result * 0x10000000000B17218) >> 64;\\n            }\\n            if (x & 0x800000 > 0) {\\n                result = (result * 0x1000000000058B90C) >> 64;\\n            }\\n            if (x & 0x400000 > 0) {\\n                result = (result * 0x100000000002C5C86) >> 64;\\n            }\\n            if (x & 0x200000 > 0) {\\n                result = (result * 0x10000000000162E43) >> 64;\\n            }\\n            if (x & 0x100000 > 0) {\\n                result = (result * 0x100000000000B1721) >> 64;\\n            }\\n            if (x & 0x80000 > 0) {\\n                result = (result * 0x10000000000058B91) >> 64;\\n            }\\n            if (x & 0x40000 > 0) {\\n                result = (result * 0x1000000000002C5C8) >> 64;\\n            }\\n            if (x & 0x20000 > 0) {\\n                result = (result * 0x100000000000162E4) >> 64;\\n            }\\n            if (x & 0x10000 > 0) {\\n                result = (result * 0x1000000000000B172) >> 64;\\n            }\\n            if (x & 0x8000 > 0) {\\n                result = (result * 0x100000000000058B9) >> 64;\\n            }\\n            if (x & 0x4000 > 0) {\\n                result = (result * 0x10000000000002C5D) >> 64;\\n            }\\n            if (x & 0x2000 > 0) {\\n                result = (result * 0x1000000000000162E) >> 64;\\n            }\\n            if (x & 0x1000 > 0) {\\n                result = (result * 0x10000000000000B17) >> 64;\\n            }\\n            if (x & 0x800 > 0) {\\n                result = (result * 0x1000000000000058C) >> 64;\\n            }\\n            if (x & 0x400 > 0) {\\n                result = (result * 0x100000000000002C6) >> 64;\\n            }\\n            if (x & 0x200 > 0) {\\n                result = (result * 0x10000000000000163) >> 64;\\n            }\\n            if (x & 0x100 > 0) {\\n                result = (result * 0x100000000000000B1) >> 64;\\n            }\\n            if (x & 0x80 > 0) {\\n                result = (result * 0x10000000000000059) >> 64;\\n            }\\n            if (x & 0x40 > 0) {\\n                result = (result * 0x1000000000000002C) >> 64;\\n            }\\n            if (x & 0x20 > 0) {\\n                result = (result * 0x10000000000000016) >> 64;\\n            }\\n            if (x & 0x10 > 0) {\\n                result = (result * 0x1000000000000000B) >> 64;\\n            }\\n            if (x & 0x8 > 0) {\\n                result = (result * 0x10000000000000006) >> 64;\\n            }\\n            if (x & 0x4 > 0) {\\n                result = (result * 0x10000000000000003) >> 64;\\n            }\\n            if (x & 0x2 > 0) {\\n                result = (result * 0x10000000000000001) >> 64;\\n            }\\n            if (x & 0x1 > 0) {\\n                result = (result * 0x10000000000000001) >> 64;\\n            }\\n\\n            // We're doing two things at the same time:\\n            //\\n            //   1. Multiply the result by 2^n + 1, where \\\"2^n\\\" is the integer part and the one is added to account for\\n            //      the fact that we initially set the result to 0.5. This is accomplished by subtracting from 191\\n            //      rather than 192.\\n            //   2. Convert the result to the unsigned 60.18-decimal fixed-point format.\\n            //\\n            // This works because 2^(191-ip) = 2^ip / 2^191, where \\\"ip\\\" is the integer part \\\"2^n\\\".\\n            result *= SCALE;\\n            result >>= (191 - (x >> 64));\\n        }\\n    }\\n\\n    /// @notice Finds the zero-based index of the first one in the binary representation of x.\\n    /// @dev See the note on msb in the \\\"Find First Set\\\" Wikipedia article https://en.wikipedia.org/wiki/Find_first_set\\n    /// @param x The uint256 number for which to find the index of the most significant bit.\\n    /// @return msb The index of the most significant bit as an uint256.\\n    function mostSignificantBit(uint256 x) internal pure returns (uint256 msb) {\\n        if (x >= 2**128) {\\n            x >>= 128;\\n            msb += 128;\\n        }\\n        if (x >= 2**64) {\\n            x >>= 64;\\n            msb += 64;\\n        }\\n        if (x >= 2**32) {\\n            x >>= 32;\\n            msb += 32;\\n        }\\n        if (x >= 2**16) {\\n            x >>= 16;\\n            msb += 16;\\n        }\\n        if (x >= 2**8) {\\n            x >>= 8;\\n            msb += 8;\\n        }\\n        if (x >= 2**4) {\\n            x >>= 4;\\n            msb += 4;\\n        }\\n        if (x >= 2**2) {\\n            x >>= 2;\\n            msb += 2;\\n        }\\n        if (x >= 2**1) {\\n            // No need to shift x any more.\\n            msb += 1;\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f7denominator) with full precision.\\n    ///\\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv.\\n    ///\\n    /// Requirements:\\n    /// - The denominator cannot be zero.\\n    /// - The result must fit within uint256.\\n    ///\\n    /// Caveats:\\n    /// - This function does not work with fixed-point numbers.\\n    ///\\n    /// @param x The multiplicand as an uint256.\\n    /// @param y The multiplier as an uint256.\\n    /// @param denominator The divisor as an uint256.\\n    /// @return result The result as an uint256.\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n        // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n        // variables such that product = prod1 * 2^256 + prod0.\\n        uint256 prod0; // Least significant 256 bits of the product\\n        uint256 prod1; // Most significant 256 bits of the product\\n        assembly {\\n            let mm := mulmod(x, y, not(0))\\n            prod0 := mul(x, y)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        // Handle non-overflow cases, 256 by 256 division.\\n        if (prod1 == 0) {\\n            unchecked {\\n                result = prod0 / denominator;\\n            }\\n            return result;\\n        }\\n\\n        // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n        if (prod1 >= denominator) {\\n            revert PRBMath__MulDivOverflow(prod1, denominator);\\n        }\\n\\n        ///////////////////////////////////////////////\\n        // 512 by 256 division.\\n        ///////////////////////////////////////////////\\n\\n        // Make division exact by subtracting the remainder from [prod1 prod0].\\n        uint256 remainder;\\n        assembly {\\n            // Compute remainder using mulmod.\\n            remainder := mulmod(x, y, denominator)\\n\\n            // Subtract 256 bit number from 512 bit number.\\n            prod1 := sub(prod1, gt(remainder, prod0))\\n            prod0 := sub(prod0, remainder)\\n        }\\n\\n        // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n        // See https://cs.stackexchange.com/q/138556/92363.\\n        unchecked {\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 lpotdod = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by lpotdod.\\n                denominator := div(denominator, lpotdod)\\n\\n                // Divide [prod1 prod0] by lpotdod.\\n                prod0 := div(prod0, lpotdod)\\n\\n                // Flip lpotdod such that it is 2^256 / lpotdod. If lpotdod is zero, then it becomes one.\\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * lpotdod;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f71e18) with full precision.\\n    ///\\n    /// @dev Variant of \\\"mulDiv\\\" with constant folding, i.e. in which the denominator is always 1e18. Before returning the\\n    /// final result, we add 1 if (x * y) % SCALE >= HALF_SCALE. Without this, 6.6e-19 would be truncated to 0 instead of\\n    /// being rounded to 1e-18.  See \\\"Listing 6\\\" and text above it at https://accu.org/index.php/journals/1717.\\n    ///\\n    /// Requirements:\\n    /// - The result must fit within uint256.\\n    ///\\n    /// Caveats:\\n    /// - The body is purposely left uncommented; see the NatSpec comments in \\\"PRBMath.mulDiv\\\" to understand how this works.\\n    /// - It is assumed that the result can never be type(uint256).max when x and y solve the following two equations:\\n    ///     1. x * y = type(uint256).max * SCALE\\n    ///     2. (x * y) % SCALE >= SCALE / 2\\n    ///\\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function mulDivFixedPoint(uint256 x, uint256 y)\\n        internal\\n        pure\\n        returns (uint256 result)\\n    {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(x, y, not(0))\\n            prod0 := mul(x, y)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= SCALE) {\\n            revert PRBMath__MulDivFixedPointOverflow(prod1);\\n        }\\n\\n        uint256 remainder;\\n        uint256 roundUpUnit;\\n        assembly {\\n            remainder := mulmod(x, y, SCALE)\\n            roundUpUnit := gt(remainder, 499999999999999999)\\n        }\\n\\n        if (prod1 == 0) {\\n            unchecked {\\n                result = (prod0 / SCALE) + roundUpUnit;\\n                return result;\\n            }\\n        }\\n\\n        assembly {\\n            result := add(\\n                mul(\\n                    or(\\n                        div(sub(prod0, remainder), SCALE_LPOTD),\\n                        mul(\\n                            sub(prod1, gt(remainder, prod0)),\\n                            add(div(sub(0, SCALE_LPOTD), SCALE_LPOTD), 1)\\n                        )\\n                    ),\\n                    SCALE_INVERSE\\n                ),\\n                roundUpUnit\\n            )\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f7denominator) with full precision.\\n    ///\\n    /// @dev An extension of \\\"mulDiv\\\" for signed numbers. Works by computing the signs and the absolute values separately.\\n    ///\\n    /// Requirements:\\n    /// - None of the inputs can be type(int256).min.\\n    /// - The result must fit within int256.\\n    ///\\n    /// @param x The multiplicand as an int256.\\n    /// @param y The multiplier as an int256.\\n    /// @param denominator The divisor as an int256.\\n    /// @return result The result as an int256.\\n    function mulDivSigned(\\n        int256 x,\\n        int256 y,\\n        int256 denominator\\n    ) internal pure returns (int256 result) {\\n        if (\\n            x == type(int256).min ||\\n            y == type(int256).min ||\\n            denominator == type(int256).min\\n        ) {\\n            revert PRBMath__MulDivSignedInputTooSmall();\\n        }\\n\\n        // Get hold of the absolute values of x, y and the denominator.\\n        uint256 ax;\\n        uint256 ay;\\n        uint256 ad;\\n        unchecked {\\n            ax = x < 0 ? uint256(-x) : uint256(x);\\n            ay = y < 0 ? uint256(-y) : uint256(y);\\n            ad = denominator < 0 ? uint256(-denominator) : uint256(denominator);\\n        }\\n\\n        // Compute the absolute value of (x*y)\\u00f7denominator. The result must fit within int256.\\n        uint256 rAbs = mulDiv(ax, ay, ad);\\n        if (rAbs > uint256(type(int256).max)) {\\n            revert PRBMath__MulDivSignedOverflow(rAbs);\\n        }\\n\\n        // Get the signs of x, y and the denominator.\\n        uint256 sx;\\n        uint256 sy;\\n        uint256 sd;\\n        assembly {\\n            sx := sgt(x, sub(0, 1))\\n            sy := sgt(y, sub(0, 1))\\n            sd := sgt(denominator, sub(0, 1))\\n        }\\n\\n        // XOR over sx, sy and sd. This is checking whether there are one or three negative signs in the inputs.\\n        // If yes, the result should be negative.\\n        result = sx ^ sy ^ sd == 0 ? -int256(rAbs) : int256(rAbs);\\n    }\\n\\n    /// @notice Calculates the square root of x, rounding down.\\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\\n    ///\\n    /// Caveats:\\n    /// - This function does not work with fixed-point numbers.\\n    ///\\n    /// @param x The uint256 number for which to calculate the square root.\\n    /// @return result The result as an uint256.\\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n\\n        // Set the initial guess to the least power of two that is greater than or equal to sqrt(x).\\n        uint256 xAux = uint256(x);\\n        result = 1;\\n        if (xAux >= 0x100000000000000000000000000000000) {\\n            xAux >>= 128;\\n            result <<= 64;\\n        }\\n        if (xAux >= 0x10000000000000000) {\\n            xAux >>= 64;\\n            result <<= 32;\\n        }\\n        if (xAux >= 0x100000000) {\\n            xAux >>= 32;\\n            result <<= 16;\\n        }\\n        if (xAux >= 0x10000) {\\n            xAux >>= 16;\\n            result <<= 8;\\n        }\\n        if (xAux >= 0x100) {\\n            xAux >>= 8;\\n            result <<= 4;\\n        }\\n        if (xAux >= 0x10) {\\n            xAux >>= 4;\\n            result <<= 2;\\n        }\\n        if (xAux >= 0x8) {\\n            result <<= 1;\\n        }\\n\\n        // The operations can never overflow because the result is max 2^127 when it enters this block.\\n        unchecked {\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1; // Seven iterations should be enough\\n            uint256 roundedDownResult = x / result;\\n            return result >= roundedDownResult ? roundedDownResult : result;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcd5f95a3a6928ddbcb79ad407252c276e52a47f9d262d64130979d59a3bd4cd9\",\"license\":\"MIT\"},\"src/dependencies/prb-math/PRBMathUD60x18.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./PRBMath.sol\\\";\\n\\n/// @title PRBMathUD60x18\\n/// @author Paul Razvan Berg\\n/// @notice Smart contract library for advanced fixed-point math that works with uint256 numbers considered to have 18\\n/// trailing decimals. We call this number representation unsigned 60.18-decimal fixed-point, since there can be up to 60\\n/// digits in the integer part and up to 18 decimals in the fractional part. The numbers are bound by the minimum and the\\n/// maximum values permitted by the Solidity type uint256.\\nlibrary PRBMathUD60x18 {\\n    /// @dev Half the SCALE number.\\n    uint256 internal constant HALF_SCALE = 5e17;\\n\\n    /// @dev log2(e) as an unsigned 60.18-decimal fixed-point number.\\n    uint256 internal constant LOG2_E = 1_442695040888963407;\\n\\n    /// @dev The maximum value an unsigned 60.18-decimal fixed-point number can have.\\n    uint256 internal constant MAX_UD60x18 =\\n        115792089237316195423570985008687907853269984665640564039457_584007913129639935;\\n\\n    /// @dev The maximum whole value an unsigned 60.18-decimal fixed-point number can have.\\n    uint256 internal constant MAX_WHOLE_UD60x18 =\\n        115792089237316195423570985008687907853269984665640564039457_000000000000000000;\\n\\n    /// @dev How many trailing decimals can be represented.\\n    uint256 internal constant SCALE = 1e18;\\n\\n    /// @notice Calculates the arithmetic average of x and y, rounding down.\\n    /// @param x The first operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The second operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The arithmetic average as an unsigned 60.18-decimal fixed-point number.\\n    function avg(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        // The operations can never overflow.\\n        unchecked {\\n            // The last operand checks if both x and y are odd and if that is the case, we add 1 to the result. We need\\n            // to do this because if both numbers are odd, the 0.5 remainder gets truncated twice.\\n            result = (x >> 1) + (y >> 1) + (x & y & 1);\\n        }\\n    }\\n\\n    /// @notice Yields the least unsigned 60.18 decimal fixed-point number greater than or equal to x.\\n    ///\\n    /// @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\\n    /// See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\\n    ///\\n    /// Requirements:\\n    /// - x must be less than or equal to MAX_WHOLE_UD60x18.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number to ceil.\\n    /// @param result The least integer greater than or equal to x, as an unsigned 60.18-decimal fixed-point number.\\n    function ceil(uint256 x) internal pure returns (uint256 result) {\\n        if (x > MAX_WHOLE_UD60x18) {\\n            revert PRBMathUD60x18__CeilOverflow(x);\\n        }\\n        assembly {\\n            // Equivalent to \\\"x % SCALE\\\" but faster.\\n            let remainder := mod(x, SCALE)\\n\\n            // Equivalent to \\\"SCALE - remainder\\\" but faster.\\n            let delta := sub(SCALE, remainder)\\n\\n            // Equivalent to \\\"x + delta * (remainder > 0 ? 1 : 0)\\\" but faster.\\n            result := add(x, mul(delta, gt(remainder, 0)))\\n        }\\n    }\\n\\n    /// @notice Divides two unsigned 60.18-decimal fixed-point numbers, returning a new unsigned 60.18-decimal fixed-point number.\\n    ///\\n    /// @dev Uses mulDiv to enable overflow-safe multiplication and division.\\n    ///\\n    /// Requirements:\\n    /// - The denominator cannot be zero.\\n    ///\\n    /// @param x The numerator as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The denominator as an unsigned 60.18-decimal fixed-point number.\\n    /// @param result The quotient as an unsigned 60.18-decimal fixed-point number.\\n    function div(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        result = PRBMath.mulDiv(x, SCALE, y);\\n    }\\n\\n    /// @notice Returns Euler's number as an unsigned 60.18-decimal fixed-point number.\\n    /// @dev See https://en.wikipedia.org/wiki/E_(mathematical_constant).\\n    function e() internal pure returns (uint256 result) {\\n        result = 2_718281828459045235;\\n    }\\n\\n    /// @notice Calculates the natural exponent of x.\\n    ///\\n    /// @dev Based on the insight that e^x = 2^(x * log2(e)).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    /// - x must be less than 133.084258667509499441.\\n    ///\\n    /// @param x The exponent as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp(uint256 x) internal pure returns (uint256 result) {\\n        // Without this check, the value passed to \\\"exp2\\\" would be greater than 192.\\n        if (x >= 133_084258667509499441) {\\n            revert PRBMathUD60x18__ExpInputTooBig(x);\\n        }\\n\\n        // Do the fixed-point multiplication inline to save gas.\\n        unchecked {\\n            uint256 doubleScaleProduct = x * LOG2_E;\\n            result = exp2((doubleScaleProduct + HALF_SCALE) / SCALE);\\n        }\\n    }\\n\\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\\n    ///\\n    /// @dev See https://ethereum.stackexchange.com/q/79903/24693.\\n    ///\\n    /// Requirements:\\n    /// - x must be 192 or less.\\n    /// - The result must fit within MAX_UD60x18.\\n    ///\\n    /// @param x The exponent as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp2(uint256 x) internal pure returns (uint256 result) {\\n        // 2^192 doesn't fit within the 192.64-bit format used internally in this function.\\n        if (x >= 192e18) {\\n            revert PRBMathUD60x18__Exp2InputTooBig(x);\\n        }\\n\\n        unchecked {\\n            // Convert x to the 192.64-bit fixed-point format.\\n            uint256 x192x64 = (x << 64) / SCALE;\\n\\n            // Pass x to the PRBMath.exp2 function, which uses the 192.64-bit fixed-point number representation.\\n            result = PRBMath.exp2(x192x64);\\n        }\\n    }\\n\\n    /// @notice Yields the greatest unsigned 60.18 decimal fixed-point number less than or equal to x.\\n    /// @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\\n    /// See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to floor.\\n    /// @param result The greatest integer less than or equal to x, as an unsigned 60.18-decimal fixed-point number.\\n    function floor(uint256 x) internal pure returns (uint256 result) {\\n        assembly {\\n            // Equivalent to \\\"x % SCALE\\\" but faster.\\n            let remainder := mod(x, SCALE)\\n\\n            // Equivalent to \\\"x - remainder * (remainder > 0 ? 1 : 0)\\\" but faster.\\n            result := sub(x, mul(remainder, gt(remainder, 0)))\\n        }\\n    }\\n\\n    /// @notice Yields the excess beyond the floor of x.\\n    /// @dev Based on the odd function definition https://en.wikipedia.org/wiki/Fractional_part.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to get the fractional part of.\\n    /// @param result The fractional part of x as an unsigned 60.18-decimal fixed-point number.\\n    function frac(uint256 x) internal pure returns (uint256 result) {\\n        assembly {\\n            result := mod(x, SCALE)\\n        }\\n    }\\n\\n    /// @notice Converts a number from basic integer form to unsigned 60.18-decimal fixed-point representation.\\n    ///\\n    /// @dev Requirements:\\n    /// - x must be less than or equal to MAX_UD60x18 divided by SCALE.\\n    ///\\n    /// @param x The basic integer to convert.\\n    /// @param result The same number in unsigned 60.18-decimal fixed-point representation.\\n    function fromUint(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            if (x > MAX_UD60x18 / SCALE) {\\n                revert PRBMathUD60x18__FromUintOverflow(x);\\n            }\\n            result = x * SCALE;\\n        }\\n    }\\n\\n    /// @notice Calculates geometric mean of x and y, i.e. sqrt(x * y), rounding down.\\n    ///\\n    /// @dev Requirements:\\n    /// - x * y must fit within MAX_UD60x18, lest it overflows.\\n    ///\\n    /// @param x The first operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The second operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function gm(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n\\n        unchecked {\\n            // Checking for overflow this way is faster than letting Solidity do it.\\n            uint256 xy = x * y;\\n            if (xy / x != y) {\\n                revert PRBMathUD60x18__GmOverflow(x, y);\\n            }\\n\\n            // We don't need to multiply by the SCALE here because the x*y product had already picked up a factor of SCALE\\n            // during multiplication. See the comments within the \\\"sqrt\\\" function.\\n            result = PRBMath.sqrt(xy);\\n        }\\n    }\\n\\n    /// @notice Calculates 1 / x, rounding toward zero.\\n    ///\\n    /// @dev Requirements:\\n    /// - x cannot be zero.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the inverse.\\n    /// @return result The inverse as an unsigned 60.18-decimal fixed-point number.\\n    function inv(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 1e36 is SCALE * SCALE.\\n            result = 1e36 / x;\\n        }\\n    }\\n\\n    /// @notice Calculates the natural logarithm of x.\\n    ///\\n    /// @dev Based on the insight that ln(x) = log2(x) / log2(e).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"log2\\\".\\n    /// - This doesn't return exactly 1 for 2.718281828459045235, for that we would need more fine-grained precision.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the natural logarithm.\\n    /// @return result The natural logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function ln(uint256 x) internal pure returns (uint256 result) {\\n        // Do the fixed-point multiplication inline to save gas. This is overflow-safe because the maximum value that log2(x)\\n        // can return is 196205294292027477728.\\n        unchecked {\\n            result = (log2(x) * SCALE) / LOG2_E;\\n        }\\n    }\\n\\n    /// @notice Calculates the common logarithm of x.\\n    ///\\n    /// @dev First checks if x is an exact power of ten and it stops if yes. If it's not, calculates the common\\n    /// logarithm based on the insight that log10(x) = log2(x) / log2(10).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the common logarithm.\\n    /// @return result The common logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function log10(uint256 x) internal pure returns (uint256 result) {\\n        if (x < SCALE) {\\n            revert PRBMathUD60x18__LogInputTooSmall(x);\\n        }\\n\\n        // Note that the \\\"mul\\\" in this block is the assembly multiplication operation, not the \\\"mul\\\" function defined\\n        // in this contract.\\n        // prettier-ignore\\n        assembly {\\n            switch x\\n            case 1 { result := mul(SCALE, sub(0, 18)) }\\n            case 10 { result := mul(SCALE, sub(1, 18)) }\\n            case 100 { result := mul(SCALE, sub(2, 18)) }\\n            case 1000 { result := mul(SCALE, sub(3, 18)) }\\n            case 10000 { result := mul(SCALE, sub(4, 18)) }\\n            case 100000 { result := mul(SCALE, sub(5, 18)) }\\n            case 1000000 { result := mul(SCALE, sub(6, 18)) }\\n            case 10000000 { result := mul(SCALE, sub(7, 18)) }\\n            case 100000000 { result := mul(SCALE, sub(8, 18)) }\\n            case 1000000000 { result := mul(SCALE, sub(9, 18)) }\\n            case 10000000000 { result := mul(SCALE, sub(10, 18)) }\\n            case 100000000000 { result := mul(SCALE, sub(11, 18)) }\\n            case 1000000000000 { result := mul(SCALE, sub(12, 18)) }\\n            case 10000000000000 { result := mul(SCALE, sub(13, 18)) }\\n            case 100000000000000 { result := mul(SCALE, sub(14, 18)) }\\n            case 1000000000000000 { result := mul(SCALE, sub(15, 18)) }\\n            case 10000000000000000 { result := mul(SCALE, sub(16, 18)) }\\n            case 100000000000000000 { result := mul(SCALE, sub(17, 18)) }\\n            case 1000000000000000000 { result := 0 }\\n            case 10000000000000000000 { result := SCALE }\\n            case 100000000000000000000 { result := mul(SCALE, 2) }\\n            case 1000000000000000000000 { result := mul(SCALE, 3) }\\n            case 10000000000000000000000 { result := mul(SCALE, 4) }\\n            case 100000000000000000000000 { result := mul(SCALE, 5) }\\n            case 1000000000000000000000000 { result := mul(SCALE, 6) }\\n            case 10000000000000000000000000 { result := mul(SCALE, 7) }\\n            case 100000000000000000000000000 { result := mul(SCALE, 8) }\\n            case 1000000000000000000000000000 { result := mul(SCALE, 9) }\\n            case 10000000000000000000000000000 { result := mul(SCALE, 10) }\\n            case 100000000000000000000000000000 { result := mul(SCALE, 11) }\\n            case 1000000000000000000000000000000 { result := mul(SCALE, 12) }\\n            case 10000000000000000000000000000000 { result := mul(SCALE, 13) }\\n            case 100000000000000000000000000000000 { result := mul(SCALE, 14) }\\n            case 1000000000000000000000000000000000 { result := mul(SCALE, 15) }\\n            case 10000000000000000000000000000000000 { result := mul(SCALE, 16) }\\n            case 100000000000000000000000000000000000 { result := mul(SCALE, 17) }\\n            case 1000000000000000000000000000000000000 { result := mul(SCALE, 18) }\\n            case 10000000000000000000000000000000000000 { result := mul(SCALE, 19) }\\n            case 100000000000000000000000000000000000000 { result := mul(SCALE, 20) }\\n            case 1000000000000000000000000000000000000000 { result := mul(SCALE, 21) }\\n            case 10000000000000000000000000000000000000000 { result := mul(SCALE, 22) }\\n            case 100000000000000000000000000000000000000000 { result := mul(SCALE, 23) }\\n            case 1000000000000000000000000000000000000000000 { result := mul(SCALE, 24) }\\n            case 10000000000000000000000000000000000000000000 { result := mul(SCALE, 25) }\\n            case 100000000000000000000000000000000000000000000 { result := mul(SCALE, 26) }\\n            case 1000000000000000000000000000000000000000000000 { result := mul(SCALE, 27) }\\n            case 10000000000000000000000000000000000000000000000 { result := mul(SCALE, 28) }\\n            case 100000000000000000000000000000000000000000000000 { result := mul(SCALE, 29) }\\n            case 1000000000000000000000000000000000000000000000000 { result := mul(SCALE, 30) }\\n            case 10000000000000000000000000000000000000000000000000 { result := mul(SCALE, 31) }\\n            case 100000000000000000000000000000000000000000000000000 { result := mul(SCALE, 32) }\\n            case 1000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 33) }\\n            case 10000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 34) }\\n            case 100000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 35) }\\n            case 1000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 36) }\\n            case 10000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 37) }\\n            case 100000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 38) }\\n            case 1000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 39) }\\n            case 10000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 40) }\\n            case 100000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 41) }\\n            case 1000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 42) }\\n            case 10000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 43) }\\n            case 100000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 44) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 45) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 46) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 47) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 48) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 49) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 50) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 51) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 52) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 53) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 54) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 55) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 56) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 57) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 58) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 59) }\\n            default {\\n                result := MAX_UD60x18\\n            }\\n        }\\n\\n        if (result == MAX_UD60x18) {\\n            // Do the fixed-point division inline to save gas. The denominator is log2(10).\\n            unchecked {\\n                result = (log2(x) * SCALE) / 3_321928094887362347;\\n            }\\n        }\\n    }\\n\\n    /// @notice Calculates the binary logarithm of x.\\n    ///\\n    /// @dev Based on the iterative approximation algorithm.\\n    /// https://en.wikipedia.org/wiki/Binary_logarithm#Iterative_approximation\\n    ///\\n    /// Requirements:\\n    /// - x must be greater than or equal to SCALE, otherwise the result would be negative.\\n    ///\\n    /// Caveats:\\n    /// - The results are nor perfectly accurate to the last decimal, due to the lossy precision of the iterative approximation.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the binary logarithm.\\n    /// @return result The binary logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function log2(uint256 x) internal pure returns (uint256 result) {\\n        if (x < SCALE) {\\n            revert PRBMathUD60x18__LogInputTooSmall(x);\\n        }\\n        unchecked {\\n            // Calculate the integer part of the logarithm and add it to the result and finally calculate y = x * 2^(-n).\\n            uint256 n = PRBMath.mostSignificantBit(x / SCALE);\\n\\n            // The integer part of the logarithm as an unsigned 60.18-decimal fixed-point number. The operation can't overflow\\n            // because n is maximum 255 and SCALE is 1e18.\\n            result = n * SCALE;\\n\\n            // This is y = x * 2^(-n).\\n            uint256 y = x >> n;\\n\\n            // If y = 1, the fractional part is zero.\\n            if (y == SCALE) {\\n                return result;\\n            }\\n\\n            // Calculate the fractional part via the iterative approximation.\\n            // The \\\"delta >>= 1\\\" part is equivalent to \\\"delta /= 2\\\", but shifting bits is faster.\\n            for (uint256 delta = HALF_SCALE; delta > 0; delta >>= 1) {\\n                y = (y * y) / SCALE;\\n\\n                // Is y^2 > 2 and so in the range [2,4)?\\n                if (y >= 2 * SCALE) {\\n                    // Add the 2^(-m) factor to the logarithm.\\n                    result += delta;\\n\\n                    // Corresponds to z/2 on Wikipedia.\\n                    y >>= 1;\\n                }\\n            }\\n        }\\n    }\\n\\n    /// @notice Multiplies two unsigned 60.18-decimal fixed-point numbers together, returning a new unsigned 60.18-decimal\\n    /// fixed-point number.\\n    /// @dev See the documentation for the \\\"PRBMath.mulDivFixedPoint\\\" function.\\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The product as an unsigned 60.18-decimal fixed-point number.\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        result = PRBMath.mulDivFixedPoint(x, y);\\n    }\\n\\n    /// @notice Returns PI as an unsigned 60.18-decimal fixed-point number.\\n    function pi() internal pure returns (uint256 result) {\\n        result = 3_141592653589793238;\\n    }\\n\\n    /// @notice Raises x to the power of y.\\n    ///\\n    /// @dev Based on the insight that x^y = 2^(log2(x) * y).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"exp2\\\", \\\"log2\\\" and \\\"mul\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"exp2\\\", \\\"log2\\\" and \\\"mul\\\".\\n    /// - Assumes 0^0 is 1.\\n    ///\\n    /// @param x Number to raise to given power y, as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y Exponent to raise x to, as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result x raised to power y, as an unsigned 60.18-decimal fixed-point number.\\n    function pow(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            result = y == 0 ? SCALE : uint256(0);\\n        } else {\\n            result = exp2(mul(log2(x), y));\\n        }\\n    }\\n\\n    /// @notice Raises x (unsigned 60.18-decimal fixed-point number) to the power of y (basic unsigned integer) using the\\n    /// famous algorithm \\\"exponentiation by squaring\\\".\\n    ///\\n    /// @dev See https://en.wikipedia.org/wiki/Exponentiation_by_squaring\\n    ///\\n    /// Requirements:\\n    /// - The result must fit within MAX_UD60x18.\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"mul\\\".\\n    /// - Assumes 0^0 is 1.\\n    ///\\n    /// @param x The base as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The exponent as an uint256.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function powu(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        // Calculate the first iteration of the loop in advance.\\n        result = y & 1 > 0 ? x : SCALE;\\n\\n        // Equivalent to \\\"for(y /= 2; y > 0; y /= 2)\\\" but faster.\\n        for (y >>= 1; y > 0; y >>= 1) {\\n            x = PRBMath.mulDivFixedPoint(x, x);\\n\\n            // Equivalent to \\\"y % 2 == 1\\\" but faster.\\n            if (y & 1 > 0) {\\n                result = PRBMath.mulDivFixedPoint(result, x);\\n            }\\n        }\\n    }\\n\\n    /// @notice Returns 1 as an unsigned 60.18-decimal fixed-point number.\\n    function scale() internal pure returns (uint256 result) {\\n        result = SCALE;\\n    }\\n\\n    /// @notice Calculates the square root of x, rounding down.\\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\\n    ///\\n    /// Requirements:\\n    /// - x must be less than MAX_UD60x18 / SCALE.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the square root.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point .\\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            if (x > MAX_UD60x18 / SCALE) {\\n                revert PRBMathUD60x18__SqrtOverflow(x);\\n            }\\n            // Multiply x by the SCALE to account for the factor of SCALE that is picked up when multiplying two unsigned\\n            // 60.18-decimal fixed-point numbers together (in this case, those two numbers are both the square root).\\n            result = PRBMath.sqrt(x * SCALE);\\n        }\\n    }\\n\\n    /// @notice Converts a unsigned 60.18-decimal fixed-point number to basic integer form, rounding down in the process.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to convert.\\n    /// @return result The same number in basic integer form.\\n    function toUint(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            result = x / SCALE;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0c51a3408fc3bdf8746accf35e56f7844b3e0b05083be38545baecdf3f083e4f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Smart contract library for advanced fixed-point math that works with uint256 numbers considered to have 18 trailing decimals. We call this number representation unsigned 60.18-decimal fixed-point, since there can be up to 60 digits in the integer part and up to 18 decimals in the fractional part. The numbers are bound by the minimum and the maximum values permitted by the Solidity type uint256.","version":1}}},"src/dependencies/solmate/ERC20.sol":{"ERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)","details":"Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\",\"details\":\"Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Modern and gas efficient ERC20 + EIP-2612 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/dependencies/solmate/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/dependencies/solmate/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3610,"contract":"src/dependencies/solmate/ERC20.sol:ERC20","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":3612,"contract":"src/dependencies/solmate/ERC20.sol:ERC20","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":3616,"contract":"src/dependencies/solmate/ERC20.sol:ERC20","label":"totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":3620,"contract":"src/dependencies/solmate/ERC20.sol:ERC20","label":"balanceOf","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":3626,"contract":"src/dependencies/solmate/ERC20.sol:ERC20","label":"allowance","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":3634,"contract":"src/dependencies/solmate/ERC20.sol:ERC20","label":"nonces","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"notice":"Modern and gas efficient ERC20 + EIP-2612 implementation.","version":1}}},"src/interfaces/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\ninterface IERC20 {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0xcdb6951e91d0eaa982638d567e2c8ac7d30f897b16bde3c2fdc2f4b4c51e70cd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/interfaces/IPriceFeed.sol":{"IPriceFeed":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":true,"internalType":"address","name":"source","type":"address"}],"name":"AssetPriceFeedSourceUpdated","type":"event"},{"inputs":[{"internalType":"address","name":"_asset","type":"address"}],"name":"getAssetPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface for protocol price feeds.","events":{"AssetPriceFeedSourceUpdated(address,address)":{"details":"Emitted after the price source of an asset is updated.","params":{"asset":"The address of the asset.","source":"The price feed source of the asset."}}},"kind":"dev","methods":{"getAssetPrice(address)":{"details":"Used to retrieve a given asset's price.","params":{"_asset":"Address of the asset."},"returns":{"_0":"uint256 Price of the asset."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAssetPrice(address)":"b3596f07"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"AssetPriceFeedSourceUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for protocol price feeds.\",\"events\":{\"AssetPriceFeedSourceUpdated(address,address)\":{\"details\":\"Emitted after the price source of an asset is updated.\",\"params\":{\"asset\":\"The address of the asset.\",\"source\":\"The price feed source of the asset.\"}}},\"kind\":\"dev\",\"methods\":{\"getAssetPrice(address)\":{\"details\":\"Used to retrieve a given asset's price.\",\"params\":{\"_asset\":\"Address of the asset.\"},\"returns\":{\"_0\":\"uint256 Price of the asset.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IPriceFeed.sol\":\"IPriceFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\n/**\\n * @dev Interface for protocol price feeds.\\n */\\ninterface IPriceFeed {\\n    /*~~~ EVENT ~~~*/\\n\\n    /**\\n     * @dev Emitted after the price source of an asset is updated.\\n     *\\n     * @param asset The address of the asset.\\n     * @param source The price feed source of the asset.\\n     */\\n    event AssetPriceFeedSourceUpdated(\\n        address indexed asset,\\n        address indexed source\\n    );\\n\\n    /*~~~ MAIN LOGIC FUNCTIONS ~~~*/\\n\\n    /**\\n     * @dev Used to retrieve a given asset's price.\\n     *\\n     * @param _asset Address of the asset.\\n     * @return uint256 Price of the asset.\\n     */\\n    function getAssetPrice(address _asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd959ed0ca638b27203ad749ddf33d2721d72b2efd61ca39250b4a90c72f1ca9e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/stETH.sol":{"stETH":{"abi":[{"inputs":[{"internalType":"address[]","name":"_holders","type":"address[]"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3666":{"entryPoint":null,"id":3666,"parameterSlots":3,"returnSlots":0},"@_4123":{"entryPoint":null,"id":4123,"parameterSlots":1,"returnSlots":0},"@_mint_3948":{"entryPoint":499,"id":3948,"parameterSlots":2,"returnSlots":0},"@computeDomainSeparator_3920":{"entryPoint":355,"id":3920,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":1038,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1015,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":1154,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":1205,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2519,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2485,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2307,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2502,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2450,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":2536,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2688,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":854,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":711,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":885,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":2286,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1397,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1286,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2275,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2629,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1718,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":969,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2475,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":937,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1533,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1679,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1553,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1873,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1418,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1344,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1843,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":800,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1543,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":2198,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1811,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2151,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1297,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2104,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":753,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1593,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":731,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":932,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":726,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":721,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":736,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1434,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1798,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1651,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1447,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1603,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":989,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1646,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12534:15","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:15","statements":[{"nodeType":"YulAssignment","src":"57:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:15"},"nodeType":"YulFunctionCall","src":"67:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:15","type":""}],"src":"7:75:15"},{"body":{"nodeType":"YulBlock","src":"177:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:15"},"nodeType":"YulFunctionCall","src":"187:12:15"},"nodeType":"YulExpressionStatement","src":"187:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:15"},{"body":{"nodeType":"YulBlock","src":"300:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:15"},"nodeType":"YulFunctionCall","src":"310:12:15"},"nodeType":"YulExpressionStatement","src":"310:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:15"},{"body":{"nodeType":"YulBlock","src":"423:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:15"},"nodeType":"YulFunctionCall","src":"433:12:15"},"nodeType":"YulExpressionStatement","src":"433:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:15"},{"body":{"nodeType":"YulBlock","src":"505:54:15","statements":[{"nodeType":"YulAssignment","src":"515:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"533:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"540:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"529:3:15"},"nodeType":"YulFunctionCall","src":"529:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"549:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"545:3:15"},"nodeType":"YulFunctionCall","src":"545:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"525:3:15"},"nodeType":"YulFunctionCall","src":"525:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"515:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"488:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"498:6:15","type":""}],"src":"457:102:15"},{"body":{"nodeType":"YulBlock","src":"593:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"610:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"613:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"603:6:15"},"nodeType":"YulFunctionCall","src":"603:88:15"},"nodeType":"YulExpressionStatement","src":"603:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"707:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"710:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"700:6:15"},"nodeType":"YulFunctionCall","src":"700:15:15"},"nodeType":"YulExpressionStatement","src":"700:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"731:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"734:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"724:6:15"},"nodeType":"YulFunctionCall","src":"724:15:15"},"nodeType":"YulExpressionStatement","src":"724:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"565:180:15"},{"body":{"nodeType":"YulBlock","src":"794:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"804:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"826:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"856:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"834:21:15"},"nodeType":"YulFunctionCall","src":"834:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"822:3:15"},"nodeType":"YulFunctionCall","src":"822:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"808:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"973:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"975:16:15"},"nodeType":"YulFunctionCall","src":"975:18:15"},"nodeType":"YulExpressionStatement","src":"975:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"916:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"928:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"913:2:15"},"nodeType":"YulFunctionCall","src":"913:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"952:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"964:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"949:2:15"},"nodeType":"YulFunctionCall","src":"949:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"910:2:15"},"nodeType":"YulFunctionCall","src":"910:62:15"},"nodeType":"YulIf","src":"907:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1011:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1015:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1004:6:15"},"nodeType":"YulFunctionCall","src":"1004:22:15"},"nodeType":"YulExpressionStatement","src":"1004:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"780:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"788:4:15","type":""}],"src":"751:281:15"},{"body":{"nodeType":"YulBlock","src":"1079:88:15","statements":[{"nodeType":"YulAssignment","src":"1089:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1099:18:15"},"nodeType":"YulFunctionCall","src":"1099:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1089:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1148:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"1156:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1128:19:15"},"nodeType":"YulFunctionCall","src":"1128:33:15"},"nodeType":"YulExpressionStatement","src":"1128:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1063:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1072:6:15","type":""}],"src":"1038:129:15"},{"body":{"nodeType":"YulBlock","src":"1255:229:15","statements":[{"body":{"nodeType":"YulBlock","src":"1360:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1362:16:15"},"nodeType":"YulFunctionCall","src":"1362:18:15"},"nodeType":"YulExpressionStatement","src":"1362:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1332:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1340:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1329:2:15"},"nodeType":"YulFunctionCall","src":"1329:30:15"},"nodeType":"YulIf","src":"1326:56:15"},{"nodeType":"YulAssignment","src":"1392:25:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1404:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1412:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1400:3:15"},"nodeType":"YulFunctionCall","src":"1400:17:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1392:4:15"}]},{"nodeType":"YulAssignment","src":"1454:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1466:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"1472:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1462:3:15"},"nodeType":"YulFunctionCall","src":"1462:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1454:4:15"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1239:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1250:4:15","type":""}],"src":"1173:311:15"},{"body":{"nodeType":"YulBlock","src":"1579:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1596:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1599:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1589:6:15"},"nodeType":"YulFunctionCall","src":"1589:12:15"},"nodeType":"YulExpressionStatement","src":"1589:12:15"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1490:117:15"},{"body":{"nodeType":"YulBlock","src":"1658:81:15","statements":[{"nodeType":"YulAssignment","src":"1668:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1683:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1690:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1679:3:15"},"nodeType":"YulFunctionCall","src":"1679:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1668:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1640:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1650:7:15","type":""}],"src":"1613:126:15"},{"body":{"nodeType":"YulBlock","src":"1790:51:15","statements":[{"nodeType":"YulAssignment","src":"1800:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1829:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1811:17:15"},"nodeType":"YulFunctionCall","src":"1811:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1800:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1772:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1782:7:15","type":""}],"src":"1745:96:15"},{"body":{"nodeType":"YulBlock","src":"1890:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"1947:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1956:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1959:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1949:6:15"},"nodeType":"YulFunctionCall","src":"1949:12:15"},"nodeType":"YulExpressionStatement","src":"1949:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1913:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1938:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1920:17:15"},"nodeType":"YulFunctionCall","src":"1920:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1910:2:15"},"nodeType":"YulFunctionCall","src":"1910:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1903:6:15"},"nodeType":"YulFunctionCall","src":"1903:43:15"},"nodeType":"YulIf","src":"1900:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:15","type":""}],"src":"1847:122:15"},{"body":{"nodeType":"YulBlock","src":"2038:80:15","statements":[{"nodeType":"YulAssignment","src":"2048:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2063:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2057:5:15"},"nodeType":"YulFunctionCall","src":"2057:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2048:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2106:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2079:26:15"},"nodeType":"YulFunctionCall","src":"2079:33:15"},"nodeType":"YulExpressionStatement","src":"2079:33:15"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2016:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2024:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2032:5:15","type":""}],"src":"1975:143:15"},{"body":{"nodeType":"YulBlock","src":"2254:619:15","statements":[{"nodeType":"YulAssignment","src":"2264:90:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2346:6:15"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2289:56:15"},"nodeType":"YulFunctionCall","src":"2289:64:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2273:15:15"},"nodeType":"YulFunctionCall","src":"2273:81:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2264:5:15"}]},{"nodeType":"YulVariableDeclaration","src":"2363:16:15","value":{"name":"array","nodeType":"YulIdentifier","src":"2374:5:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2367:3:15","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2396:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"2403:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2389:6:15"},"nodeType":"YulFunctionCall","src":"2389:21:15"},"nodeType":"YulExpressionStatement","src":"2389:21:15"},{"nodeType":"YulAssignment","src":"2419:23:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2430:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2437:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2426:3:15"},"nodeType":"YulFunctionCall","src":"2426:16:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2419:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"2452:44:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2470:6:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2482:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2490:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2478:3:15"},"nodeType":"YulFunctionCall","src":"2478:17:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2466:3:15"},"nodeType":"YulFunctionCall","src":"2466:30:15"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"2456:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2524:103:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2538:77:15"},"nodeType":"YulFunctionCall","src":"2538:79:15"},"nodeType":"YulExpressionStatement","src":"2538:79:15"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"2511:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"2519:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2508:2:15"},"nodeType":"YulFunctionCall","src":"2508:15:15"},"nodeType":"YulIf","src":"2505:122:15"},{"body":{"nodeType":"YulBlock","src":"2712:155:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2727:21:15","value":{"name":"src","nodeType":"YulIdentifier","src":"2745:3:15"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"2731:10:15","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2769:3:15"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"2806:10:15"},{"name":"end","nodeType":"YulIdentifier","src":"2818:3:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2774:31:15"},"nodeType":"YulFunctionCall","src":"2774:48:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2762:6:15"},"nodeType":"YulFunctionCall","src":"2762:61:15"},"nodeType":"YulExpressionStatement","src":"2762:61:15"},{"nodeType":"YulAssignment","src":"2836:21:15","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2847:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2852:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2843:3:15"},"nodeType":"YulFunctionCall","src":"2843:14:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2836:3:15"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2665:3:15"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"2670:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2662:2:15"},"nodeType":"YulFunctionCall","src":"2662:15:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2678:25:15","statements":[{"nodeType":"YulAssignment","src":"2680:21:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2691:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2696:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2687:3:15"},"nodeType":"YulFunctionCall","src":"2687:14:15"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2680:3:15"}]}]},"pre":{"nodeType":"YulBlock","src":"2640:21:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2642:17:15","value":{"name":"offset","nodeType":"YulIdentifier","src":"2653:6:15"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"2646:3:15","type":""}]}]},"src":"2636:231:15"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2224:6:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"2232:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2240:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2248:5:15","type":""}],"src":"2141:732:15"},{"body":{"nodeType":"YulBlock","src":"2984:297:15","statements":[{"body":{"nodeType":"YulBlock","src":"3033:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3035:77:15"},"nodeType":"YulFunctionCall","src":"3035:79:15"},"nodeType":"YulExpressionStatement","src":"3035:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3012:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3020:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3008:3:15"},"nodeType":"YulFunctionCall","src":"3008:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"3027:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3004:3:15"},"nodeType":"YulFunctionCall","src":"3004:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2997:6:15"},"nodeType":"YulFunctionCall","src":"2997:35:15"},"nodeType":"YulIf","src":"2994:122:15"},{"nodeType":"YulVariableDeclaration","src":"3125:27:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3145:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3139:5:15"},"nodeType":"YulFunctionCall","src":"3139:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3129:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3161:114:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3248:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3256:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3244:3:15"},"nodeType":"YulFunctionCall","src":"3244:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"3263:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"3271:3:15"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3170:73:15"},"nodeType":"YulFunctionCall","src":"3170:105:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3161:5:15"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2962:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2970:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2978:5:15","type":""}],"src":"2896:385:15"},{"body":{"nodeType":"YulBlock","src":"3389:452:15","statements":[{"body":{"nodeType":"YulBlock","src":"3435:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3437:77:15"},"nodeType":"YulFunctionCall","src":"3437:79:15"},"nodeType":"YulExpressionStatement","src":"3437:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3410:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3406:3:15"},"nodeType":"YulFunctionCall","src":"3406:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3431:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3402:3:15"},"nodeType":"YulFunctionCall","src":"3402:32:15"},"nodeType":"YulIf","src":"3399:119:15"},{"nodeType":"YulBlock","src":"3528:306:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3543:38:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3567:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3578:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3563:3:15"},"nodeType":"YulFunctionCall","src":"3563:17:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3557:5:15"},"nodeType":"YulFunctionCall","src":"3557:24:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3547:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3628:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3630:77:15"},"nodeType":"YulFunctionCall","src":"3630:79:15"},"nodeType":"YulExpressionStatement","src":"3630:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3600:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3608:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3597:2:15"},"nodeType":"YulFunctionCall","src":"3597:30:15"},"nodeType":"YulIf","src":"3594:117:15"},{"nodeType":"YulAssignment","src":"3725:99:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3796:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3807:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3792:3:15"},"nodeType":"YulFunctionCall","src":"3792:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3816:7:15"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3735:56:15"},"nodeType":"YulFunctionCall","src":"3735:89:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3725:6:15"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3359:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3370:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3382:6:15","type":""}],"src":"3287:554:15"},{"body":{"nodeType":"YulBlock","src":"3906:40:15","statements":[{"nodeType":"YulAssignment","src":"3917:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3933:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3927:5:15"},"nodeType":"YulFunctionCall","src":"3927:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3917:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3889:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3899:6:15","type":""}],"src":"3847:99:15"},{"body":{"nodeType":"YulBlock","src":"3980:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3997:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4000:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3990:6:15"},"nodeType":"YulFunctionCall","src":"3990:88:15"},"nodeType":"YulExpressionStatement","src":"3990:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4094:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4097:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4087:6:15"},"nodeType":"YulFunctionCall","src":"4087:15:15"},"nodeType":"YulExpressionStatement","src":"4087:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4118:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4121:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4111:6:15"},"nodeType":"YulFunctionCall","src":"4111:15:15"},"nodeType":"YulExpressionStatement","src":"4111:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3952:180:15"},{"body":{"nodeType":"YulBlock","src":"4189:269:15","statements":[{"nodeType":"YulAssignment","src":"4199:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4213:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"4219:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4209:3:15"},"nodeType":"YulFunctionCall","src":"4209:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4199:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"4230:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4260:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"4266:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4256:3:15"},"nodeType":"YulFunctionCall","src":"4256:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4234:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4307:51:15","statements":[{"nodeType":"YulAssignment","src":"4321:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4335:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4343:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4331:3:15"},"nodeType":"YulFunctionCall","src":"4331:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4321:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4287:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4280:6:15"},"nodeType":"YulFunctionCall","src":"4280:26:15"},"nodeType":"YulIf","src":"4277:81:15"},{"body":{"nodeType":"YulBlock","src":"4410:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4424:16:15"},"nodeType":"YulFunctionCall","src":"4424:18:15"},"nodeType":"YulExpressionStatement","src":"4424:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4374:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4397:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4405:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4394:2:15"},"nodeType":"YulFunctionCall","src":"4394:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4371:2:15"},"nodeType":"YulFunctionCall","src":"4371:38:15"},"nodeType":"YulIf","src":"4368:84:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4173:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4182:6:15","type":""}],"src":"4138:320:15"},{"body":{"nodeType":"YulBlock","src":"4518:87:15","statements":[{"nodeType":"YulAssignment","src":"4528:11:15","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4536:3:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4528:4:15"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4556:1:15","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4559:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4549:6:15"},"nodeType":"YulFunctionCall","src":"4549:14:15"},"nodeType":"YulExpressionStatement","src":"4549:14:15"},{"nodeType":"YulAssignment","src":"4572:26:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4590:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4593:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4580:9:15"},"nodeType":"YulFunctionCall","src":"4580:18:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4572:4:15"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4505:3:15","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4513:4:15","type":""}],"src":"4464:141:15"},{"body":{"nodeType":"YulBlock","src":"4655:49:15","statements":[{"nodeType":"YulAssignment","src":"4665:33:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4683:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4690:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4679:3:15"},"nodeType":"YulFunctionCall","src":"4679:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"4695:2:15","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4675:3:15"},"nodeType":"YulFunctionCall","src":"4675:23:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4665:6:15"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4638:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4648:6:15","type":""}],"src":"4611:93:15"},{"body":{"nodeType":"YulBlock","src":"4763:54:15","statements":[{"nodeType":"YulAssignment","src":"4773:37:15","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4798:4:15"},{"name":"value","nodeType":"YulIdentifier","src":"4804:5:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4794:3:15"},"nodeType":"YulFunctionCall","src":"4794:16:15"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4773:8:15"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4738:4:15","type":""},{"name":"value","nodeType":"YulTypedName","src":"4744:5:15","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4754:8:15","type":""}],"src":"4710:107:15"},{"body":{"nodeType":"YulBlock","src":"4899:317:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4909:35:15","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4930:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"4942:1:15","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4926:3:15"},"nodeType":"YulFunctionCall","src":"4926:18:15"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4913:9:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4953:109:15","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4984:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4995:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4965:18:15"},"nodeType":"YulFunctionCall","src":"4965:97:15"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4957:4:15","type":""}]},{"nodeType":"YulAssignment","src":"5071:51:15","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5102:9:15"},{"name":"toInsert","nodeType":"YulIdentifier","src":"5113:8:15"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5083:18:15"},"nodeType":"YulFunctionCall","src":"5083:39:15"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5071:8:15"}]},{"nodeType":"YulAssignment","src":"5131:30:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5144:5:15"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"5155:4:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5151:3:15"},"nodeType":"YulFunctionCall","src":"5151:9:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5140:3:15"},"nodeType":"YulFunctionCall","src":"5140:21:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5131:5:15"}]},{"nodeType":"YulAssignment","src":"5170:40:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5183:5:15"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5194:8:15"},{"name":"mask","nodeType":"YulIdentifier","src":"5204:4:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5190:3:15"},"nodeType":"YulFunctionCall","src":"5190:19:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5180:2:15"},"nodeType":"YulFunctionCall","src":"5180:30:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5170:6:15"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4860:5:15","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4867:10:15","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4879:8:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4892:6:15","type":""}],"src":"4823:393:15"},{"body":{"nodeType":"YulBlock","src":"5267:32:15","statements":[{"nodeType":"YulAssignment","src":"5277:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"5288:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5277:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5249:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5259:7:15","type":""}],"src":"5222:77:15"},{"body":{"nodeType":"YulBlock","src":"5337:28:15","statements":[{"nodeType":"YulAssignment","src":"5347:12:15","value":{"name":"value","nodeType":"YulIdentifier","src":"5354:5:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5347:3:15"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5323:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5333:3:15","type":""}],"src":"5305:60:15"},{"body":{"nodeType":"YulBlock","src":"5431:82:15","statements":[{"nodeType":"YulAssignment","src":"5441:66:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5499:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5481:17:15"},"nodeType":"YulFunctionCall","src":"5481:24:15"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5472:8:15"},"nodeType":"YulFunctionCall","src":"5472:34:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5454:17:15"},"nodeType":"YulFunctionCall","src":"5454:53:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5441:9:15"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5411:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5421:9:15","type":""}],"src":"5371:142:15"},{"body":{"nodeType":"YulBlock","src":"5566:28:15","statements":[{"nodeType":"YulAssignment","src":"5576:12:15","value":{"name":"value","nodeType":"YulIdentifier","src":"5583:5:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5576:3:15"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5552:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5562:3:15","type":""}],"src":"5519:75:15"},{"body":{"nodeType":"YulBlock","src":"5676:193:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5686:63:15","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5741:7:15"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5710:30:15"},"nodeType":"YulFunctionCall","src":"5710:39:15"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5690:16:15","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5765:4:15"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5799:5:15"},"nodeType":"YulFunctionCall","src":"5799:11:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5812:6:15"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5844:16:15"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5820:23:15"},"nodeType":"YulFunctionCall","src":"5820:41:15"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5771:27:15"},"nodeType":"YulFunctionCall","src":"5771:91:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5758:6:15"},"nodeType":"YulFunctionCall","src":"5758:105:15"},"nodeType":"YulExpressionStatement","src":"5758:105:15"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5653:4:15","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5659:6:15","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5667:7:15","type":""}],"src":"5600:269:15"},{"body":{"nodeType":"YulBlock","src":"5924:24:15","statements":[{"nodeType":"YulAssignment","src":"5934:8:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5941:1:15","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5934:3:15"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5920:3:15","type":""}],"src":"5875:73:15"},{"body":{"nodeType":"YulBlock","src":"6007:136:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6017:46:15","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"6031:30:15"},"nodeType":"YulFunctionCall","src":"6031:32:15"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"6021:6:15","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6116:4:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6122:6:15"},{"name":"zero_0","nodeType":"YulIdentifier","src":"6130:6:15"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6072:43:15"},"nodeType":"YulFunctionCall","src":"6072:65:15"},"nodeType":"YulExpressionStatement","src":"6072:65:15"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5993:4:15","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5999:6:15","type":""}],"src":"5954:189:15"},{"body":{"nodeType":"YulBlock","src":"6199:136:15","statements":[{"body":{"nodeType":"YulBlock","src":"6266:63:15","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6310:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"6317:1:15","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"6280:29:15"},"nodeType":"YulFunctionCall","src":"6280:39:15"},"nodeType":"YulExpressionStatement","src":"6280:39:15"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6219:5:15"},{"name":"end","nodeType":"YulIdentifier","src":"6226:3:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6216:2:15"},"nodeType":"YulFunctionCall","src":"6216:14:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6231:26:15","statements":[{"nodeType":"YulAssignment","src":"6233:22:15","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6246:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"6253:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6242:3:15"},"nodeType":"YulFunctionCall","src":"6242:13:15"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"6233:5:15"}]}]},"pre":{"nodeType":"YulBlock","src":"6213:2:15","statements":[]},"src":"6209:120:15"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"6187:5:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"6194:3:15","type":""}],"src":"6149:186:15"},{"body":{"nodeType":"YulBlock","src":"6420:464:15","statements":[{"body":{"nodeType":"YulBlock","src":"6446:431:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6460:54:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6508:5:15"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6476:31:15"},"nodeType":"YulFunctionCall","src":"6476:38:15"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6464:8:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6527:63:15","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6550:8:15"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6578:10:15"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6560:17:15"},"nodeType":"YulFunctionCall","src":"6560:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6546:3:15"},"nodeType":"YulFunctionCall","src":"6546:44:15"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6531:11:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"6747:27:15","statements":[{"nodeType":"YulAssignment","src":"6749:23:15","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6764:8:15"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6749:11:15"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6731:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"6743:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6728:2:15"},"nodeType":"YulFunctionCall","src":"6728:18:15"},"nodeType":"YulIf","src":"6725:49:15"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6816:11:15"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6833:8:15"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6861:3:15"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6843:17:15"},"nodeType":"YulFunctionCall","src":"6843:22:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6829:3:15"},"nodeType":"YulFunctionCall","src":"6829:37:15"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6787:28:15"},"nodeType":"YulFunctionCall","src":"6787:80:15"},"nodeType":"YulExpressionStatement","src":"6787:80:15"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6437:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6442:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6434:2:15"},"nodeType":"YulFunctionCall","src":"6434:11:15"},"nodeType":"YulIf","src":"6431:446:15"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6396:5:15","type":""},{"name":"len","nodeType":"YulTypedName","src":"6403:3:15","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6408:10:15","type":""}],"src":"6341:543:15"},{"body":{"nodeType":"YulBlock","src":"6953:54:15","statements":[{"nodeType":"YulAssignment","src":"6963:37:15","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6988:4:15"},{"name":"value","nodeType":"YulIdentifier","src":"6994:5:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6984:3:15"},"nodeType":"YulFunctionCall","src":"6984:16:15"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6963:8:15"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6928:4:15","type":""},{"name":"value","nodeType":"YulTypedName","src":"6934:5:15","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6944:8:15","type":""}],"src":"6890:117:15"},{"body":{"nodeType":"YulBlock","src":"7064:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7074:68:15","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7123:1:15","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"7126:5:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7119:3:15"},"nodeType":"YulFunctionCall","src":"7119:13:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7138:1:15","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7134:3:15"},"nodeType":"YulFunctionCall","src":"7134:6:15"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"7090:28:15"},"nodeType":"YulFunctionCall","src":"7090:51:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7086:3:15"},"nodeType":"YulFunctionCall","src":"7086:56:15"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7078:4:15","type":""}]},{"nodeType":"YulAssignment","src":"7151:25:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7165:4:15"},{"name":"mask","nodeType":"YulIdentifier","src":"7171:4:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7161:3:15"},"nodeType":"YulFunctionCall","src":"7161:15:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7151:6:15"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7041:4:15","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"7047:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7057:6:15","type":""}],"src":"7013:169:15"},{"body":{"nodeType":"YulBlock","src":"7268:214:15","statements":[{"nodeType":"YulAssignment","src":"7401:37:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7428:4:15"},{"name":"len","nodeType":"YulIdentifier","src":"7434:3:15"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7409:18:15"},"nodeType":"YulFunctionCall","src":"7409:29:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7401:4:15"}]},{"nodeType":"YulAssignment","src":"7447:29:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7458:4:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7468:1:15","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7471:3:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7464:3:15"},"nodeType":"YulFunctionCall","src":"7464:11:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7455:2:15"},"nodeType":"YulFunctionCall","src":"7455:21:15"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7447:4:15"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7249:4:15","type":""},{"name":"len","nodeType":"YulTypedName","src":"7255:3:15","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"7263:4:15","type":""}],"src":"7187:295:15"},{"body":{"nodeType":"YulBlock","src":"7579:1303:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7590:51:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7637:3:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7604:32:15"},"nodeType":"YulFunctionCall","src":"7604:37:15"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7594:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"7726:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7728:16:15"},"nodeType":"YulFunctionCall","src":"7728:18:15"},"nodeType":"YulExpressionStatement","src":"7728:18:15"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7698:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"7706:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7695:2:15"},"nodeType":"YulFunctionCall","src":"7695:30:15"},"nodeType":"YulIf","src":"7692:56:15"},{"nodeType":"YulVariableDeclaration","src":"7758:52:15","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7804:4:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7798:5:15"},"nodeType":"YulFunctionCall","src":"7798:11:15"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7772:25:15"},"nodeType":"YulFunctionCall","src":"7772:38:15"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7762:6:15","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7903:4:15"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7909:6:15"},{"name":"newLen","nodeType":"YulIdentifier","src":"7917:6:15"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7857:45:15"},"nodeType":"YulFunctionCall","src":"7857:67:15"},"nodeType":"YulExpressionStatement","src":"7857:67:15"},{"nodeType":"YulVariableDeclaration","src":"7934:18:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7951:1:15","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7938:9:15","type":""}]},{"nodeType":"YulAssignment","src":"7962:17:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7975:4:15","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7962:9:15"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8026:611:15","statements":[{"nodeType":"YulVariableDeclaration","src":"8040:37:15","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8059:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8071:4:15","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8067:3:15"},"nodeType":"YulFunctionCall","src":"8067:9:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8055:3:15"},"nodeType":"YulFunctionCall","src":"8055:22:15"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"8044:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8091:51:15","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8137:4:15"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8105:31:15"},"nodeType":"YulFunctionCall","src":"8105:37:15"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"8095:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8155:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"8164:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8159:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"8223:163:15","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8248:6:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8266:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8271:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8262:3:15"},"nodeType":"YulFunctionCall","src":"8262:19:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8256:5:15"},"nodeType":"YulFunctionCall","src":"8256:26:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8241:6:15"},"nodeType":"YulFunctionCall","src":"8241:42:15"},"nodeType":"YulExpressionStatement","src":"8241:42:15"},{"nodeType":"YulAssignment","src":"8300:24:15","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8314:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8322:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8310:3:15"},"nodeType":"YulFunctionCall","src":"8310:14:15"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8300:6:15"}]},{"nodeType":"YulAssignment","src":"8341:31:15","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8358:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8369:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8354:3:15"},"nodeType":"YulFunctionCall","src":"8354:18:15"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8341:9:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8189:1:15"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"8192:7:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8186:2:15"},"nodeType":"YulFunctionCall","src":"8186:14:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8201:21:15","statements":[{"nodeType":"YulAssignment","src":"8203:17:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8212:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"8215:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8208:3:15"},"nodeType":"YulFunctionCall","src":"8208:12:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8203:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"8182:3:15","statements":[]},"src":"8178:208:15"},{"body":{"nodeType":"YulBlock","src":"8422:156:15","statements":[{"nodeType":"YulVariableDeclaration","src":"8440:43:15","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8467:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8472:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8463:3:15"},"nodeType":"YulFunctionCall","src":"8463:19:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8457:5:15"},"nodeType":"YulFunctionCall","src":"8457:26:15"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8444:9:15","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8507:6:15"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8534:9:15"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8549:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8557:4:15","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8545:3:15"},"nodeType":"YulFunctionCall","src":"8545:17:15"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8515:18:15"},"nodeType":"YulFunctionCall","src":"8515:48:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8500:6:15"},"nodeType":"YulFunctionCall","src":"8500:64:15"},"nodeType":"YulExpressionStatement","src":"8500:64:15"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8405:7:15"},{"name":"newLen","nodeType":"YulIdentifier","src":"8414:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8402:2:15"},"nodeType":"YulFunctionCall","src":"8402:19:15"},"nodeType":"YulIf","src":"8399:179:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8598:4:15"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8612:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8620:1:15","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8608:3:15"},"nodeType":"YulFunctionCall","src":"8608:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"8624:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8604:3:15"},"nodeType":"YulFunctionCall","src":"8604:22:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8591:6:15"},"nodeType":"YulFunctionCall","src":"8591:36:15"},"nodeType":"YulExpressionStatement","src":"8591:36:15"}]},"nodeType":"YulCase","src":"8019:618:15","value":{"kind":"number","nodeType":"YulLiteral","src":"8024:1:15","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8654:222:15","statements":[{"nodeType":"YulVariableDeclaration","src":"8668:14:15","value":{"kind":"number","nodeType":"YulLiteral","src":"8681:1:15","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8672:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"8705:67:15","statements":[{"nodeType":"YulAssignment","src":"8723:35:15","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8742:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8747:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8738:3:15"},"nodeType":"YulFunctionCall","src":"8738:19:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8732:5:15"},"nodeType":"YulFunctionCall","src":"8732:26:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8723:5:15"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8698:6:15"},"nodeType":"YulIf","src":"8695:77:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8792:4:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8851:5:15"},{"name":"newLen","nodeType":"YulIdentifier","src":"8858:6:15"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8798:52:15"},"nodeType":"YulFunctionCall","src":"8798:67:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8785:6:15"},"nodeType":"YulFunctionCall","src":"8785:81:15"},"nodeType":"YulExpressionStatement","src":"8785:81:15"}]},"nodeType":"YulCase","src":"8646:230:15","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7999:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8007:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7996:2:15"},"nodeType":"YulFunctionCall","src":"7996:14:15"},"nodeType":"YulSwitch","src":"7989:887:15"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7568:4:15","type":""},{"name":"src","nodeType":"YulTypedName","src":"7574:3:15","type":""}],"src":"7487:1395:15"},{"body":{"nodeType":"YulBlock","src":"8916:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8933:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8936:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8926:6:15"},"nodeType":"YulFunctionCall","src":"8926:88:15"},"nodeType":"YulExpressionStatement","src":"8926:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9030:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9033:4:15","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9023:6:15"},"nodeType":"YulFunctionCall","src":"9023:15:15"},"nodeType":"YulExpressionStatement","src":"9023:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9054:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9057:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9047:6:15"},"nodeType":"YulFunctionCall","src":"9047:15:15"},"nodeType":"YulExpressionStatement","src":"9047:15:15"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"8888:180:15"},{"body":{"nodeType":"YulBlock","src":"9102:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9119:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9122:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9112:6:15"},"nodeType":"YulFunctionCall","src":"9112:88:15"},"nodeType":"YulExpressionStatement","src":"9112:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9216:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9219:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9209:6:15"},"nodeType":"YulFunctionCall","src":"9209:15:15"},"nodeType":"YulExpressionStatement","src":"9209:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9240:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9243:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9233:6:15"},"nodeType":"YulFunctionCall","src":"9233:15:15"},"nodeType":"YulExpressionStatement","src":"9233:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9074:180:15"},{"body":{"nodeType":"YulBlock","src":"9303:190:15","statements":[{"nodeType":"YulAssignment","src":"9313:33:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9340:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9322:17:15"},"nodeType":"YulFunctionCall","src":"9322:24:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9313:5:15"}]},{"body":{"nodeType":"YulBlock","src":"9436:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9438:16:15"},"nodeType":"YulFunctionCall","src":"9438:18:15"},"nodeType":"YulExpressionStatement","src":"9438:18:15"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9361:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"9368:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9358:2:15"},"nodeType":"YulFunctionCall","src":"9358:77:15"},"nodeType":"YulIf","src":"9355:103:15"},{"nodeType":"YulAssignment","src":"9467:20:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9478:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"9485:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9474:3:15"},"nodeType":"YulFunctionCall","src":"9474:13:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9467:3:15"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9289:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9299:3:15","type":""}],"src":"9260:233:15"},{"body":{"nodeType":"YulBlock","src":"9612:34:15","statements":[{"nodeType":"YulAssignment","src":"9622:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"9637:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9622:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9584:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"9589:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9600:11:15","type":""}],"src":"9499:147:15"},{"body":{"nodeType":"YulBlock","src":"9709:87:15","statements":[{"nodeType":"YulAssignment","src":"9719:11:15","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9727:3:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9719:4:15"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9747:1:15","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"9750:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9740:6:15"},"nodeType":"YulFunctionCall","src":"9740:14:15"},"nodeType":"YulExpressionStatement","src":"9740:14:15"},{"nodeType":"YulAssignment","src":"9763:26:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9781:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9784:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9771:9:15"},"nodeType":"YulFunctionCall","src":"9771:18:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9763:4:15"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9696:3:15","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9704:4:15","type":""}],"src":"9652:144:15"},{"body":{"nodeType":"YulBlock","src":"9933:769:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9943:29:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9966:5:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9960:5:15"},"nodeType":"YulFunctionCall","src":"9960:12:15"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"9947:9:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9981:50:15","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10021:9:15"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"9995:25:15"},"nodeType":"YulFunctionCall","src":"9995:36:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9985:6:15","type":""}]},{"nodeType":"YulAssignment","src":"10040:95:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10123:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"10128:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10047:75:15"},"nodeType":"YulFunctionCall","src":"10047:88:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10040:3:15"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"10184:159:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10237:3:15"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10246:9:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10261:4:15","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10257:3:15"},"nodeType":"YulFunctionCall","src":"10257:9:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10242:3:15"},"nodeType":"YulFunctionCall","src":"10242:25:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10230:6:15"},"nodeType":"YulFunctionCall","src":"10230:38:15"},"nodeType":"YulExpressionStatement","src":"10230:38:15"},{"nodeType":"YulAssignment","src":"10281:52:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10292:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10301:6:15"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10323:6:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10316:6:15"},"nodeType":"YulFunctionCall","src":"10316:14:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10309:6:15"},"nodeType":"YulFunctionCall","src":"10309:22:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10297:3:15"},"nodeType":"YulFunctionCall","src":"10297:35:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10288:3:15"},"nodeType":"YulFunctionCall","src":"10288:45:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10281:3:15"}]}]},"nodeType":"YulCase","src":"10177:166:15","value":{"kind":"number","nodeType":"YulLiteral","src":"10182:1:15","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"10359:337:15","statements":[{"nodeType":"YulVariableDeclaration","src":"10404:56:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10454:5:15"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"10419:34:15"},"nodeType":"YulFunctionCall","src":"10419:41:15"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"10408:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10473:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"10482:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10477:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"10540:110:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10569:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"10574:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10565:3:15"},"nodeType":"YulFunctionCall","src":"10565:11:15"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"10584:7:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"10578:5:15"},"nodeType":"YulFunctionCall","src":"10578:14:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10558:6:15"},"nodeType":"YulFunctionCall","src":"10558:35:15"},"nodeType":"YulExpressionStatement","src":"10558:35:15"},{"nodeType":"YulAssignment","src":"10610:26:15","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"10625:7:15"},{"kind":"number","nodeType":"YulLiteral","src":"10634:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10621:3:15"},"nodeType":"YulFunctionCall","src":"10621:15:15"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"10610:7:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10507:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"10510:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10504:2:15"},"nodeType":"YulFunctionCall","src":"10504:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10518:21:15","statements":[{"nodeType":"YulAssignment","src":"10520:17:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10529:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"10532:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10525:3:15"},"nodeType":"YulFunctionCall","src":"10525:12:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10520:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"10500:3:15","statements":[]},"src":"10496:154:15"},{"nodeType":"YulAssignment","src":"10663:23:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10674:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"10679:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10670:3:15"},"nodeType":"YulFunctionCall","src":"10670:16:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10663:3:15"}]}]},"nodeType":"YulCase","src":"10352:344:15","value":{"kind":"number","nodeType":"YulLiteral","src":"10357:1:15","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10155:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10166:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10151:3:15"},"nodeType":"YulFunctionCall","src":"10151:17:15"},"nodeType":"YulSwitch","src":"10144:552:15"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9914:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9921:3:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9929:3:15","type":""}],"src":"9824:878:15"},{"body":{"nodeType":"YulBlock","src":"10843:138:15","statements":[{"nodeType":"YulAssignment","src":"10854:101:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10942:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"10951:3:15"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10861:80:15"},"nodeType":"YulFunctionCall","src":"10861:94:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10854:3:15"}]},{"nodeType":"YulAssignment","src":"10965:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"10972:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10965:3:15"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10822:3:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10828:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10839:3:15","type":""}],"src":"10708:273:15"},{"body":{"nodeType":"YulBlock","src":"11032:32:15","statements":[{"nodeType":"YulAssignment","src":"11042:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"11053:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11042:7:15"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11014:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11024:7:15","type":""}],"src":"10987:77:15"},{"body":{"nodeType":"YulBlock","src":"11135:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11152:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11175:5:15"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"11157:17:15"},"nodeType":"YulFunctionCall","src":"11157:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11145:6:15"},"nodeType":"YulFunctionCall","src":"11145:37:15"},"nodeType":"YulExpressionStatement","src":"11145:37:15"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11123:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11130:3:15","type":""}],"src":"11070:118:15"},{"body":{"nodeType":"YulBlock","src":"11259:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11276:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11299:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11281:17:15"},"nodeType":"YulFunctionCall","src":"11281:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11269:6:15"},"nodeType":"YulFunctionCall","src":"11269:37:15"},"nodeType":"YulExpressionStatement","src":"11269:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11247:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11254:3:15","type":""}],"src":"11194:118:15"},{"body":{"nodeType":"YulBlock","src":"11383:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11400:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11423:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11405:17:15"},"nodeType":"YulFunctionCall","src":"11405:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11393:6:15"},"nodeType":"YulFunctionCall","src":"11393:37:15"},"nodeType":"YulExpressionStatement","src":"11393:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11371:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11378:3:15","type":""}],"src":"11318:118:15"},{"body":{"nodeType":"YulBlock","src":"11652:454:15","statements":[{"nodeType":"YulAssignment","src":"11662:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11674:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11685:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11670:3:15"},"nodeType":"YulFunctionCall","src":"11670:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11662:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11743:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11756:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11767:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11752:3:15"},"nodeType":"YulFunctionCall","src":"11752:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11699:43:15"},"nodeType":"YulFunctionCall","src":"11699:71:15"},"nodeType":"YulExpressionStatement","src":"11699:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11824:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11837:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11848:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11833:3:15"},"nodeType":"YulFunctionCall","src":"11833:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11780:43:15"},"nodeType":"YulFunctionCall","src":"11780:72:15"},"nodeType":"YulExpressionStatement","src":"11780:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11906:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11919:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11930:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11915:3:15"},"nodeType":"YulFunctionCall","src":"11915:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11862:43:15"},"nodeType":"YulFunctionCall","src":"11862:72:15"},"nodeType":"YulExpressionStatement","src":"11862:72:15"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11988:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12001:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12012:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11997:3:15"},"nodeType":"YulFunctionCall","src":"11997:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11944:43:15"},"nodeType":"YulFunctionCall","src":"11944:72:15"},"nodeType":"YulExpressionStatement","src":"11944:72:15"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12070:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12083:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12094:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12079:3:15"},"nodeType":"YulFunctionCall","src":"12079:19:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12026:43:15"},"nodeType":"YulFunctionCall","src":"12026:73:15"},"nodeType":"YulExpressionStatement","src":"12026:73:15"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11592:9:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11604:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11612:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11620:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11628:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11636:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11647:4:15","type":""}],"src":"11442:664:15"},{"body":{"nodeType":"YulBlock","src":"12156:147:15","statements":[{"nodeType":"YulAssignment","src":"12166:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12189:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12171:17:15"},"nodeType":"YulFunctionCall","src":"12171:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12166:1:15"}]},{"nodeType":"YulAssignment","src":"12200:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12223:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12205:17:15"},"nodeType":"YulFunctionCall","src":"12205:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12200:1:15"}]},{"nodeType":"YulAssignment","src":"12234:16:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12245:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"12248:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12241:3:15"},"nodeType":"YulFunctionCall","src":"12241:9:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12234:3:15"}]},{"body":{"nodeType":"YulBlock","src":"12274:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12276:16:15"},"nodeType":"YulFunctionCall","src":"12276:18:15"},"nodeType":"YulExpressionStatement","src":"12276:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12266:1:15"},{"name":"sum","nodeType":"YulIdentifier","src":"12269:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12263:2:15"},"nodeType":"YulFunctionCall","src":"12263:10:15"},"nodeType":"YulIf","src":"12260:36:15"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12143:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"12146:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12152:3:15","type":""}],"src":"12112:191:15"},{"body":{"nodeType":"YulBlock","src":"12407:124:15","statements":[{"nodeType":"YulAssignment","src":"12417:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12429:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12440:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12425:3:15"},"nodeType":"YulFunctionCall","src":"12425:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12417:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12497:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12510:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12521:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12506:3:15"},"nodeType":"YulFunctionCall","src":"12506:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12453:43:15"},"nodeType":"YulFunctionCall","src":"12453:71:15"},"nodeType":"YulExpressionStatement","src":"12453:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12379:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12391:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12402:4:15","type":""}],"src":"12309:222:15"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e06040523480156200001157600080fd5b5060405162001f7738038062001f778339818101604052810190620000379190620004b5565b6040518060400160405280600581526020017f73744554480000000000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f737445544800000000000000000000000000000000000000000000000000000081525060128260009081620000b6919062000751565b508160019081620000c8919062000751565b508060ff1660808160ff16815250504660a08181525050620000ef6200016360201b60201c565b60c0818152505050505060008151905060005b818110156200015a576200014483828151811062000125576200012462000838565b5b602002602001015169152d02c7e14af6800000620001f360201b60201c565b8080620001519062000896565b91505062000102565b50505062000a9d565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405162000197919062000992565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001620001d8959493929190620009e8565b60405160208183030381529060405280519060200120905090565b806002600082825462000207919062000a45565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002bb919062000a80565b60405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200032b82620002e0565b810181811067ffffffffffffffff821117156200034d576200034c620002f1565b5b80604052505050565b600062000362620002c7565b905062000370828262000320565b919050565b600067ffffffffffffffff821115620003935762000392620002f1565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003d682620003a9565b9050919050565b620003e881620003c9565b8114620003f457600080fd5b50565b6000815190506200040881620003dd565b92915050565b6000620004256200041f8462000375565b62000356565b905080838252602082019050602084028301858111156200044b576200044a620003a4565b5b835b81811015620004785780620004638882620003f7565b8452602084019350506020810190506200044d565b5050509392505050565b600082601f8301126200049a5762000499620002db565b5b8151620004ac8482602086016200040e565b91505092915050565b600060208284031215620004ce57620004cd620002d1565b5b600082015167ffffffffffffffff811115620004ef57620004ee620002d6565b5b620004fd8482850162000482565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200055957607f821691505b6020821081036200056f576200056e62000511565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005d97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200059a565b620005e586836200059a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620006326200062c6200062684620005fd565b62000607565b620005fd565b9050919050565b6000819050919050565b6200064e8362000611565b620006666200065d8262000639565b848454620005a7565b825550505050565b600090565b6200067d6200066e565b6200068a81848462000643565b505050565b5b81811015620006b257620006a660008262000673565b60018101905062000690565b5050565b601f8211156200070157620006cb8162000575565b620006d6846200058a565b81016020851015620006e6578190505b620006fe620006f5856200058a565b8301826200068f565b50505b505050565b600082821c905092915050565b6000620007266000198460080262000706565b1980831691505092915050565b600062000741838362000713565b9150826002028217905092915050565b6200075c8262000506565b67ffffffffffffffff811115620007785762000777620002f1565b5b62000784825462000540565b62000791828285620006b6565b600060209050601f831160018114620007c95760008415620007b4578287015190505b620007c0858262000733565b86555062000830565b601f198416620007d98662000575565b60005b828110156200080357848901518255600182019150602085019450602081019050620007dc565b868310156200082357848901516200081f601f89168262000713565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620008a382620005fd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620008d857620008d762000867565b5b600182019050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154620009128162000540565b6200091e8186620008e3565b945060018216600081146200093c5760018114620009525762000989565b60ff198316865281151582028601935062000989565b6200095d85620008ee565b60005b83811015620009815781548189015260018201915060208101905062000960565b838801955050505b50505092915050565b6000620009a0828462000903565b915081905092915050565b6000819050919050565b620009c081620009ab565b82525050565b620009d181620005fd565b82525050565b620009e281620003c9565b82525050565b600060a082019050620009ff6000830188620009b5565b62000a0e6020830187620009b5565b62000a1d6040830186620009b5565b62000a2c6060830185620009c6565b62000a3b6080830184620009d7565b9695505050505050565b600062000a5282620005fd565b915062000a5f83620005fd565b925082820190508082111562000a7a5762000a7962000867565b5b92915050565b600060208201905062000a976000830184620009c6565b92915050565b60805160a05160c0516114aa62000acd60003960006106b7015260006106830152600061065d01526114aa6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101915780637ecebe00146101c157806395d89b41146101f1578063a9059cbb1461020f578063d505accf1461023f578063dd62ed3e1461025b576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633644e51514610173575b600080fd5b6100c161028b565b6040516100ce9190610ce8565b60405180910390f35b6100f160048036038101906100ec9190610da3565b610319565b6040516100fe9190610dfe565b60405180910390f35b61010f61040b565b60405161011c9190610e28565b60405180910390f35b61013f600480360381019061013a9190610e43565b610411565b60405161014c9190610dfe565b60405180910390f35b61015d61065b565b60405161016a9190610eb2565b60405180910390f35b61017b61067f565b6040516101889190610ee6565b60405180910390f35b6101ab60048036038101906101a69190610f01565b6106dc565b6040516101b89190610e28565b60405180910390f35b6101db60048036038101906101d69190610f01565b6106f4565b6040516101e89190610e28565b60405180910390f35b6101f961070c565b6040516102069190610ce8565b60405180910390f35b61022960048036038101906102249190610da3565b61079a565b6040516102369190610dfe565b60405180910390f35b61025960048036038101906102549190610f86565b6108ae565b005b61027560048036038101906102709190611028565b610ba7565b6040516102829190610e28565b60405180910390f35b6000805461029890611097565b80601f01602080910402602001604051908101604052809291908181526020018280546102c490611097565b80156103115780601f106102e657610100808354040283529160200191610311565b820191906000526020600020905b8154815290600101906020018083116102f457829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103f99190610e28565b60405180910390a36001905092915050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105475782816104c691906110f7565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461059691906110f7565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516106479190610e28565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146106b5576106b0610bcc565b6106d7565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6001805461071990611097565b80601f016020809104026020016040519081016040528092919081815260200182805461074590611097565b80156107925780601f1061076757610100808354040283529160200191610792565b820191906000526020600020905b81548152906001019060200180831161077557829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107eb91906110f7565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089c9190610e28565b60405180910390a36001905092915050565b428410156108f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e890611177565b60405180910390fd5b600060016108fd61067f565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b604051602001610985969594939291906111a6565b604051602081830303815290604052805190602001206040516020016109ac92919061127f565b60405160208183030381529060405280519060200120858585604051600081526020016040526040516109e294939291906112b6565b6020604051602081039080840390855afa158015610a04573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610a7857508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae90611347565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610b969190610e28565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610bfe919061140a565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001610c3d959493929190611421565b60405160208183030381529060405280519060200120905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c92578082015181840152602081019050610c77565b60008484015250505050565b6000601f19601f8301169050919050565b6000610cba82610c58565b610cc48185610c63565b9350610cd4818560208601610c74565b610cdd81610c9e565b840191505092915050565b60006020820190508181036000830152610d028184610caf565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d3a82610d0f565b9050919050565b610d4a81610d2f565b8114610d5557600080fd5b50565b600081359050610d6781610d41565b92915050565b6000819050919050565b610d8081610d6d565b8114610d8b57600080fd5b50565b600081359050610d9d81610d77565b92915050565b60008060408385031215610dba57610db9610d0a565b5b6000610dc885828601610d58565b9250506020610dd985828601610d8e565b9150509250929050565b60008115159050919050565b610df881610de3565b82525050565b6000602082019050610e136000830184610def565b92915050565b610e2281610d6d565b82525050565b6000602082019050610e3d6000830184610e19565b92915050565b600080600060608486031215610e5c57610e5b610d0a565b5b6000610e6a86828701610d58565b9350506020610e7b86828701610d58565b9250506040610e8c86828701610d8e565b9150509250925092565b600060ff82169050919050565b610eac81610e96565b82525050565b6000602082019050610ec76000830184610ea3565b92915050565b6000819050919050565b610ee081610ecd565b82525050565b6000602082019050610efb6000830184610ed7565b92915050565b600060208284031215610f1757610f16610d0a565b5b6000610f2584828501610d58565b91505092915050565b610f3781610e96565b8114610f4257600080fd5b50565b600081359050610f5481610f2e565b92915050565b610f6381610ecd565b8114610f6e57600080fd5b50565b600081359050610f8081610f5a565b92915050565b600080600080600080600060e0888a031215610fa557610fa4610d0a565b5b6000610fb38a828b01610d58565b9750506020610fc48a828b01610d58565b9650506040610fd58a828b01610d8e565b9550506060610fe68a828b01610d8e565b9450506080610ff78a828b01610f45565b93505060a06110088a828b01610f71565b92505060c06110198a828b01610f71565b91505092959891949750929550565b6000806040838503121561103f5761103e610d0a565b5b600061104d85828601610d58565b925050602061105e85828601610d58565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110af57607f821691505b6020821081036110c2576110c1611068565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061110282610d6d565b915061110d83610d6d565b9250828203905081811115611125576111246110c8565b5b92915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b6000611161601783610c63565b915061116c8261112b565b602082019050919050565b6000602082019050818103600083015261119081611154565b9050919050565b6111a081610d2f565b82525050565b600060c0820190506111bb6000830189610ed7565b6111c86020830188611197565b6111d56040830187611197565b6111e26060830186610e19565b6111ef6080830185610e19565b6111fc60a0830184610e19565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611248600283611207565b915061125382611212565b600282019050919050565b6000819050919050565b61127961127482610ecd565b61125e565b82525050565b600061128a8261123b565b91506112968285611268565b6020820191506112a68284611268565b6020820191508190509392505050565b60006080820190506112cb6000830187610ed7565b6112d86020830186610ea3565b6112e56040830185610ed7565b6112f26060830184610ed7565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000611331600e83610c63565b915061133c826112fb565b602082019050919050565b6000602082019050818103600083015261136081611324565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461139481611097565b61139e8186611367565b945060018216600081146113b957600181146113ce57611401565b60ff1983168652811515820286019350611401565b6113d785611372565b60005b838110156113f9578154818901526001820191506020810190506113da565b838801955050505b50505092915050565b60006114168284611387565b915081905092915050565b600060a0820190506114366000830188610ed7565b6114436020830187610ed7565b6114506040830186610ed7565b61145d6060830185610e19565b61146a6080830184611197565b969550505050505056fea264697066735822122018124daef62e3d0214c123198476fb00f2f925046ee67213fd1f136da1d3fac364736f6c63430008110033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F77 CODESIZE SUB DUP1 PUSH3 0x1F77 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7374455448000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7374455448000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x12 DUP3 PUSH1 0x0 SWAP1 DUP2 PUSH3 0xB6 SWAP2 SWAP1 PUSH3 0x751 JUMP JUMPDEST POP DUP2 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC8 SWAP2 SWAP1 PUSH3 0x751 JUMP JUMPDEST POP DUP1 PUSH1 0xFF AND PUSH1 0x80 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0xEF PUSH3 0x163 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP POP POP POP PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x15A JUMPI PUSH3 0x144 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x125 JUMPI PUSH3 0x124 PUSH3 0x838 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH10 0x152D02C7E14AF6800000 PUSH3 0x1F3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 DUP1 PUSH3 0x151 SWAP1 PUSH3 0x896 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x102 JUMP JUMPDEST POP POP POP PUSH3 0xA9D JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH3 0x197 SWAP2 SWAP1 PUSH3 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1D8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x207 SWAP2 SWAP1 PUSH3 0xA45 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x2BB SWAP2 SWAP1 PUSH3 0xA80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x32B DUP3 PUSH3 0x2E0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x34D JUMPI PUSH3 0x34C PUSH3 0x2F1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x362 PUSH3 0x2C7 JUMP JUMPDEST SWAP1 POP PUSH3 0x370 DUP3 DUP3 PUSH3 0x320 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x393 JUMPI PUSH3 0x392 PUSH3 0x2F1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3D6 DUP3 PUSH3 0x3A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3E8 DUP2 PUSH3 0x3C9 JUMP JUMPDEST DUP2 EQ PUSH3 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x408 DUP2 PUSH3 0x3DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x425 PUSH3 0x41F DUP5 PUSH3 0x375 JUMP JUMPDEST PUSH3 0x356 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x44B JUMPI PUSH3 0x44A PUSH3 0x3A4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x478 JUMPI DUP1 PUSH3 0x463 DUP9 DUP3 PUSH3 0x3F7 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x44D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x49A JUMPI PUSH3 0x499 PUSH3 0x2DB JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x4AC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x40E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x4CE JUMPI PUSH3 0x4CD PUSH3 0x2D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4EF JUMPI PUSH3 0x4EE PUSH3 0x2D6 JUMP JUMPDEST JUMPDEST PUSH3 0x4FD DUP5 DUP3 DUP6 ADD PUSH3 0x482 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x559 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x56F JUMPI PUSH3 0x56E PUSH3 0x511 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x5D9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x59A JUMP JUMPDEST PUSH3 0x5E5 DUP7 DUP4 PUSH3 0x59A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x632 PUSH3 0x62C PUSH3 0x626 DUP5 PUSH3 0x5FD JUMP JUMPDEST PUSH3 0x607 JUMP JUMPDEST PUSH3 0x5FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x64E DUP4 PUSH3 0x611 JUMP JUMPDEST PUSH3 0x666 PUSH3 0x65D DUP3 PUSH3 0x639 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x5A7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x67D PUSH3 0x66E JUMP JUMPDEST PUSH3 0x68A DUP2 DUP5 DUP5 PUSH3 0x643 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x6B2 JUMPI PUSH3 0x6A6 PUSH1 0x0 DUP3 PUSH3 0x673 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x690 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x701 JUMPI PUSH3 0x6CB DUP2 PUSH3 0x575 JUMP JUMPDEST PUSH3 0x6D6 DUP5 PUSH3 0x58A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x6E6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x6FE PUSH3 0x6F5 DUP6 PUSH3 0x58A JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x68F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x726 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x706 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x741 DUP4 DUP4 PUSH3 0x713 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x75C DUP3 PUSH3 0x506 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x778 JUMPI PUSH3 0x777 PUSH3 0x2F1 JUMP JUMPDEST JUMPDEST PUSH3 0x784 DUP3 SLOAD PUSH3 0x540 JUMP JUMPDEST PUSH3 0x791 DUP3 DUP3 DUP6 PUSH3 0x6B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x7C9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x7B4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x7C0 DUP6 DUP3 PUSH3 0x733 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x830 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x7D9 DUP7 PUSH3 0x575 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x803 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x7DC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x823 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x81F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x713 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x8A3 DUP3 PUSH3 0x5FD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x8D8 JUMPI PUSH3 0x8D7 PUSH3 0x867 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH3 0x912 DUP2 PUSH3 0x540 JUMP JUMPDEST PUSH3 0x91E DUP2 DUP7 PUSH3 0x8E3 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH3 0x93C JUMPI PUSH1 0x1 DUP2 EQ PUSH3 0x952 JUMPI PUSH3 0x989 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH3 0x989 JUMP JUMPDEST PUSH3 0x95D DUP6 PUSH3 0x8EE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x981 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x960 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9A0 DUP3 DUP5 PUSH3 0x903 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x9C0 DUP2 PUSH3 0x9AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x9D1 DUP2 PUSH3 0x5FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x9E2 DUP2 PUSH3 0x3C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x9FF PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x9B5 JUMP JUMPDEST PUSH3 0xA0E PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x9B5 JUMP JUMPDEST PUSH3 0xA1D PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x9B5 JUMP JUMPDEST PUSH3 0xA2C PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x9C6 JUMP JUMPDEST PUSH3 0xA3B PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x9D7 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA52 DUP3 PUSH3 0x5FD JUMP JUMPDEST SWAP2 POP PUSH3 0xA5F DUP4 PUSH3 0x5FD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xA7A JUMPI PUSH3 0xA79 PUSH3 0x867 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA97 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x9C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x14AA PUSH3 0xACD PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x6B7 ADD MSTORE PUSH1 0x0 PUSH2 0x683 ADD MSTORE PUSH1 0x0 PUSH2 0x65D ADD MSTORE PUSH2 0x14AA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x25B JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x298 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C4 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x311 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x311 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x547 JUMPI DUP3 DUP2 PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0x647 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0x6B5 JUMPI PUSH2 0x6B0 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x719 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x745 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x792 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x767 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x792 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x775 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x89C SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E8 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x8FD PUSH2 0x67F JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP11 DUP11 DUP11 PUSH1 0x5 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x985 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9AC SWAP3 SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x9E2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xAB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAE SWAP1 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x140A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC3D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC92 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP3 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xCC4 DUP2 DUP6 PUSH2 0xC63 JUMP JUMPDEST SWAP4 POP PUSH2 0xCD4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC74 JUMP JUMPDEST PUSH2 0xCDD DUP2 PUSH2 0xC9E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD02 DUP2 DUP5 PUSH2 0xCAF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3A DUP3 PUSH2 0xD0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4A DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP2 EQ PUSH2 0xD55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD67 DUP2 PUSH2 0xD41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD80 DUP2 PUSH2 0xD6D JUMP JUMPDEST DUP2 EQ PUSH2 0xD8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9D DUP2 PUSH2 0xD77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDBA JUMPI PUSH2 0xDB9 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDC8 DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDD9 DUP6 DUP3 DUP7 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF8 DUP2 PUSH2 0xDE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE22 DUP2 PUSH2 0xD6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE3D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH2 0xE5B PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE6A DUP7 DUP3 DUP8 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE7B DUP7 DUP3 DUP8 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE8C DUP7 DUP3 DUP8 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAC DUP2 PUSH2 0xE96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE0 DUP2 PUSH2 0xECD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEFB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xED7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF17 JUMPI PUSH2 0xF16 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF25 DUP5 DUP3 DUP6 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF37 DUP2 PUSH2 0xE96 JUMP JUMPDEST DUP2 EQ PUSH2 0xF42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF54 DUP2 PUSH2 0xF2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF63 DUP2 PUSH2 0xECD JUMP JUMPDEST DUP2 EQ PUSH2 0xF6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF80 DUP2 PUSH2 0xF5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xFA5 JUMPI PUSH2 0xFA4 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB3 DUP11 DUP3 DUP12 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xFC4 DUP11 DUP3 DUP12 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0xFD5 DUP11 DUP3 DUP12 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xFE6 DUP11 DUP3 DUP12 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xFF7 DUP11 DUP3 DUP12 ADD PUSH2 0xF45 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1008 DUP11 DUP3 DUP12 ADD PUSH2 0xF71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1019 DUP11 DUP3 DUP12 ADD PUSH2 0xF71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x103F JUMPI PUSH2 0x103E PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x104D DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x105E DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10AF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C2 JUMPI PUSH2 0x10C1 PUSH2 0x1068 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1102 DUP3 PUSH2 0xD6D JUMP JUMPDEST SWAP2 POP PUSH2 0x110D DUP4 PUSH2 0xD6D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1125 JUMPI PUSH2 0x1124 PUSH2 0x10C8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5045524D49545F444541444C494E455F45585049524544000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 PUSH1 0x17 DUP4 PUSH2 0xC63 JUMP JUMPDEST SWAP2 POP PUSH2 0x116C DUP3 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1190 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A0 DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x11BB PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x11C8 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x11D5 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x11E2 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x11EF PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x11FC PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xE19 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1248 PUSH1 0x2 DUP4 PUSH2 0x1207 JUMP JUMPDEST SWAP2 POP PUSH2 0x1253 DUP3 PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1279 PUSH2 0x1274 DUP3 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x125E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128A DUP3 PUSH2 0x123B JUMP JUMPDEST SWAP2 POP PUSH2 0x1296 DUP3 DUP6 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x12A6 DUP3 DUP5 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x12CB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x12D8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x12E5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x12F2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xED7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x494E56414C49445F5349474E4552000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1331 PUSH1 0xE DUP4 PUSH2 0xC63 JUMP JUMPDEST SWAP2 POP PUSH2 0x133C DUP3 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1360 DUP2 PUSH2 0x1324 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1394 DUP2 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x139E DUP2 DUP7 PUSH2 0x1367 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x13B9 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x13CE JUMPI PUSH2 0x1401 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x1401 JUMP JUMPDEST PUSH2 0x13D7 DUP6 PUSH2 0x1372 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13F9 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13DA JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1416 DUP3 DUP5 PUSH2 0x1387 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1436 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x1443 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x1450 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x145D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x146A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1197 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR SLT 0x4D 0xAE 0xF6 0x2E RETURNDATASIZE MUL EQ 0xC1 0x23 NOT DUP5 PUSH23 0xFB00F2F925046EE67213FD1F136DA1D3FAC364736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"102:268:13:-:0;;;132:236;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1981:292:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;195:2:13;2101:5:10;2094:4;:12;;;;;;:::i;:::-;;2125:7;2116:6;:16;;;;;;:::i;:::-;;2153:9;2142:20;;;;;;;;;;2192:13;2173:32;;;;;;2242:24;:22;;;:24;;:::i;:::-;2215:51;;;;;;1981:292;;;209:21:13::1;233:8;:15;209:39;;264:9;259:103;283:13;279:1;:17;259:103;;;317:34;323:8;332:1;323:11;;;;;;;;:::i;:::-;;;;;;;;336:14;317:5;;;:34;;:::i;:::-;298:3;;;;;:::i;:::-;;;;259:103;;;;199:169;132:236:::0;102:268;;5510:446:10;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;5833:14;5869:13;5912:4;5640:295;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;6150:325::-;6235:6;6220:11;;:21;;;;;;;:::i;:::-;;;;;;;;6404:6;6387:9;:13;6397:2;6387:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;6457:2;6436:32;;6453:1;6436:32;;;6461:6;6436:32;;;;;;:::i;:::-;;;;;;;;6150:325;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:126;1650:7;1690:42;1683:5;1679:54;1668:65;;1613:126;;;:::o;1745:96::-;1782:7;1811:24;1829:5;1811:24;:::i;:::-;1800:35;;1745:96;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:143::-;2032:5;2063:6;2057:13;2048:22;;2079:33;2106:5;2079:33;:::i;:::-;1975:143;;;;:::o;2141:732::-;2248:5;2273:81;2289:64;2346:6;2289:64;:::i;:::-;2273:81;:::i;:::-;2264:90;;2374:5;2403:6;2396:5;2389:21;2437:4;2430:5;2426:16;2419:23;;2490:4;2482:6;2478:17;2470:6;2466:30;2519:3;2511:6;2508:15;2505:122;;;2538:79;;:::i;:::-;2505:122;2653:6;2636:231;2670:6;2665:3;2662:15;2636:231;;;2745:3;2774:48;2818:3;2806:10;2774:48;:::i;:::-;2769:3;2762:61;2852:4;2847:3;2843:14;2836:21;;2712:155;2696:4;2691:3;2687:14;2680:21;;2636:231;;;2640:21;2254:619;;2141:732;;;;;:::o;2896:385::-;2978:5;3027:3;3020:4;3012:6;3008:17;3004:27;2994:122;;3035:79;;:::i;:::-;2994:122;3145:6;3139:13;3170:105;3271:3;3263:6;3256:4;3248:6;3244:17;3170:105;:::i;:::-;3161:114;;2984:297;2896:385;;;;:::o;3287:554::-;3382:6;3431:2;3419:9;3410:7;3406:23;3402:32;3399:119;;;3437:79;;:::i;:::-;3399:119;3578:1;3567:9;3563:17;3557:24;3608:18;3600:6;3597:30;3594:117;;;3630:79;;:::i;:::-;3594:117;3735:89;3816:7;3807:6;3796:9;3792:22;3735:89;:::i;:::-;3725:99;;3528:306;3287:554;;;;:::o;3847:99::-;3899:6;3933:5;3927:12;3917:22;;3847:99;;;:::o;3952:180::-;4000:77;3997:1;3990:88;4097:4;4094:1;4087:15;4121:4;4118:1;4111:15;4138:320;4182:6;4219:1;4213:4;4209:12;4199:22;;4266:1;4260:4;4256:12;4287:18;4277:81;;4343:4;4335:6;4331:17;4321:27;;4277:81;4405:2;4397:6;4394:14;4374:18;4371:38;4368:84;;4424:18;;:::i;:::-;4368:84;4189:269;4138:320;;;:::o;4464:141::-;4513:4;4536:3;4528:11;;4559:3;4556:1;4549:14;4593:4;4590:1;4580:18;4572:26;;4464:141;;;:::o;4611:93::-;4648:6;4695:2;4690;4683:5;4679:14;4675:23;4665:33;;4611:93;;;:::o;4710:107::-;4754:8;4804:5;4798:4;4794:16;4773:37;;4710:107;;;;:::o;4823:393::-;4892:6;4942:1;4930:10;4926:18;4965:97;4995:66;4984:9;4965:97;:::i;:::-;5083:39;5113:8;5102:9;5083:39;:::i;:::-;5071:51;;5155:4;5151:9;5144:5;5140:21;5131:30;;5204:4;5194:8;5190:19;5183:5;5180:30;5170:40;;4899:317;;4823:393;;;;;:::o;5222:77::-;5259:7;5288:5;5277:16;;5222:77;;;:::o;5305:60::-;5333:3;5354:5;5347:12;;5305:60;;;:::o;5371:142::-;5421:9;5454:53;5472:34;5481:24;5499:5;5481:24;:::i;:::-;5472:34;:::i;:::-;5454:53;:::i;:::-;5441:66;;5371:142;;;:::o;5519:75::-;5562:3;5583:5;5576:12;;5519:75;;;:::o;5600:269::-;5710:39;5741:7;5710:39;:::i;:::-;5771:91;5820:41;5844:16;5820:41;:::i;:::-;5812:6;5805:4;5799:11;5771:91;:::i;:::-;5765:4;5758:105;5676:193;5600:269;;;:::o;5875:73::-;5920:3;5875:73;:::o;5954:189::-;6031:32;;:::i;:::-;6072:65;6130:6;6122;6116:4;6072:65;:::i;:::-;6007:136;5954:189;;:::o;6149:186::-;6209:120;6226:3;6219:5;6216:14;6209:120;;;6280:39;6317:1;6310:5;6280:39;:::i;:::-;6253:1;6246:5;6242:13;6233:22;;6209:120;;;6149:186;;:::o;6341:543::-;6442:2;6437:3;6434:11;6431:446;;;6476:38;6508:5;6476:38;:::i;:::-;6560:29;6578:10;6560:29;:::i;:::-;6550:8;6546:44;6743:2;6731:10;6728:18;6725:49;;;6764:8;6749:23;;6725:49;6787:80;6843:22;6861:3;6843:22;:::i;:::-;6833:8;6829:37;6816:11;6787:80;:::i;:::-;6446:431;;6431:446;6341:543;;;:::o;6890:117::-;6944:8;6994:5;6988:4;6984:16;6963:37;;6890:117;;;;:::o;7013:169::-;7057:6;7090:51;7138:1;7134:6;7126:5;7123:1;7119:13;7090:51;:::i;:::-;7086:56;7171:4;7165;7161:15;7151:25;;7064:118;7013:169;;;;:::o;7187:295::-;7263:4;7409:29;7434:3;7428:4;7409:29;:::i;:::-;7401:37;;7471:3;7468:1;7464:11;7458:4;7455:21;7447:29;;7187:295;;;;:::o;7487:1395::-;7604:37;7637:3;7604:37;:::i;:::-;7706:18;7698:6;7695:30;7692:56;;;7728:18;;:::i;:::-;7692:56;7772:38;7804:4;7798:11;7772:38;:::i;:::-;7857:67;7917:6;7909;7903:4;7857:67;:::i;:::-;7951:1;7975:4;7962:17;;8007:2;7999:6;7996:14;8024:1;8019:618;;;;8681:1;8698:6;8695:77;;;8747:9;8742:3;8738:19;8732:26;8723:35;;8695:77;8798:67;8858:6;8851:5;8798:67;:::i;:::-;8792:4;8785:81;8654:222;7989:887;;8019:618;8071:4;8067:9;8059:6;8055:22;8105:37;8137:4;8105:37;:::i;:::-;8164:1;8178:208;8192:7;8189:1;8186:14;8178:208;;;8271:9;8266:3;8262:19;8256:26;8248:6;8241:42;8322:1;8314:6;8310:14;8300:24;;8369:2;8358:9;8354:18;8341:31;;8215:4;8212:1;8208:12;8203:17;;8178:208;;;8414:6;8405:7;8402:19;8399:179;;;8472:9;8467:3;8463:19;8457:26;8515:48;8557:4;8549:6;8545:17;8534:9;8515:48;:::i;:::-;8507:6;8500:64;8422:156;8399:179;8624:1;8620;8612:6;8608:14;8604:22;8598:4;8591:36;8026:611;;;7989:887;;7579:1303;;;7487:1395;;:::o;8888:180::-;8936:77;8933:1;8926:88;9033:4;9030:1;9023:15;9057:4;9054:1;9047:15;9074:180;9122:77;9119:1;9112:88;9219:4;9216:1;9209:15;9243:4;9240:1;9233:15;9260:233;9299:3;9322:24;9340:5;9322:24;:::i;:::-;9313:33;;9368:66;9361:5;9358:77;9355:103;;9438:18;;:::i;:::-;9355:103;9485:1;9478:5;9474:13;9467:20;;9260:233;;;:::o;9499:147::-;9600:11;9637:3;9622:18;;9499:147;;;;:::o;9652:144::-;9704:4;9727:3;9719:11;;9750:3;9747:1;9740:14;9784:4;9781:1;9771:18;9763:26;;9652:144;;;:::o;9824:878::-;9929:3;9966:5;9960:12;9995:36;10021:9;9995:36;:::i;:::-;10047:88;10128:6;10123:3;10047:88;:::i;:::-;10040:95;;10166:1;10155:9;10151:17;10182:1;10177:166;;;;10357:1;10352:344;;;;10144:552;;10177:166;10261:4;10257:9;10246;10242:25;10237:3;10230:38;10323:6;10316:14;10309:22;10301:6;10297:35;10292:3;10288:45;10281:52;;10177:166;;10352:344;10419:41;10454:5;10419:41;:::i;:::-;10482:1;10496:154;10510:6;10507:1;10504:13;10496:154;;;10584:7;10578:14;10574:1;10569:3;10565:11;10558:35;10634:1;10625:7;10621:15;10610:26;;10532:4;10529:1;10525:12;10520:17;;10496:154;;;10679:6;10674:3;10670:16;10663:23;;10359:337;;10144:552;;9933:769;;9824:878;;;;:::o;10708:273::-;10839:3;10861:94;10951:3;10942:6;10861:94;:::i;:::-;10854:101;;10972:3;10965:10;;10708:273;;;;:::o;10987:77::-;11024:7;11053:5;11042:16;;10987:77;;;:::o;11070:118::-;11157:24;11175:5;11157:24;:::i;:::-;11152:3;11145:37;11070:118;;:::o;11194:::-;11281:24;11299:5;11281:24;:::i;:::-;11276:3;11269:37;11194:118;;:::o;11318:::-;11405:24;11423:5;11405:24;:::i;:::-;11400:3;11393:37;11318:118;;:::o;11442:664::-;11647:4;11685:3;11674:9;11670:19;11662:27;;11699:71;11767:1;11756:9;11752:17;11743:6;11699:71;:::i;:::-;11780:72;11848:2;11837:9;11833:18;11824:6;11780:72;:::i;:::-;11862;11930:2;11919:9;11915:18;11906:6;11862:72;:::i;:::-;11944;12012:2;12001:9;11997:18;11988:6;11944:72;:::i;:::-;12026:73;12094:3;12083:9;12079:19;12070:6;12026:73;:::i;:::-;11442:664;;;;;;;;:::o;12112:191::-;12152:3;12171:20;12189:1;12171:20;:::i;:::-;12166:25;;12205:20;12223:1;12205:20;:::i;:::-;12200:25;;12248:1;12245;12241:9;12234:16;;12269:3;12266:1;12263:10;12260:36;;;12276:18;;:::i;:::-;12260:36;12112:191;;;;:::o;12309:222::-;12402:4;12440:2;12429:9;12425:18;12417:26;;12453:71;12521:1;12510:9;12506:17;12497:6;12453:71;:::i;:::-;12309:222;;;;:::o;102:268:13:-;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_3890":{"entryPoint":1663,"id":3890,"parameterSlots":0,"returnSlots":1},"@allowance_3626":{"entryPoint":2983,"id":3626,"parameterSlots":0,"returnSlots":0},"@approve_3694":{"entryPoint":793,"id":3694,"parameterSlots":2,"returnSlots":1},"@balanceOf_3620":{"entryPoint":1756,"id":3620,"parameterSlots":0,"returnSlots":0},"@computeDomainSeparator_3920":{"entryPoint":3020,"id":3920,"parameterSlots":0,"returnSlots":1},"@decimals_3614":{"entryPoint":1627,"id":3614,"parameterSlots":0,"returnSlots":0},"@name_3610":{"entryPoint":651,"id":3610,"parameterSlots":0,"returnSlots":0},"@nonces_3634":{"entryPoint":1780,"id":3634,"parameterSlots":0,"returnSlots":0},"@permit_3875":{"entryPoint":2222,"id":3875,"parameterSlots":7,"returnSlots":0},"@symbol_3612":{"entryPoint":1804,"id":3612,"parameterSlots":0,"returnSlots":0},"@totalSupply_3616":{"entryPoint":1035,"id":3616,"parameterSlots":0,"returnSlots":0},"@transferFrom_3788":{"entryPoint":1041,"id":3788,"parameterSlots":3,"returnSlots":1},"@transfer_3727":{"entryPoint":1946,"id":3727,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3416,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":3953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3470,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":3909,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4136,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3651,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":3974,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3491,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4503,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3567,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3799,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":4712,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3247,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4667,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c_to_t_string_memory_ptr_fromStack":{"entryPoint":4900,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e_to_t_string_memory_ptr_fromStack":{"entryPoint":4436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3609,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3747,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5130,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":4735,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3582,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":3814,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4518,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":5153,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":4790,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3304,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4935,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4471,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3624,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3762,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":4978,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3160,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4967,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3171,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4615,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4343,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3375,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3555,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3789,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3343,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3437,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3734,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3188,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4247,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":4702,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4296,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4200,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3338,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3230,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541":{"entryPoint":4626,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c":{"entryPoint":4859,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e":{"entryPoint":4395,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3393,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":3930,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3447,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":3886,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15995:15","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:15","statements":[{"nodeType":"YulAssignment","src":"77:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:15"},"nodeType":"YulFunctionCall","src":"87:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:15","type":""}],"src":"7:99:15"},{"body":{"nodeType":"YulBlock","src":"208:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:15"},"nodeType":"YulFunctionCall","src":"218:19:15"},"nodeType":"YulExpressionStatement","src":"218:19:15"},{"nodeType":"YulAssignment","src":"246:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:15"},"nodeType":"YulFunctionCall","src":"261:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:15","type":""}],"src":"112:169:15"},{"body":{"nodeType":"YulBlock","src":"349:184:15","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:15"},"nodeType":"YulFunctionCall","src":"449:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:15"},"nodeType":"YulFunctionCall","src":"468:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:15"},"nodeType":"YulFunctionCall","src":"462:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:15"},"nodeType":"YulFunctionCall","src":"442:39:15"},"nodeType":"YulExpressionStatement","src":"442:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:15"},"nodeType":"YulFunctionCall","src":"386:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:15","statements":[{"nodeType":"YulAssignment","src":"402:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:15"},"nodeType":"YulFunctionCall","src":"407:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:15","statements":[]},"src":"378:113:15"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:15"},"nodeType":"YulFunctionCall","src":"507:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:15"},"nodeType":"YulFunctionCall","src":"500:27:15"},"nodeType":"YulExpressionStatement","src":"500:27:15"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:15","type":""}],"src":"287:246:15"},{"body":{"nodeType":"YulBlock","src":"587:54:15","statements":[{"nodeType":"YulAssignment","src":"597:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:15"},"nodeType":"YulFunctionCall","src":"611:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:15"},"nodeType":"YulFunctionCall","src":"627:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:15"},"nodeType":"YulFunctionCall","src":"607:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:15","type":""}],"src":"539:102:15"},{"body":{"nodeType":"YulBlock","src":"739:285:15","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:15"},"nodeType":"YulFunctionCall","src":"763:39:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:15","type":""}]},{"nodeType":"YulAssignment","src":"811:78:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:15"},"nodeType":"YulFunctionCall","src":"818:71:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:15"},"nodeType":"YulFunctionCall","src":"933:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:15"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:15"},"nodeType":"YulFunctionCall","src":"898:65:15"},"nodeType":"YulExpressionStatement","src":"898:65:15"},{"nodeType":"YulAssignment","src":"972:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:15"},"nodeType":"YulFunctionCall","src":"988:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:15"},"nodeType":"YulFunctionCall","src":"979:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:15","type":""}],"src":"647:377:15"},{"body":{"nodeType":"YulBlock","src":"1148:195:15","statements":[{"nodeType":"YulAssignment","src":"1158:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:15"},"nodeType":"YulFunctionCall","src":"1166:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:15"},"nodeType":"YulFunctionCall","src":"1201:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:15"},"nodeType":"YulFunctionCall","src":"1220:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:15"},"nodeType":"YulFunctionCall","src":"1194:47:15"},"nodeType":"YulExpressionStatement","src":"1194:47:15"},{"nodeType":"YulAssignment","src":"1250:86:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:15"},"nodeType":"YulFunctionCall","src":"1258:78:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:15","type":""}],"src":"1030:313:15"},{"body":{"nodeType":"YulBlock","src":"1389:35:15","statements":[{"nodeType":"YulAssignment","src":"1399:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:15"},"nodeType":"YulFunctionCall","src":"1409:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:15","type":""}],"src":"1349:75:15"},{"body":{"nodeType":"YulBlock","src":"1519:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:15"},"nodeType":"YulFunctionCall","src":"1529:12:15"},"nodeType":"YulExpressionStatement","src":"1529:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:15"},{"body":{"nodeType":"YulBlock","src":"1642:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:15"},"nodeType":"YulFunctionCall","src":"1652:12:15"},"nodeType":"YulExpressionStatement","src":"1652:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:15"},{"body":{"nodeType":"YulBlock","src":"1721:81:15","statements":[{"nodeType":"YulAssignment","src":"1731:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:15"},"nodeType":"YulFunctionCall","src":"1742:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:15","type":""}],"src":"1676:126:15"},{"body":{"nodeType":"YulBlock","src":"1853:51:15","statements":[{"nodeType":"YulAssignment","src":"1863:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:15"},"nodeType":"YulFunctionCall","src":"1874:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:15","type":""}],"src":"1808:96:15"},{"body":{"nodeType":"YulBlock","src":"1953:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:15"},"nodeType":"YulFunctionCall","src":"2012:12:15"},"nodeType":"YulExpressionStatement","src":"2012:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:15"},"nodeType":"YulFunctionCall","src":"1983:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:15"},"nodeType":"YulFunctionCall","src":"1973:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:15"},"nodeType":"YulFunctionCall","src":"1966:43:15"},"nodeType":"YulIf","src":"1963:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:15","type":""}],"src":"1910:122:15"},{"body":{"nodeType":"YulBlock","src":"2090:87:15","statements":[{"nodeType":"YulAssignment","src":"2100:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:15"},"nodeType":"YulFunctionCall","src":"2109:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:15"},"nodeType":"YulFunctionCall","src":"2138:33:15"},"nodeType":"YulExpressionStatement","src":"2138:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:15","type":""}],"src":"2038:139:15"},{"body":{"nodeType":"YulBlock","src":"2228:32:15","statements":[{"nodeType":"YulAssignment","src":"2238:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:15","type":""}],"src":"2183:77:15"},{"body":{"nodeType":"YulBlock","src":"2309:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:15"},"nodeType":"YulFunctionCall","src":"2368:12:15"},"nodeType":"YulExpressionStatement","src":"2368:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:15"},"nodeType":"YulFunctionCall","src":"2339:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:15"},"nodeType":"YulFunctionCall","src":"2329:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:15"},"nodeType":"YulFunctionCall","src":"2322:43:15"},"nodeType":"YulIf","src":"2319:63:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:15","type":""}],"src":"2266:122:15"},{"body":{"nodeType":"YulBlock","src":"2446:87:15","statements":[{"nodeType":"YulAssignment","src":"2456:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:15"},"nodeType":"YulFunctionCall","src":"2465:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:15"},"nodeType":"YulFunctionCall","src":"2494:33:15"},"nodeType":"YulExpressionStatement","src":"2494:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:15","type":""}],"src":"2394:139:15"},{"body":{"nodeType":"YulBlock","src":"2622:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:15"},"nodeType":"YulFunctionCall","src":"2670:79:15"},"nodeType":"YulExpressionStatement","src":"2670:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:15"},"nodeType":"YulFunctionCall","src":"2639:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:15"},"nodeType":"YulFunctionCall","src":"2635:32:15"},"nodeType":"YulIf","src":"2632:119:15"},{"nodeType":"YulBlock","src":"2761:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:15"},"nodeType":"YulFunctionCall","src":"2836:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:15"},"nodeType":"YulFunctionCall","src":"2815:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:15"}]}]},{"nodeType":"YulBlock","src":"2888:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:15"},"nodeType":"YulFunctionCall","src":"2964:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:15"},"nodeType":"YulFunctionCall","src":"2943:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:15","type":""}],"src":"2539:474:15"},{"body":{"nodeType":"YulBlock","src":"3061:48:15","statements":[{"nodeType":"YulAssignment","src":"3071:32:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:15"},"nodeType":"YulFunctionCall","src":"3089:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:15"},"nodeType":"YulFunctionCall","src":"3082:21:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:15"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:15","type":""}],"src":"3019:90:15"},{"body":{"nodeType":"YulBlock","src":"3174:50:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:15"},"nodeType":"YulFunctionCall","src":"3196:21:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:15"},"nodeType":"YulFunctionCall","src":"3184:34:15"},"nodeType":"YulExpressionStatement","src":"3184:34:15"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:15","type":""}],"src":"3115:109:15"},{"body":{"nodeType":"YulBlock","src":"3322:118:15","statements":[{"nodeType":"YulAssignment","src":"3332:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:15"},"nodeType":"YulFunctionCall","src":"3340:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:15"},"nodeType":"YulFunctionCall","src":"3415:17:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:15"},"nodeType":"YulFunctionCall","src":"3368:65:15"},"nodeType":"YulExpressionStatement","src":"3368:65:15"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:15","type":""}],"src":"3230:210:15"},{"body":{"nodeType":"YulBlock","src":"3511:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:15"},"nodeType":"YulFunctionCall","src":"3533:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:15"},"nodeType":"YulFunctionCall","src":"3521:37:15"},"nodeType":"YulExpressionStatement","src":"3521:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:15","type":""}],"src":"3446:118:15"},{"body":{"nodeType":"YulBlock","src":"3668:124:15","statements":[{"nodeType":"YulAssignment","src":"3678:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:15"},"nodeType":"YulFunctionCall","src":"3686:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:15"},"nodeType":"YulFunctionCall","src":"3767:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:15"},"nodeType":"YulFunctionCall","src":"3714:71:15"},"nodeType":"YulExpressionStatement","src":"3714:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:15","type":""}],"src":"3570:222:15"},{"body":{"nodeType":"YulBlock","src":"3898:519:15","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:15"},"nodeType":"YulFunctionCall","src":"3946:79:15"},"nodeType":"YulExpressionStatement","src":"3946:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:15"},"nodeType":"YulFunctionCall","src":"3915:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:15"},"nodeType":"YulFunctionCall","src":"3911:32:15"},"nodeType":"YulIf","src":"3908:119:15"},{"nodeType":"YulBlock","src":"4037:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:15"},"nodeType":"YulFunctionCall","src":"4112:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:15"},"nodeType":"YulFunctionCall","src":"4091:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:15"}]}]},{"nodeType":"YulBlock","src":"4164:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:15"},"nodeType":"YulFunctionCall","src":"4240:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:15"},"nodeType":"YulFunctionCall","src":"4219:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:15"}]}]},{"nodeType":"YulBlock","src":"4292:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:15"},"nodeType":"YulFunctionCall","src":"4368:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:15"},"nodeType":"YulFunctionCall","src":"4347:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:15","type":""}],"src":"3798:619:15"},{"body":{"nodeType":"YulBlock","src":"4466:43:15","statements":[{"nodeType":"YulAssignment","src":"4476:27:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:15","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:15"},"nodeType":"YulFunctionCall","src":"4487:16:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:15"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:15","type":""}],"src":"4423:86:15"},{"body":{"nodeType":"YulBlock","src":"4576:51:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:15"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:15"},"nodeType":"YulFunctionCall","src":"4598:22:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:15"},"nodeType":"YulFunctionCall","src":"4586:35:15"},"nodeType":"YulExpressionStatement","src":"4586:35:15"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:15","type":""}],"src":"4515:112:15"},{"body":{"nodeType":"YulBlock","src":"4727:120:15","statements":[{"nodeType":"YulAssignment","src":"4737:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:15"},"nodeType":"YulFunctionCall","src":"4745:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:15"},"nodeType":"YulFunctionCall","src":"4822:17:15"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:15"},"nodeType":"YulFunctionCall","src":"4773:67:15"},"nodeType":"YulExpressionStatement","src":"4773:67:15"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:15","type":""}],"src":"4633:214:15"},{"body":{"nodeType":"YulBlock","src":"4898:32:15","statements":[{"nodeType":"YulAssignment","src":"4908:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"4919:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4908:7:15"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4880:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4890:7:15","type":""}],"src":"4853:77:15"},{"body":{"nodeType":"YulBlock","src":"5001:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5018:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5041:5:15"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5023:17:15"},"nodeType":"YulFunctionCall","src":"5023:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5011:6:15"},"nodeType":"YulFunctionCall","src":"5011:37:15"},"nodeType":"YulExpressionStatement","src":"5011:37:15"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4989:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4996:3:15","type":""}],"src":"4936:118:15"},{"body":{"nodeType":"YulBlock","src":"5158:124:15","statements":[{"nodeType":"YulAssignment","src":"5168:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5191:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:15"},"nodeType":"YulFunctionCall","src":"5176:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5168:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5248:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5261:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5272:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5257:3:15"},"nodeType":"YulFunctionCall","src":"5257:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5204:43:15"},"nodeType":"YulFunctionCall","src":"5204:71:15"},"nodeType":"YulExpressionStatement","src":"5204:71:15"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5130:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5142:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5153:4:15","type":""}],"src":"5060:222:15"},{"body":{"nodeType":"YulBlock","src":"5354:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"5400:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5402:77:15"},"nodeType":"YulFunctionCall","src":"5402:79:15"},"nodeType":"YulExpressionStatement","src":"5402:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5375:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5371:3:15"},"nodeType":"YulFunctionCall","src":"5371:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"5396:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5367:3:15"},"nodeType":"YulFunctionCall","src":"5367:32:15"},"nodeType":"YulIf","src":"5364:119:15"},{"nodeType":"YulBlock","src":"5493:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5508:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5522:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5512:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5537:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5572:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5583:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:15"},"nodeType":"YulFunctionCall","src":"5568:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5592:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5547:20:15"},"nodeType":"YulFunctionCall","src":"5547:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5537:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5324:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5335:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5347:6:15","type":""}],"src":"5288:329:15"},{"body":{"nodeType":"YulBlock","src":"5664:77:15","statements":[{"body":{"nodeType":"YulBlock","src":"5719:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5728:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5731:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5721:6:15"},"nodeType":"YulFunctionCall","src":"5721:12:15"},"nodeType":"YulExpressionStatement","src":"5721:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5687:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5710:5:15"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"5694:15:15"},"nodeType":"YulFunctionCall","src":"5694:22:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5684:2:15"},"nodeType":"YulFunctionCall","src":"5684:33:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5677:6:15"},"nodeType":"YulFunctionCall","src":"5677:41:15"},"nodeType":"YulIf","src":"5674:61:15"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5657:5:15","type":""}],"src":"5623:118:15"},{"body":{"nodeType":"YulBlock","src":"5797:85:15","statements":[{"nodeType":"YulAssignment","src":"5807:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5829:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5816:12:15"},"nodeType":"YulFunctionCall","src":"5816:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5807:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5870:5:15"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"5845:24:15"},"nodeType":"YulFunctionCall","src":"5845:31:15"},"nodeType":"YulExpressionStatement","src":"5845:31:15"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5775:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"5783:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5791:5:15","type":""}],"src":"5747:135:15"},{"body":{"nodeType":"YulBlock","src":"5931:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"5988:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5997:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6000:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5990:6:15"},"nodeType":"YulFunctionCall","src":"5990:12:15"},"nodeType":"YulExpressionStatement","src":"5990:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5954:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5979:5:15"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5961:17:15"},"nodeType":"YulFunctionCall","src":"5961:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5951:2:15"},"nodeType":"YulFunctionCall","src":"5951:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5944:6:15"},"nodeType":"YulFunctionCall","src":"5944:43:15"},"nodeType":"YulIf","src":"5941:63:15"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5924:5:15","type":""}],"src":"5888:122:15"},{"body":{"nodeType":"YulBlock","src":"6068:87:15","statements":[{"nodeType":"YulAssignment","src":"6078:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6100:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6087:12:15"},"nodeType":"YulFunctionCall","src":"6087:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6078:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6143:5:15"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"6116:26:15"},"nodeType":"YulFunctionCall","src":"6116:33:15"},"nodeType":"YulExpressionStatement","src":"6116:33:15"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6046:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"6054:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6062:5:15","type":""}],"src":"6016:139:15"},{"body":{"nodeType":"YulBlock","src":"6327:1033:15","statements":[{"body":{"nodeType":"YulBlock","src":"6374:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6376:77:15"},"nodeType":"YulFunctionCall","src":"6376:79:15"},"nodeType":"YulExpressionStatement","src":"6376:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6348:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"6357:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6344:3:15"},"nodeType":"YulFunctionCall","src":"6344:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"6369:3:15","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6340:3:15"},"nodeType":"YulFunctionCall","src":"6340:33:15"},"nodeType":"YulIf","src":"6337:120:15"},{"nodeType":"YulBlock","src":"6467:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6482:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6496:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6486:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6511:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6546:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6557:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6542:3:15"},"nodeType":"YulFunctionCall","src":"6542:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6566:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6521:20:15"},"nodeType":"YulFunctionCall","src":"6521:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6511:6:15"}]}]},{"nodeType":"YulBlock","src":"6594:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6609:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6623:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6613:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6639:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6674:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6685:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6670:3:15"},"nodeType":"YulFunctionCall","src":"6670:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6694:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6649:20:15"},"nodeType":"YulFunctionCall","src":"6649:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6639:6:15"}]}]},{"nodeType":"YulBlock","src":"6722:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6737:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6751:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6741:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6767:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6802:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6813:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6798:3:15"},"nodeType":"YulFunctionCall","src":"6798:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6822:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6777:20:15"},"nodeType":"YulFunctionCall","src":"6777:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6767:6:15"}]}]},{"nodeType":"YulBlock","src":"6850:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6865:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6879:2:15","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6869:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6895:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6930:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6941:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6926:3:15"},"nodeType":"YulFunctionCall","src":"6926:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6950:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6905:20:15"},"nodeType":"YulFunctionCall","src":"6905:53:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6895:6:15"}]}]},{"nodeType":"YulBlock","src":"6978:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6993:17:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7007:3:15","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6997:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7024:61:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7057:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7068:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7053:3:15"},"nodeType":"YulFunctionCall","src":"7053:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7077:7:15"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"7034:18:15"},"nodeType":"YulFunctionCall","src":"7034:51:15"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7024:6:15"}]}]},{"nodeType":"YulBlock","src":"7105:119:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7120:17:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7134:3:15","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7124:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7151:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7186:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7197:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7182:3:15"},"nodeType":"YulFunctionCall","src":"7182:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7206:7:15"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7161:20:15"},"nodeType":"YulFunctionCall","src":"7161:53:15"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7151:6:15"}]}]},{"nodeType":"YulBlock","src":"7234:119:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7249:17:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7263:3:15","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7253:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7280:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7315:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7326:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7311:3:15"},"nodeType":"YulFunctionCall","src":"7311:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7335:7:15"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7290:20:15"},"nodeType":"YulFunctionCall","src":"7290:53:15"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7280:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6249:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6260:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6272:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6280:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6288:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6296:6:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6304:6:15","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6312:6:15","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6320:6:15","type":""}],"src":"6161:1199:15"},{"body":{"nodeType":"YulBlock","src":"7449:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"7495:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7497:77:15"},"nodeType":"YulFunctionCall","src":"7497:79:15"},"nodeType":"YulExpressionStatement","src":"7497:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7470:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7479:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7466:3:15"},"nodeType":"YulFunctionCall","src":"7466:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"7491:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7462:3:15"},"nodeType":"YulFunctionCall","src":"7462:32:15"},"nodeType":"YulIf","src":"7459:119:15"},{"nodeType":"YulBlock","src":"7588:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7603:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7617:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7607:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7632:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7667:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7678:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7663:3:15"},"nodeType":"YulFunctionCall","src":"7663:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7687:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7642:20:15"},"nodeType":"YulFunctionCall","src":"7642:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7632:6:15"}]}]},{"nodeType":"YulBlock","src":"7715:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7730:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7744:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7734:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7760:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7795:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7806:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7791:3:15"},"nodeType":"YulFunctionCall","src":"7791:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7815:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7770:20:15"},"nodeType":"YulFunctionCall","src":"7770:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7760:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7411:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7422:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7434:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7442:6:15","type":""}],"src":"7366:474:15"},{"body":{"nodeType":"YulBlock","src":"7874:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7891:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7894:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7884:6:15"},"nodeType":"YulFunctionCall","src":"7884:88:15"},"nodeType":"YulExpressionStatement","src":"7884:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7988:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7991:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7981:6:15"},"nodeType":"YulFunctionCall","src":"7981:15:15"},"nodeType":"YulExpressionStatement","src":"7981:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8012:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8015:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8005:6:15"},"nodeType":"YulFunctionCall","src":"8005:15:15"},"nodeType":"YulExpressionStatement","src":"8005:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7846:180:15"},{"body":{"nodeType":"YulBlock","src":"8083:269:15","statements":[{"nodeType":"YulAssignment","src":"8093:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8107:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"8113:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8103:3:15"},"nodeType":"YulFunctionCall","src":"8103:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8093:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"8124:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8154:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"8160:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8150:3:15"},"nodeType":"YulFunctionCall","src":"8150:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8128:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"8201:51:15","statements":[{"nodeType":"YulAssignment","src":"8215:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8229:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8237:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8225:3:15"},"nodeType":"YulFunctionCall","src":"8225:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8215:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8181:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8174:6:15"},"nodeType":"YulFunctionCall","src":"8174:26:15"},"nodeType":"YulIf","src":"8171:81:15"},{"body":{"nodeType":"YulBlock","src":"8304:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8318:16:15"},"nodeType":"YulFunctionCall","src":"8318:18:15"},"nodeType":"YulExpressionStatement","src":"8318:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8268:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8291:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8299:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8288:2:15"},"nodeType":"YulFunctionCall","src":"8288:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8265:2:15"},"nodeType":"YulFunctionCall","src":"8265:38:15"},"nodeType":"YulIf","src":"8262:84:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8067:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8076:6:15","type":""}],"src":"8032:320:15"},{"body":{"nodeType":"YulBlock","src":"8386:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8403:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8406:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8396:6:15"},"nodeType":"YulFunctionCall","src":"8396:88:15"},"nodeType":"YulExpressionStatement","src":"8396:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8500:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8503:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8493:6:15"},"nodeType":"YulFunctionCall","src":"8493:15:15"},"nodeType":"YulExpressionStatement","src":"8493:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8524:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8527:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8517:6:15"},"nodeType":"YulFunctionCall","src":"8517:15:15"},"nodeType":"YulExpressionStatement","src":"8517:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8358:180:15"},{"body":{"nodeType":"YulBlock","src":"8589:149:15","statements":[{"nodeType":"YulAssignment","src":"8599:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8622:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8604:17:15"},"nodeType":"YulFunctionCall","src":"8604:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8599:1:15"}]},{"nodeType":"YulAssignment","src":"8633:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8656:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8638:17:15"},"nodeType":"YulFunctionCall","src":"8638:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8633:1:15"}]},{"nodeType":"YulAssignment","src":"8667:17:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8679:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"8682:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8675:3:15"},"nodeType":"YulFunctionCall","src":"8675:9:15"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8667:4:15"}]},{"body":{"nodeType":"YulBlock","src":"8709:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8711:16:15"},"nodeType":"YulFunctionCall","src":"8711:18:15"},"nodeType":"YulExpressionStatement","src":"8711:18:15"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"8700:4:15"},{"name":"x","nodeType":"YulIdentifier","src":"8706:1:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8697:2:15"},"nodeType":"YulFunctionCall","src":"8697:11:15"},"nodeType":"YulIf","src":"8694:37:15"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8575:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"8578:1:15","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8584:4:15","type":""}],"src":"8544:194:15"},{"body":{"nodeType":"YulBlock","src":"8850:67:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8872:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8880:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8868:3:15"},"nodeType":"YulFunctionCall","src":"8868:14:15"},{"hexValue":"5045524d49545f444541444c494e455f45585049524544","kind":"string","nodeType":"YulLiteral","src":"8884:25:15","type":"","value":"PERMIT_DEADLINE_EXPIRED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8861:6:15"},"nodeType":"YulFunctionCall","src":"8861:49:15"},"nodeType":"YulExpressionStatement","src":"8861:49:15"}]},"name":"store_literal_in_memory_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8842:6:15","type":""}],"src":"8744:173:15"},{"body":{"nodeType":"YulBlock","src":"9069:220:15","statements":[{"nodeType":"YulAssignment","src":"9079:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9145:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9150:2:15","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9086:58:15"},"nodeType":"YulFunctionCall","src":"9086:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9079:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9251:3:15"}],"functionName":{"name":"store_literal_in_memory_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e","nodeType":"YulIdentifier","src":"9162:88:15"},"nodeType":"YulFunctionCall","src":"9162:93:15"},"nodeType":"YulExpressionStatement","src":"9162:93:15"},{"nodeType":"YulAssignment","src":"9264:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9275:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9280:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9271:3:15"},"nodeType":"YulFunctionCall","src":"9271:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9264:3:15"}]}]},"name":"abi_encode_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9057:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9065:3:15","type":""}],"src":"8923:366:15"},{"body":{"nodeType":"YulBlock","src":"9466:248:15","statements":[{"nodeType":"YulAssignment","src":"9476:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9488:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9499:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9484:3:15"},"nodeType":"YulFunctionCall","src":"9484:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9476:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9523:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9534:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9519:3:15"},"nodeType":"YulFunctionCall","src":"9519:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9542:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"9548:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9538:3:15"},"nodeType":"YulFunctionCall","src":"9538:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9512:6:15"},"nodeType":"YulFunctionCall","src":"9512:47:15"},"nodeType":"YulExpressionStatement","src":"9512:47:15"},{"nodeType":"YulAssignment","src":"9568:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9702:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9576:124:15"},"nodeType":"YulFunctionCall","src":"9576:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9568:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9446:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9461:4:15","type":""}],"src":"9295:419:15"},{"body":{"nodeType":"YulBlock","src":"9785:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9802:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9825:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9807:17:15"},"nodeType":"YulFunctionCall","src":"9807:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9795:6:15"},"nodeType":"YulFunctionCall","src":"9795:37:15"},"nodeType":"YulExpressionStatement","src":"9795:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9773:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9780:3:15","type":""}],"src":"9720:118:15"},{"body":{"nodeType":"YulBlock","src":"10082:537:15","statements":[{"nodeType":"YulAssignment","src":"10092:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10104:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10115:3:15","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10100:3:15"},"nodeType":"YulFunctionCall","src":"10100:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10092:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10173:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10186:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10197:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10182:3:15"},"nodeType":"YulFunctionCall","src":"10182:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"10129:43:15"},"nodeType":"YulFunctionCall","src":"10129:71:15"},"nodeType":"YulExpressionStatement","src":"10129:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10254:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10267:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10278:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10263:3:15"},"nodeType":"YulFunctionCall","src":"10263:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10210:43:15"},"nodeType":"YulFunctionCall","src":"10210:72:15"},"nodeType":"YulExpressionStatement","src":"10210:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10336:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10349:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10360:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10345:3:15"},"nodeType":"YulFunctionCall","src":"10345:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10292:43:15"},"nodeType":"YulFunctionCall","src":"10292:72:15"},"nodeType":"YulExpressionStatement","src":"10292:72:15"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10418:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10431:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10442:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10427:3:15"},"nodeType":"YulFunctionCall","src":"10427:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10374:43:15"},"nodeType":"YulFunctionCall","src":"10374:72:15"},"nodeType":"YulExpressionStatement","src":"10374:72:15"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10500:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10513:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10524:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10509:3:15"},"nodeType":"YulFunctionCall","src":"10509:19:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10456:43:15"},"nodeType":"YulFunctionCall","src":"10456:73:15"},"nodeType":"YulExpressionStatement","src":"10456:73:15"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"10583:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10596:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10607:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10592:3:15"},"nodeType":"YulFunctionCall","src":"10592:19:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10539:43:15"},"nodeType":"YulFunctionCall","src":"10539:73:15"},"nodeType":"YulExpressionStatement","src":"10539:73:15"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10014:9:15","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10026:6:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10034:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10042:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10050:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10058:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10066:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10077:4:15","type":""}],"src":"9844:775:15"},{"body":{"nodeType":"YulBlock","src":"10739:34:15","statements":[{"nodeType":"YulAssignment","src":"10749:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"10764:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10749:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10711:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"10716:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10727:11:15","type":""}],"src":"10625:148:15"},{"body":{"nodeType":"YulBlock","src":"10885:108:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10907:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"10915:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10903:3:15"},"nodeType":"YulFunctionCall","src":"10903:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"10919:66:15","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10896:6:15"},"nodeType":"YulFunctionCall","src":"10896:90:15"},"nodeType":"YulExpressionStatement","src":"10896:90:15"}]},"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10877:6:15","type":""}],"src":"10779:214:15"},{"body":{"nodeType":"YulBlock","src":"11163:236:15","statements":[{"nodeType":"YulAssignment","src":"11173:91:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11257:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11262:1:15","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11180:76:15"},"nodeType":"YulFunctionCall","src":"11180:84:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11173:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11362:3:15"}],"functionName":{"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulIdentifier","src":"11273:88:15"},"nodeType":"YulFunctionCall","src":"11273:93:15"},"nodeType":"YulExpressionStatement","src":"11273:93:15"},{"nodeType":"YulAssignment","src":"11375:18:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11386:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11391:1:15","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11382:3:15"},"nodeType":"YulFunctionCall","src":"11382:11:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11375:3:15"}]}]},"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11151:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11159:3:15","type":""}],"src":"10999:400:15"},{"body":{"nodeType":"YulBlock","src":"11452:32:15","statements":[{"nodeType":"YulAssignment","src":"11462:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"11473:5:15"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"11462:7:15"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11434:5:15","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"11444:7:15","type":""}],"src":"11405:79:15"},{"body":{"nodeType":"YulBlock","src":"11573:74:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11590:3:15"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11633:5:15"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"11615:17:15"},"nodeType":"YulFunctionCall","src":"11615:24:15"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"11595:19:15"},"nodeType":"YulFunctionCall","src":"11595:45:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11583:6:15"},"nodeType":"YulFunctionCall","src":"11583:58:15"},"nodeType":"YulExpressionStatement","src":"11583:58:15"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11561:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11568:3:15","type":""}],"src":"11490:157:15"},{"body":{"nodeType":"YulBlock","src":"11898:418:15","statements":[{"nodeType":"YulAssignment","src":"11909:155:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12060:3:15"}],"functionName":{"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11916:142:15"},"nodeType":"YulFunctionCall","src":"11916:148:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11909:3:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12136:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"12145:3:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12074:61:15"},"nodeType":"YulFunctionCall","src":"12074:75:15"},"nodeType":"YulExpressionStatement","src":"12074:75:15"},{"nodeType":"YulAssignment","src":"12158:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12169:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"12174:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12165:3:15"},"nodeType":"YulFunctionCall","src":"12165:12:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12158:3:15"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12249:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"12258:3:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12187:61:15"},"nodeType":"YulFunctionCall","src":"12187:75:15"},"nodeType":"YulExpressionStatement","src":"12187:75:15"},{"nodeType":"YulAssignment","src":"12271:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12282:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"12287:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12278:3:15"},"nodeType":"YulFunctionCall","src":"12278:12:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12271:3:15"}]},{"nodeType":"YulAssignment","src":"12300:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"12307:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12300:3:15"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11869:3:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11875:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11883:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11894:3:15","type":""}],"src":"11653:663:15"},{"body":{"nodeType":"YulBlock","src":"12500:367:15","statements":[{"nodeType":"YulAssignment","src":"12510:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12522:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12533:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12518:3:15"},"nodeType":"YulFunctionCall","src":"12518:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12510:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12591:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12604:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12615:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12600:3:15"},"nodeType":"YulFunctionCall","src":"12600:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12547:43:15"},"nodeType":"YulFunctionCall","src":"12547:71:15"},"nodeType":"YulExpressionStatement","src":"12547:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12668:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12681:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12692:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12677:3:15"},"nodeType":"YulFunctionCall","src":"12677:18:15"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"12628:39:15"},"nodeType":"YulFunctionCall","src":"12628:68:15"},"nodeType":"YulExpressionStatement","src":"12628:68:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12750:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12763:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12774:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12759:3:15"},"nodeType":"YulFunctionCall","src":"12759:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12706:43:15"},"nodeType":"YulFunctionCall","src":"12706:72:15"},"nodeType":"YulExpressionStatement","src":"12706:72:15"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12832:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12845:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12856:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12841:3:15"},"nodeType":"YulFunctionCall","src":"12841:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12788:43:15"},"nodeType":"YulFunctionCall","src":"12788:72:15"},"nodeType":"YulExpressionStatement","src":"12788:72:15"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12448:9:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12460:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12468:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12476:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12484:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12495:4:15","type":""}],"src":"12322:545:15"},{"body":{"nodeType":"YulBlock","src":"12979:58:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13001:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"13009:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12997:3:15"},"nodeType":"YulFunctionCall","src":"12997:14:15"},{"hexValue":"494e56414c49445f5349474e4552","kind":"string","nodeType":"YulLiteral","src":"13013:16:15","type":"","value":"INVALID_SIGNER"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12990:6:15"},"nodeType":"YulFunctionCall","src":"12990:40:15"},"nodeType":"YulExpressionStatement","src":"12990:40:15"}]},"name":"store_literal_in_memory_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12971:6:15","type":""}],"src":"12873:164:15"},{"body":{"nodeType":"YulBlock","src":"13189:220:15","statements":[{"nodeType":"YulAssignment","src":"13199:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13265:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"13270:2:15","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13206:58:15"},"nodeType":"YulFunctionCall","src":"13206:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13199:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13371:3:15"}],"functionName":{"name":"store_literal_in_memory_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c","nodeType":"YulIdentifier","src":"13282:88:15"},"nodeType":"YulFunctionCall","src":"13282:93:15"},"nodeType":"YulExpressionStatement","src":"13282:93:15"},{"nodeType":"YulAssignment","src":"13384:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13395:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"13400:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13391:3:15"},"nodeType":"YulFunctionCall","src":"13391:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13384:3:15"}]}]},"name":"abi_encode_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13177:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13185:3:15","type":""}],"src":"13043:366:15"},{"body":{"nodeType":"YulBlock","src":"13586:248:15","statements":[{"nodeType":"YulAssignment","src":"13596:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13608:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13619:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13604:3:15"},"nodeType":"YulFunctionCall","src":"13604:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13596:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13643:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13654:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13639:3:15"},"nodeType":"YulFunctionCall","src":"13639:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13662:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13668:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13658:3:15"},"nodeType":"YulFunctionCall","src":"13658:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13632:6:15"},"nodeType":"YulFunctionCall","src":"13632:47:15"},"nodeType":"YulExpressionStatement","src":"13632:47:15"},{"nodeType":"YulAssignment","src":"13688:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13822:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13696:124:15"},"nodeType":"YulFunctionCall","src":"13696:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13688:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13566:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13581:4:15","type":""}],"src":"13415:419:15"},{"body":{"nodeType":"YulBlock","src":"13953:34:15","statements":[{"nodeType":"YulAssignment","src":"13963:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"13978:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13963:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13925:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"13930:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13941:11:15","type":""}],"src":"13840:147:15"},{"body":{"nodeType":"YulBlock","src":"14050:87:15","statements":[{"nodeType":"YulAssignment","src":"14060:11:15","value":{"name":"ptr","nodeType":"YulIdentifier","src":"14068:3:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14060:4:15"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14088:1:15","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"14091:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14081:6:15"},"nodeType":"YulFunctionCall","src":"14081:14:15"},"nodeType":"YulExpressionStatement","src":"14081:14:15"},{"nodeType":"YulAssignment","src":"14104:26:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14122:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14125:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"14112:9:15"},"nodeType":"YulFunctionCall","src":"14112:18:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14104:4:15"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14037:3:15","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"14045:4:15","type":""}],"src":"13993:144:15"},{"body":{"nodeType":"YulBlock","src":"14274:769:15","statements":[{"nodeType":"YulVariableDeclaration","src":"14284:29:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14307:5:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14301:5:15"},"nodeType":"YulFunctionCall","src":"14301:12:15"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"14288:9:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14322:50:15","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"14362:9:15"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"14336:25:15"},"nodeType":"YulFunctionCall","src":"14336:36:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14326:6:15","type":""}]},{"nodeType":"YulAssignment","src":"14381:95:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14464:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"14469:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14388:75:15"},"nodeType":"YulFunctionCall","src":"14388:88:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14381:3:15"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"14525:159:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14578:3:15"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"14587:9:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14602:4:15","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14598:3:15"},"nodeType":"YulFunctionCall","src":"14598:9:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14583:3:15"},"nodeType":"YulFunctionCall","src":"14583:25:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14571:6:15"},"nodeType":"YulFunctionCall","src":"14571:38:15"},"nodeType":"YulExpressionStatement","src":"14571:38:15"},{"nodeType":"YulAssignment","src":"14622:52:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14633:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14642:6:15"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14664:6:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14657:6:15"},"nodeType":"YulFunctionCall","src":"14657:14:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14650:6:15"},"nodeType":"YulFunctionCall","src":"14650:22:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14638:3:15"},"nodeType":"YulFunctionCall","src":"14638:35:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14629:3:15"},"nodeType":"YulFunctionCall","src":"14629:45:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14622:3:15"}]}]},"nodeType":"YulCase","src":"14518:166:15","value":{"kind":"number","nodeType":"YulLiteral","src":"14523:1:15","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"14700:337:15","statements":[{"nodeType":"YulVariableDeclaration","src":"14745:56:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14795:5:15"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"14760:34:15"},"nodeType":"YulFunctionCall","src":"14760:41:15"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"14749:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14814:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"14823:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14818:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"14881:110:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14910:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"14915:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14906:3:15"},"nodeType":"YulFunctionCall","src":"14906:11:15"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"14925:7:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14919:5:15"},"nodeType":"YulFunctionCall","src":"14919:14:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14899:6:15"},"nodeType":"YulFunctionCall","src":"14899:35:15"},"nodeType":"YulExpressionStatement","src":"14899:35:15"},{"nodeType":"YulAssignment","src":"14951:26:15","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"14966:7:15"},{"kind":"number","nodeType":"YulLiteral","src":"14975:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14962:3:15"},"nodeType":"YulFunctionCall","src":"14962:15:15"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"14951:7:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14848:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"14851:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14845:2:15"},"nodeType":"YulFunctionCall","src":"14845:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14859:21:15","statements":[{"nodeType":"YulAssignment","src":"14861:17:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14870:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"14873:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14866:3:15"},"nodeType":"YulFunctionCall","src":"14866:12:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14861:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"14841:3:15","statements":[]},"src":"14837:154:15"},{"nodeType":"YulAssignment","src":"15004:23:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15015:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"15020:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15011:3:15"},"nodeType":"YulFunctionCall","src":"15011:16:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15004:3:15"}]}]},"nodeType":"YulCase","src":"14693:344:15","value":{"kind":"number","nodeType":"YulLiteral","src":"14698:1:15","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"14496:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14507:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14492:3:15"},"nodeType":"YulFunctionCall","src":"14492:17:15"},"nodeType":"YulSwitch","src":"14485:552:15"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14255:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14262:3:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"14270:3:15","type":""}],"src":"14165:878:15"},{"body":{"nodeType":"YulBlock","src":"15184:138:15","statements":[{"nodeType":"YulAssignment","src":"15195:101:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15283:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"15292:3:15"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15202:80:15"},"nodeType":"YulFunctionCall","src":"15202:94:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15195:3:15"}]},{"nodeType":"YulAssignment","src":"15306:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"15313:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15306:3:15"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15163:3:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15169:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15180:3:15","type":""}],"src":"15049:273:15"},{"body":{"nodeType":"YulBlock","src":"15538:454:15","statements":[{"nodeType":"YulAssignment","src":"15548:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15560:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15571:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15556:3:15"},"nodeType":"YulFunctionCall","src":"15556:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15548:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15629:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15642:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15653:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15638:3:15"},"nodeType":"YulFunctionCall","src":"15638:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15585:43:15"},"nodeType":"YulFunctionCall","src":"15585:71:15"},"nodeType":"YulExpressionStatement","src":"15585:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15710:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15723:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15734:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15719:3:15"},"nodeType":"YulFunctionCall","src":"15719:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15666:43:15"},"nodeType":"YulFunctionCall","src":"15666:72:15"},"nodeType":"YulExpressionStatement","src":"15666:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15792:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15805:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15816:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15801:3:15"},"nodeType":"YulFunctionCall","src":"15801:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15748:43:15"},"nodeType":"YulFunctionCall","src":"15748:72:15"},"nodeType":"YulExpressionStatement","src":"15748:72:15"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15874:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15887:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15898:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15883:3:15"},"nodeType":"YulFunctionCall","src":"15883:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15830:43:15"},"nodeType":"YulFunctionCall","src":"15830:72:15"},"nodeType":"YulExpressionStatement","src":"15830:72:15"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"15956:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15969:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15980:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15965:3:15"},"nodeType":"YulFunctionCall","src":"15965:19:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15912:43:15"},"nodeType":"YulFunctionCall","src":"15912:73:15"},"nodeType":"YulExpressionStatement","src":"15912:73:15"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15478:9:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15490:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15498:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15506:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15514:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15522:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15533:4:15","type":""}],"src":"15328:664:15"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e(memPtr) {\n\n        mstore(add(memPtr, 0), \"PERMIT_DEADLINE_EXPIRED\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(memPtr) {\n\n        mstore(add(memPtr, 0), 0x1901000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(pos)\n        end := add(pos, 2)\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c(memPtr) {\n\n        mstore(add(memPtr, 0), \"INVALID_SIGNER\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3614":[{"length":32,"start":1629}],"3628":[{"length":32,"start":1667}],"3630":[{"length":32,"start":1719}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101915780637ecebe00146101c157806395d89b41146101f1578063a9059cbb1461020f578063d505accf1461023f578063dd62ed3e1461025b576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633644e51514610173575b600080fd5b6100c161028b565b6040516100ce9190610ce8565b60405180910390f35b6100f160048036038101906100ec9190610da3565b610319565b6040516100fe9190610dfe565b60405180910390f35b61010f61040b565b60405161011c9190610e28565b60405180910390f35b61013f600480360381019061013a9190610e43565b610411565b60405161014c9190610dfe565b60405180910390f35b61015d61065b565b60405161016a9190610eb2565b60405180910390f35b61017b61067f565b6040516101889190610ee6565b60405180910390f35b6101ab60048036038101906101a69190610f01565b6106dc565b6040516101b89190610e28565b60405180910390f35b6101db60048036038101906101d69190610f01565b6106f4565b6040516101e89190610e28565b60405180910390f35b6101f961070c565b6040516102069190610ce8565b60405180910390f35b61022960048036038101906102249190610da3565b61079a565b6040516102369190610dfe565b60405180910390f35b61025960048036038101906102549190610f86565b6108ae565b005b61027560048036038101906102709190611028565b610ba7565b6040516102829190610e28565b60405180910390f35b6000805461029890611097565b80601f01602080910402602001604051908101604052809291908181526020018280546102c490611097565b80156103115780601f106102e657610100808354040283529160200191610311565b820191906000526020600020905b8154815290600101906020018083116102f457829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103f99190610e28565b60405180910390a36001905092915050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105475782816104c691906110f7565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461059691906110f7565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516106479190610e28565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146106b5576106b0610bcc565b6106d7565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6001805461071990611097565b80601f016020809104026020016040519081016040528092919081815260200182805461074590611097565b80156107925780601f1061076757610100808354040283529160200191610792565b820191906000526020600020905b81548152906001019060200180831161077557829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107eb91906110f7565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089c9190610e28565b60405180910390a36001905092915050565b428410156108f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e890611177565b60405180910390fd5b600060016108fd61067f565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b604051602001610985969594939291906111a6565b604051602081830303815290604052805190602001206040516020016109ac92919061127f565b60405160208183030381529060405280519060200120858585604051600081526020016040526040516109e294939291906112b6565b6020604051602081039080840390855afa158015610a04573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610a7857508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae90611347565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610b969190610e28565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610bfe919061140a565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001610c3d959493929190611421565b60405160208183030381529060405280519060200120905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c92578082015181840152602081019050610c77565b60008484015250505050565b6000601f19601f8301169050919050565b6000610cba82610c58565b610cc48185610c63565b9350610cd4818560208601610c74565b610cdd81610c9e565b840191505092915050565b60006020820190508181036000830152610d028184610caf565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d3a82610d0f565b9050919050565b610d4a81610d2f565b8114610d5557600080fd5b50565b600081359050610d6781610d41565b92915050565b6000819050919050565b610d8081610d6d565b8114610d8b57600080fd5b50565b600081359050610d9d81610d77565b92915050565b60008060408385031215610dba57610db9610d0a565b5b6000610dc885828601610d58565b9250506020610dd985828601610d8e565b9150509250929050565b60008115159050919050565b610df881610de3565b82525050565b6000602082019050610e136000830184610def565b92915050565b610e2281610d6d565b82525050565b6000602082019050610e3d6000830184610e19565b92915050565b600080600060608486031215610e5c57610e5b610d0a565b5b6000610e6a86828701610d58565b9350506020610e7b86828701610d58565b9250506040610e8c86828701610d8e565b9150509250925092565b600060ff82169050919050565b610eac81610e96565b82525050565b6000602082019050610ec76000830184610ea3565b92915050565b6000819050919050565b610ee081610ecd565b82525050565b6000602082019050610efb6000830184610ed7565b92915050565b600060208284031215610f1757610f16610d0a565b5b6000610f2584828501610d58565b91505092915050565b610f3781610e96565b8114610f4257600080fd5b50565b600081359050610f5481610f2e565b92915050565b610f6381610ecd565b8114610f6e57600080fd5b50565b600081359050610f8081610f5a565b92915050565b600080600080600080600060e0888a031215610fa557610fa4610d0a565b5b6000610fb38a828b01610d58565b9750506020610fc48a828b01610d58565b9650506040610fd58a828b01610d8e565b9550506060610fe68a828b01610d8e565b9450506080610ff78a828b01610f45565b93505060a06110088a828b01610f71565b92505060c06110198a828b01610f71565b91505092959891949750929550565b6000806040838503121561103f5761103e610d0a565b5b600061104d85828601610d58565b925050602061105e85828601610d58565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110af57607f821691505b6020821081036110c2576110c1611068565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061110282610d6d565b915061110d83610d6d565b9250828203905081811115611125576111246110c8565b5b92915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b6000611161601783610c63565b915061116c8261112b565b602082019050919050565b6000602082019050818103600083015261119081611154565b9050919050565b6111a081610d2f565b82525050565b600060c0820190506111bb6000830189610ed7565b6111c86020830188611197565b6111d56040830187611197565b6111e26060830186610e19565b6111ef6080830185610e19565b6111fc60a0830184610e19565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611248600283611207565b915061125382611212565b600282019050919050565b6000819050919050565b61127961127482610ecd565b61125e565b82525050565b600061128a8261123b565b91506112968285611268565b6020820191506112a68284611268565b6020820191508190509392505050565b60006080820190506112cb6000830187610ed7565b6112d86020830186610ea3565b6112e56040830185610ed7565b6112f26060830184610ed7565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000611331600e83610c63565b915061133c826112fb565b602082019050919050565b6000602082019050818103600083015261136081611324565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461139481611097565b61139e8186611367565b945060018216600081146113b957600181146113ce57611401565b60ff1983168652811515820286019350611401565b6113d785611372565b60005b838110156113f9578154818901526001820191506020810190506113da565b838801955050505b50505092915050565b60006114168284611387565b915081905092915050565b600060a0820190506114366000830188610ed7565b6114436020830187610ed7565b6114506040830186610ed7565b61145d6060830185610e19565b61146a6080830184611197565b969550505050505056fea264697066735822122018124daef62e3d0214c123198476fb00f2f925046ee67213fd1f136da1d3fac364736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x25B JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x298 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C4 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x311 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x311 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x547 JUMPI DUP3 DUP2 PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0x647 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0x6B5 JUMPI PUSH2 0x6B0 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x719 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x745 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x792 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x767 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x792 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x775 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x89C SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E8 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x8FD PUSH2 0x67F JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP11 DUP11 DUP11 PUSH1 0x5 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x985 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9AC SWAP3 SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x9E2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xAB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAE SWAP1 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x140A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC3D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC92 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP3 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xCC4 DUP2 DUP6 PUSH2 0xC63 JUMP JUMPDEST SWAP4 POP PUSH2 0xCD4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC74 JUMP JUMPDEST PUSH2 0xCDD DUP2 PUSH2 0xC9E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD02 DUP2 DUP5 PUSH2 0xCAF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3A DUP3 PUSH2 0xD0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4A DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP2 EQ PUSH2 0xD55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD67 DUP2 PUSH2 0xD41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD80 DUP2 PUSH2 0xD6D JUMP JUMPDEST DUP2 EQ PUSH2 0xD8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9D DUP2 PUSH2 0xD77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDBA JUMPI PUSH2 0xDB9 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDC8 DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDD9 DUP6 DUP3 DUP7 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF8 DUP2 PUSH2 0xDE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE22 DUP2 PUSH2 0xD6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE3D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH2 0xE5B PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE6A DUP7 DUP3 DUP8 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE7B DUP7 DUP3 DUP8 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE8C DUP7 DUP3 DUP8 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAC DUP2 PUSH2 0xE96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE0 DUP2 PUSH2 0xECD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEFB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xED7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF17 JUMPI PUSH2 0xF16 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF25 DUP5 DUP3 DUP6 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF37 DUP2 PUSH2 0xE96 JUMP JUMPDEST DUP2 EQ PUSH2 0xF42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF54 DUP2 PUSH2 0xF2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF63 DUP2 PUSH2 0xECD JUMP JUMPDEST DUP2 EQ PUSH2 0xF6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF80 DUP2 PUSH2 0xF5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xFA5 JUMPI PUSH2 0xFA4 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB3 DUP11 DUP3 DUP12 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xFC4 DUP11 DUP3 DUP12 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0xFD5 DUP11 DUP3 DUP12 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xFE6 DUP11 DUP3 DUP12 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xFF7 DUP11 DUP3 DUP12 ADD PUSH2 0xF45 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1008 DUP11 DUP3 DUP12 ADD PUSH2 0xF71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1019 DUP11 DUP3 DUP12 ADD PUSH2 0xF71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x103F JUMPI PUSH2 0x103E PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x104D DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x105E DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10AF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C2 JUMPI PUSH2 0x10C1 PUSH2 0x1068 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1102 DUP3 PUSH2 0xD6D JUMP JUMPDEST SWAP2 POP PUSH2 0x110D DUP4 PUSH2 0xD6D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1125 JUMPI PUSH2 0x1124 PUSH2 0x10C8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5045524D49545F444541444C494E455F45585049524544000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 PUSH1 0x17 DUP4 PUSH2 0xC63 JUMP JUMPDEST SWAP2 POP PUSH2 0x116C DUP3 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1190 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A0 DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x11BB PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x11C8 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x11D5 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x11E2 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x11EF PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x11FC PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xE19 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1248 PUSH1 0x2 DUP4 PUSH2 0x1207 JUMP JUMPDEST SWAP2 POP PUSH2 0x1253 DUP3 PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1279 PUSH2 0x1274 DUP3 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x125E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128A DUP3 PUSH2 0x123B JUMP JUMPDEST SWAP2 POP PUSH2 0x1296 DUP3 DUP6 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x12A6 DUP3 DUP5 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x12CB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x12D8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x12E5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x12F2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xED7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x494E56414C49445F5349474E4552000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1331 PUSH1 0xE DUP4 PUSH2 0xC63 JUMP JUMPDEST SWAP2 POP PUSH2 0x133C DUP3 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1360 DUP2 PUSH2 0x1324 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1394 DUP2 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x139E DUP2 DUP7 PUSH2 0x1367 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x13B9 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x13CE JUMPI PUSH2 0x1401 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x1401 JUMP JUMPDEST PUSH2 0x13D7 DUP6 PUSH2 0x1372 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13F9 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13DA JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1416 DUP3 DUP5 PUSH2 0x1387 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1436 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x1443 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x1450 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x145D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x146A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1197 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR SLT 0x4D 0xAE 0xF6 0x2E RETURNDATASIZE MUL EQ 0xC1 0x23 NOT DUP5 PUSH23 0xFB00F2F925046EE67213FD1F136DA1D3FAC364736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"102:268:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:18:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2461:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1304:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3057:592;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1083:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5327:177;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1337:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1751:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1056:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2678:373;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3838:1483;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1388:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1031:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2461:211::-;2535:4;2584:6;2551:9;:21;2561:10;2551:21;;;;;;;;;;;;;;;:30;2573:7;2551:30;;;;;;;;;;;;;;;:39;;;;2627:7;2606:37;;2615:10;2606:37;;;2636:6;2606:37;;;;;;:::i;:::-;;;;;;;;2661:4;2654:11;;2461:211;;;;:::o;1304:26::-;;;;:::o;3057:592::-;3175:4;3191:15;3209:9;:15;3219:4;3209:15;;;;;;;;;;;;;;;:27;3225:10;3209:27;;;;;;;;;;;;;;;;3191:45;;3298:17;3287:7;:28;3283:80;;3357:6;3347:7;:16;;;;:::i;:::-;3317:9;:15;3327:4;3317:15;;;;;;;;;;;;;;;:27;3333:10;3317:27;;;;;;;;;;;;;;;:46;;;;3283:80;3393:6;3374:9;:15;3384:4;3374:15;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;3562:6;3545:9;:13;3555:2;3545:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;3609:2;3594:26;;3603:4;3594:26;;;3613:6;3594:26;;;;;;:::i;:::-;;;;;;;;3638:4;3631:11;;;3057:592;;;;;:::o;1083:31::-;;;:::o;5327:177::-;5384:7;5427:16;5410:13;:33;:87;;5473:24;:22;:24::i;:::-;5410:87;;;5446:24;5410:87;5403:94;;5327:177;:::o;1337:44::-;;;;;;;;;;;;;;;;;:::o;1751:41::-;;;;;;;;;;;;;;;;;:::o;1056:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2678:373::-;2748:4;2789:6;2764:9;:21;2774:10;2764:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;2958:6;2941:9;:13;2951:2;2941:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;3011:2;2990:32;;2999:10;2990:32;;;3015:6;2990:32;;;;;;:::i;:::-;;;;;;;;3040:4;3033:11;;2678:373;;;;:::o;3838:1483::-;4057:15;4045:8;:27;;4037:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4265:24;4292:805;4428:18;:16;:18::i;:::-;4555:165;4754:5;4793:7;4834:5;4873:6;:13;4880:5;4873:13;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;4922:8;4511:449;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4472:514;;;;;;4350:658;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4319:707;;;;;;5044:1;5063;5082;4292:805;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4265:832;;5148:1;5120:30;;:16;:30;;;;:59;;;;;5174:5;5154:25;;:16;:25;;;5120:59;5112:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;5252:5;5213:9;:27;5223:16;5213:27;;;;;;;;;;;;;;;:36;5241:7;5213:36;;;;;;;;;;;;;;;:44;;;;4241:1027;5299:7;5283:31;;5292:5;5283:31;;;5308:5;5283:31;;;;;;:::i;:::-;;;;;;;;3838:1483;;;;;;;:::o;1388:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5510:446::-;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;5833:14;5869:13;5912:4;5640:295;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;7:99:15:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:118::-;5694:22;5710:5;5694:22;:::i;:::-;5687:5;5684:33;5674:61;;5731:1;5728;5721:12;5674:61;5623:118;:::o;5747:135::-;5791:5;5829:6;5816:20;5807:29;;5845:31;5870:5;5845:31;:::i;:::-;5747:135;;;;:::o;5888:122::-;5961:24;5979:5;5961:24;:::i;:::-;5954:5;5951:35;5941:63;;6000:1;5997;5990:12;5941:63;5888:122;:::o;6016:139::-;6062:5;6100:6;6087:20;6078:29;;6116:33;6143:5;6116:33;:::i;:::-;6016:139;;;;:::o;6161:1199::-;6272:6;6280;6288;6296;6304;6312;6320;6369:3;6357:9;6348:7;6344:23;6340:33;6337:120;;;6376:79;;:::i;:::-;6337:120;6496:1;6521:53;6566:7;6557:6;6546:9;6542:22;6521:53;:::i;:::-;6511:63;;6467:117;6623:2;6649:53;6694:7;6685:6;6674:9;6670:22;6649:53;:::i;:::-;6639:63;;6594:118;6751:2;6777:53;6822:7;6813:6;6802:9;6798:22;6777:53;:::i;:::-;6767:63;;6722:118;6879:2;6905:53;6950:7;6941:6;6930:9;6926:22;6905:53;:::i;:::-;6895:63;;6850:118;7007:3;7034:51;7077:7;7068:6;7057:9;7053:22;7034:51;:::i;:::-;7024:61;;6978:117;7134:3;7161:53;7206:7;7197:6;7186:9;7182:22;7161:53;:::i;:::-;7151:63;;7105:119;7263:3;7290:53;7335:7;7326:6;7315:9;7311:22;7290:53;:::i;:::-;7280:63;;7234:119;6161:1199;;;;;;;;;;:::o;7366:474::-;7434:6;7442;7491:2;7479:9;7470:7;7466:23;7462:32;7459:119;;;7497:79;;:::i;:::-;7459:119;7617:1;7642:53;7687:7;7678:6;7667:9;7663:22;7642:53;:::i;:::-;7632:63;;7588:117;7744:2;7770:53;7815:7;7806:6;7795:9;7791:22;7770:53;:::i;:::-;7760:63;;7715:118;7366:474;;;;;:::o;7846:180::-;7894:77;7891:1;7884:88;7991:4;7988:1;7981:15;8015:4;8012:1;8005:15;8032:320;8076:6;8113:1;8107:4;8103:12;8093:22;;8160:1;8154:4;8150:12;8181:18;8171:81;;8237:4;8229:6;8225:17;8215:27;;8171:81;8299:2;8291:6;8288:14;8268:18;8265:38;8262:84;;8318:18;;:::i;:::-;8262:84;8083:269;8032:320;;;:::o;8358:180::-;8406:77;8403:1;8396:88;8503:4;8500:1;8493:15;8527:4;8524:1;8517:15;8544:194;8584:4;8604:20;8622:1;8604:20;:::i;:::-;8599:25;;8638:20;8656:1;8638:20;:::i;:::-;8633:25;;8682:1;8679;8675:9;8667:17;;8706:1;8700:4;8697:11;8694:37;;;8711:18;;:::i;:::-;8694:37;8544:194;;;;:::o;8744:173::-;8884:25;8880:1;8872:6;8868:14;8861:49;8744:173;:::o;8923:366::-;9065:3;9086:67;9150:2;9145:3;9086:67;:::i;:::-;9079:74;;9162:93;9251:3;9162:93;:::i;:::-;9280:2;9275:3;9271:12;9264:19;;8923:366;;;:::o;9295:419::-;9461:4;9499:2;9488:9;9484:18;9476:26;;9548:9;9542:4;9538:20;9534:1;9523:9;9519:17;9512:47;9576:131;9702:4;9576:131;:::i;:::-;9568:139;;9295:419;;;:::o;9720:118::-;9807:24;9825:5;9807:24;:::i;:::-;9802:3;9795:37;9720:118;;:::o;9844:775::-;10077:4;10115:3;10104:9;10100:19;10092:27;;10129:71;10197:1;10186:9;10182:17;10173:6;10129:71;:::i;:::-;10210:72;10278:2;10267:9;10263:18;10254:6;10210:72;:::i;:::-;10292;10360:2;10349:9;10345:18;10336:6;10292:72;:::i;:::-;10374;10442:2;10431:9;10427:18;10418:6;10374:72;:::i;:::-;10456:73;10524:3;10513:9;10509:19;10500:6;10456:73;:::i;:::-;10539;10607:3;10596:9;10592:19;10583:6;10539:73;:::i;:::-;9844:775;;;;;;;;;:::o;10625:148::-;10727:11;10764:3;10749:18;;10625:148;;;;:::o;10779:214::-;10919:66;10915:1;10907:6;10903:14;10896:90;10779:214;:::o;10999:400::-;11159:3;11180:84;11262:1;11257:3;11180:84;:::i;:::-;11173:91;;11273:93;11362:3;11273:93;:::i;:::-;11391:1;11386:3;11382:11;11375:18;;10999:400;;;:::o;11405:79::-;11444:7;11473:5;11462:16;;11405:79;;;:::o;11490:157::-;11595:45;11615:24;11633:5;11615:24;:::i;:::-;11595:45;:::i;:::-;11590:3;11583:58;11490:157;;:::o;11653:663::-;11894:3;11916:148;12060:3;11916:148;:::i;:::-;11909:155;;12074:75;12145:3;12136:6;12074:75;:::i;:::-;12174:2;12169:3;12165:12;12158:19;;12187:75;12258:3;12249:6;12187:75;:::i;:::-;12287:2;12282:3;12278:12;12271:19;;12307:3;12300:10;;11653:663;;;;;:::o;12322:545::-;12495:4;12533:3;12522:9;12518:19;12510:27;;12547:71;12615:1;12604:9;12600:17;12591:6;12547:71;:::i;:::-;12628:68;12692:2;12681:9;12677:18;12668:6;12628:68;:::i;:::-;12706:72;12774:2;12763:9;12759:18;12750:6;12706:72;:::i;:::-;12788;12856:2;12845:9;12841:18;12832:6;12788:72;:::i;:::-;12322:545;;;;;;;:::o;12873:164::-;13013:16;13009:1;13001:6;12997:14;12990:40;12873:164;:::o;13043:366::-;13185:3;13206:67;13270:2;13265:3;13206:67;:::i;:::-;13199:74;;13282:93;13371:3;13282:93;:::i;:::-;13400:2;13395:3;13391:12;13384:19;;13043:366;;;:::o;13415:419::-;13581:4;13619:2;13608:9;13604:18;13596:26;;13668:9;13662:4;13658:20;13654:1;13643:9;13639:17;13632:47;13696:131;13822:4;13696:131;:::i;:::-;13688:139;;13415:419;;;:::o;13840:147::-;13941:11;13978:3;13963:18;;13840:147;;;;:::o;13993:144::-;14045:4;14068:3;14060:11;;14091:3;14088:1;14081:14;14125:4;14122:1;14112:18;14104:26;;13993:144;;;:::o;14165:878::-;14270:3;14307:5;14301:12;14336:36;14362:9;14336:36;:::i;:::-;14388:88;14469:6;14464:3;14388:88;:::i;:::-;14381:95;;14507:1;14496:9;14492:17;14523:1;14518:166;;;;14698:1;14693:344;;;;14485:552;;14518:166;14602:4;14598:9;14587;14583:25;14578:3;14571:38;14664:6;14657:14;14650:22;14642:6;14638:35;14633:3;14629:45;14622:52;;14518:166;;14693:344;14760:41;14795:5;14760:41;:::i;:::-;14823:1;14837:154;14851:6;14848:1;14845:13;14837:154;;;14925:7;14919:14;14915:1;14910:3;14906:11;14899:35;14975:1;14966:7;14962:15;14951:26;;14873:4;14870:1;14866:12;14861:17;;14837:154;;;15020:6;15015:3;15011:16;15004:23;;14700:337;;14485:552;;14274:769;;14165:878;;;;:::o;15049:273::-;15180:3;15202:94;15292:3;15283:6;15202:94;:::i;:::-;15195:101;;15313:3;15306:10;;15049:273;;;;:::o;15328:664::-;15533:4;15571:3;15560:9;15556:19;15548:27;;15585:71;15653:1;15642:9;15638:17;15629:6;15585:71;:::i;:::-;15666:72;15734:2;15723:9;15719:18;15710:6;15666:72;:::i;:::-;15748;15816:2;15805:9;15801:18;15792:6;15748:72;:::i;:::-;15830;15898:2;15887:9;15883:18;15874:6;15830:72;:::i;:::-;15912:73;15980:3;15969:9;15965:19;15956:6;15912:73;:::i;:::-;15328:664;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1058000","executionCost":"infinite","totalCost":"infinite"},"external":{"DOMAIN_SEPARATOR()":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2814","decimals()":"infinite","name()":"infinite","nonces(address)":"2836","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","symbol()":"infinite","totalSupply()":"2474","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_holders\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/stETH.sol\":\"stETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/dependencies/solmate/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\"},\"src/stETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./dependencies/solmate/ERC20.sol\\\";\\n\\ncontract stETH is ERC20 {\\n    constructor(address[] memory _holders) ERC20(\\\"stETH\\\", \\\"stETH\\\", 18) {\\n        uint256 holdersLength = _holders.length;\\n\\n        for (uint256 i = 0; i < holdersLength; i++) {\\n            _mint(_holders[i], 100_000 * 1e18);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xce49328c7df9aca729645888e924fef2ff694a424597f6a4130e359059bfc505\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3610,"contract":"src/stETH.sol:stETH","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":3612,"contract":"src/stETH.sol:stETH","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":3616,"contract":"src/stETH.sol:stETH","label":"totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":3620,"contract":"src/stETH.sol:stETH","label":"balanceOf","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":3626,"contract":"src/stETH.sol:stETH","label":"allowance","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":3634,"contract":"src/stETH.sol:stETH","label":"nonces","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/stNEAR.sol":{"stNEAR":{"abi":[{"inputs":[{"internalType":"address[]","name":"_holders","type":"address[]"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3666":{"entryPoint":null,"id":3666,"parameterSlots":3,"returnSlots":0},"@_4167":{"entryPoint":null,"id":4167,"parameterSlots":1,"returnSlots":0},"@_mint_3948":{"entryPoint":499,"id":3948,"parameterSlots":2,"returnSlots":0},"@computeDomainSeparator_3920":{"entryPoint":355,"id":3920,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":1038,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1015,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":1154,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":1205,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2519,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2485,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2307,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2502,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2450,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":2536,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2688,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":854,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":711,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":885,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":2286,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1397,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1286,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2275,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2629,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1718,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":969,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2475,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":937,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1533,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1679,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1553,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1873,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1418,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1344,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1843,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":800,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1543,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":2198,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1811,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2151,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1297,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2104,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":753,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1593,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":731,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":932,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":726,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":721,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":736,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1434,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1798,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1651,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1447,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1603,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":989,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1646,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12534:15","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:15","statements":[{"nodeType":"YulAssignment","src":"57:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:15"},"nodeType":"YulFunctionCall","src":"67:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:15","type":""}],"src":"7:75:15"},{"body":{"nodeType":"YulBlock","src":"177:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:15"},"nodeType":"YulFunctionCall","src":"187:12:15"},"nodeType":"YulExpressionStatement","src":"187:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:15"},{"body":{"nodeType":"YulBlock","src":"300:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:15"},"nodeType":"YulFunctionCall","src":"310:12:15"},"nodeType":"YulExpressionStatement","src":"310:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:15"},{"body":{"nodeType":"YulBlock","src":"423:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:15"},"nodeType":"YulFunctionCall","src":"433:12:15"},"nodeType":"YulExpressionStatement","src":"433:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:15"},{"body":{"nodeType":"YulBlock","src":"505:54:15","statements":[{"nodeType":"YulAssignment","src":"515:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"533:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"540:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"529:3:15"},"nodeType":"YulFunctionCall","src":"529:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"549:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"545:3:15"},"nodeType":"YulFunctionCall","src":"545:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"525:3:15"},"nodeType":"YulFunctionCall","src":"525:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"515:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"488:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"498:6:15","type":""}],"src":"457:102:15"},{"body":{"nodeType":"YulBlock","src":"593:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"610:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"613:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"603:6:15"},"nodeType":"YulFunctionCall","src":"603:88:15"},"nodeType":"YulExpressionStatement","src":"603:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"707:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"710:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"700:6:15"},"nodeType":"YulFunctionCall","src":"700:15:15"},"nodeType":"YulExpressionStatement","src":"700:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"731:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"734:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"724:6:15"},"nodeType":"YulFunctionCall","src":"724:15:15"},"nodeType":"YulExpressionStatement","src":"724:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"565:180:15"},{"body":{"nodeType":"YulBlock","src":"794:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"804:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"826:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"856:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"834:21:15"},"nodeType":"YulFunctionCall","src":"834:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"822:3:15"},"nodeType":"YulFunctionCall","src":"822:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"808:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"973:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"975:16:15"},"nodeType":"YulFunctionCall","src":"975:18:15"},"nodeType":"YulExpressionStatement","src":"975:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"916:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"928:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"913:2:15"},"nodeType":"YulFunctionCall","src":"913:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"952:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"964:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"949:2:15"},"nodeType":"YulFunctionCall","src":"949:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"910:2:15"},"nodeType":"YulFunctionCall","src":"910:62:15"},"nodeType":"YulIf","src":"907:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1011:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1015:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1004:6:15"},"nodeType":"YulFunctionCall","src":"1004:22:15"},"nodeType":"YulExpressionStatement","src":"1004:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"780:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"788:4:15","type":""}],"src":"751:281:15"},{"body":{"nodeType":"YulBlock","src":"1079:88:15","statements":[{"nodeType":"YulAssignment","src":"1089:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1099:18:15"},"nodeType":"YulFunctionCall","src":"1099:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1089:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1148:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"1156:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1128:19:15"},"nodeType":"YulFunctionCall","src":"1128:33:15"},"nodeType":"YulExpressionStatement","src":"1128:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1063:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1072:6:15","type":""}],"src":"1038:129:15"},{"body":{"nodeType":"YulBlock","src":"1255:229:15","statements":[{"body":{"nodeType":"YulBlock","src":"1360:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1362:16:15"},"nodeType":"YulFunctionCall","src":"1362:18:15"},"nodeType":"YulExpressionStatement","src":"1362:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1332:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1340:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1329:2:15"},"nodeType":"YulFunctionCall","src":"1329:30:15"},"nodeType":"YulIf","src":"1326:56:15"},{"nodeType":"YulAssignment","src":"1392:25:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1404:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1412:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1400:3:15"},"nodeType":"YulFunctionCall","src":"1400:17:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1392:4:15"}]},{"nodeType":"YulAssignment","src":"1454:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1466:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"1472:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1462:3:15"},"nodeType":"YulFunctionCall","src":"1462:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1454:4:15"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1239:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1250:4:15","type":""}],"src":"1173:311:15"},{"body":{"nodeType":"YulBlock","src":"1579:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1596:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1599:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1589:6:15"},"nodeType":"YulFunctionCall","src":"1589:12:15"},"nodeType":"YulExpressionStatement","src":"1589:12:15"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1490:117:15"},{"body":{"nodeType":"YulBlock","src":"1658:81:15","statements":[{"nodeType":"YulAssignment","src":"1668:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1683:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1690:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1679:3:15"},"nodeType":"YulFunctionCall","src":"1679:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1668:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1640:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1650:7:15","type":""}],"src":"1613:126:15"},{"body":{"nodeType":"YulBlock","src":"1790:51:15","statements":[{"nodeType":"YulAssignment","src":"1800:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1829:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1811:17:15"},"nodeType":"YulFunctionCall","src":"1811:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1800:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1772:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1782:7:15","type":""}],"src":"1745:96:15"},{"body":{"nodeType":"YulBlock","src":"1890:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"1947:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1956:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1959:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1949:6:15"},"nodeType":"YulFunctionCall","src":"1949:12:15"},"nodeType":"YulExpressionStatement","src":"1949:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1913:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1938:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1920:17:15"},"nodeType":"YulFunctionCall","src":"1920:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1910:2:15"},"nodeType":"YulFunctionCall","src":"1910:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1903:6:15"},"nodeType":"YulFunctionCall","src":"1903:43:15"},"nodeType":"YulIf","src":"1900:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:15","type":""}],"src":"1847:122:15"},{"body":{"nodeType":"YulBlock","src":"2038:80:15","statements":[{"nodeType":"YulAssignment","src":"2048:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2063:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2057:5:15"},"nodeType":"YulFunctionCall","src":"2057:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2048:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2106:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2079:26:15"},"nodeType":"YulFunctionCall","src":"2079:33:15"},"nodeType":"YulExpressionStatement","src":"2079:33:15"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2016:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2024:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2032:5:15","type":""}],"src":"1975:143:15"},{"body":{"nodeType":"YulBlock","src":"2254:619:15","statements":[{"nodeType":"YulAssignment","src":"2264:90:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2346:6:15"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2289:56:15"},"nodeType":"YulFunctionCall","src":"2289:64:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2273:15:15"},"nodeType":"YulFunctionCall","src":"2273:81:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2264:5:15"}]},{"nodeType":"YulVariableDeclaration","src":"2363:16:15","value":{"name":"array","nodeType":"YulIdentifier","src":"2374:5:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2367:3:15","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2396:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"2403:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2389:6:15"},"nodeType":"YulFunctionCall","src":"2389:21:15"},"nodeType":"YulExpressionStatement","src":"2389:21:15"},{"nodeType":"YulAssignment","src":"2419:23:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2430:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2437:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2426:3:15"},"nodeType":"YulFunctionCall","src":"2426:16:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2419:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"2452:44:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2470:6:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2482:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2490:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2478:3:15"},"nodeType":"YulFunctionCall","src":"2478:17:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2466:3:15"},"nodeType":"YulFunctionCall","src":"2466:30:15"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"2456:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2524:103:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2538:77:15"},"nodeType":"YulFunctionCall","src":"2538:79:15"},"nodeType":"YulExpressionStatement","src":"2538:79:15"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"2511:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"2519:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2508:2:15"},"nodeType":"YulFunctionCall","src":"2508:15:15"},"nodeType":"YulIf","src":"2505:122:15"},{"body":{"nodeType":"YulBlock","src":"2712:155:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2727:21:15","value":{"name":"src","nodeType":"YulIdentifier","src":"2745:3:15"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"2731:10:15","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2769:3:15"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"2806:10:15"},{"name":"end","nodeType":"YulIdentifier","src":"2818:3:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2774:31:15"},"nodeType":"YulFunctionCall","src":"2774:48:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2762:6:15"},"nodeType":"YulFunctionCall","src":"2762:61:15"},"nodeType":"YulExpressionStatement","src":"2762:61:15"},{"nodeType":"YulAssignment","src":"2836:21:15","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2847:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2852:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2843:3:15"},"nodeType":"YulFunctionCall","src":"2843:14:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2836:3:15"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2665:3:15"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"2670:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2662:2:15"},"nodeType":"YulFunctionCall","src":"2662:15:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2678:25:15","statements":[{"nodeType":"YulAssignment","src":"2680:21:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2691:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2696:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2687:3:15"},"nodeType":"YulFunctionCall","src":"2687:14:15"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2680:3:15"}]}]},"pre":{"nodeType":"YulBlock","src":"2640:21:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2642:17:15","value":{"name":"offset","nodeType":"YulIdentifier","src":"2653:6:15"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"2646:3:15","type":""}]}]},"src":"2636:231:15"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2224:6:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"2232:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2240:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2248:5:15","type":""}],"src":"2141:732:15"},{"body":{"nodeType":"YulBlock","src":"2984:297:15","statements":[{"body":{"nodeType":"YulBlock","src":"3033:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3035:77:15"},"nodeType":"YulFunctionCall","src":"3035:79:15"},"nodeType":"YulExpressionStatement","src":"3035:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3012:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3020:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3008:3:15"},"nodeType":"YulFunctionCall","src":"3008:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"3027:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3004:3:15"},"nodeType":"YulFunctionCall","src":"3004:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2997:6:15"},"nodeType":"YulFunctionCall","src":"2997:35:15"},"nodeType":"YulIf","src":"2994:122:15"},{"nodeType":"YulVariableDeclaration","src":"3125:27:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3145:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3139:5:15"},"nodeType":"YulFunctionCall","src":"3139:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3129:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3161:114:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3248:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3256:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3244:3:15"},"nodeType":"YulFunctionCall","src":"3244:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"3263:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"3271:3:15"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3170:73:15"},"nodeType":"YulFunctionCall","src":"3170:105:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3161:5:15"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2962:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2970:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2978:5:15","type":""}],"src":"2896:385:15"},{"body":{"nodeType":"YulBlock","src":"3389:452:15","statements":[{"body":{"nodeType":"YulBlock","src":"3435:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3437:77:15"},"nodeType":"YulFunctionCall","src":"3437:79:15"},"nodeType":"YulExpressionStatement","src":"3437:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3410:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3406:3:15"},"nodeType":"YulFunctionCall","src":"3406:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3431:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3402:3:15"},"nodeType":"YulFunctionCall","src":"3402:32:15"},"nodeType":"YulIf","src":"3399:119:15"},{"nodeType":"YulBlock","src":"3528:306:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3543:38:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3567:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3578:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3563:3:15"},"nodeType":"YulFunctionCall","src":"3563:17:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3557:5:15"},"nodeType":"YulFunctionCall","src":"3557:24:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3547:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3628:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3630:77:15"},"nodeType":"YulFunctionCall","src":"3630:79:15"},"nodeType":"YulExpressionStatement","src":"3630:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3600:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3608:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3597:2:15"},"nodeType":"YulFunctionCall","src":"3597:30:15"},"nodeType":"YulIf","src":"3594:117:15"},{"nodeType":"YulAssignment","src":"3725:99:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3796:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3807:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3792:3:15"},"nodeType":"YulFunctionCall","src":"3792:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3816:7:15"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3735:56:15"},"nodeType":"YulFunctionCall","src":"3735:89:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3725:6:15"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3359:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3370:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3382:6:15","type":""}],"src":"3287:554:15"},{"body":{"nodeType":"YulBlock","src":"3906:40:15","statements":[{"nodeType":"YulAssignment","src":"3917:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3933:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3927:5:15"},"nodeType":"YulFunctionCall","src":"3927:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3917:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3889:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3899:6:15","type":""}],"src":"3847:99:15"},{"body":{"nodeType":"YulBlock","src":"3980:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3997:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4000:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3990:6:15"},"nodeType":"YulFunctionCall","src":"3990:88:15"},"nodeType":"YulExpressionStatement","src":"3990:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4094:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4097:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4087:6:15"},"nodeType":"YulFunctionCall","src":"4087:15:15"},"nodeType":"YulExpressionStatement","src":"4087:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4118:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4121:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4111:6:15"},"nodeType":"YulFunctionCall","src":"4111:15:15"},"nodeType":"YulExpressionStatement","src":"4111:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3952:180:15"},{"body":{"nodeType":"YulBlock","src":"4189:269:15","statements":[{"nodeType":"YulAssignment","src":"4199:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4213:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"4219:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4209:3:15"},"nodeType":"YulFunctionCall","src":"4209:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4199:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"4230:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4260:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"4266:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4256:3:15"},"nodeType":"YulFunctionCall","src":"4256:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4234:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4307:51:15","statements":[{"nodeType":"YulAssignment","src":"4321:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4335:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4343:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4331:3:15"},"nodeType":"YulFunctionCall","src":"4331:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4321:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4287:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4280:6:15"},"nodeType":"YulFunctionCall","src":"4280:26:15"},"nodeType":"YulIf","src":"4277:81:15"},{"body":{"nodeType":"YulBlock","src":"4410:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4424:16:15"},"nodeType":"YulFunctionCall","src":"4424:18:15"},"nodeType":"YulExpressionStatement","src":"4424:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4374:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4397:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4405:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4394:2:15"},"nodeType":"YulFunctionCall","src":"4394:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4371:2:15"},"nodeType":"YulFunctionCall","src":"4371:38:15"},"nodeType":"YulIf","src":"4368:84:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4173:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4182:6:15","type":""}],"src":"4138:320:15"},{"body":{"nodeType":"YulBlock","src":"4518:87:15","statements":[{"nodeType":"YulAssignment","src":"4528:11:15","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4536:3:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4528:4:15"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4556:1:15","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4559:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4549:6:15"},"nodeType":"YulFunctionCall","src":"4549:14:15"},"nodeType":"YulExpressionStatement","src":"4549:14:15"},{"nodeType":"YulAssignment","src":"4572:26:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4590:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4593:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4580:9:15"},"nodeType":"YulFunctionCall","src":"4580:18:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4572:4:15"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4505:3:15","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4513:4:15","type":""}],"src":"4464:141:15"},{"body":{"nodeType":"YulBlock","src":"4655:49:15","statements":[{"nodeType":"YulAssignment","src":"4665:33:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4683:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4690:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4679:3:15"},"nodeType":"YulFunctionCall","src":"4679:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"4695:2:15","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4675:3:15"},"nodeType":"YulFunctionCall","src":"4675:23:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4665:6:15"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4638:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4648:6:15","type":""}],"src":"4611:93:15"},{"body":{"nodeType":"YulBlock","src":"4763:54:15","statements":[{"nodeType":"YulAssignment","src":"4773:37:15","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4798:4:15"},{"name":"value","nodeType":"YulIdentifier","src":"4804:5:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4794:3:15"},"nodeType":"YulFunctionCall","src":"4794:16:15"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4773:8:15"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4738:4:15","type":""},{"name":"value","nodeType":"YulTypedName","src":"4744:5:15","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4754:8:15","type":""}],"src":"4710:107:15"},{"body":{"nodeType":"YulBlock","src":"4899:317:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4909:35:15","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4930:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"4942:1:15","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4926:3:15"},"nodeType":"YulFunctionCall","src":"4926:18:15"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4913:9:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4953:109:15","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4984:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4995:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4965:18:15"},"nodeType":"YulFunctionCall","src":"4965:97:15"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4957:4:15","type":""}]},{"nodeType":"YulAssignment","src":"5071:51:15","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5102:9:15"},{"name":"toInsert","nodeType":"YulIdentifier","src":"5113:8:15"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5083:18:15"},"nodeType":"YulFunctionCall","src":"5083:39:15"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5071:8:15"}]},{"nodeType":"YulAssignment","src":"5131:30:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5144:5:15"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"5155:4:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5151:3:15"},"nodeType":"YulFunctionCall","src":"5151:9:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5140:3:15"},"nodeType":"YulFunctionCall","src":"5140:21:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5131:5:15"}]},{"nodeType":"YulAssignment","src":"5170:40:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5183:5:15"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5194:8:15"},{"name":"mask","nodeType":"YulIdentifier","src":"5204:4:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5190:3:15"},"nodeType":"YulFunctionCall","src":"5190:19:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5180:2:15"},"nodeType":"YulFunctionCall","src":"5180:30:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5170:6:15"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4860:5:15","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4867:10:15","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4879:8:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4892:6:15","type":""}],"src":"4823:393:15"},{"body":{"nodeType":"YulBlock","src":"5267:32:15","statements":[{"nodeType":"YulAssignment","src":"5277:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"5288:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5277:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5249:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5259:7:15","type":""}],"src":"5222:77:15"},{"body":{"nodeType":"YulBlock","src":"5337:28:15","statements":[{"nodeType":"YulAssignment","src":"5347:12:15","value":{"name":"value","nodeType":"YulIdentifier","src":"5354:5:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5347:3:15"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5323:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5333:3:15","type":""}],"src":"5305:60:15"},{"body":{"nodeType":"YulBlock","src":"5431:82:15","statements":[{"nodeType":"YulAssignment","src":"5441:66:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5499:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5481:17:15"},"nodeType":"YulFunctionCall","src":"5481:24:15"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5472:8:15"},"nodeType":"YulFunctionCall","src":"5472:34:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5454:17:15"},"nodeType":"YulFunctionCall","src":"5454:53:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5441:9:15"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5411:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5421:9:15","type":""}],"src":"5371:142:15"},{"body":{"nodeType":"YulBlock","src":"5566:28:15","statements":[{"nodeType":"YulAssignment","src":"5576:12:15","value":{"name":"value","nodeType":"YulIdentifier","src":"5583:5:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5576:3:15"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5552:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5562:3:15","type":""}],"src":"5519:75:15"},{"body":{"nodeType":"YulBlock","src":"5676:193:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5686:63:15","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5741:7:15"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5710:30:15"},"nodeType":"YulFunctionCall","src":"5710:39:15"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5690:16:15","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5765:4:15"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5799:5:15"},"nodeType":"YulFunctionCall","src":"5799:11:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5812:6:15"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5844:16:15"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5820:23:15"},"nodeType":"YulFunctionCall","src":"5820:41:15"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5771:27:15"},"nodeType":"YulFunctionCall","src":"5771:91:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5758:6:15"},"nodeType":"YulFunctionCall","src":"5758:105:15"},"nodeType":"YulExpressionStatement","src":"5758:105:15"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5653:4:15","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5659:6:15","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5667:7:15","type":""}],"src":"5600:269:15"},{"body":{"nodeType":"YulBlock","src":"5924:24:15","statements":[{"nodeType":"YulAssignment","src":"5934:8:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5941:1:15","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5934:3:15"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5920:3:15","type":""}],"src":"5875:73:15"},{"body":{"nodeType":"YulBlock","src":"6007:136:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6017:46:15","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"6031:30:15"},"nodeType":"YulFunctionCall","src":"6031:32:15"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"6021:6:15","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6116:4:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6122:6:15"},{"name":"zero_0","nodeType":"YulIdentifier","src":"6130:6:15"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6072:43:15"},"nodeType":"YulFunctionCall","src":"6072:65:15"},"nodeType":"YulExpressionStatement","src":"6072:65:15"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5993:4:15","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5999:6:15","type":""}],"src":"5954:189:15"},{"body":{"nodeType":"YulBlock","src":"6199:136:15","statements":[{"body":{"nodeType":"YulBlock","src":"6266:63:15","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6310:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"6317:1:15","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"6280:29:15"},"nodeType":"YulFunctionCall","src":"6280:39:15"},"nodeType":"YulExpressionStatement","src":"6280:39:15"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6219:5:15"},{"name":"end","nodeType":"YulIdentifier","src":"6226:3:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6216:2:15"},"nodeType":"YulFunctionCall","src":"6216:14:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6231:26:15","statements":[{"nodeType":"YulAssignment","src":"6233:22:15","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6246:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"6253:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6242:3:15"},"nodeType":"YulFunctionCall","src":"6242:13:15"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"6233:5:15"}]}]},"pre":{"nodeType":"YulBlock","src":"6213:2:15","statements":[]},"src":"6209:120:15"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"6187:5:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"6194:3:15","type":""}],"src":"6149:186:15"},{"body":{"nodeType":"YulBlock","src":"6420:464:15","statements":[{"body":{"nodeType":"YulBlock","src":"6446:431:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6460:54:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6508:5:15"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6476:31:15"},"nodeType":"YulFunctionCall","src":"6476:38:15"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6464:8:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6527:63:15","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6550:8:15"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6578:10:15"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6560:17:15"},"nodeType":"YulFunctionCall","src":"6560:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6546:3:15"},"nodeType":"YulFunctionCall","src":"6546:44:15"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6531:11:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"6747:27:15","statements":[{"nodeType":"YulAssignment","src":"6749:23:15","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6764:8:15"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6749:11:15"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6731:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"6743:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6728:2:15"},"nodeType":"YulFunctionCall","src":"6728:18:15"},"nodeType":"YulIf","src":"6725:49:15"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6816:11:15"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6833:8:15"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6861:3:15"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6843:17:15"},"nodeType":"YulFunctionCall","src":"6843:22:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6829:3:15"},"nodeType":"YulFunctionCall","src":"6829:37:15"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6787:28:15"},"nodeType":"YulFunctionCall","src":"6787:80:15"},"nodeType":"YulExpressionStatement","src":"6787:80:15"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6437:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6442:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6434:2:15"},"nodeType":"YulFunctionCall","src":"6434:11:15"},"nodeType":"YulIf","src":"6431:446:15"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6396:5:15","type":""},{"name":"len","nodeType":"YulTypedName","src":"6403:3:15","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6408:10:15","type":""}],"src":"6341:543:15"},{"body":{"nodeType":"YulBlock","src":"6953:54:15","statements":[{"nodeType":"YulAssignment","src":"6963:37:15","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6988:4:15"},{"name":"value","nodeType":"YulIdentifier","src":"6994:5:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6984:3:15"},"nodeType":"YulFunctionCall","src":"6984:16:15"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6963:8:15"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6928:4:15","type":""},{"name":"value","nodeType":"YulTypedName","src":"6934:5:15","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6944:8:15","type":""}],"src":"6890:117:15"},{"body":{"nodeType":"YulBlock","src":"7064:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7074:68:15","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7123:1:15","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"7126:5:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7119:3:15"},"nodeType":"YulFunctionCall","src":"7119:13:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7138:1:15","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7134:3:15"},"nodeType":"YulFunctionCall","src":"7134:6:15"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"7090:28:15"},"nodeType":"YulFunctionCall","src":"7090:51:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7086:3:15"},"nodeType":"YulFunctionCall","src":"7086:56:15"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7078:4:15","type":""}]},{"nodeType":"YulAssignment","src":"7151:25:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7165:4:15"},{"name":"mask","nodeType":"YulIdentifier","src":"7171:4:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7161:3:15"},"nodeType":"YulFunctionCall","src":"7161:15:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7151:6:15"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7041:4:15","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"7047:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7057:6:15","type":""}],"src":"7013:169:15"},{"body":{"nodeType":"YulBlock","src":"7268:214:15","statements":[{"nodeType":"YulAssignment","src":"7401:37:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7428:4:15"},{"name":"len","nodeType":"YulIdentifier","src":"7434:3:15"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7409:18:15"},"nodeType":"YulFunctionCall","src":"7409:29:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7401:4:15"}]},{"nodeType":"YulAssignment","src":"7447:29:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7458:4:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7468:1:15","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7471:3:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7464:3:15"},"nodeType":"YulFunctionCall","src":"7464:11:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7455:2:15"},"nodeType":"YulFunctionCall","src":"7455:21:15"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7447:4:15"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7249:4:15","type":""},{"name":"len","nodeType":"YulTypedName","src":"7255:3:15","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"7263:4:15","type":""}],"src":"7187:295:15"},{"body":{"nodeType":"YulBlock","src":"7579:1303:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7590:51:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7637:3:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7604:32:15"},"nodeType":"YulFunctionCall","src":"7604:37:15"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7594:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"7726:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7728:16:15"},"nodeType":"YulFunctionCall","src":"7728:18:15"},"nodeType":"YulExpressionStatement","src":"7728:18:15"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7698:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"7706:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7695:2:15"},"nodeType":"YulFunctionCall","src":"7695:30:15"},"nodeType":"YulIf","src":"7692:56:15"},{"nodeType":"YulVariableDeclaration","src":"7758:52:15","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7804:4:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7798:5:15"},"nodeType":"YulFunctionCall","src":"7798:11:15"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7772:25:15"},"nodeType":"YulFunctionCall","src":"7772:38:15"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7762:6:15","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7903:4:15"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7909:6:15"},{"name":"newLen","nodeType":"YulIdentifier","src":"7917:6:15"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7857:45:15"},"nodeType":"YulFunctionCall","src":"7857:67:15"},"nodeType":"YulExpressionStatement","src":"7857:67:15"},{"nodeType":"YulVariableDeclaration","src":"7934:18:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7951:1:15","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7938:9:15","type":""}]},{"nodeType":"YulAssignment","src":"7962:17:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7975:4:15","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7962:9:15"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8026:611:15","statements":[{"nodeType":"YulVariableDeclaration","src":"8040:37:15","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8059:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8071:4:15","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8067:3:15"},"nodeType":"YulFunctionCall","src":"8067:9:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8055:3:15"},"nodeType":"YulFunctionCall","src":"8055:22:15"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"8044:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8091:51:15","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8137:4:15"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8105:31:15"},"nodeType":"YulFunctionCall","src":"8105:37:15"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"8095:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8155:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"8164:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8159:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"8223:163:15","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8248:6:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8266:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8271:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8262:3:15"},"nodeType":"YulFunctionCall","src":"8262:19:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8256:5:15"},"nodeType":"YulFunctionCall","src":"8256:26:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8241:6:15"},"nodeType":"YulFunctionCall","src":"8241:42:15"},"nodeType":"YulExpressionStatement","src":"8241:42:15"},{"nodeType":"YulAssignment","src":"8300:24:15","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8314:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8322:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8310:3:15"},"nodeType":"YulFunctionCall","src":"8310:14:15"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8300:6:15"}]},{"nodeType":"YulAssignment","src":"8341:31:15","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8358:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8369:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8354:3:15"},"nodeType":"YulFunctionCall","src":"8354:18:15"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8341:9:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8189:1:15"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"8192:7:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8186:2:15"},"nodeType":"YulFunctionCall","src":"8186:14:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8201:21:15","statements":[{"nodeType":"YulAssignment","src":"8203:17:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8212:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"8215:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8208:3:15"},"nodeType":"YulFunctionCall","src":"8208:12:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8203:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"8182:3:15","statements":[]},"src":"8178:208:15"},{"body":{"nodeType":"YulBlock","src":"8422:156:15","statements":[{"nodeType":"YulVariableDeclaration","src":"8440:43:15","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8467:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8472:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8463:3:15"},"nodeType":"YulFunctionCall","src":"8463:19:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8457:5:15"},"nodeType":"YulFunctionCall","src":"8457:26:15"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8444:9:15","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8507:6:15"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8534:9:15"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8549:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8557:4:15","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8545:3:15"},"nodeType":"YulFunctionCall","src":"8545:17:15"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8515:18:15"},"nodeType":"YulFunctionCall","src":"8515:48:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8500:6:15"},"nodeType":"YulFunctionCall","src":"8500:64:15"},"nodeType":"YulExpressionStatement","src":"8500:64:15"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8405:7:15"},{"name":"newLen","nodeType":"YulIdentifier","src":"8414:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8402:2:15"},"nodeType":"YulFunctionCall","src":"8402:19:15"},"nodeType":"YulIf","src":"8399:179:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8598:4:15"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8612:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8620:1:15","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8608:3:15"},"nodeType":"YulFunctionCall","src":"8608:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"8624:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8604:3:15"},"nodeType":"YulFunctionCall","src":"8604:22:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8591:6:15"},"nodeType":"YulFunctionCall","src":"8591:36:15"},"nodeType":"YulExpressionStatement","src":"8591:36:15"}]},"nodeType":"YulCase","src":"8019:618:15","value":{"kind":"number","nodeType":"YulLiteral","src":"8024:1:15","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8654:222:15","statements":[{"nodeType":"YulVariableDeclaration","src":"8668:14:15","value":{"kind":"number","nodeType":"YulLiteral","src":"8681:1:15","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8672:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"8705:67:15","statements":[{"nodeType":"YulAssignment","src":"8723:35:15","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8742:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8747:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8738:3:15"},"nodeType":"YulFunctionCall","src":"8738:19:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8732:5:15"},"nodeType":"YulFunctionCall","src":"8732:26:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8723:5:15"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8698:6:15"},"nodeType":"YulIf","src":"8695:77:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8792:4:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8851:5:15"},{"name":"newLen","nodeType":"YulIdentifier","src":"8858:6:15"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8798:52:15"},"nodeType":"YulFunctionCall","src":"8798:67:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8785:6:15"},"nodeType":"YulFunctionCall","src":"8785:81:15"},"nodeType":"YulExpressionStatement","src":"8785:81:15"}]},"nodeType":"YulCase","src":"8646:230:15","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7999:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8007:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7996:2:15"},"nodeType":"YulFunctionCall","src":"7996:14:15"},"nodeType":"YulSwitch","src":"7989:887:15"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7568:4:15","type":""},{"name":"src","nodeType":"YulTypedName","src":"7574:3:15","type":""}],"src":"7487:1395:15"},{"body":{"nodeType":"YulBlock","src":"8916:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8933:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8936:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8926:6:15"},"nodeType":"YulFunctionCall","src":"8926:88:15"},"nodeType":"YulExpressionStatement","src":"8926:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9030:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9033:4:15","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9023:6:15"},"nodeType":"YulFunctionCall","src":"9023:15:15"},"nodeType":"YulExpressionStatement","src":"9023:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9054:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9057:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9047:6:15"},"nodeType":"YulFunctionCall","src":"9047:15:15"},"nodeType":"YulExpressionStatement","src":"9047:15:15"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"8888:180:15"},{"body":{"nodeType":"YulBlock","src":"9102:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9119:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9122:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9112:6:15"},"nodeType":"YulFunctionCall","src":"9112:88:15"},"nodeType":"YulExpressionStatement","src":"9112:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9216:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9219:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9209:6:15"},"nodeType":"YulFunctionCall","src":"9209:15:15"},"nodeType":"YulExpressionStatement","src":"9209:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9240:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9243:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9233:6:15"},"nodeType":"YulFunctionCall","src":"9233:15:15"},"nodeType":"YulExpressionStatement","src":"9233:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9074:180:15"},{"body":{"nodeType":"YulBlock","src":"9303:190:15","statements":[{"nodeType":"YulAssignment","src":"9313:33:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9340:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9322:17:15"},"nodeType":"YulFunctionCall","src":"9322:24:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9313:5:15"}]},{"body":{"nodeType":"YulBlock","src":"9436:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9438:16:15"},"nodeType":"YulFunctionCall","src":"9438:18:15"},"nodeType":"YulExpressionStatement","src":"9438:18:15"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9361:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"9368:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9358:2:15"},"nodeType":"YulFunctionCall","src":"9358:77:15"},"nodeType":"YulIf","src":"9355:103:15"},{"nodeType":"YulAssignment","src":"9467:20:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9478:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"9485:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9474:3:15"},"nodeType":"YulFunctionCall","src":"9474:13:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9467:3:15"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9289:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9299:3:15","type":""}],"src":"9260:233:15"},{"body":{"nodeType":"YulBlock","src":"9612:34:15","statements":[{"nodeType":"YulAssignment","src":"9622:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"9637:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9622:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9584:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"9589:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9600:11:15","type":""}],"src":"9499:147:15"},{"body":{"nodeType":"YulBlock","src":"9709:87:15","statements":[{"nodeType":"YulAssignment","src":"9719:11:15","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9727:3:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9719:4:15"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9747:1:15","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"9750:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9740:6:15"},"nodeType":"YulFunctionCall","src":"9740:14:15"},"nodeType":"YulExpressionStatement","src":"9740:14:15"},{"nodeType":"YulAssignment","src":"9763:26:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9781:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9784:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9771:9:15"},"nodeType":"YulFunctionCall","src":"9771:18:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9763:4:15"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9696:3:15","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9704:4:15","type":""}],"src":"9652:144:15"},{"body":{"nodeType":"YulBlock","src":"9933:769:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9943:29:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9966:5:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9960:5:15"},"nodeType":"YulFunctionCall","src":"9960:12:15"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"9947:9:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9981:50:15","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10021:9:15"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"9995:25:15"},"nodeType":"YulFunctionCall","src":"9995:36:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9985:6:15","type":""}]},{"nodeType":"YulAssignment","src":"10040:95:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10123:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"10128:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10047:75:15"},"nodeType":"YulFunctionCall","src":"10047:88:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10040:3:15"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"10184:159:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10237:3:15"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10246:9:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10261:4:15","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10257:3:15"},"nodeType":"YulFunctionCall","src":"10257:9:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10242:3:15"},"nodeType":"YulFunctionCall","src":"10242:25:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10230:6:15"},"nodeType":"YulFunctionCall","src":"10230:38:15"},"nodeType":"YulExpressionStatement","src":"10230:38:15"},{"nodeType":"YulAssignment","src":"10281:52:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10292:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10301:6:15"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10323:6:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10316:6:15"},"nodeType":"YulFunctionCall","src":"10316:14:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10309:6:15"},"nodeType":"YulFunctionCall","src":"10309:22:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10297:3:15"},"nodeType":"YulFunctionCall","src":"10297:35:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10288:3:15"},"nodeType":"YulFunctionCall","src":"10288:45:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10281:3:15"}]}]},"nodeType":"YulCase","src":"10177:166:15","value":{"kind":"number","nodeType":"YulLiteral","src":"10182:1:15","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"10359:337:15","statements":[{"nodeType":"YulVariableDeclaration","src":"10404:56:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10454:5:15"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"10419:34:15"},"nodeType":"YulFunctionCall","src":"10419:41:15"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"10408:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10473:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"10482:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10477:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"10540:110:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10569:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"10574:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10565:3:15"},"nodeType":"YulFunctionCall","src":"10565:11:15"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"10584:7:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"10578:5:15"},"nodeType":"YulFunctionCall","src":"10578:14:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10558:6:15"},"nodeType":"YulFunctionCall","src":"10558:35:15"},"nodeType":"YulExpressionStatement","src":"10558:35:15"},{"nodeType":"YulAssignment","src":"10610:26:15","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"10625:7:15"},{"kind":"number","nodeType":"YulLiteral","src":"10634:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10621:3:15"},"nodeType":"YulFunctionCall","src":"10621:15:15"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"10610:7:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10507:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"10510:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10504:2:15"},"nodeType":"YulFunctionCall","src":"10504:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10518:21:15","statements":[{"nodeType":"YulAssignment","src":"10520:17:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10529:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"10532:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10525:3:15"},"nodeType":"YulFunctionCall","src":"10525:12:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10520:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"10500:3:15","statements":[]},"src":"10496:154:15"},{"nodeType":"YulAssignment","src":"10663:23:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10674:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"10679:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10670:3:15"},"nodeType":"YulFunctionCall","src":"10670:16:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10663:3:15"}]}]},"nodeType":"YulCase","src":"10352:344:15","value":{"kind":"number","nodeType":"YulLiteral","src":"10357:1:15","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10155:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10166:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10151:3:15"},"nodeType":"YulFunctionCall","src":"10151:17:15"},"nodeType":"YulSwitch","src":"10144:552:15"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9914:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9921:3:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9929:3:15","type":""}],"src":"9824:878:15"},{"body":{"nodeType":"YulBlock","src":"10843:138:15","statements":[{"nodeType":"YulAssignment","src":"10854:101:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10942:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"10951:3:15"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10861:80:15"},"nodeType":"YulFunctionCall","src":"10861:94:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10854:3:15"}]},{"nodeType":"YulAssignment","src":"10965:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"10972:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10965:3:15"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10822:3:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10828:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10839:3:15","type":""}],"src":"10708:273:15"},{"body":{"nodeType":"YulBlock","src":"11032:32:15","statements":[{"nodeType":"YulAssignment","src":"11042:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"11053:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11042:7:15"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11014:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11024:7:15","type":""}],"src":"10987:77:15"},{"body":{"nodeType":"YulBlock","src":"11135:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11152:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11175:5:15"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"11157:17:15"},"nodeType":"YulFunctionCall","src":"11157:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11145:6:15"},"nodeType":"YulFunctionCall","src":"11145:37:15"},"nodeType":"YulExpressionStatement","src":"11145:37:15"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11123:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11130:3:15","type":""}],"src":"11070:118:15"},{"body":{"nodeType":"YulBlock","src":"11259:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11276:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11299:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11281:17:15"},"nodeType":"YulFunctionCall","src":"11281:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11269:6:15"},"nodeType":"YulFunctionCall","src":"11269:37:15"},"nodeType":"YulExpressionStatement","src":"11269:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11247:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11254:3:15","type":""}],"src":"11194:118:15"},{"body":{"nodeType":"YulBlock","src":"11383:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11400:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11423:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11405:17:15"},"nodeType":"YulFunctionCall","src":"11405:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11393:6:15"},"nodeType":"YulFunctionCall","src":"11393:37:15"},"nodeType":"YulExpressionStatement","src":"11393:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11371:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11378:3:15","type":""}],"src":"11318:118:15"},{"body":{"nodeType":"YulBlock","src":"11652:454:15","statements":[{"nodeType":"YulAssignment","src":"11662:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11674:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11685:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11670:3:15"},"nodeType":"YulFunctionCall","src":"11670:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11662:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11743:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11756:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11767:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11752:3:15"},"nodeType":"YulFunctionCall","src":"11752:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11699:43:15"},"nodeType":"YulFunctionCall","src":"11699:71:15"},"nodeType":"YulExpressionStatement","src":"11699:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11824:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11837:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11848:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11833:3:15"},"nodeType":"YulFunctionCall","src":"11833:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11780:43:15"},"nodeType":"YulFunctionCall","src":"11780:72:15"},"nodeType":"YulExpressionStatement","src":"11780:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11906:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11919:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11930:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11915:3:15"},"nodeType":"YulFunctionCall","src":"11915:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11862:43:15"},"nodeType":"YulFunctionCall","src":"11862:72:15"},"nodeType":"YulExpressionStatement","src":"11862:72:15"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11988:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12001:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12012:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11997:3:15"},"nodeType":"YulFunctionCall","src":"11997:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11944:43:15"},"nodeType":"YulFunctionCall","src":"11944:72:15"},"nodeType":"YulExpressionStatement","src":"11944:72:15"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12070:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12083:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12094:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12079:3:15"},"nodeType":"YulFunctionCall","src":"12079:19:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12026:43:15"},"nodeType":"YulFunctionCall","src":"12026:73:15"},"nodeType":"YulExpressionStatement","src":"12026:73:15"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11592:9:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11604:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11612:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11620:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11628:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11636:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11647:4:15","type":""}],"src":"11442:664:15"},{"body":{"nodeType":"YulBlock","src":"12156:147:15","statements":[{"nodeType":"YulAssignment","src":"12166:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12189:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12171:17:15"},"nodeType":"YulFunctionCall","src":"12171:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12166:1:15"}]},{"nodeType":"YulAssignment","src":"12200:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12223:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12205:17:15"},"nodeType":"YulFunctionCall","src":"12205:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12200:1:15"}]},{"nodeType":"YulAssignment","src":"12234:16:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12245:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"12248:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12241:3:15"},"nodeType":"YulFunctionCall","src":"12241:9:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12234:3:15"}]},{"body":{"nodeType":"YulBlock","src":"12274:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12276:16:15"},"nodeType":"YulFunctionCall","src":"12276:18:15"},"nodeType":"YulExpressionStatement","src":"12276:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12266:1:15"},{"name":"sum","nodeType":"YulIdentifier","src":"12269:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12263:2:15"},"nodeType":"YulFunctionCall","src":"12263:10:15"},"nodeType":"YulIf","src":"12260:36:15"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12143:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"12146:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12152:3:15","type":""}],"src":"12112:191:15"},{"body":{"nodeType":"YulBlock","src":"12407:124:15","statements":[{"nodeType":"YulAssignment","src":"12417:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12429:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12440:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12425:3:15"},"nodeType":"YulFunctionCall","src":"12425:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12417:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12497:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12510:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12521:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12506:3:15"},"nodeType":"YulFunctionCall","src":"12506:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12453:43:15"},"nodeType":"YulFunctionCall","src":"12453:71:15"},"nodeType":"YulExpressionStatement","src":"12453:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12379:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12391:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12402:4:15","type":""}],"src":"12309:222:15"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e06040523480156200001157600080fd5b5060405162001f7738038062001f778339818101604052810190620000379190620004b5565b6040518060400160405280600681526020017f73744e45415200000000000000000000000000000000000000000000000000008152506040518060400160405280600681526020017f73744e454152000000000000000000000000000000000000000000000000000081525060128260009081620000b6919062000751565b508160019081620000c8919062000751565b508060ff1660808160ff16815250504660a08181525050620000ef6200016360201b60201c565b60c0818152505050505060008151905060005b818110156200015a576200014483828151811062000125576200012462000838565b5b602002602001015169152d02c7e14af6800000620001f360201b60201c565b8080620001519062000896565b91505062000102565b50505062000a9d565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405162000197919062000992565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001620001d8959493929190620009e8565b60405160208183030381529060405280519060200120905090565b806002600082825462000207919062000a45565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002bb919062000a80565b60405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200032b82620002e0565b810181811067ffffffffffffffff821117156200034d576200034c620002f1565b5b80604052505050565b600062000362620002c7565b905062000370828262000320565b919050565b600067ffffffffffffffff821115620003935762000392620002f1565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003d682620003a9565b9050919050565b620003e881620003c9565b8114620003f457600080fd5b50565b6000815190506200040881620003dd565b92915050565b6000620004256200041f8462000375565b62000356565b905080838252602082019050602084028301858111156200044b576200044a620003a4565b5b835b81811015620004785780620004638882620003f7565b8452602084019350506020810190506200044d565b5050509392505050565b600082601f8301126200049a5762000499620002db565b5b8151620004ac8482602086016200040e565b91505092915050565b600060208284031215620004ce57620004cd620002d1565b5b600082015167ffffffffffffffff811115620004ef57620004ee620002d6565b5b620004fd8482850162000482565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200055957607f821691505b6020821081036200056f576200056e62000511565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005d97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200059a565b620005e586836200059a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620006326200062c6200062684620005fd565b62000607565b620005fd565b9050919050565b6000819050919050565b6200064e8362000611565b620006666200065d8262000639565b848454620005a7565b825550505050565b600090565b6200067d6200066e565b6200068a81848462000643565b505050565b5b81811015620006b257620006a660008262000673565b60018101905062000690565b5050565b601f8211156200070157620006cb8162000575565b620006d6846200058a565b81016020851015620006e6578190505b620006fe620006f5856200058a565b8301826200068f565b50505b505050565b600082821c905092915050565b6000620007266000198460080262000706565b1980831691505092915050565b600062000741838362000713565b9150826002028217905092915050565b6200075c8262000506565b67ffffffffffffffff811115620007785762000777620002f1565b5b62000784825462000540565b62000791828285620006b6565b600060209050601f831160018114620007c95760008415620007b4578287015190505b620007c0858262000733565b86555062000830565b601f198416620007d98662000575565b60005b828110156200080357848901518255600182019150602085019450602081019050620007dc565b868310156200082357848901516200081f601f89168262000713565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620008a382620005fd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620008d857620008d762000867565b5b600182019050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154620009128162000540565b6200091e8186620008e3565b945060018216600081146200093c5760018114620009525762000989565b60ff198316865281151582028601935062000989565b6200095d85620008ee565b60005b83811015620009815781548189015260018201915060208101905062000960565b838801955050505b50505092915050565b6000620009a0828462000903565b915081905092915050565b6000819050919050565b620009c081620009ab565b82525050565b620009d181620005fd565b82525050565b620009e281620003c9565b82525050565b600060a082019050620009ff6000830188620009b5565b62000a0e6020830187620009b5565b62000a1d6040830186620009b5565b62000a2c6060830185620009c6565b62000a3b6080830184620009d7565b9695505050505050565b600062000a5282620005fd565b915062000a5f83620005fd565b925082820190508082111562000a7a5762000a7962000867565b5b92915050565b600060208201905062000a976000830184620009c6565b92915050565b60805160a05160c0516114aa62000acd60003960006106b7015260006106830152600061065d01526114aa6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101915780637ecebe00146101c157806395d89b41146101f1578063a9059cbb1461020f578063d505accf1461023f578063dd62ed3e1461025b576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633644e51514610173575b600080fd5b6100c161028b565b6040516100ce9190610ce8565b60405180910390f35b6100f160048036038101906100ec9190610da3565b610319565b6040516100fe9190610dfe565b60405180910390f35b61010f61040b565b60405161011c9190610e28565b60405180910390f35b61013f600480360381019061013a9190610e43565b610411565b60405161014c9190610dfe565b60405180910390f35b61015d61065b565b60405161016a9190610eb2565b60405180910390f35b61017b61067f565b6040516101889190610ee6565b60405180910390f35b6101ab60048036038101906101a69190610f01565b6106dc565b6040516101b89190610e28565b60405180910390f35b6101db60048036038101906101d69190610f01565b6106f4565b6040516101e89190610e28565b60405180910390f35b6101f961070c565b6040516102069190610ce8565b60405180910390f35b61022960048036038101906102249190610da3565b61079a565b6040516102369190610dfe565b60405180910390f35b61025960048036038101906102549190610f86565b6108ae565b005b61027560048036038101906102709190611028565b610ba7565b6040516102829190610e28565b60405180910390f35b6000805461029890611097565b80601f01602080910402602001604051908101604052809291908181526020018280546102c490611097565b80156103115780601f106102e657610100808354040283529160200191610311565b820191906000526020600020905b8154815290600101906020018083116102f457829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103f99190610e28565b60405180910390a36001905092915050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105475782816104c691906110f7565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461059691906110f7565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516106479190610e28565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146106b5576106b0610bcc565b6106d7565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6001805461071990611097565b80601f016020809104026020016040519081016040528092919081815260200182805461074590611097565b80156107925780601f1061076757610100808354040283529160200191610792565b820191906000526020600020905b81548152906001019060200180831161077557829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107eb91906110f7565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089c9190610e28565b60405180910390a36001905092915050565b428410156108f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e890611177565b60405180910390fd5b600060016108fd61067f565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b604051602001610985969594939291906111a6565b604051602081830303815290604052805190602001206040516020016109ac92919061127f565b60405160208183030381529060405280519060200120858585604051600081526020016040526040516109e294939291906112b6565b6020604051602081039080840390855afa158015610a04573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610a7857508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae90611347565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610b969190610e28565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610bfe919061140a565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001610c3d959493929190611421565b60405160208183030381529060405280519060200120905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c92578082015181840152602081019050610c77565b60008484015250505050565b6000601f19601f8301169050919050565b6000610cba82610c58565b610cc48185610c63565b9350610cd4818560208601610c74565b610cdd81610c9e565b840191505092915050565b60006020820190508181036000830152610d028184610caf565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d3a82610d0f565b9050919050565b610d4a81610d2f565b8114610d5557600080fd5b50565b600081359050610d6781610d41565b92915050565b6000819050919050565b610d8081610d6d565b8114610d8b57600080fd5b50565b600081359050610d9d81610d77565b92915050565b60008060408385031215610dba57610db9610d0a565b5b6000610dc885828601610d58565b9250506020610dd985828601610d8e565b9150509250929050565b60008115159050919050565b610df881610de3565b82525050565b6000602082019050610e136000830184610def565b92915050565b610e2281610d6d565b82525050565b6000602082019050610e3d6000830184610e19565b92915050565b600080600060608486031215610e5c57610e5b610d0a565b5b6000610e6a86828701610d58565b9350506020610e7b86828701610d58565b9250506040610e8c86828701610d8e565b9150509250925092565b600060ff82169050919050565b610eac81610e96565b82525050565b6000602082019050610ec76000830184610ea3565b92915050565b6000819050919050565b610ee081610ecd565b82525050565b6000602082019050610efb6000830184610ed7565b92915050565b600060208284031215610f1757610f16610d0a565b5b6000610f2584828501610d58565b91505092915050565b610f3781610e96565b8114610f4257600080fd5b50565b600081359050610f5481610f2e565b92915050565b610f6381610ecd565b8114610f6e57600080fd5b50565b600081359050610f8081610f5a565b92915050565b600080600080600080600060e0888a031215610fa557610fa4610d0a565b5b6000610fb38a828b01610d58565b9750506020610fc48a828b01610d58565b9650506040610fd58a828b01610d8e565b9550506060610fe68a828b01610d8e565b9450506080610ff78a828b01610f45565b93505060a06110088a828b01610f71565b92505060c06110198a828b01610f71565b91505092959891949750929550565b6000806040838503121561103f5761103e610d0a565b5b600061104d85828601610d58565b925050602061105e85828601610d58565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110af57607f821691505b6020821081036110c2576110c1611068565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061110282610d6d565b915061110d83610d6d565b9250828203905081811115611125576111246110c8565b5b92915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b6000611161601783610c63565b915061116c8261112b565b602082019050919050565b6000602082019050818103600083015261119081611154565b9050919050565b6111a081610d2f565b82525050565b600060c0820190506111bb6000830189610ed7565b6111c86020830188611197565b6111d56040830187611197565b6111e26060830186610e19565b6111ef6080830185610e19565b6111fc60a0830184610e19565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611248600283611207565b915061125382611212565b600282019050919050565b6000819050919050565b61127961127482610ecd565b61125e565b82525050565b600061128a8261123b565b91506112968285611268565b6020820191506112a68284611268565b6020820191508190509392505050565b60006080820190506112cb6000830187610ed7565b6112d86020830186610ea3565b6112e56040830185610ed7565b6112f26060830184610ed7565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000611331600e83610c63565b915061133c826112fb565b602082019050919050565b6000602082019050818103600083015261136081611324565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461139481611097565b61139e8186611367565b945060018216600081146113b957600181146113ce57611401565b60ff1983168652811515820286019350611401565b6113d785611372565b60005b838110156113f9578154818901526001820191506020810190506113da565b838801955050505b50505092915050565b60006114168284611387565b915081905092915050565b600060a0820190506114366000830188610ed7565b6114436020830187610ed7565b6114506040830186610ed7565b61145d6060830185610e19565b61146a6080830184611197565b969550505050505056fea2646970667358221220ecffee7f41c9b554d8b1fb39574340395d3c612ef495e99660dfb6c1df8b95f564736f6c63430008110033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F77 CODESIZE SUB DUP1 PUSH3 0x1F77 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x73744E4541520000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x73744E4541520000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x12 DUP3 PUSH1 0x0 SWAP1 DUP2 PUSH3 0xB6 SWAP2 SWAP1 PUSH3 0x751 JUMP JUMPDEST POP DUP2 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC8 SWAP2 SWAP1 PUSH3 0x751 JUMP JUMPDEST POP DUP1 PUSH1 0xFF AND PUSH1 0x80 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0xEF PUSH3 0x163 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP POP POP POP PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x15A JUMPI PUSH3 0x144 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x125 JUMPI PUSH3 0x124 PUSH3 0x838 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH10 0x152D02C7E14AF6800000 PUSH3 0x1F3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 DUP1 PUSH3 0x151 SWAP1 PUSH3 0x896 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x102 JUMP JUMPDEST POP POP POP PUSH3 0xA9D JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH3 0x197 SWAP2 SWAP1 PUSH3 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1D8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x207 SWAP2 SWAP1 PUSH3 0xA45 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x2BB SWAP2 SWAP1 PUSH3 0xA80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x32B DUP3 PUSH3 0x2E0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x34D JUMPI PUSH3 0x34C PUSH3 0x2F1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x362 PUSH3 0x2C7 JUMP JUMPDEST SWAP1 POP PUSH3 0x370 DUP3 DUP3 PUSH3 0x320 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x393 JUMPI PUSH3 0x392 PUSH3 0x2F1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3D6 DUP3 PUSH3 0x3A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3E8 DUP2 PUSH3 0x3C9 JUMP JUMPDEST DUP2 EQ PUSH3 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x408 DUP2 PUSH3 0x3DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x425 PUSH3 0x41F DUP5 PUSH3 0x375 JUMP JUMPDEST PUSH3 0x356 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x44B JUMPI PUSH3 0x44A PUSH3 0x3A4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x478 JUMPI DUP1 PUSH3 0x463 DUP9 DUP3 PUSH3 0x3F7 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x44D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x49A JUMPI PUSH3 0x499 PUSH3 0x2DB JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x4AC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x40E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x4CE JUMPI PUSH3 0x4CD PUSH3 0x2D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4EF JUMPI PUSH3 0x4EE PUSH3 0x2D6 JUMP JUMPDEST JUMPDEST PUSH3 0x4FD DUP5 DUP3 DUP6 ADD PUSH3 0x482 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x559 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x56F JUMPI PUSH3 0x56E PUSH3 0x511 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x5D9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x59A JUMP JUMPDEST PUSH3 0x5E5 DUP7 DUP4 PUSH3 0x59A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x632 PUSH3 0x62C PUSH3 0x626 DUP5 PUSH3 0x5FD JUMP JUMPDEST PUSH3 0x607 JUMP JUMPDEST PUSH3 0x5FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x64E DUP4 PUSH3 0x611 JUMP JUMPDEST PUSH3 0x666 PUSH3 0x65D DUP3 PUSH3 0x639 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x5A7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x67D PUSH3 0x66E JUMP JUMPDEST PUSH3 0x68A DUP2 DUP5 DUP5 PUSH3 0x643 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x6B2 JUMPI PUSH3 0x6A6 PUSH1 0x0 DUP3 PUSH3 0x673 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x690 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x701 JUMPI PUSH3 0x6CB DUP2 PUSH3 0x575 JUMP JUMPDEST PUSH3 0x6D6 DUP5 PUSH3 0x58A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x6E6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x6FE PUSH3 0x6F5 DUP6 PUSH3 0x58A JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x68F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x726 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x706 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x741 DUP4 DUP4 PUSH3 0x713 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x75C DUP3 PUSH3 0x506 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x778 JUMPI PUSH3 0x777 PUSH3 0x2F1 JUMP JUMPDEST JUMPDEST PUSH3 0x784 DUP3 SLOAD PUSH3 0x540 JUMP JUMPDEST PUSH3 0x791 DUP3 DUP3 DUP6 PUSH3 0x6B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x7C9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x7B4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x7C0 DUP6 DUP3 PUSH3 0x733 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x830 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x7D9 DUP7 PUSH3 0x575 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x803 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x7DC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x823 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x81F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x713 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x8A3 DUP3 PUSH3 0x5FD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x8D8 JUMPI PUSH3 0x8D7 PUSH3 0x867 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH3 0x912 DUP2 PUSH3 0x540 JUMP JUMPDEST PUSH3 0x91E DUP2 DUP7 PUSH3 0x8E3 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH3 0x93C JUMPI PUSH1 0x1 DUP2 EQ PUSH3 0x952 JUMPI PUSH3 0x989 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH3 0x989 JUMP JUMPDEST PUSH3 0x95D DUP6 PUSH3 0x8EE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x981 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x960 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9A0 DUP3 DUP5 PUSH3 0x903 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x9C0 DUP2 PUSH3 0x9AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x9D1 DUP2 PUSH3 0x5FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x9E2 DUP2 PUSH3 0x3C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x9FF PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x9B5 JUMP JUMPDEST PUSH3 0xA0E PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x9B5 JUMP JUMPDEST PUSH3 0xA1D PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x9B5 JUMP JUMPDEST PUSH3 0xA2C PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x9C6 JUMP JUMPDEST PUSH3 0xA3B PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x9D7 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA52 DUP3 PUSH3 0x5FD JUMP JUMPDEST SWAP2 POP PUSH3 0xA5F DUP4 PUSH3 0x5FD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xA7A JUMPI PUSH3 0xA79 PUSH3 0x867 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA97 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x9C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x14AA PUSH3 0xACD PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x6B7 ADD MSTORE PUSH1 0x0 PUSH2 0x683 ADD MSTORE PUSH1 0x0 PUSH2 0x65D ADD MSTORE PUSH2 0x14AA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x25B JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x298 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C4 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x311 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x311 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x547 JUMPI DUP3 DUP2 PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0x647 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0x6B5 JUMPI PUSH2 0x6B0 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x719 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x745 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x792 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x767 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x792 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x775 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x89C SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E8 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x8FD PUSH2 0x67F JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP11 DUP11 DUP11 PUSH1 0x5 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x985 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9AC SWAP3 SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x9E2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xAB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAE SWAP1 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x140A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC3D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC92 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP3 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xCC4 DUP2 DUP6 PUSH2 0xC63 JUMP JUMPDEST SWAP4 POP PUSH2 0xCD4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC74 JUMP JUMPDEST PUSH2 0xCDD DUP2 PUSH2 0xC9E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD02 DUP2 DUP5 PUSH2 0xCAF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3A DUP3 PUSH2 0xD0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4A DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP2 EQ PUSH2 0xD55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD67 DUP2 PUSH2 0xD41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD80 DUP2 PUSH2 0xD6D JUMP JUMPDEST DUP2 EQ PUSH2 0xD8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9D DUP2 PUSH2 0xD77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDBA JUMPI PUSH2 0xDB9 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDC8 DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDD9 DUP6 DUP3 DUP7 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF8 DUP2 PUSH2 0xDE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE22 DUP2 PUSH2 0xD6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE3D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH2 0xE5B PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE6A DUP7 DUP3 DUP8 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE7B DUP7 DUP3 DUP8 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE8C DUP7 DUP3 DUP8 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAC DUP2 PUSH2 0xE96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE0 DUP2 PUSH2 0xECD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEFB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xED7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF17 JUMPI PUSH2 0xF16 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF25 DUP5 DUP3 DUP6 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF37 DUP2 PUSH2 0xE96 JUMP JUMPDEST DUP2 EQ PUSH2 0xF42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF54 DUP2 PUSH2 0xF2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF63 DUP2 PUSH2 0xECD JUMP JUMPDEST DUP2 EQ PUSH2 0xF6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF80 DUP2 PUSH2 0xF5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xFA5 JUMPI PUSH2 0xFA4 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB3 DUP11 DUP3 DUP12 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xFC4 DUP11 DUP3 DUP12 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0xFD5 DUP11 DUP3 DUP12 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xFE6 DUP11 DUP3 DUP12 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xFF7 DUP11 DUP3 DUP12 ADD PUSH2 0xF45 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1008 DUP11 DUP3 DUP12 ADD PUSH2 0xF71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1019 DUP11 DUP3 DUP12 ADD PUSH2 0xF71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x103F JUMPI PUSH2 0x103E PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x104D DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x105E DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10AF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C2 JUMPI PUSH2 0x10C1 PUSH2 0x1068 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1102 DUP3 PUSH2 0xD6D JUMP JUMPDEST SWAP2 POP PUSH2 0x110D DUP4 PUSH2 0xD6D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1125 JUMPI PUSH2 0x1124 PUSH2 0x10C8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5045524D49545F444541444C494E455F45585049524544000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 PUSH1 0x17 DUP4 PUSH2 0xC63 JUMP JUMPDEST SWAP2 POP PUSH2 0x116C DUP3 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1190 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A0 DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x11BB PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x11C8 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x11D5 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x11E2 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x11EF PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x11FC PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xE19 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1248 PUSH1 0x2 DUP4 PUSH2 0x1207 JUMP JUMPDEST SWAP2 POP PUSH2 0x1253 DUP3 PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1279 PUSH2 0x1274 DUP3 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x125E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128A DUP3 PUSH2 0x123B JUMP JUMPDEST SWAP2 POP PUSH2 0x1296 DUP3 DUP6 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x12A6 DUP3 DUP5 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x12CB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x12D8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x12E5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x12F2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xED7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x494E56414C49445F5349474E4552000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1331 PUSH1 0xE DUP4 PUSH2 0xC63 JUMP JUMPDEST SWAP2 POP PUSH2 0x133C DUP3 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1360 DUP2 PUSH2 0x1324 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1394 DUP2 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x139E DUP2 DUP7 PUSH2 0x1367 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x13B9 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x13CE JUMPI PUSH2 0x1401 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x1401 JUMP JUMPDEST PUSH2 0x13D7 DUP6 PUSH2 0x1372 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13F9 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13DA JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1416 DUP3 DUP5 PUSH2 0x1387 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1436 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x1443 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x1450 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x145D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x146A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1197 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SELFDESTRUCT 0xEE PUSH32 0x41C9B554D8B1FB39574340395D3C612EF495E99660DFB6C1DF8B95F564736F6C PUSH4 0x43000811 STOP CALLER ","sourceMap":"102:271:14:-:0;;;133:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1981:292:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;198:2:14;2101:5:10;2094:4;:12;;;;;;:::i;:::-;;2125:7;2116:6;:16;;;;;;:::i;:::-;;2153:9;2142:20;;;;;;;;;;2192:13;2173:32;;;;;;2242:24;:22;;;:24;;:::i;:::-;2215:51;;;;;;1981:292;;;212:21:14::1;236:8;:15;212:39;;267:9;262:103;286:13;282:1;:17;262:103;;;320:34;326:8;335:1;326:11;;;;;;;;:::i;:::-;;;;;;;;339:14;320:5;;;:34;;:::i;:::-;301:3;;;;;:::i;:::-;;;;262:103;;;;202:169;133:238:::0;102:271;;5510:446:10;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;5833:14;5869:13;5912:4;5640:295;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;6150:325::-;6235:6;6220:11;;:21;;;;;;;:::i;:::-;;;;;;;;6404:6;6387:9;:13;6397:2;6387:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;6457:2;6436:32;;6453:1;6436:32;;;6461:6;6436:32;;;;;;:::i;:::-;;;;;;;;6150:325;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:126;1650:7;1690:42;1683:5;1679:54;1668:65;;1613:126;;;:::o;1745:96::-;1782:7;1811:24;1829:5;1811:24;:::i;:::-;1800:35;;1745:96;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:143::-;2032:5;2063:6;2057:13;2048:22;;2079:33;2106:5;2079:33;:::i;:::-;1975:143;;;;:::o;2141:732::-;2248:5;2273:81;2289:64;2346:6;2289:64;:::i;:::-;2273:81;:::i;:::-;2264:90;;2374:5;2403:6;2396:5;2389:21;2437:4;2430:5;2426:16;2419:23;;2490:4;2482:6;2478:17;2470:6;2466:30;2519:3;2511:6;2508:15;2505:122;;;2538:79;;:::i;:::-;2505:122;2653:6;2636:231;2670:6;2665:3;2662:15;2636:231;;;2745:3;2774:48;2818:3;2806:10;2774:48;:::i;:::-;2769:3;2762:61;2852:4;2847:3;2843:14;2836:21;;2712:155;2696:4;2691:3;2687:14;2680:21;;2636:231;;;2640:21;2254:619;;2141:732;;;;;:::o;2896:385::-;2978:5;3027:3;3020:4;3012:6;3008:17;3004:27;2994:122;;3035:79;;:::i;:::-;2994:122;3145:6;3139:13;3170:105;3271:3;3263:6;3256:4;3248:6;3244:17;3170:105;:::i;:::-;3161:114;;2984:297;2896:385;;;;:::o;3287:554::-;3382:6;3431:2;3419:9;3410:7;3406:23;3402:32;3399:119;;;3437:79;;:::i;:::-;3399:119;3578:1;3567:9;3563:17;3557:24;3608:18;3600:6;3597:30;3594:117;;;3630:79;;:::i;:::-;3594:117;3735:89;3816:7;3807:6;3796:9;3792:22;3735:89;:::i;:::-;3725:99;;3528:306;3287:554;;;;:::o;3847:99::-;3899:6;3933:5;3927:12;3917:22;;3847:99;;;:::o;3952:180::-;4000:77;3997:1;3990:88;4097:4;4094:1;4087:15;4121:4;4118:1;4111:15;4138:320;4182:6;4219:1;4213:4;4209:12;4199:22;;4266:1;4260:4;4256:12;4287:18;4277:81;;4343:4;4335:6;4331:17;4321:27;;4277:81;4405:2;4397:6;4394:14;4374:18;4371:38;4368:84;;4424:18;;:::i;:::-;4368:84;4189:269;4138:320;;;:::o;4464:141::-;4513:4;4536:3;4528:11;;4559:3;4556:1;4549:14;4593:4;4590:1;4580:18;4572:26;;4464:141;;;:::o;4611:93::-;4648:6;4695:2;4690;4683:5;4679:14;4675:23;4665:33;;4611:93;;;:::o;4710:107::-;4754:8;4804:5;4798:4;4794:16;4773:37;;4710:107;;;;:::o;4823:393::-;4892:6;4942:1;4930:10;4926:18;4965:97;4995:66;4984:9;4965:97;:::i;:::-;5083:39;5113:8;5102:9;5083:39;:::i;:::-;5071:51;;5155:4;5151:9;5144:5;5140:21;5131:30;;5204:4;5194:8;5190:19;5183:5;5180:30;5170:40;;4899:317;;4823:393;;;;;:::o;5222:77::-;5259:7;5288:5;5277:16;;5222:77;;;:::o;5305:60::-;5333:3;5354:5;5347:12;;5305:60;;;:::o;5371:142::-;5421:9;5454:53;5472:34;5481:24;5499:5;5481:24;:::i;:::-;5472:34;:::i;:::-;5454:53;:::i;:::-;5441:66;;5371:142;;;:::o;5519:75::-;5562:3;5583:5;5576:12;;5519:75;;;:::o;5600:269::-;5710:39;5741:7;5710:39;:::i;:::-;5771:91;5820:41;5844:16;5820:41;:::i;:::-;5812:6;5805:4;5799:11;5771:91;:::i;:::-;5765:4;5758:105;5676:193;5600:269;;;:::o;5875:73::-;5920:3;5875:73;:::o;5954:189::-;6031:32;;:::i;:::-;6072:65;6130:6;6122;6116:4;6072:65;:::i;:::-;6007:136;5954:189;;:::o;6149:186::-;6209:120;6226:3;6219:5;6216:14;6209:120;;;6280:39;6317:1;6310:5;6280:39;:::i;:::-;6253:1;6246:5;6242:13;6233:22;;6209:120;;;6149:186;;:::o;6341:543::-;6442:2;6437:3;6434:11;6431:446;;;6476:38;6508:5;6476:38;:::i;:::-;6560:29;6578:10;6560:29;:::i;:::-;6550:8;6546:44;6743:2;6731:10;6728:18;6725:49;;;6764:8;6749:23;;6725:49;6787:80;6843:22;6861:3;6843:22;:::i;:::-;6833:8;6829:37;6816:11;6787:80;:::i;:::-;6446:431;;6431:446;6341:543;;;:::o;6890:117::-;6944:8;6994:5;6988:4;6984:16;6963:37;;6890:117;;;;:::o;7013:169::-;7057:6;7090:51;7138:1;7134:6;7126:5;7123:1;7119:13;7090:51;:::i;:::-;7086:56;7171:4;7165;7161:15;7151:25;;7064:118;7013:169;;;;:::o;7187:295::-;7263:4;7409:29;7434:3;7428:4;7409:29;:::i;:::-;7401:37;;7471:3;7468:1;7464:11;7458:4;7455:21;7447:29;;7187:295;;;;:::o;7487:1395::-;7604:37;7637:3;7604:37;:::i;:::-;7706:18;7698:6;7695:30;7692:56;;;7728:18;;:::i;:::-;7692:56;7772:38;7804:4;7798:11;7772:38;:::i;:::-;7857:67;7917:6;7909;7903:4;7857:67;:::i;:::-;7951:1;7975:4;7962:17;;8007:2;7999:6;7996:14;8024:1;8019:618;;;;8681:1;8698:6;8695:77;;;8747:9;8742:3;8738:19;8732:26;8723:35;;8695:77;8798:67;8858:6;8851:5;8798:67;:::i;:::-;8792:4;8785:81;8654:222;7989:887;;8019:618;8071:4;8067:9;8059:6;8055:22;8105:37;8137:4;8105:37;:::i;:::-;8164:1;8178:208;8192:7;8189:1;8186:14;8178:208;;;8271:9;8266:3;8262:19;8256:26;8248:6;8241:42;8322:1;8314:6;8310:14;8300:24;;8369:2;8358:9;8354:18;8341:31;;8215:4;8212:1;8208:12;8203:17;;8178:208;;;8414:6;8405:7;8402:19;8399:179;;;8472:9;8467:3;8463:19;8457:26;8515:48;8557:4;8549:6;8545:17;8534:9;8515:48;:::i;:::-;8507:6;8500:64;8422:156;8399:179;8624:1;8620;8612:6;8608:14;8604:22;8598:4;8591:36;8026:611;;;7989:887;;7579:1303;;;7487:1395;;:::o;8888:180::-;8936:77;8933:1;8926:88;9033:4;9030:1;9023:15;9057:4;9054:1;9047:15;9074:180;9122:77;9119:1;9112:88;9219:4;9216:1;9209:15;9243:4;9240:1;9233:15;9260:233;9299:3;9322:24;9340:5;9322:24;:::i;:::-;9313:33;;9368:66;9361:5;9358:77;9355:103;;9438:18;;:::i;:::-;9355:103;9485:1;9478:5;9474:13;9467:20;;9260:233;;;:::o;9499:147::-;9600:11;9637:3;9622:18;;9499:147;;;;:::o;9652:144::-;9704:4;9727:3;9719:11;;9750:3;9747:1;9740:14;9784:4;9781:1;9771:18;9763:26;;9652:144;;;:::o;9824:878::-;9929:3;9966:5;9960:12;9995:36;10021:9;9995:36;:::i;:::-;10047:88;10128:6;10123:3;10047:88;:::i;:::-;10040:95;;10166:1;10155:9;10151:17;10182:1;10177:166;;;;10357:1;10352:344;;;;10144:552;;10177:166;10261:4;10257:9;10246;10242:25;10237:3;10230:38;10323:6;10316:14;10309:22;10301:6;10297:35;10292:3;10288:45;10281:52;;10177:166;;10352:344;10419:41;10454:5;10419:41;:::i;:::-;10482:1;10496:154;10510:6;10507:1;10504:13;10496:154;;;10584:7;10578:14;10574:1;10569:3;10565:11;10558:35;10634:1;10625:7;10621:15;10610:26;;10532:4;10529:1;10525:12;10520:17;;10496:154;;;10679:6;10674:3;10670:16;10663:23;;10359:337;;10144:552;;9933:769;;9824:878;;;;:::o;10708:273::-;10839:3;10861:94;10951:3;10942:6;10861:94;:::i;:::-;10854:101;;10972:3;10965:10;;10708:273;;;;:::o;10987:77::-;11024:7;11053:5;11042:16;;10987:77;;;:::o;11070:118::-;11157:24;11175:5;11157:24;:::i;:::-;11152:3;11145:37;11070:118;;:::o;11194:::-;11281:24;11299:5;11281:24;:::i;:::-;11276:3;11269:37;11194:118;;:::o;11318:::-;11405:24;11423:5;11405:24;:::i;:::-;11400:3;11393:37;11318:118;;:::o;11442:664::-;11647:4;11685:3;11674:9;11670:19;11662:27;;11699:71;11767:1;11756:9;11752:17;11743:6;11699:71;:::i;:::-;11780:72;11848:2;11837:9;11833:18;11824:6;11780:72;:::i;:::-;11862;11930:2;11919:9;11915:18;11906:6;11862:72;:::i;:::-;11944;12012:2;12001:9;11997:18;11988:6;11944:72;:::i;:::-;12026:73;12094:3;12083:9;12079:19;12070:6;12026:73;:::i;:::-;11442:664;;;;;;;;:::o;12112:191::-;12152:3;12171:20;12189:1;12171:20;:::i;:::-;12166:25;;12205:20;12223:1;12205:20;:::i;:::-;12200:25;;12248:1;12245;12241:9;12234:16;;12269:3;12266:1;12263:10;12260:36;;;12276:18;;:::i;:::-;12260:36;12112:191;;;;:::o;12309:222::-;12402:4;12440:2;12429:9;12425:18;12417:26;;12453:71;12521:1;12510:9;12506:17;12497:6;12453:71;:::i;:::-;12309:222;;;;:::o;102:271:14:-;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_3890":{"entryPoint":1663,"id":3890,"parameterSlots":0,"returnSlots":1},"@allowance_3626":{"entryPoint":2983,"id":3626,"parameterSlots":0,"returnSlots":0},"@approve_3694":{"entryPoint":793,"id":3694,"parameterSlots":2,"returnSlots":1},"@balanceOf_3620":{"entryPoint":1756,"id":3620,"parameterSlots":0,"returnSlots":0},"@computeDomainSeparator_3920":{"entryPoint":3020,"id":3920,"parameterSlots":0,"returnSlots":1},"@decimals_3614":{"entryPoint":1627,"id":3614,"parameterSlots":0,"returnSlots":0},"@name_3610":{"entryPoint":651,"id":3610,"parameterSlots":0,"returnSlots":0},"@nonces_3634":{"entryPoint":1780,"id":3634,"parameterSlots":0,"returnSlots":0},"@permit_3875":{"entryPoint":2222,"id":3875,"parameterSlots":7,"returnSlots":0},"@symbol_3612":{"entryPoint":1804,"id":3612,"parameterSlots":0,"returnSlots":0},"@totalSupply_3616":{"entryPoint":1035,"id":3616,"parameterSlots":0,"returnSlots":0},"@transferFrom_3788":{"entryPoint":1041,"id":3788,"parameterSlots":3,"returnSlots":1},"@transfer_3727":{"entryPoint":1946,"id":3727,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3416,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":3953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3470,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":3909,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4136,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3651,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":3974,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3491,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4503,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3567,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3799,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":4712,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3247,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4667,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c_to_t_string_memory_ptr_fromStack":{"entryPoint":4900,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e_to_t_string_memory_ptr_fromStack":{"entryPoint":4436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3609,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3747,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5130,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":4735,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3582,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":3814,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4518,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":5153,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":4790,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3304,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4935,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4471,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3624,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3762,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":4978,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3160,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4967,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3171,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4615,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4343,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3375,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3555,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3789,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3343,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3437,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3734,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3188,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4247,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":4702,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4296,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4200,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3338,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3230,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541":{"entryPoint":4626,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c":{"entryPoint":4859,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e":{"entryPoint":4395,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3393,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":3930,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3447,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":3886,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15995:15","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:15","statements":[{"nodeType":"YulAssignment","src":"77:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:15"},"nodeType":"YulFunctionCall","src":"87:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:15","type":""}],"src":"7:99:15"},{"body":{"nodeType":"YulBlock","src":"208:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:15"},"nodeType":"YulFunctionCall","src":"218:19:15"},"nodeType":"YulExpressionStatement","src":"218:19:15"},{"nodeType":"YulAssignment","src":"246:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:15"},"nodeType":"YulFunctionCall","src":"261:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:15","type":""}],"src":"112:169:15"},{"body":{"nodeType":"YulBlock","src":"349:184:15","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:15"},"nodeType":"YulFunctionCall","src":"449:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:15"},"nodeType":"YulFunctionCall","src":"468:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:15"},"nodeType":"YulFunctionCall","src":"462:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:15"},"nodeType":"YulFunctionCall","src":"442:39:15"},"nodeType":"YulExpressionStatement","src":"442:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:15"},"nodeType":"YulFunctionCall","src":"386:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:15","statements":[{"nodeType":"YulAssignment","src":"402:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:15"},"nodeType":"YulFunctionCall","src":"407:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:15","statements":[]},"src":"378:113:15"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:15"},"nodeType":"YulFunctionCall","src":"507:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:15"},"nodeType":"YulFunctionCall","src":"500:27:15"},"nodeType":"YulExpressionStatement","src":"500:27:15"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:15","type":""}],"src":"287:246:15"},{"body":{"nodeType":"YulBlock","src":"587:54:15","statements":[{"nodeType":"YulAssignment","src":"597:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:15"},"nodeType":"YulFunctionCall","src":"611:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:15"},"nodeType":"YulFunctionCall","src":"627:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:15"},"nodeType":"YulFunctionCall","src":"607:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:15","type":""}],"src":"539:102:15"},{"body":{"nodeType":"YulBlock","src":"739:285:15","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:15"},"nodeType":"YulFunctionCall","src":"763:39:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:15","type":""}]},{"nodeType":"YulAssignment","src":"811:78:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:15"},"nodeType":"YulFunctionCall","src":"818:71:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:15"},"nodeType":"YulFunctionCall","src":"933:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:15"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:15"},"nodeType":"YulFunctionCall","src":"898:65:15"},"nodeType":"YulExpressionStatement","src":"898:65:15"},{"nodeType":"YulAssignment","src":"972:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:15"},"nodeType":"YulFunctionCall","src":"988:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:15"},"nodeType":"YulFunctionCall","src":"979:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:15","type":""}],"src":"647:377:15"},{"body":{"nodeType":"YulBlock","src":"1148:195:15","statements":[{"nodeType":"YulAssignment","src":"1158:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:15"},"nodeType":"YulFunctionCall","src":"1166:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:15"},"nodeType":"YulFunctionCall","src":"1201:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:15"},"nodeType":"YulFunctionCall","src":"1220:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:15"},"nodeType":"YulFunctionCall","src":"1194:47:15"},"nodeType":"YulExpressionStatement","src":"1194:47:15"},{"nodeType":"YulAssignment","src":"1250:86:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:15"},"nodeType":"YulFunctionCall","src":"1258:78:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:15","type":""}],"src":"1030:313:15"},{"body":{"nodeType":"YulBlock","src":"1389:35:15","statements":[{"nodeType":"YulAssignment","src":"1399:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:15"},"nodeType":"YulFunctionCall","src":"1409:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:15","type":""}],"src":"1349:75:15"},{"body":{"nodeType":"YulBlock","src":"1519:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:15"},"nodeType":"YulFunctionCall","src":"1529:12:15"},"nodeType":"YulExpressionStatement","src":"1529:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:15"},{"body":{"nodeType":"YulBlock","src":"1642:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:15"},"nodeType":"YulFunctionCall","src":"1652:12:15"},"nodeType":"YulExpressionStatement","src":"1652:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:15"},{"body":{"nodeType":"YulBlock","src":"1721:81:15","statements":[{"nodeType":"YulAssignment","src":"1731:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:15"},"nodeType":"YulFunctionCall","src":"1742:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:15","type":""}],"src":"1676:126:15"},{"body":{"nodeType":"YulBlock","src":"1853:51:15","statements":[{"nodeType":"YulAssignment","src":"1863:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:15"},"nodeType":"YulFunctionCall","src":"1874:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:15","type":""}],"src":"1808:96:15"},{"body":{"nodeType":"YulBlock","src":"1953:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:15"},"nodeType":"YulFunctionCall","src":"2012:12:15"},"nodeType":"YulExpressionStatement","src":"2012:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:15"},"nodeType":"YulFunctionCall","src":"1983:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:15"},"nodeType":"YulFunctionCall","src":"1973:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:15"},"nodeType":"YulFunctionCall","src":"1966:43:15"},"nodeType":"YulIf","src":"1963:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:15","type":""}],"src":"1910:122:15"},{"body":{"nodeType":"YulBlock","src":"2090:87:15","statements":[{"nodeType":"YulAssignment","src":"2100:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:15"},"nodeType":"YulFunctionCall","src":"2109:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:15"},"nodeType":"YulFunctionCall","src":"2138:33:15"},"nodeType":"YulExpressionStatement","src":"2138:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:15","type":""}],"src":"2038:139:15"},{"body":{"nodeType":"YulBlock","src":"2228:32:15","statements":[{"nodeType":"YulAssignment","src":"2238:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:15","type":""}],"src":"2183:77:15"},{"body":{"nodeType":"YulBlock","src":"2309:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:15"},"nodeType":"YulFunctionCall","src":"2368:12:15"},"nodeType":"YulExpressionStatement","src":"2368:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:15"},"nodeType":"YulFunctionCall","src":"2339:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:15"},"nodeType":"YulFunctionCall","src":"2329:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:15"},"nodeType":"YulFunctionCall","src":"2322:43:15"},"nodeType":"YulIf","src":"2319:63:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:15","type":""}],"src":"2266:122:15"},{"body":{"nodeType":"YulBlock","src":"2446:87:15","statements":[{"nodeType":"YulAssignment","src":"2456:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:15"},"nodeType":"YulFunctionCall","src":"2465:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:15"},"nodeType":"YulFunctionCall","src":"2494:33:15"},"nodeType":"YulExpressionStatement","src":"2494:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:15","type":""}],"src":"2394:139:15"},{"body":{"nodeType":"YulBlock","src":"2622:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:15"},"nodeType":"YulFunctionCall","src":"2670:79:15"},"nodeType":"YulExpressionStatement","src":"2670:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:15"},"nodeType":"YulFunctionCall","src":"2639:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:15"},"nodeType":"YulFunctionCall","src":"2635:32:15"},"nodeType":"YulIf","src":"2632:119:15"},{"nodeType":"YulBlock","src":"2761:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:15"},"nodeType":"YulFunctionCall","src":"2836:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:15"},"nodeType":"YulFunctionCall","src":"2815:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:15"}]}]},{"nodeType":"YulBlock","src":"2888:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:15"},"nodeType":"YulFunctionCall","src":"2964:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:15"},"nodeType":"YulFunctionCall","src":"2943:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:15","type":""}],"src":"2539:474:15"},{"body":{"nodeType":"YulBlock","src":"3061:48:15","statements":[{"nodeType":"YulAssignment","src":"3071:32:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:15"},"nodeType":"YulFunctionCall","src":"3089:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:15"},"nodeType":"YulFunctionCall","src":"3082:21:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:15"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:15","type":""}],"src":"3019:90:15"},{"body":{"nodeType":"YulBlock","src":"3174:50:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:15"},"nodeType":"YulFunctionCall","src":"3196:21:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:15"},"nodeType":"YulFunctionCall","src":"3184:34:15"},"nodeType":"YulExpressionStatement","src":"3184:34:15"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:15","type":""}],"src":"3115:109:15"},{"body":{"nodeType":"YulBlock","src":"3322:118:15","statements":[{"nodeType":"YulAssignment","src":"3332:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:15"},"nodeType":"YulFunctionCall","src":"3340:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:15"},"nodeType":"YulFunctionCall","src":"3415:17:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:15"},"nodeType":"YulFunctionCall","src":"3368:65:15"},"nodeType":"YulExpressionStatement","src":"3368:65:15"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:15","type":""}],"src":"3230:210:15"},{"body":{"nodeType":"YulBlock","src":"3511:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:15"},"nodeType":"YulFunctionCall","src":"3533:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:15"},"nodeType":"YulFunctionCall","src":"3521:37:15"},"nodeType":"YulExpressionStatement","src":"3521:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:15","type":""}],"src":"3446:118:15"},{"body":{"nodeType":"YulBlock","src":"3668:124:15","statements":[{"nodeType":"YulAssignment","src":"3678:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:15"},"nodeType":"YulFunctionCall","src":"3686:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:15"},"nodeType":"YulFunctionCall","src":"3767:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:15"},"nodeType":"YulFunctionCall","src":"3714:71:15"},"nodeType":"YulExpressionStatement","src":"3714:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:15","type":""}],"src":"3570:222:15"},{"body":{"nodeType":"YulBlock","src":"3898:519:15","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:15"},"nodeType":"YulFunctionCall","src":"3946:79:15"},"nodeType":"YulExpressionStatement","src":"3946:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:15"},"nodeType":"YulFunctionCall","src":"3915:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:15"},"nodeType":"YulFunctionCall","src":"3911:32:15"},"nodeType":"YulIf","src":"3908:119:15"},{"nodeType":"YulBlock","src":"4037:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:15"},"nodeType":"YulFunctionCall","src":"4112:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:15"},"nodeType":"YulFunctionCall","src":"4091:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:15"}]}]},{"nodeType":"YulBlock","src":"4164:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:15"},"nodeType":"YulFunctionCall","src":"4240:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:15"},"nodeType":"YulFunctionCall","src":"4219:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:15"}]}]},{"nodeType":"YulBlock","src":"4292:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:15"},"nodeType":"YulFunctionCall","src":"4368:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:15"},"nodeType":"YulFunctionCall","src":"4347:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:15","type":""}],"src":"3798:619:15"},{"body":{"nodeType":"YulBlock","src":"4466:43:15","statements":[{"nodeType":"YulAssignment","src":"4476:27:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:15","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:15"},"nodeType":"YulFunctionCall","src":"4487:16:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:15"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:15","type":""}],"src":"4423:86:15"},{"body":{"nodeType":"YulBlock","src":"4576:51:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:15"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:15"},"nodeType":"YulFunctionCall","src":"4598:22:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:15"},"nodeType":"YulFunctionCall","src":"4586:35:15"},"nodeType":"YulExpressionStatement","src":"4586:35:15"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:15","type":""}],"src":"4515:112:15"},{"body":{"nodeType":"YulBlock","src":"4727:120:15","statements":[{"nodeType":"YulAssignment","src":"4737:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:15"},"nodeType":"YulFunctionCall","src":"4745:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:15"},"nodeType":"YulFunctionCall","src":"4822:17:15"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:15"},"nodeType":"YulFunctionCall","src":"4773:67:15"},"nodeType":"YulExpressionStatement","src":"4773:67:15"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:15","type":""}],"src":"4633:214:15"},{"body":{"nodeType":"YulBlock","src":"4898:32:15","statements":[{"nodeType":"YulAssignment","src":"4908:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"4919:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4908:7:15"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4880:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4890:7:15","type":""}],"src":"4853:77:15"},{"body":{"nodeType":"YulBlock","src":"5001:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5018:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5041:5:15"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5023:17:15"},"nodeType":"YulFunctionCall","src":"5023:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5011:6:15"},"nodeType":"YulFunctionCall","src":"5011:37:15"},"nodeType":"YulExpressionStatement","src":"5011:37:15"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4989:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4996:3:15","type":""}],"src":"4936:118:15"},{"body":{"nodeType":"YulBlock","src":"5158:124:15","statements":[{"nodeType":"YulAssignment","src":"5168:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5191:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:15"},"nodeType":"YulFunctionCall","src":"5176:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5168:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5248:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5261:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5272:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5257:3:15"},"nodeType":"YulFunctionCall","src":"5257:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5204:43:15"},"nodeType":"YulFunctionCall","src":"5204:71:15"},"nodeType":"YulExpressionStatement","src":"5204:71:15"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5130:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5142:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5153:4:15","type":""}],"src":"5060:222:15"},{"body":{"nodeType":"YulBlock","src":"5354:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"5400:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5402:77:15"},"nodeType":"YulFunctionCall","src":"5402:79:15"},"nodeType":"YulExpressionStatement","src":"5402:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5375:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5371:3:15"},"nodeType":"YulFunctionCall","src":"5371:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"5396:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5367:3:15"},"nodeType":"YulFunctionCall","src":"5367:32:15"},"nodeType":"YulIf","src":"5364:119:15"},{"nodeType":"YulBlock","src":"5493:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5508:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5522:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5512:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5537:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5572:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5583:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:15"},"nodeType":"YulFunctionCall","src":"5568:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5592:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5547:20:15"},"nodeType":"YulFunctionCall","src":"5547:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5537:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5324:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5335:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5347:6:15","type":""}],"src":"5288:329:15"},{"body":{"nodeType":"YulBlock","src":"5664:77:15","statements":[{"body":{"nodeType":"YulBlock","src":"5719:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5728:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5731:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5721:6:15"},"nodeType":"YulFunctionCall","src":"5721:12:15"},"nodeType":"YulExpressionStatement","src":"5721:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5687:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5710:5:15"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"5694:15:15"},"nodeType":"YulFunctionCall","src":"5694:22:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5684:2:15"},"nodeType":"YulFunctionCall","src":"5684:33:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5677:6:15"},"nodeType":"YulFunctionCall","src":"5677:41:15"},"nodeType":"YulIf","src":"5674:61:15"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5657:5:15","type":""}],"src":"5623:118:15"},{"body":{"nodeType":"YulBlock","src":"5797:85:15","statements":[{"nodeType":"YulAssignment","src":"5807:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5829:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5816:12:15"},"nodeType":"YulFunctionCall","src":"5816:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5807:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5870:5:15"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"5845:24:15"},"nodeType":"YulFunctionCall","src":"5845:31:15"},"nodeType":"YulExpressionStatement","src":"5845:31:15"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5775:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"5783:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5791:5:15","type":""}],"src":"5747:135:15"},{"body":{"nodeType":"YulBlock","src":"5931:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"5988:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5997:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6000:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5990:6:15"},"nodeType":"YulFunctionCall","src":"5990:12:15"},"nodeType":"YulExpressionStatement","src":"5990:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5954:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5979:5:15"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5961:17:15"},"nodeType":"YulFunctionCall","src":"5961:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5951:2:15"},"nodeType":"YulFunctionCall","src":"5951:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5944:6:15"},"nodeType":"YulFunctionCall","src":"5944:43:15"},"nodeType":"YulIf","src":"5941:63:15"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5924:5:15","type":""}],"src":"5888:122:15"},{"body":{"nodeType":"YulBlock","src":"6068:87:15","statements":[{"nodeType":"YulAssignment","src":"6078:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6100:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6087:12:15"},"nodeType":"YulFunctionCall","src":"6087:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6078:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6143:5:15"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"6116:26:15"},"nodeType":"YulFunctionCall","src":"6116:33:15"},"nodeType":"YulExpressionStatement","src":"6116:33:15"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6046:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"6054:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6062:5:15","type":""}],"src":"6016:139:15"},{"body":{"nodeType":"YulBlock","src":"6327:1033:15","statements":[{"body":{"nodeType":"YulBlock","src":"6374:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6376:77:15"},"nodeType":"YulFunctionCall","src":"6376:79:15"},"nodeType":"YulExpressionStatement","src":"6376:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6348:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"6357:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6344:3:15"},"nodeType":"YulFunctionCall","src":"6344:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"6369:3:15","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6340:3:15"},"nodeType":"YulFunctionCall","src":"6340:33:15"},"nodeType":"YulIf","src":"6337:120:15"},{"nodeType":"YulBlock","src":"6467:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6482:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6496:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6486:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6511:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6546:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6557:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6542:3:15"},"nodeType":"YulFunctionCall","src":"6542:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6566:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6521:20:15"},"nodeType":"YulFunctionCall","src":"6521:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6511:6:15"}]}]},{"nodeType":"YulBlock","src":"6594:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6609:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6623:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6613:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6639:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6674:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6685:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6670:3:15"},"nodeType":"YulFunctionCall","src":"6670:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6694:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6649:20:15"},"nodeType":"YulFunctionCall","src":"6649:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6639:6:15"}]}]},{"nodeType":"YulBlock","src":"6722:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6737:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6751:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6741:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6767:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6802:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6813:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6798:3:15"},"nodeType":"YulFunctionCall","src":"6798:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6822:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6777:20:15"},"nodeType":"YulFunctionCall","src":"6777:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6767:6:15"}]}]},{"nodeType":"YulBlock","src":"6850:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6865:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6879:2:15","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6869:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6895:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6930:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6941:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6926:3:15"},"nodeType":"YulFunctionCall","src":"6926:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6950:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6905:20:15"},"nodeType":"YulFunctionCall","src":"6905:53:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6895:6:15"}]}]},{"nodeType":"YulBlock","src":"6978:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6993:17:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7007:3:15","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6997:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7024:61:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7057:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7068:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7053:3:15"},"nodeType":"YulFunctionCall","src":"7053:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7077:7:15"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"7034:18:15"},"nodeType":"YulFunctionCall","src":"7034:51:15"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7024:6:15"}]}]},{"nodeType":"YulBlock","src":"7105:119:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7120:17:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7134:3:15","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7124:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7151:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7186:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7197:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7182:3:15"},"nodeType":"YulFunctionCall","src":"7182:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7206:7:15"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7161:20:15"},"nodeType":"YulFunctionCall","src":"7161:53:15"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7151:6:15"}]}]},{"nodeType":"YulBlock","src":"7234:119:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7249:17:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7263:3:15","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7253:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7280:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7315:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7326:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7311:3:15"},"nodeType":"YulFunctionCall","src":"7311:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7335:7:15"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7290:20:15"},"nodeType":"YulFunctionCall","src":"7290:53:15"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7280:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6249:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6260:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6272:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6280:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6288:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6296:6:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6304:6:15","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6312:6:15","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6320:6:15","type":""}],"src":"6161:1199:15"},{"body":{"nodeType":"YulBlock","src":"7449:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"7495:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7497:77:15"},"nodeType":"YulFunctionCall","src":"7497:79:15"},"nodeType":"YulExpressionStatement","src":"7497:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7470:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7479:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7466:3:15"},"nodeType":"YulFunctionCall","src":"7466:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"7491:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7462:3:15"},"nodeType":"YulFunctionCall","src":"7462:32:15"},"nodeType":"YulIf","src":"7459:119:15"},{"nodeType":"YulBlock","src":"7588:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7603:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7617:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7607:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7632:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7667:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7678:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7663:3:15"},"nodeType":"YulFunctionCall","src":"7663:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7687:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7642:20:15"},"nodeType":"YulFunctionCall","src":"7642:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7632:6:15"}]}]},{"nodeType":"YulBlock","src":"7715:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7730:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7744:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7734:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7760:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7795:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7806:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7791:3:15"},"nodeType":"YulFunctionCall","src":"7791:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7815:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7770:20:15"},"nodeType":"YulFunctionCall","src":"7770:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7760:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7411:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7422:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7434:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7442:6:15","type":""}],"src":"7366:474:15"},{"body":{"nodeType":"YulBlock","src":"7874:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7891:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7894:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7884:6:15"},"nodeType":"YulFunctionCall","src":"7884:88:15"},"nodeType":"YulExpressionStatement","src":"7884:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7988:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7991:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7981:6:15"},"nodeType":"YulFunctionCall","src":"7981:15:15"},"nodeType":"YulExpressionStatement","src":"7981:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8012:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8015:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8005:6:15"},"nodeType":"YulFunctionCall","src":"8005:15:15"},"nodeType":"YulExpressionStatement","src":"8005:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7846:180:15"},{"body":{"nodeType":"YulBlock","src":"8083:269:15","statements":[{"nodeType":"YulAssignment","src":"8093:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8107:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"8113:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8103:3:15"},"nodeType":"YulFunctionCall","src":"8103:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8093:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"8124:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8154:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"8160:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8150:3:15"},"nodeType":"YulFunctionCall","src":"8150:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8128:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"8201:51:15","statements":[{"nodeType":"YulAssignment","src":"8215:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8229:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8237:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8225:3:15"},"nodeType":"YulFunctionCall","src":"8225:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8215:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8181:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8174:6:15"},"nodeType":"YulFunctionCall","src":"8174:26:15"},"nodeType":"YulIf","src":"8171:81:15"},{"body":{"nodeType":"YulBlock","src":"8304:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8318:16:15"},"nodeType":"YulFunctionCall","src":"8318:18:15"},"nodeType":"YulExpressionStatement","src":"8318:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8268:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8291:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8299:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8288:2:15"},"nodeType":"YulFunctionCall","src":"8288:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8265:2:15"},"nodeType":"YulFunctionCall","src":"8265:38:15"},"nodeType":"YulIf","src":"8262:84:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8067:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8076:6:15","type":""}],"src":"8032:320:15"},{"body":{"nodeType":"YulBlock","src":"8386:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8403:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8406:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8396:6:15"},"nodeType":"YulFunctionCall","src":"8396:88:15"},"nodeType":"YulExpressionStatement","src":"8396:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8500:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8503:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8493:6:15"},"nodeType":"YulFunctionCall","src":"8493:15:15"},"nodeType":"YulExpressionStatement","src":"8493:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8524:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8527:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8517:6:15"},"nodeType":"YulFunctionCall","src":"8517:15:15"},"nodeType":"YulExpressionStatement","src":"8517:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8358:180:15"},{"body":{"nodeType":"YulBlock","src":"8589:149:15","statements":[{"nodeType":"YulAssignment","src":"8599:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8622:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8604:17:15"},"nodeType":"YulFunctionCall","src":"8604:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8599:1:15"}]},{"nodeType":"YulAssignment","src":"8633:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8656:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8638:17:15"},"nodeType":"YulFunctionCall","src":"8638:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8633:1:15"}]},{"nodeType":"YulAssignment","src":"8667:17:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8679:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"8682:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8675:3:15"},"nodeType":"YulFunctionCall","src":"8675:9:15"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8667:4:15"}]},{"body":{"nodeType":"YulBlock","src":"8709:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8711:16:15"},"nodeType":"YulFunctionCall","src":"8711:18:15"},"nodeType":"YulExpressionStatement","src":"8711:18:15"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"8700:4:15"},{"name":"x","nodeType":"YulIdentifier","src":"8706:1:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8697:2:15"},"nodeType":"YulFunctionCall","src":"8697:11:15"},"nodeType":"YulIf","src":"8694:37:15"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8575:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"8578:1:15","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8584:4:15","type":""}],"src":"8544:194:15"},{"body":{"nodeType":"YulBlock","src":"8850:67:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8872:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8880:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8868:3:15"},"nodeType":"YulFunctionCall","src":"8868:14:15"},{"hexValue":"5045524d49545f444541444c494e455f45585049524544","kind":"string","nodeType":"YulLiteral","src":"8884:25:15","type":"","value":"PERMIT_DEADLINE_EXPIRED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8861:6:15"},"nodeType":"YulFunctionCall","src":"8861:49:15"},"nodeType":"YulExpressionStatement","src":"8861:49:15"}]},"name":"store_literal_in_memory_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8842:6:15","type":""}],"src":"8744:173:15"},{"body":{"nodeType":"YulBlock","src":"9069:220:15","statements":[{"nodeType":"YulAssignment","src":"9079:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9145:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9150:2:15","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9086:58:15"},"nodeType":"YulFunctionCall","src":"9086:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9079:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9251:3:15"}],"functionName":{"name":"store_literal_in_memory_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e","nodeType":"YulIdentifier","src":"9162:88:15"},"nodeType":"YulFunctionCall","src":"9162:93:15"},"nodeType":"YulExpressionStatement","src":"9162:93:15"},{"nodeType":"YulAssignment","src":"9264:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9275:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9280:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9271:3:15"},"nodeType":"YulFunctionCall","src":"9271:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9264:3:15"}]}]},"name":"abi_encode_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9057:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9065:3:15","type":""}],"src":"8923:366:15"},{"body":{"nodeType":"YulBlock","src":"9466:248:15","statements":[{"nodeType":"YulAssignment","src":"9476:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9488:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9499:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9484:3:15"},"nodeType":"YulFunctionCall","src":"9484:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9476:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9523:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9534:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9519:3:15"},"nodeType":"YulFunctionCall","src":"9519:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9542:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"9548:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9538:3:15"},"nodeType":"YulFunctionCall","src":"9538:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9512:6:15"},"nodeType":"YulFunctionCall","src":"9512:47:15"},"nodeType":"YulExpressionStatement","src":"9512:47:15"},{"nodeType":"YulAssignment","src":"9568:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9702:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9576:124:15"},"nodeType":"YulFunctionCall","src":"9576:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9568:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9446:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9461:4:15","type":""}],"src":"9295:419:15"},{"body":{"nodeType":"YulBlock","src":"9785:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9802:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9825:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9807:17:15"},"nodeType":"YulFunctionCall","src":"9807:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9795:6:15"},"nodeType":"YulFunctionCall","src":"9795:37:15"},"nodeType":"YulExpressionStatement","src":"9795:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9773:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9780:3:15","type":""}],"src":"9720:118:15"},{"body":{"nodeType":"YulBlock","src":"10082:537:15","statements":[{"nodeType":"YulAssignment","src":"10092:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10104:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10115:3:15","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10100:3:15"},"nodeType":"YulFunctionCall","src":"10100:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10092:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10173:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10186:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10197:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10182:3:15"},"nodeType":"YulFunctionCall","src":"10182:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"10129:43:15"},"nodeType":"YulFunctionCall","src":"10129:71:15"},"nodeType":"YulExpressionStatement","src":"10129:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10254:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10267:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10278:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10263:3:15"},"nodeType":"YulFunctionCall","src":"10263:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10210:43:15"},"nodeType":"YulFunctionCall","src":"10210:72:15"},"nodeType":"YulExpressionStatement","src":"10210:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10336:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10349:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10360:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10345:3:15"},"nodeType":"YulFunctionCall","src":"10345:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10292:43:15"},"nodeType":"YulFunctionCall","src":"10292:72:15"},"nodeType":"YulExpressionStatement","src":"10292:72:15"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10418:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10431:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10442:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10427:3:15"},"nodeType":"YulFunctionCall","src":"10427:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10374:43:15"},"nodeType":"YulFunctionCall","src":"10374:72:15"},"nodeType":"YulExpressionStatement","src":"10374:72:15"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10500:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10513:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10524:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10509:3:15"},"nodeType":"YulFunctionCall","src":"10509:19:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10456:43:15"},"nodeType":"YulFunctionCall","src":"10456:73:15"},"nodeType":"YulExpressionStatement","src":"10456:73:15"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"10583:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10596:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10607:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10592:3:15"},"nodeType":"YulFunctionCall","src":"10592:19:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10539:43:15"},"nodeType":"YulFunctionCall","src":"10539:73:15"},"nodeType":"YulExpressionStatement","src":"10539:73:15"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10014:9:15","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10026:6:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10034:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10042:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10050:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10058:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10066:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10077:4:15","type":""}],"src":"9844:775:15"},{"body":{"nodeType":"YulBlock","src":"10739:34:15","statements":[{"nodeType":"YulAssignment","src":"10749:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"10764:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10749:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10711:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"10716:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10727:11:15","type":""}],"src":"10625:148:15"},{"body":{"nodeType":"YulBlock","src":"10885:108:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10907:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"10915:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10903:3:15"},"nodeType":"YulFunctionCall","src":"10903:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"10919:66:15","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10896:6:15"},"nodeType":"YulFunctionCall","src":"10896:90:15"},"nodeType":"YulExpressionStatement","src":"10896:90:15"}]},"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10877:6:15","type":""}],"src":"10779:214:15"},{"body":{"nodeType":"YulBlock","src":"11163:236:15","statements":[{"nodeType":"YulAssignment","src":"11173:91:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11257:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11262:1:15","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11180:76:15"},"nodeType":"YulFunctionCall","src":"11180:84:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11173:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11362:3:15"}],"functionName":{"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulIdentifier","src":"11273:88:15"},"nodeType":"YulFunctionCall","src":"11273:93:15"},"nodeType":"YulExpressionStatement","src":"11273:93:15"},{"nodeType":"YulAssignment","src":"11375:18:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11386:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11391:1:15","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11382:3:15"},"nodeType":"YulFunctionCall","src":"11382:11:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11375:3:15"}]}]},"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11151:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11159:3:15","type":""}],"src":"10999:400:15"},{"body":{"nodeType":"YulBlock","src":"11452:32:15","statements":[{"nodeType":"YulAssignment","src":"11462:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"11473:5:15"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"11462:7:15"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11434:5:15","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"11444:7:15","type":""}],"src":"11405:79:15"},{"body":{"nodeType":"YulBlock","src":"11573:74:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11590:3:15"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11633:5:15"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"11615:17:15"},"nodeType":"YulFunctionCall","src":"11615:24:15"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"11595:19:15"},"nodeType":"YulFunctionCall","src":"11595:45:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11583:6:15"},"nodeType":"YulFunctionCall","src":"11583:58:15"},"nodeType":"YulExpressionStatement","src":"11583:58:15"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11561:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11568:3:15","type":""}],"src":"11490:157:15"},{"body":{"nodeType":"YulBlock","src":"11898:418:15","statements":[{"nodeType":"YulAssignment","src":"11909:155:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12060:3:15"}],"functionName":{"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11916:142:15"},"nodeType":"YulFunctionCall","src":"11916:148:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11909:3:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12136:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"12145:3:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12074:61:15"},"nodeType":"YulFunctionCall","src":"12074:75:15"},"nodeType":"YulExpressionStatement","src":"12074:75:15"},{"nodeType":"YulAssignment","src":"12158:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12169:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"12174:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12165:3:15"},"nodeType":"YulFunctionCall","src":"12165:12:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12158:3:15"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12249:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"12258:3:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12187:61:15"},"nodeType":"YulFunctionCall","src":"12187:75:15"},"nodeType":"YulExpressionStatement","src":"12187:75:15"},{"nodeType":"YulAssignment","src":"12271:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12282:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"12287:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12278:3:15"},"nodeType":"YulFunctionCall","src":"12278:12:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12271:3:15"}]},{"nodeType":"YulAssignment","src":"12300:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"12307:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12300:3:15"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11869:3:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11875:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11883:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11894:3:15","type":""}],"src":"11653:663:15"},{"body":{"nodeType":"YulBlock","src":"12500:367:15","statements":[{"nodeType":"YulAssignment","src":"12510:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12522:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12533:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12518:3:15"},"nodeType":"YulFunctionCall","src":"12518:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12510:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12591:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12604:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12615:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12600:3:15"},"nodeType":"YulFunctionCall","src":"12600:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12547:43:15"},"nodeType":"YulFunctionCall","src":"12547:71:15"},"nodeType":"YulExpressionStatement","src":"12547:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12668:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12681:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12692:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12677:3:15"},"nodeType":"YulFunctionCall","src":"12677:18:15"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"12628:39:15"},"nodeType":"YulFunctionCall","src":"12628:68:15"},"nodeType":"YulExpressionStatement","src":"12628:68:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12750:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12763:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12774:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12759:3:15"},"nodeType":"YulFunctionCall","src":"12759:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12706:43:15"},"nodeType":"YulFunctionCall","src":"12706:72:15"},"nodeType":"YulExpressionStatement","src":"12706:72:15"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12832:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12845:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12856:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12841:3:15"},"nodeType":"YulFunctionCall","src":"12841:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12788:43:15"},"nodeType":"YulFunctionCall","src":"12788:72:15"},"nodeType":"YulExpressionStatement","src":"12788:72:15"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12448:9:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12460:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12468:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12476:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12484:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12495:4:15","type":""}],"src":"12322:545:15"},{"body":{"nodeType":"YulBlock","src":"12979:58:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13001:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"13009:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12997:3:15"},"nodeType":"YulFunctionCall","src":"12997:14:15"},{"hexValue":"494e56414c49445f5349474e4552","kind":"string","nodeType":"YulLiteral","src":"13013:16:15","type":"","value":"INVALID_SIGNER"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12990:6:15"},"nodeType":"YulFunctionCall","src":"12990:40:15"},"nodeType":"YulExpressionStatement","src":"12990:40:15"}]},"name":"store_literal_in_memory_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12971:6:15","type":""}],"src":"12873:164:15"},{"body":{"nodeType":"YulBlock","src":"13189:220:15","statements":[{"nodeType":"YulAssignment","src":"13199:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13265:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"13270:2:15","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13206:58:15"},"nodeType":"YulFunctionCall","src":"13206:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13199:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13371:3:15"}],"functionName":{"name":"store_literal_in_memory_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c","nodeType":"YulIdentifier","src":"13282:88:15"},"nodeType":"YulFunctionCall","src":"13282:93:15"},"nodeType":"YulExpressionStatement","src":"13282:93:15"},{"nodeType":"YulAssignment","src":"13384:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13395:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"13400:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13391:3:15"},"nodeType":"YulFunctionCall","src":"13391:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13384:3:15"}]}]},"name":"abi_encode_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13177:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13185:3:15","type":""}],"src":"13043:366:15"},{"body":{"nodeType":"YulBlock","src":"13586:248:15","statements":[{"nodeType":"YulAssignment","src":"13596:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13608:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13619:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13604:3:15"},"nodeType":"YulFunctionCall","src":"13604:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13596:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13643:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13654:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13639:3:15"},"nodeType":"YulFunctionCall","src":"13639:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13662:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13668:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13658:3:15"},"nodeType":"YulFunctionCall","src":"13658:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13632:6:15"},"nodeType":"YulFunctionCall","src":"13632:47:15"},"nodeType":"YulExpressionStatement","src":"13632:47:15"},{"nodeType":"YulAssignment","src":"13688:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13822:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13696:124:15"},"nodeType":"YulFunctionCall","src":"13696:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13688:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13566:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13581:4:15","type":""}],"src":"13415:419:15"},{"body":{"nodeType":"YulBlock","src":"13953:34:15","statements":[{"nodeType":"YulAssignment","src":"13963:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"13978:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13963:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13925:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"13930:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13941:11:15","type":""}],"src":"13840:147:15"},{"body":{"nodeType":"YulBlock","src":"14050:87:15","statements":[{"nodeType":"YulAssignment","src":"14060:11:15","value":{"name":"ptr","nodeType":"YulIdentifier","src":"14068:3:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14060:4:15"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14088:1:15","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"14091:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14081:6:15"},"nodeType":"YulFunctionCall","src":"14081:14:15"},"nodeType":"YulExpressionStatement","src":"14081:14:15"},{"nodeType":"YulAssignment","src":"14104:26:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14122:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14125:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"14112:9:15"},"nodeType":"YulFunctionCall","src":"14112:18:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14104:4:15"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14037:3:15","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"14045:4:15","type":""}],"src":"13993:144:15"},{"body":{"nodeType":"YulBlock","src":"14274:769:15","statements":[{"nodeType":"YulVariableDeclaration","src":"14284:29:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14307:5:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14301:5:15"},"nodeType":"YulFunctionCall","src":"14301:12:15"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"14288:9:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14322:50:15","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"14362:9:15"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"14336:25:15"},"nodeType":"YulFunctionCall","src":"14336:36:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14326:6:15","type":""}]},{"nodeType":"YulAssignment","src":"14381:95:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14464:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"14469:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14388:75:15"},"nodeType":"YulFunctionCall","src":"14388:88:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14381:3:15"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"14525:159:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14578:3:15"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"14587:9:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14602:4:15","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14598:3:15"},"nodeType":"YulFunctionCall","src":"14598:9:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14583:3:15"},"nodeType":"YulFunctionCall","src":"14583:25:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14571:6:15"},"nodeType":"YulFunctionCall","src":"14571:38:15"},"nodeType":"YulExpressionStatement","src":"14571:38:15"},{"nodeType":"YulAssignment","src":"14622:52:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14633:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14642:6:15"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14664:6:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14657:6:15"},"nodeType":"YulFunctionCall","src":"14657:14:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14650:6:15"},"nodeType":"YulFunctionCall","src":"14650:22:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14638:3:15"},"nodeType":"YulFunctionCall","src":"14638:35:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14629:3:15"},"nodeType":"YulFunctionCall","src":"14629:45:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14622:3:15"}]}]},"nodeType":"YulCase","src":"14518:166:15","value":{"kind":"number","nodeType":"YulLiteral","src":"14523:1:15","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"14700:337:15","statements":[{"nodeType":"YulVariableDeclaration","src":"14745:56:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14795:5:15"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"14760:34:15"},"nodeType":"YulFunctionCall","src":"14760:41:15"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"14749:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14814:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"14823:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14818:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"14881:110:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14910:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"14915:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14906:3:15"},"nodeType":"YulFunctionCall","src":"14906:11:15"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"14925:7:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14919:5:15"},"nodeType":"YulFunctionCall","src":"14919:14:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14899:6:15"},"nodeType":"YulFunctionCall","src":"14899:35:15"},"nodeType":"YulExpressionStatement","src":"14899:35:15"},{"nodeType":"YulAssignment","src":"14951:26:15","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"14966:7:15"},{"kind":"number","nodeType":"YulLiteral","src":"14975:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14962:3:15"},"nodeType":"YulFunctionCall","src":"14962:15:15"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"14951:7:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14848:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"14851:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14845:2:15"},"nodeType":"YulFunctionCall","src":"14845:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14859:21:15","statements":[{"nodeType":"YulAssignment","src":"14861:17:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14870:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"14873:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14866:3:15"},"nodeType":"YulFunctionCall","src":"14866:12:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14861:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"14841:3:15","statements":[]},"src":"14837:154:15"},{"nodeType":"YulAssignment","src":"15004:23:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15015:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"15020:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15011:3:15"},"nodeType":"YulFunctionCall","src":"15011:16:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15004:3:15"}]}]},"nodeType":"YulCase","src":"14693:344:15","value":{"kind":"number","nodeType":"YulLiteral","src":"14698:1:15","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"14496:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14507:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14492:3:15"},"nodeType":"YulFunctionCall","src":"14492:17:15"},"nodeType":"YulSwitch","src":"14485:552:15"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14255:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14262:3:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"14270:3:15","type":""}],"src":"14165:878:15"},{"body":{"nodeType":"YulBlock","src":"15184:138:15","statements":[{"nodeType":"YulAssignment","src":"15195:101:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15283:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"15292:3:15"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15202:80:15"},"nodeType":"YulFunctionCall","src":"15202:94:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15195:3:15"}]},{"nodeType":"YulAssignment","src":"15306:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"15313:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15306:3:15"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15163:3:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15169:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15180:3:15","type":""}],"src":"15049:273:15"},{"body":{"nodeType":"YulBlock","src":"15538:454:15","statements":[{"nodeType":"YulAssignment","src":"15548:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15560:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15571:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15556:3:15"},"nodeType":"YulFunctionCall","src":"15556:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15548:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15629:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15642:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15653:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15638:3:15"},"nodeType":"YulFunctionCall","src":"15638:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15585:43:15"},"nodeType":"YulFunctionCall","src":"15585:71:15"},"nodeType":"YulExpressionStatement","src":"15585:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15710:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15723:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15734:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15719:3:15"},"nodeType":"YulFunctionCall","src":"15719:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15666:43:15"},"nodeType":"YulFunctionCall","src":"15666:72:15"},"nodeType":"YulExpressionStatement","src":"15666:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15792:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15805:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15816:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15801:3:15"},"nodeType":"YulFunctionCall","src":"15801:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15748:43:15"},"nodeType":"YulFunctionCall","src":"15748:72:15"},"nodeType":"YulExpressionStatement","src":"15748:72:15"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15874:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15887:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15898:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15883:3:15"},"nodeType":"YulFunctionCall","src":"15883:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15830:43:15"},"nodeType":"YulFunctionCall","src":"15830:72:15"},"nodeType":"YulExpressionStatement","src":"15830:72:15"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"15956:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15969:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15980:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15965:3:15"},"nodeType":"YulFunctionCall","src":"15965:19:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15912:43:15"},"nodeType":"YulFunctionCall","src":"15912:73:15"},"nodeType":"YulExpressionStatement","src":"15912:73:15"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15478:9:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15490:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15498:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15506:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15514:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15522:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15533:4:15","type":""}],"src":"15328:664:15"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e(memPtr) {\n\n        mstore(add(memPtr, 0), \"PERMIT_DEADLINE_EXPIRED\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(memPtr) {\n\n        mstore(add(memPtr, 0), 0x1901000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(pos)\n        end := add(pos, 2)\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c(memPtr) {\n\n        mstore(add(memPtr, 0), \"INVALID_SIGNER\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3614":[{"length":32,"start":1629}],"3628":[{"length":32,"start":1667}],"3630":[{"length":32,"start":1719}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101915780637ecebe00146101c157806395d89b41146101f1578063a9059cbb1461020f578063d505accf1461023f578063dd62ed3e1461025b576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633644e51514610173575b600080fd5b6100c161028b565b6040516100ce9190610ce8565b60405180910390f35b6100f160048036038101906100ec9190610da3565b610319565b6040516100fe9190610dfe565b60405180910390f35b61010f61040b565b60405161011c9190610e28565b60405180910390f35b61013f600480360381019061013a9190610e43565b610411565b60405161014c9190610dfe565b60405180910390f35b61015d61065b565b60405161016a9190610eb2565b60405180910390f35b61017b61067f565b6040516101889190610ee6565b60405180910390f35b6101ab60048036038101906101a69190610f01565b6106dc565b6040516101b89190610e28565b60405180910390f35b6101db60048036038101906101d69190610f01565b6106f4565b6040516101e89190610e28565b60405180910390f35b6101f961070c565b6040516102069190610ce8565b60405180910390f35b61022960048036038101906102249190610da3565b61079a565b6040516102369190610dfe565b60405180910390f35b61025960048036038101906102549190610f86565b6108ae565b005b61027560048036038101906102709190611028565b610ba7565b6040516102829190610e28565b60405180910390f35b6000805461029890611097565b80601f01602080910402602001604051908101604052809291908181526020018280546102c490611097565b80156103115780601f106102e657610100808354040283529160200191610311565b820191906000526020600020905b8154815290600101906020018083116102f457829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103f99190610e28565b60405180910390a36001905092915050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105475782816104c691906110f7565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461059691906110f7565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516106479190610e28565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146106b5576106b0610bcc565b6106d7565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6001805461071990611097565b80601f016020809104026020016040519081016040528092919081815260200182805461074590611097565b80156107925780601f1061076757610100808354040283529160200191610792565b820191906000526020600020905b81548152906001019060200180831161077557829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107eb91906110f7565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089c9190610e28565b60405180910390a36001905092915050565b428410156108f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e890611177565b60405180910390fd5b600060016108fd61067f565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b604051602001610985969594939291906111a6565b604051602081830303815290604052805190602001206040516020016109ac92919061127f565b60405160208183030381529060405280519060200120858585604051600081526020016040526040516109e294939291906112b6565b6020604051602081039080840390855afa158015610a04573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610a7857508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae90611347565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610b969190610e28565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610bfe919061140a565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001610c3d959493929190611421565b60405160208183030381529060405280519060200120905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c92578082015181840152602081019050610c77565b60008484015250505050565b6000601f19601f8301169050919050565b6000610cba82610c58565b610cc48185610c63565b9350610cd4818560208601610c74565b610cdd81610c9e565b840191505092915050565b60006020820190508181036000830152610d028184610caf565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d3a82610d0f565b9050919050565b610d4a81610d2f565b8114610d5557600080fd5b50565b600081359050610d6781610d41565b92915050565b6000819050919050565b610d8081610d6d565b8114610d8b57600080fd5b50565b600081359050610d9d81610d77565b92915050565b60008060408385031215610dba57610db9610d0a565b5b6000610dc885828601610d58565b9250506020610dd985828601610d8e565b9150509250929050565b60008115159050919050565b610df881610de3565b82525050565b6000602082019050610e136000830184610def565b92915050565b610e2281610d6d565b82525050565b6000602082019050610e3d6000830184610e19565b92915050565b600080600060608486031215610e5c57610e5b610d0a565b5b6000610e6a86828701610d58565b9350506020610e7b86828701610d58565b9250506040610e8c86828701610d8e565b9150509250925092565b600060ff82169050919050565b610eac81610e96565b82525050565b6000602082019050610ec76000830184610ea3565b92915050565b6000819050919050565b610ee081610ecd565b82525050565b6000602082019050610efb6000830184610ed7565b92915050565b600060208284031215610f1757610f16610d0a565b5b6000610f2584828501610d58565b91505092915050565b610f3781610e96565b8114610f4257600080fd5b50565b600081359050610f5481610f2e565b92915050565b610f6381610ecd565b8114610f6e57600080fd5b50565b600081359050610f8081610f5a565b92915050565b600080600080600080600060e0888a031215610fa557610fa4610d0a565b5b6000610fb38a828b01610d58565b9750506020610fc48a828b01610d58565b9650506040610fd58a828b01610d8e565b9550506060610fe68a828b01610d8e565b9450506080610ff78a828b01610f45565b93505060a06110088a828b01610f71565b92505060c06110198a828b01610f71565b91505092959891949750929550565b6000806040838503121561103f5761103e610d0a565b5b600061104d85828601610d58565b925050602061105e85828601610d58565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110af57607f821691505b6020821081036110c2576110c1611068565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061110282610d6d565b915061110d83610d6d565b9250828203905081811115611125576111246110c8565b5b92915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b6000611161601783610c63565b915061116c8261112b565b602082019050919050565b6000602082019050818103600083015261119081611154565b9050919050565b6111a081610d2f565b82525050565b600060c0820190506111bb6000830189610ed7565b6111c86020830188611197565b6111d56040830187611197565b6111e26060830186610e19565b6111ef6080830185610e19565b6111fc60a0830184610e19565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611248600283611207565b915061125382611212565b600282019050919050565b6000819050919050565b61127961127482610ecd565b61125e565b82525050565b600061128a8261123b565b91506112968285611268565b6020820191506112a68284611268565b6020820191508190509392505050565b60006080820190506112cb6000830187610ed7565b6112d86020830186610ea3565b6112e56040830185610ed7565b6112f26060830184610ed7565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000611331600e83610c63565b915061133c826112fb565b602082019050919050565b6000602082019050818103600083015261136081611324565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461139481611097565b61139e8186611367565b945060018216600081146113b957600181146113ce57611401565b60ff1983168652811515820286019350611401565b6113d785611372565b60005b838110156113f9578154818901526001820191506020810190506113da565b838801955050505b50505092915050565b60006114168284611387565b915081905092915050565b600060a0820190506114366000830188610ed7565b6114436020830187610ed7565b6114506040830186610ed7565b61145d6060830185610e19565b61146a6080830184611197565b969550505050505056fea2646970667358221220ecffee7f41c9b554d8b1fb39574340395d3c612ef495e99660dfb6c1df8b95f564736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x25B JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x298 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C4 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x311 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x311 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x547 JUMPI DUP3 DUP2 PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0x647 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0x6B5 JUMPI PUSH2 0x6B0 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x719 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x745 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x792 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x767 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x792 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x775 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x89C SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E8 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x8FD PUSH2 0x67F JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP11 DUP11 DUP11 PUSH1 0x5 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x985 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9AC SWAP3 SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x9E2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xAB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAE SWAP1 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x140A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC3D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC92 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP3 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xCC4 DUP2 DUP6 PUSH2 0xC63 JUMP JUMPDEST SWAP4 POP PUSH2 0xCD4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC74 JUMP JUMPDEST PUSH2 0xCDD DUP2 PUSH2 0xC9E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD02 DUP2 DUP5 PUSH2 0xCAF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3A DUP3 PUSH2 0xD0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4A DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP2 EQ PUSH2 0xD55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD67 DUP2 PUSH2 0xD41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD80 DUP2 PUSH2 0xD6D JUMP JUMPDEST DUP2 EQ PUSH2 0xD8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9D DUP2 PUSH2 0xD77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDBA JUMPI PUSH2 0xDB9 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDC8 DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDD9 DUP6 DUP3 DUP7 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF8 DUP2 PUSH2 0xDE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE22 DUP2 PUSH2 0xD6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE3D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH2 0xE5B PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE6A DUP7 DUP3 DUP8 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE7B DUP7 DUP3 DUP8 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE8C DUP7 DUP3 DUP8 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAC DUP2 PUSH2 0xE96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE0 DUP2 PUSH2 0xECD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEFB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xED7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF17 JUMPI PUSH2 0xF16 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF25 DUP5 DUP3 DUP6 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF37 DUP2 PUSH2 0xE96 JUMP JUMPDEST DUP2 EQ PUSH2 0xF42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF54 DUP2 PUSH2 0xF2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF63 DUP2 PUSH2 0xECD JUMP JUMPDEST DUP2 EQ PUSH2 0xF6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF80 DUP2 PUSH2 0xF5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xFA5 JUMPI PUSH2 0xFA4 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB3 DUP11 DUP3 DUP12 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xFC4 DUP11 DUP3 DUP12 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0xFD5 DUP11 DUP3 DUP12 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xFE6 DUP11 DUP3 DUP12 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xFF7 DUP11 DUP3 DUP12 ADD PUSH2 0xF45 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1008 DUP11 DUP3 DUP12 ADD PUSH2 0xF71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1019 DUP11 DUP3 DUP12 ADD PUSH2 0xF71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x103F JUMPI PUSH2 0x103E PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x104D DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x105E DUP6 DUP3 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10AF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C2 JUMPI PUSH2 0x10C1 PUSH2 0x1068 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1102 DUP3 PUSH2 0xD6D JUMP JUMPDEST SWAP2 POP PUSH2 0x110D DUP4 PUSH2 0xD6D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1125 JUMPI PUSH2 0x1124 PUSH2 0x10C8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5045524D49545F444541444C494E455F45585049524544000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 PUSH1 0x17 DUP4 PUSH2 0xC63 JUMP JUMPDEST SWAP2 POP PUSH2 0x116C DUP3 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1190 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A0 DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x11BB PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x11C8 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x11D5 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x11E2 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x11EF PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x11FC PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xE19 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1248 PUSH1 0x2 DUP4 PUSH2 0x1207 JUMP JUMPDEST SWAP2 POP PUSH2 0x1253 DUP3 PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1279 PUSH2 0x1274 DUP3 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x125E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128A DUP3 PUSH2 0x123B JUMP JUMPDEST SWAP2 POP PUSH2 0x1296 DUP3 DUP6 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x12A6 DUP3 DUP5 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x12CB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x12D8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x12E5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x12F2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xED7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x494E56414C49445F5349474E4552000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1331 PUSH1 0xE DUP4 PUSH2 0xC63 JUMP JUMPDEST SWAP2 POP PUSH2 0x133C DUP3 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1360 DUP2 PUSH2 0x1324 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1394 DUP2 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x139E DUP2 DUP7 PUSH2 0x1367 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x13B9 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x13CE JUMPI PUSH2 0x1401 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x1401 JUMP JUMPDEST PUSH2 0x13D7 DUP6 PUSH2 0x1372 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13F9 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13DA JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1416 DUP3 DUP5 PUSH2 0x1387 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1436 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x1443 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x1450 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x145D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x146A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1197 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SELFDESTRUCT 0xEE PUSH32 0x41C9B554D8B1FB39574340395D3C612EF495E99660DFB6C1DF8B95F564736F6C PUSH4 0x43000811 STOP CALLER ","sourceMap":"102:271:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:18:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2461:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1304:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3057:592;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1083:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5327:177;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1337:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1751:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1056:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2678:373;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3838:1483;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1388:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1031:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2461:211::-;2535:4;2584:6;2551:9;:21;2561:10;2551:21;;;;;;;;;;;;;;;:30;2573:7;2551:30;;;;;;;;;;;;;;;:39;;;;2627:7;2606:37;;2615:10;2606:37;;;2636:6;2606:37;;;;;;:::i;:::-;;;;;;;;2661:4;2654:11;;2461:211;;;;:::o;1304:26::-;;;;:::o;3057:592::-;3175:4;3191:15;3209:9;:15;3219:4;3209:15;;;;;;;;;;;;;;;:27;3225:10;3209:27;;;;;;;;;;;;;;;;3191:45;;3298:17;3287:7;:28;3283:80;;3357:6;3347:7;:16;;;;:::i;:::-;3317:9;:15;3327:4;3317:15;;;;;;;;;;;;;;;:27;3333:10;3317:27;;;;;;;;;;;;;;;:46;;;;3283:80;3393:6;3374:9;:15;3384:4;3374:15;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;3562:6;3545:9;:13;3555:2;3545:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;3609:2;3594:26;;3603:4;3594:26;;;3613:6;3594:26;;;;;;:::i;:::-;;;;;;;;3638:4;3631:11;;;3057:592;;;;;:::o;1083:31::-;;;:::o;5327:177::-;5384:7;5427:16;5410:13;:33;:87;;5473:24;:22;:24::i;:::-;5410:87;;;5446:24;5410:87;5403:94;;5327:177;:::o;1337:44::-;;;;;;;;;;;;;;;;;:::o;1751:41::-;;;;;;;;;;;;;;;;;:::o;1056:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2678:373::-;2748:4;2789:6;2764:9;:21;2774:10;2764:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;2958:6;2941:9;:13;2951:2;2941:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;3011:2;2990:32;;2999:10;2990:32;;;3015:6;2990:32;;;;;;:::i;:::-;;;;;;;;3040:4;3033:11;;2678:373;;;;:::o;3838:1483::-;4057:15;4045:8;:27;;4037:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4265:24;4292:805;4428:18;:16;:18::i;:::-;4555:165;4754:5;4793:7;4834:5;4873:6;:13;4880:5;4873:13;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;4922:8;4511:449;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4472:514;;;;;;4350:658;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4319:707;;;;;;5044:1;5063;5082;4292:805;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4265:832;;5148:1;5120:30;;:16;:30;;;;:59;;;;;5174:5;5154:25;;:16;:25;;;5120:59;5112:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;5252:5;5213:9;:27;5223:16;5213:27;;;;;;;;;;;;;;;:36;5241:7;5213:36;;;;;;;;;;;;;;;:44;;;;4241:1027;5299:7;5283:31;;5292:5;5283:31;;;5308:5;5283:31;;;;;;:::i;:::-;;;;;;;;3838:1483;;;;;;;:::o;1388:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5510:446::-;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;5833:14;5869:13;5912:4;5640:295;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;7:99:15:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:118::-;5694:22;5710:5;5694:22;:::i;:::-;5687:5;5684:33;5674:61;;5731:1;5728;5721:12;5674:61;5623:118;:::o;5747:135::-;5791:5;5829:6;5816:20;5807:29;;5845:31;5870:5;5845:31;:::i;:::-;5747:135;;;;:::o;5888:122::-;5961:24;5979:5;5961:24;:::i;:::-;5954:5;5951:35;5941:63;;6000:1;5997;5990:12;5941:63;5888:122;:::o;6016:139::-;6062:5;6100:6;6087:20;6078:29;;6116:33;6143:5;6116:33;:::i;:::-;6016:139;;;;:::o;6161:1199::-;6272:6;6280;6288;6296;6304;6312;6320;6369:3;6357:9;6348:7;6344:23;6340:33;6337:120;;;6376:79;;:::i;:::-;6337:120;6496:1;6521:53;6566:7;6557:6;6546:9;6542:22;6521:53;:::i;:::-;6511:63;;6467:117;6623:2;6649:53;6694:7;6685:6;6674:9;6670:22;6649:53;:::i;:::-;6639:63;;6594:118;6751:2;6777:53;6822:7;6813:6;6802:9;6798:22;6777:53;:::i;:::-;6767:63;;6722:118;6879:2;6905:53;6950:7;6941:6;6930:9;6926:22;6905:53;:::i;:::-;6895:63;;6850:118;7007:3;7034:51;7077:7;7068:6;7057:9;7053:22;7034:51;:::i;:::-;7024:61;;6978:117;7134:3;7161:53;7206:7;7197:6;7186:9;7182:22;7161:53;:::i;:::-;7151:63;;7105:119;7263:3;7290:53;7335:7;7326:6;7315:9;7311:22;7290:53;:::i;:::-;7280:63;;7234:119;6161:1199;;;;;;;;;;:::o;7366:474::-;7434:6;7442;7491:2;7479:9;7470:7;7466:23;7462:32;7459:119;;;7497:79;;:::i;:::-;7459:119;7617:1;7642:53;7687:7;7678:6;7667:9;7663:22;7642:53;:::i;:::-;7632:63;;7588:117;7744:2;7770:53;7815:7;7806:6;7795:9;7791:22;7770:53;:::i;:::-;7760:63;;7715:118;7366:474;;;;;:::o;7846:180::-;7894:77;7891:1;7884:88;7991:4;7988:1;7981:15;8015:4;8012:1;8005:15;8032:320;8076:6;8113:1;8107:4;8103:12;8093:22;;8160:1;8154:4;8150:12;8181:18;8171:81;;8237:4;8229:6;8225:17;8215:27;;8171:81;8299:2;8291:6;8288:14;8268:18;8265:38;8262:84;;8318:18;;:::i;:::-;8262:84;8083:269;8032:320;;;:::o;8358:180::-;8406:77;8403:1;8396:88;8503:4;8500:1;8493:15;8527:4;8524:1;8517:15;8544:194;8584:4;8604:20;8622:1;8604:20;:::i;:::-;8599:25;;8638:20;8656:1;8638:20;:::i;:::-;8633:25;;8682:1;8679;8675:9;8667:17;;8706:1;8700:4;8697:11;8694:37;;;8711:18;;:::i;:::-;8694:37;8544:194;;;;:::o;8744:173::-;8884:25;8880:1;8872:6;8868:14;8861:49;8744:173;:::o;8923:366::-;9065:3;9086:67;9150:2;9145:3;9086:67;:::i;:::-;9079:74;;9162:93;9251:3;9162:93;:::i;:::-;9280:2;9275:3;9271:12;9264:19;;8923:366;;;:::o;9295:419::-;9461:4;9499:2;9488:9;9484:18;9476:26;;9548:9;9542:4;9538:20;9534:1;9523:9;9519:17;9512:47;9576:131;9702:4;9576:131;:::i;:::-;9568:139;;9295:419;;;:::o;9720:118::-;9807:24;9825:5;9807:24;:::i;:::-;9802:3;9795:37;9720:118;;:::o;9844:775::-;10077:4;10115:3;10104:9;10100:19;10092:27;;10129:71;10197:1;10186:9;10182:17;10173:6;10129:71;:::i;:::-;10210:72;10278:2;10267:9;10263:18;10254:6;10210:72;:::i;:::-;10292;10360:2;10349:9;10345:18;10336:6;10292:72;:::i;:::-;10374;10442:2;10431:9;10427:18;10418:6;10374:72;:::i;:::-;10456:73;10524:3;10513:9;10509:19;10500:6;10456:73;:::i;:::-;10539;10607:3;10596:9;10592:19;10583:6;10539:73;:::i;:::-;9844:775;;;;;;;;;:::o;10625:148::-;10727:11;10764:3;10749:18;;10625:148;;;;:::o;10779:214::-;10919:66;10915:1;10907:6;10903:14;10896:90;10779:214;:::o;10999:400::-;11159:3;11180:84;11262:1;11257:3;11180:84;:::i;:::-;11173:91;;11273:93;11362:3;11273:93;:::i;:::-;11391:1;11386:3;11382:11;11375:18;;10999:400;;;:::o;11405:79::-;11444:7;11473:5;11462:16;;11405:79;;;:::o;11490:157::-;11595:45;11615:24;11633:5;11615:24;:::i;:::-;11595:45;:::i;:::-;11590:3;11583:58;11490:157;;:::o;11653:663::-;11894:3;11916:148;12060:3;11916:148;:::i;:::-;11909:155;;12074:75;12145:3;12136:6;12074:75;:::i;:::-;12174:2;12169:3;12165:12;12158:19;;12187:75;12258:3;12249:6;12187:75;:::i;:::-;12287:2;12282:3;12278:12;12271:19;;12307:3;12300:10;;11653:663;;;;;:::o;12322:545::-;12495:4;12533:3;12522:9;12518:19;12510:27;;12547:71;12615:1;12604:9;12600:17;12591:6;12547:71;:::i;:::-;12628:68;12692:2;12681:9;12677:18;12668:6;12628:68;:::i;:::-;12706:72;12774:2;12763:9;12759:18;12750:6;12706:72;:::i;:::-;12788;12856:2;12845:9;12841:18;12832:6;12788:72;:::i;:::-;12322:545;;;;;;;:::o;12873:164::-;13013:16;13009:1;13001:6;12997:14;12990:40;12873:164;:::o;13043:366::-;13185:3;13206:67;13270:2;13265:3;13206:67;:::i;:::-;13199:74;;13282:93;13371:3;13282:93;:::i;:::-;13400:2;13395:3;13391:12;13384:19;;13043:366;;;:::o;13415:419::-;13581:4;13619:2;13608:9;13604:18;13596:26;;13668:9;13662:4;13658:20;13654:1;13643:9;13639:17;13632:47;13696:131;13822:4;13696:131;:::i;:::-;13688:139;;13415:419;;;:::o;13840:147::-;13941:11;13978:3;13963:18;;13840:147;;;;:::o;13993:144::-;14045:4;14068:3;14060:11;;14091:3;14088:1;14081:14;14125:4;14122:1;14112:18;14104:26;;13993:144;;;:::o;14165:878::-;14270:3;14307:5;14301:12;14336:36;14362:9;14336:36;:::i;:::-;14388:88;14469:6;14464:3;14388:88;:::i;:::-;14381:95;;14507:1;14496:9;14492:17;14523:1;14518:166;;;;14698:1;14693:344;;;;14485:552;;14518:166;14602:4;14598:9;14587;14583:25;14578:3;14571:38;14664:6;14657:14;14650:22;14642:6;14638:35;14633:3;14629:45;14622:52;;14518:166;;14693:344;14760:41;14795:5;14760:41;:::i;:::-;14823:1;14837:154;14851:6;14848:1;14845:13;14837:154;;;14925:7;14919:14;14915:1;14910:3;14906:11;14899:35;14975:1;14966:7;14962:15;14951:26;;14873:4;14870:1;14866:12;14861:17;;14837:154;;;15020:6;15015:3;15011:16;15004:23;;14700:337;;14485:552;;14274:769;;14165:878;;;;:::o;15049:273::-;15180:3;15202:94;15292:3;15283:6;15202:94;:::i;:::-;15195:101;;15313:3;15306:10;;15049:273;;;;:::o;15328:664::-;15533:4;15571:3;15560:9;15556:19;15548:27;;15585:71;15653:1;15642:9;15638:17;15629:6;15585:71;:::i;:::-;15666:72;15734:2;15723:9;15719:18;15710:6;15666:72;:::i;:::-;15748;15816:2;15805:9;15801:18;15792:6;15748:72;:::i;:::-;15830;15898:2;15887:9;15883:18;15874:6;15830:72;:::i;:::-;15912:73;15980:3;15969:9;15965:19;15956:6;15912:73;:::i;:::-;15328:664;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1058000","executionCost":"infinite","totalCost":"infinite"},"external":{"DOMAIN_SEPARATOR()":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2814","decimals()":"infinite","name()":"infinite","nonces(address)":"2836","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","symbol()":"infinite","totalSupply()":"2474","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_holders\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/stNEAR.sol\":\"stNEAR\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/dependencies/solmate/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\"},\"src/stNEAR.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./dependencies/solmate/ERC20.sol\\\";\\n\\ncontract stNEAR is ERC20 {\\n    constructor(address[] memory _holders) ERC20(\\\"stNEAR\\\", \\\"stNEAR\\\", 18) {\\n        uint256 holdersLength = _holders.length;\\n\\n        for (uint256 i = 0; i < holdersLength; i++) {\\n            _mint(_holders[i], 100_000 * 1e18);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x60be446d5fa330f7a55ff78d85dfebc313d2fd8a0b2de265c395b891fc533d8b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3610,"contract":"src/stNEAR.sol:stNEAR","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":3612,"contract":"src/stNEAR.sol:stNEAR","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":3616,"contract":"src/stNEAR.sol:stNEAR","label":"totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":3620,"contract":"src/stNEAR.sol:stNEAR","label":"balanceOf","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":3626,"contract":"src/stNEAR.sol:stNEAR","label":"allowance","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":3634,"contract":"src/stNEAR.sol:stNEAR","label":"nonces","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}